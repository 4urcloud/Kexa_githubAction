"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  BatchCreateRumMetricDefinitionsCommand: () => BatchCreateRumMetricDefinitionsCommand,
  BatchDeleteRumMetricDefinitionsCommand: () => BatchDeleteRumMetricDefinitionsCommand,
  BatchGetRumMetricDefinitionsCommand: () => BatchGetRumMetricDefinitionsCommand,
  ConflictException: () => ConflictException,
  CreateAppMonitorCommand: () => CreateAppMonitorCommand,
  CustomEventsStatus: () => CustomEventsStatus,
  DeleteAppMonitorCommand: () => DeleteAppMonitorCommand,
  DeleteRumMetricsDestinationCommand: () => DeleteRumMetricsDestinationCommand,
  GetAppMonitorCommand: () => GetAppMonitorCommand,
  GetAppMonitorDataCommand: () => GetAppMonitorDataCommand,
  InternalServerException: () => InternalServerException,
  ListAppMonitorsCommand: () => ListAppMonitorsCommand,
  ListRumMetricsDestinationsCommand: () => ListRumMetricsDestinationsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  MetricDestination: () => MetricDestination,
  PutRumEventsCommand: () => PutRumEventsCommand,
  PutRumMetricsDestinationCommand: () => PutRumMetricsDestinationCommand,
  RUM: () => RUM,
  RUMClient: () => RUMClient,
  RUMServiceException: () => RUMServiceException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  StateEnum: () => StateEnum,
  TagResourceCommand: () => TagResourceCommand,
  Telemetry: () => Telemetry,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAppMonitorCommand: () => UpdateAppMonitorCommand,
  UpdateRumMetricDefinitionCommand: () => UpdateRumMetricDefinitionCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateBatchGetRumMetricDefinitions: () => paginateBatchGetRumMetricDefinitions,
  paginateGetAppMonitorData: () => paginateGetAppMonitorData,
  paginateListAppMonitors: () => paginateListAppMonitors,
  paginateListRumMetricsDestinations: () => paginateListRumMetricsDestinations
});
module.exports = __toCommonJS(src_exports);

// src/RUMClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "rum"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/RUMClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/RUMClient.ts
var _RUMClient = class _RUMClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultRUMHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_RUMClient, "RUMClient");
var RUMClient = _RUMClient;

// src/RUM.ts


// src/commands/BatchCreateRumMetricDefinitionsCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");




// src/models/RUMServiceException.ts

var _RUMServiceException = class _RUMServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _RUMServiceException.prototype);
  }
};
__name(_RUMServiceException, "RUMServiceException");
var RUMServiceException = _RUMServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var Telemetry = {
  /**
   * Includes JS error event plugin
   */
  ERRORS: "errors",
  /**
   * Includes X-Ray Xhr and X-Ray Fetch plugin
   */
  HTTP: "http",
  /**
   * Includes navigation, paint, resource and web vital event plugins
   */
  PERFORMANCE: "performance"
};
var CustomEventsStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var StateEnum = {
  ACTIVE: "ACTIVE",
  CREATED: "CREATED",
  DELETING: "DELETING"
};
var MetricDestination = {
  CloudWatch: "CloudWatch",
  Evidently: "Evidently"
};
var _ConflictException = class _ConflictException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.resourceName = opts.resourceName;
    this.resourceType = opts.resourceType;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    this.$retryable = {};
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceName = opts.resourceName;
    this.resourceType = opts.resourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    this.$retryable = {
      throttling: true
    };
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends RUMServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;

// src/protocols/Aws_restJson1.ts
var se_BatchCreateRumMetricDefinitionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/rummetrics/{AppMonitorName}/metrics");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Destination: [],
      DestinationArn: [],
      MetricDefinitions: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchCreateRumMetricDefinitionsCommand");
var se_BatchDeleteRumMetricDefinitionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/rummetrics/{AppMonitorName}/metrics");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  const query = (0, import_smithy_client.map)({
    [_d]: [, (0, import_smithy_client.expectNonNull)(input[_D], `Destination`)],
    [_dA]: [, input[_DA]],
    [_mDI]: [
      (0, import_smithy_client.expectNonNull)(input.MetricDefinitionIds, `MetricDefinitionIds`) != null,
      () => (input[_MDI] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_BatchDeleteRumMetricDefinitionsCommand");
var se_BatchGetRumMetricDefinitionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/rummetrics/{AppMonitorName}/metrics");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  const query = (0, import_smithy_client.map)({
    [_d]: [, (0, import_smithy_client.expectNonNull)(input[_D], `Destination`)],
    [_dA]: [, input[_DA]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_BatchGetRumMetricDefinitionsCommand");
var se_CreateAppMonitorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/appmonitor");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AppMonitorConfiguration: (_) => se_AppMonitorConfiguration(_, context),
      CustomEvents: (_) => (0, import_smithy_client._json)(_),
      CwLogEnabled: [],
      Domain: [],
      Name: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAppMonitorCommand");
var se_DeleteAppMonitorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/appmonitor/{Name}");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAppMonitorCommand");
var se_DeleteRumMetricsDestinationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/rummetrics/{AppMonitorName}/metricsdestination");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  const query = (0, import_smithy_client.map)({
    [_d]: [, (0, import_smithy_client.expectNonNull)(input[_D], `Destination`)],
    [_dA]: [, input[_DA]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteRumMetricsDestinationCommand");
var se_GetAppMonitorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/appmonitor/{Name}");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetAppMonitorCommand");
var se_GetAppMonitorDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/appmonitor/{Name}/data");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: [],
      TimeRange: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetAppMonitorDataCommand");
var se_ListAppMonitorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/appmonitors");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_ListAppMonitorsCommand");
var se_ListRumMetricsDestinationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/rummetrics/{AppMonitorName}/metricsdestination");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRumMetricsDestinationsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PutRumEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/appmonitors/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AppMonitorDetails: (_) => (0, import_smithy_client._json)(_),
      BatchId: [],
      RumEvents: (_) => se_RumEventList(_, context),
      UserDetails: (_) => (0, import_smithy_client._json)(_)
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "dataplane." + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PutRumEventsCommand");
var se_PutRumMetricsDestinationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/rummetrics/{AppMonitorName}/metricsdestination");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Destination: [],
      DestinationArn: [],
      IamRoleArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PutRumMetricsDestinationCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateAppMonitorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/appmonitor/{Name}");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AppMonitorConfiguration: (_) => se_AppMonitorConfiguration(_, context),
      CustomEvents: (_) => (0, import_smithy_client._json)(_),
      CwLogEnabled: [],
      Domain: []
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateAppMonitorCommand");
var se_UpdateRumMetricDefinitionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/rummetrics/{AppMonitorName}/metrics");
  b.p("AppMonitorName", () => input.AppMonitorName, "{AppMonitorName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Destination: [],
      DestinationArn: [],
      MetricDefinition: (_) => (0, import_smithy_client._json)(_),
      MetricDefinitionId: []
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateRumMetricDefinitionCommand");
var de_BatchCreateRumMetricDefinitionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Errors: import_smithy_client._json,
    MetricDefinitions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchCreateRumMetricDefinitionsCommand");
var de_BatchDeleteRumMetricDefinitionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Errors: import_smithy_client._json,
    MetricDefinitionIds: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchDeleteRumMetricDefinitionsCommand");
var de_BatchGetRumMetricDefinitionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MetricDefinitions: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchGetRumMetricDefinitionsCommand");
var de_CreateAppMonitorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAppMonitorCommand");
var de_DeleteAppMonitorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAppMonitorCommand");
var de_DeleteRumMetricsDestinationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRumMetricsDestinationCommand");
var de_GetAppMonitorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AppMonitor: (_) => de_AppMonitor(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAppMonitorCommand");
var de_GetAppMonitorDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Events: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAppMonitorDataCommand");
var de_ListAppMonitorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AppMonitorSummaries: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAppMonitorsCommand");
var de_ListRumMetricsDestinationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Destinations: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRumMetricsDestinationsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ResourceArn: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PutRumEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutRumEventsCommand");
var de_PutRumMetricsDestinationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutRumMetricsDestinationCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateAppMonitorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateAppMonitorCommand");
var de_UpdateRumMetricDefinitionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateRumMetricDefinitionCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.rum#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.rum#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.rum#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.rum#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.rum#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.rum#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.rum#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(RUMServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceName: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceName: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_AppMonitorConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    AllowCookies: [],
    EnableXRay: [],
    ExcludedPages: import_smithy_client._json,
    FavoritePages: import_smithy_client._json,
    GuestRoleArn: [],
    IdentityPoolId: [],
    IncludedPages: import_smithy_client._json,
    SessionSampleRate: import_smithy_client.serializeFloat,
    Telemetries: import_smithy_client._json
  });
}, "se_AppMonitorConfiguration");
var se_RumEvent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    details: import_smithy_client.LazyJsonString.fromObject,
    id: [],
    metadata: import_smithy_client.LazyJsonString.fromObject,
    timestamp: (_) => Math.round(_.getTime() / 1e3),
    type: []
  });
}, "se_RumEvent");
var se_RumEventList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_RumEvent(entry, context);
  });
}, "se_RumEventList");
var de_AppMonitor = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AppMonitorConfiguration: (_) => de_AppMonitorConfiguration(_, context),
    Created: import_smithy_client.expectString,
    CustomEvents: import_smithy_client._json,
    DataStorage: import_smithy_client._json,
    Domain: import_smithy_client.expectString,
    Id: import_smithy_client.expectString,
    LastModified: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    State: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
}, "de_AppMonitor");
var de_AppMonitorConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AllowCookies: import_smithy_client.expectBoolean,
    EnableXRay: import_smithy_client.expectBoolean,
    ExcludedPages: import_smithy_client._json,
    FavoritePages: import_smithy_client._json,
    GuestRoleArn: import_smithy_client.expectString,
    IdentityPoolId: import_smithy_client.expectString,
    IncludedPages: import_smithy_client._json,
    SessionSampleRate: import_smithy_client.limitedParseDouble,
    Telemetries: import_smithy_client._json
  });
}, "de_AppMonitorConfiguration");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _D = "Destination";
var _DA = "DestinationArn";
var _MDI = "MetricDefinitionIds";
var _MR = "MaxResults";
var _NT = "NextToken";
var _TK = "TagKeys";
var _d = "destination";
var _dA = "destinationArn";
var _mDI = "metricDefinitionIds";
var _mR = "maxResults";
var _nT = "nextToken";
var _rAS = "retryAfterSeconds";
var _ra = "retry-after";
var _tK = "tagKeys";

// src/commands/BatchCreateRumMetricDefinitionsCommand.ts
var _BatchCreateRumMetricDefinitionsCommand = class _BatchCreateRumMetricDefinitionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "BatchCreateRumMetricDefinitions", {}).n("RUMClient", "BatchCreateRumMetricDefinitionsCommand").f(void 0, void 0).ser(se_BatchCreateRumMetricDefinitionsCommand).de(de_BatchCreateRumMetricDefinitionsCommand).build() {
};
__name(_BatchCreateRumMetricDefinitionsCommand, "BatchCreateRumMetricDefinitionsCommand");
var BatchCreateRumMetricDefinitionsCommand = _BatchCreateRumMetricDefinitionsCommand;

// src/commands/BatchDeleteRumMetricDefinitionsCommand.ts




var _BatchDeleteRumMetricDefinitionsCommand = class _BatchDeleteRumMetricDefinitionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "BatchDeleteRumMetricDefinitions", {}).n("RUMClient", "BatchDeleteRumMetricDefinitionsCommand").f(void 0, void 0).ser(se_BatchDeleteRumMetricDefinitionsCommand).de(de_BatchDeleteRumMetricDefinitionsCommand).build() {
};
__name(_BatchDeleteRumMetricDefinitionsCommand, "BatchDeleteRumMetricDefinitionsCommand");
var BatchDeleteRumMetricDefinitionsCommand = _BatchDeleteRumMetricDefinitionsCommand;

// src/commands/BatchGetRumMetricDefinitionsCommand.ts




var _BatchGetRumMetricDefinitionsCommand = class _BatchGetRumMetricDefinitionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "BatchGetRumMetricDefinitions", {}).n("RUMClient", "BatchGetRumMetricDefinitionsCommand").f(void 0, void 0).ser(se_BatchGetRumMetricDefinitionsCommand).de(de_BatchGetRumMetricDefinitionsCommand).build() {
};
__name(_BatchGetRumMetricDefinitionsCommand, "BatchGetRumMetricDefinitionsCommand");
var BatchGetRumMetricDefinitionsCommand = _BatchGetRumMetricDefinitionsCommand;

// src/commands/CreateAppMonitorCommand.ts




var _CreateAppMonitorCommand = class _CreateAppMonitorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "CreateAppMonitor", {}).n("RUMClient", "CreateAppMonitorCommand").f(void 0, void 0).ser(se_CreateAppMonitorCommand).de(de_CreateAppMonitorCommand).build() {
};
__name(_CreateAppMonitorCommand, "CreateAppMonitorCommand");
var CreateAppMonitorCommand = _CreateAppMonitorCommand;

// src/commands/DeleteAppMonitorCommand.ts




var _DeleteAppMonitorCommand = class _DeleteAppMonitorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "DeleteAppMonitor", {}).n("RUMClient", "DeleteAppMonitorCommand").f(void 0, void 0).ser(se_DeleteAppMonitorCommand).de(de_DeleteAppMonitorCommand).build() {
};
__name(_DeleteAppMonitorCommand, "DeleteAppMonitorCommand");
var DeleteAppMonitorCommand = _DeleteAppMonitorCommand;

// src/commands/DeleteRumMetricsDestinationCommand.ts




var _DeleteRumMetricsDestinationCommand = class _DeleteRumMetricsDestinationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "DeleteRumMetricsDestination", {}).n("RUMClient", "DeleteRumMetricsDestinationCommand").f(void 0, void 0).ser(se_DeleteRumMetricsDestinationCommand).de(de_DeleteRumMetricsDestinationCommand).build() {
};
__name(_DeleteRumMetricsDestinationCommand, "DeleteRumMetricsDestinationCommand");
var DeleteRumMetricsDestinationCommand = _DeleteRumMetricsDestinationCommand;

// src/commands/GetAppMonitorCommand.ts




var _GetAppMonitorCommand = class _GetAppMonitorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "GetAppMonitor", {}).n("RUMClient", "GetAppMonitorCommand").f(void 0, void 0).ser(se_GetAppMonitorCommand).de(de_GetAppMonitorCommand).build() {
};
__name(_GetAppMonitorCommand, "GetAppMonitorCommand");
var GetAppMonitorCommand = _GetAppMonitorCommand;

// src/commands/GetAppMonitorDataCommand.ts




var _GetAppMonitorDataCommand = class _GetAppMonitorDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "GetAppMonitorData", {}).n("RUMClient", "GetAppMonitorDataCommand").f(void 0, void 0).ser(se_GetAppMonitorDataCommand).de(de_GetAppMonitorDataCommand).build() {
};
__name(_GetAppMonitorDataCommand, "GetAppMonitorDataCommand");
var GetAppMonitorDataCommand = _GetAppMonitorDataCommand;

// src/commands/ListAppMonitorsCommand.ts




var _ListAppMonitorsCommand = class _ListAppMonitorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "ListAppMonitors", {}).n("RUMClient", "ListAppMonitorsCommand").f(void 0, void 0).ser(se_ListAppMonitorsCommand).de(de_ListAppMonitorsCommand).build() {
};
__name(_ListAppMonitorsCommand, "ListAppMonitorsCommand");
var ListAppMonitorsCommand = _ListAppMonitorsCommand;

// src/commands/ListRumMetricsDestinationsCommand.ts




var _ListRumMetricsDestinationsCommand = class _ListRumMetricsDestinationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "ListRumMetricsDestinations", {}).n("RUMClient", "ListRumMetricsDestinationsCommand").f(void 0, void 0).ser(se_ListRumMetricsDestinationsCommand).de(de_ListRumMetricsDestinationsCommand).build() {
};
__name(_ListRumMetricsDestinationsCommand, "ListRumMetricsDestinationsCommand");
var ListRumMetricsDestinationsCommand = _ListRumMetricsDestinationsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "ListTagsForResource", {}).n("RUMClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PutRumEventsCommand.ts




var _PutRumEventsCommand = class _PutRumEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "PutRumEvents", {}).n("RUMClient", "PutRumEventsCommand").f(void 0, void 0).ser(se_PutRumEventsCommand).de(de_PutRumEventsCommand).build() {
};
__name(_PutRumEventsCommand, "PutRumEventsCommand");
var PutRumEventsCommand = _PutRumEventsCommand;

// src/commands/PutRumMetricsDestinationCommand.ts




var _PutRumMetricsDestinationCommand = class _PutRumMetricsDestinationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "PutRumMetricsDestination", {}).n("RUMClient", "PutRumMetricsDestinationCommand").f(void 0, void 0).ser(se_PutRumMetricsDestinationCommand).de(de_PutRumMetricsDestinationCommand).build() {
};
__name(_PutRumMetricsDestinationCommand, "PutRumMetricsDestinationCommand");
var PutRumMetricsDestinationCommand = _PutRumMetricsDestinationCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "TagResource", {}).n("RUMClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "UntagResource", {}).n("RUMClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateAppMonitorCommand.ts




var _UpdateAppMonitorCommand = class _UpdateAppMonitorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "UpdateAppMonitor", {}).n("RUMClient", "UpdateAppMonitorCommand").f(void 0, void 0).ser(se_UpdateAppMonitorCommand).de(de_UpdateAppMonitorCommand).build() {
};
__name(_UpdateAppMonitorCommand, "UpdateAppMonitorCommand");
var UpdateAppMonitorCommand = _UpdateAppMonitorCommand;

// src/commands/UpdateRumMetricDefinitionCommand.ts




var _UpdateRumMetricDefinitionCommand = class _UpdateRumMetricDefinitionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RUM", "UpdateRumMetricDefinition", {}).n("RUMClient", "UpdateRumMetricDefinitionCommand").f(void 0, void 0).ser(se_UpdateRumMetricDefinitionCommand).de(de_UpdateRumMetricDefinitionCommand).build() {
};
__name(_UpdateRumMetricDefinitionCommand, "UpdateRumMetricDefinitionCommand");
var UpdateRumMetricDefinitionCommand = _UpdateRumMetricDefinitionCommand;

// src/RUM.ts
var commands = {
  BatchCreateRumMetricDefinitionsCommand,
  BatchDeleteRumMetricDefinitionsCommand,
  BatchGetRumMetricDefinitionsCommand,
  CreateAppMonitorCommand,
  DeleteAppMonitorCommand,
  DeleteRumMetricsDestinationCommand,
  GetAppMonitorCommand,
  GetAppMonitorDataCommand,
  ListAppMonitorsCommand,
  ListRumMetricsDestinationsCommand,
  ListTagsForResourceCommand,
  PutRumEventsCommand,
  PutRumMetricsDestinationCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAppMonitorCommand,
  UpdateRumMetricDefinitionCommand
};
var _RUM = class _RUM extends RUMClient {
};
__name(_RUM, "RUM");
var RUM = _RUM;
(0, import_smithy_client.createAggregatedClient)(commands, RUM);

// src/pagination/BatchGetRumMetricDefinitionsPaginator.ts

var paginateBatchGetRumMetricDefinitions = (0, import_core.createPaginator)(RUMClient, BatchGetRumMetricDefinitionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetAppMonitorDataPaginator.ts

var paginateGetAppMonitorData = (0, import_core.createPaginator)(RUMClient, GetAppMonitorDataCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListAppMonitorsPaginator.ts

var paginateListAppMonitors = (0, import_core.createPaginator)(RUMClient, ListAppMonitorsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListRumMetricsDestinationsPaginator.ts

var paginateListRumMetricsDestinations = (0, import_core.createPaginator)(RUMClient, ListRumMetricsDestinationsCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  RUMServiceException,
  __Client,
  RUMClient,
  RUM,
  $Command,
  BatchCreateRumMetricDefinitionsCommand,
  BatchDeleteRumMetricDefinitionsCommand,
  BatchGetRumMetricDefinitionsCommand,
  CreateAppMonitorCommand,
  DeleteAppMonitorCommand,
  DeleteRumMetricsDestinationCommand,
  GetAppMonitorCommand,
  GetAppMonitorDataCommand,
  ListAppMonitorsCommand,
  ListRumMetricsDestinationsCommand,
  ListTagsForResourceCommand,
  PutRumEventsCommand,
  PutRumMetricsDestinationCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAppMonitorCommand,
  UpdateRumMetricDefinitionCommand,
  paginateBatchGetRumMetricDefinitions,
  paginateGetAppMonitorData,
  paginateListAppMonitors,
  paginateListRumMetricsDestinations,
  AccessDeniedException,
  Telemetry,
  CustomEventsStatus,
  StateEnum,
  MetricDestination,
  ConflictException,
  InternalServerException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException
});

