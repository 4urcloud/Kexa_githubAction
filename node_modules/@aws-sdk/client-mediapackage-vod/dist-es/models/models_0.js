import { MediaPackageVodServiceException as __BaseException } from "./MediaPackageVodServiceException";
export const __PeriodTriggersElement = {
    ADS: "ADS",
};
export const ManifestLayout = {
    COMPACT: "COMPACT",
    FULL: "FULL",
};
export const Profile = {
    HBBTV_1_5: "HBBTV_1_5",
    NONE: "NONE",
};
export const ScteMarkersSource = {
    MANIFEST: "MANIFEST",
    SEGMENTS: "SEGMENTS",
};
export const StreamOrder = {
    ORIGINAL: "ORIGINAL",
    VIDEO_BITRATE_ASCENDING: "VIDEO_BITRATE_ASCENDING",
    VIDEO_BITRATE_DESCENDING: "VIDEO_BITRATE_DESCENDING",
};
export const AdMarkers = {
    NONE: "NONE",
    PASSTHROUGH: "PASSTHROUGH",
    SCTE35_ENHANCED: "SCTE35_ENHANCED",
};
export const PresetSpeke20Audio = {
    PRESET_AUDIO_1: "PRESET-AUDIO-1",
    PRESET_AUDIO_2: "PRESET-AUDIO-2",
    PRESET_AUDIO_3: "PRESET-AUDIO-3",
    SHARED: "SHARED",
    UNENCRYPTED: "UNENCRYPTED",
};
export const PresetSpeke20Video = {
    PRESET_VIDEO_1: "PRESET-VIDEO-1",
    PRESET_VIDEO_2: "PRESET-VIDEO-2",
    PRESET_VIDEO_3: "PRESET-VIDEO-3",
    PRESET_VIDEO_4: "PRESET-VIDEO-4",
    PRESET_VIDEO_5: "PRESET-VIDEO-5",
    PRESET_VIDEO_6: "PRESET-VIDEO-6",
    PRESET_VIDEO_7: "PRESET-VIDEO-7",
    PRESET_VIDEO_8: "PRESET-VIDEO-8",
    SHARED: "SHARED",
    UNENCRYPTED: "UNENCRYPTED",
};
export const SegmentTemplateFormat = {
    NUMBER_WITH_DURATION: "NUMBER_WITH_DURATION",
    NUMBER_WITH_TIMELINE: "NUMBER_WITH_TIMELINE",
    TIME_WITH_TIMELINE: "TIME_WITH_TIMELINE",
};
export const EncryptionMethod = {
    AES_128: "AES_128",
    SAMPLE_AES: "SAMPLE_AES",
};
export class ForbiddenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.Message = opts.Message;
    }
}
export class UnprocessableEntityException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnprocessableEntityException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnprocessableEntityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnprocessableEntityException.prototype);
        this.Message = opts.Message;
    }
}
