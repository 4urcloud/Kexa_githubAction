import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { CodeStarClient } from "./CodeStarClient";
import {
  AssociateTeamMemberCommandInput,
  AssociateTeamMemberCommandOutput,
} from "./commands/AssociateTeamMemberCommand";
import {
  CreateProjectCommandInput,
  CreateProjectCommandOutput,
} from "./commands/CreateProjectCommand";
import {
  CreateUserProfileCommandInput,
  CreateUserProfileCommandOutput,
} from "./commands/CreateUserProfileCommand";
import {
  DeleteProjectCommandInput,
  DeleteProjectCommandOutput,
} from "./commands/DeleteProjectCommand";
import {
  DeleteUserProfileCommandInput,
  DeleteUserProfileCommandOutput,
} from "./commands/DeleteUserProfileCommand";
import {
  DescribeProjectCommandInput,
  DescribeProjectCommandOutput,
} from "./commands/DescribeProjectCommand";
import {
  DescribeUserProfileCommandInput,
  DescribeUserProfileCommandOutput,
} from "./commands/DescribeUserProfileCommand";
import {
  DisassociateTeamMemberCommandInput,
  DisassociateTeamMemberCommandOutput,
} from "./commands/DisassociateTeamMemberCommand";
import {
  ListProjectsCommandInput,
  ListProjectsCommandOutput,
} from "./commands/ListProjectsCommand";
import {
  ListResourcesCommandInput,
  ListResourcesCommandOutput,
} from "./commands/ListResourcesCommand";
import {
  ListTagsForProjectCommandInput,
  ListTagsForProjectCommandOutput,
} from "./commands/ListTagsForProjectCommand";
import {
  ListTeamMembersCommandInput,
  ListTeamMembersCommandOutput,
} from "./commands/ListTeamMembersCommand";
import {
  ListUserProfilesCommandInput,
  ListUserProfilesCommandOutput,
} from "./commands/ListUserProfilesCommand";
import {
  TagProjectCommandInput,
  TagProjectCommandOutput,
} from "./commands/TagProjectCommand";
import {
  UntagProjectCommandInput,
  UntagProjectCommandOutput,
} from "./commands/UntagProjectCommand";
import {
  UpdateProjectCommandInput,
  UpdateProjectCommandOutput,
} from "./commands/UpdateProjectCommand";
import {
  UpdateTeamMemberCommandInput,
  UpdateTeamMemberCommandOutput,
} from "./commands/UpdateTeamMemberCommand";
import {
  UpdateUserProfileCommandInput,
  UpdateUserProfileCommandOutput,
} from "./commands/UpdateUserProfileCommand";
export interface CodeStar {
  associateTeamMember(
    args: AssociateTeamMemberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateTeamMemberCommandOutput>;
  associateTeamMember(
    args: AssociateTeamMemberCommandInput,
    cb: (err: any, data?: AssociateTeamMemberCommandOutput) => void
  ): void;
  associateTeamMember(
    args: AssociateTeamMemberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateTeamMemberCommandOutput) => void
  ): void;
  createProject(
    args: CreateProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateProjectCommandOutput>;
  createProject(
    args: CreateProjectCommandInput,
    cb: (err: any, data?: CreateProjectCommandOutput) => void
  ): void;
  createProject(
    args: CreateProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateProjectCommandOutput) => void
  ): void;
  createUserProfile(
    args: CreateUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateUserProfileCommandOutput>;
  createUserProfile(
    args: CreateUserProfileCommandInput,
    cb: (err: any, data?: CreateUserProfileCommandOutput) => void
  ): void;
  createUserProfile(
    args: CreateUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateUserProfileCommandOutput) => void
  ): void;
  deleteProject(
    args: DeleteProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteProjectCommandOutput>;
  deleteProject(
    args: DeleteProjectCommandInput,
    cb: (err: any, data?: DeleteProjectCommandOutput) => void
  ): void;
  deleteProject(
    args: DeleteProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteProjectCommandOutput) => void
  ): void;
  deleteUserProfile(
    args: DeleteUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteUserProfileCommandOutput>;
  deleteUserProfile(
    args: DeleteUserProfileCommandInput,
    cb: (err: any, data?: DeleteUserProfileCommandOutput) => void
  ): void;
  deleteUserProfile(
    args: DeleteUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteUserProfileCommandOutput) => void
  ): void;
  describeProject(
    args: DescribeProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeProjectCommandOutput>;
  describeProject(
    args: DescribeProjectCommandInput,
    cb: (err: any, data?: DescribeProjectCommandOutput) => void
  ): void;
  describeProject(
    args: DescribeProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeProjectCommandOutput) => void
  ): void;
  describeUserProfile(
    args: DescribeUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeUserProfileCommandOutput>;
  describeUserProfile(
    args: DescribeUserProfileCommandInput,
    cb: (err: any, data?: DescribeUserProfileCommandOutput) => void
  ): void;
  describeUserProfile(
    args: DescribeUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeUserProfileCommandOutput) => void
  ): void;
  disassociateTeamMember(
    args: DisassociateTeamMemberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateTeamMemberCommandOutput>;
  disassociateTeamMember(
    args: DisassociateTeamMemberCommandInput,
    cb: (err: any, data?: DisassociateTeamMemberCommandOutput) => void
  ): void;
  disassociateTeamMember(
    args: DisassociateTeamMemberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateTeamMemberCommandOutput) => void
  ): void;
  listProjects(): Promise<ListProjectsCommandOutput>;
  listProjects(
    args: ListProjectsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListProjectsCommandOutput>;
  listProjects(
    args: ListProjectsCommandInput,
    cb: (err: any, data?: ListProjectsCommandOutput) => void
  ): void;
  listProjects(
    args: ListProjectsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListProjectsCommandOutput) => void
  ): void;
  listResources(
    args: ListResourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListResourcesCommandOutput>;
  listResources(
    args: ListResourcesCommandInput,
    cb: (err: any, data?: ListResourcesCommandOutput) => void
  ): void;
  listResources(
    args: ListResourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListResourcesCommandOutput) => void
  ): void;
  listTagsForProject(
    args: ListTagsForProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForProjectCommandOutput>;
  listTagsForProject(
    args: ListTagsForProjectCommandInput,
    cb: (err: any, data?: ListTagsForProjectCommandOutput) => void
  ): void;
  listTagsForProject(
    args: ListTagsForProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForProjectCommandOutput) => void
  ): void;
  listTeamMembers(
    args: ListTeamMembersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTeamMembersCommandOutput>;
  listTeamMembers(
    args: ListTeamMembersCommandInput,
    cb: (err: any, data?: ListTeamMembersCommandOutput) => void
  ): void;
  listTeamMembers(
    args: ListTeamMembersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTeamMembersCommandOutput) => void
  ): void;
  listUserProfiles(): Promise<ListUserProfilesCommandOutput>;
  listUserProfiles(
    args: ListUserProfilesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListUserProfilesCommandOutput>;
  listUserProfiles(
    args: ListUserProfilesCommandInput,
    cb: (err: any, data?: ListUserProfilesCommandOutput) => void
  ): void;
  listUserProfiles(
    args: ListUserProfilesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListUserProfilesCommandOutput) => void
  ): void;
  tagProject(
    args: TagProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagProjectCommandOutput>;
  tagProject(
    args: TagProjectCommandInput,
    cb: (err: any, data?: TagProjectCommandOutput) => void
  ): void;
  tagProject(
    args: TagProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagProjectCommandOutput) => void
  ): void;
  untagProject(
    args: UntagProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagProjectCommandOutput>;
  untagProject(
    args: UntagProjectCommandInput,
    cb: (err: any, data?: UntagProjectCommandOutput) => void
  ): void;
  untagProject(
    args: UntagProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagProjectCommandOutput) => void
  ): void;
  updateProject(
    args: UpdateProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateProjectCommandOutput>;
  updateProject(
    args: UpdateProjectCommandInput,
    cb: (err: any, data?: UpdateProjectCommandOutput) => void
  ): void;
  updateProject(
    args: UpdateProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateProjectCommandOutput) => void
  ): void;
  updateTeamMember(
    args: UpdateTeamMemberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateTeamMemberCommandOutput>;
  updateTeamMember(
    args: UpdateTeamMemberCommandInput,
    cb: (err: any, data?: UpdateTeamMemberCommandOutput) => void
  ): void;
  updateTeamMember(
    args: UpdateTeamMemberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateTeamMemberCommandOutput) => void
  ): void;
  updateUserProfile(
    args: UpdateUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateUserProfileCommandOutput>;
  updateUserProfile(
    args: UpdateUserProfileCommandInput,
    cb: (err: any, data?: UpdateUserProfileCommandOutput) => void
  ): void;
  updateUserProfile(
    args: UpdateUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateUserProfileCommandOutput) => void
  ): void;
}
export declare class CodeStar extends CodeStarClient implements CodeStar {}
