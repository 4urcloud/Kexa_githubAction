import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { CodeStarServiceException as __BaseException } from "./CodeStarServiceException";
export interface AssociateTeamMemberRequest {
  projectId: string | undefined;
  clientRequestToken?: string;
  userArn: string | undefined;
  projectRole: string | undefined;
  remoteAccessAllowed?: boolean;
}
export interface AssociateTeamMemberResult {
  clientRequestToken?: string;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class InvalidServiceRoleException extends __BaseException {
  readonly name: "InvalidServiceRoleException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidServiceRoleException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ProjectConfigurationException extends __BaseException {
  readonly name: "ProjectConfigurationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ProjectConfigurationException, __BaseException>
  );
}
export declare class ProjectNotFoundException extends __BaseException {
  readonly name: "ProjectNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ProjectNotFoundException, __BaseException>
  );
}
export declare class TeamMemberAlreadyAssociatedException extends __BaseException {
  readonly name: "TeamMemberAlreadyAssociatedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TeamMemberAlreadyAssociatedException,
      __BaseException
    >
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface CodeCommitCodeDestination {
  name: string | undefined;
}
export interface GitHubCodeDestination {
  name: string | undefined;
  description?: string;
  type: string | undefined;
  owner: string | undefined;
  privateRepository: boolean | undefined;
  issuesEnabled: boolean | undefined;
  token: string | undefined;
}
export interface CodeDestination {
  codeCommit?: CodeCommitCodeDestination;
  gitHub?: GitHubCodeDestination;
}
export interface S3Location {
  bucketName?: string;
  bucketKey?: string;
}
export interface CodeSource {
  s3: S3Location | undefined;
}
export interface Code {
  source: CodeSource | undefined;
  destination: CodeDestination | undefined;
}
export interface ToolchainSource {
  s3: S3Location | undefined;
}
export interface Toolchain {
  source: ToolchainSource | undefined;
  roleArn?: string;
  stackParameters?: Record<string, string>;
}
export interface CreateProjectRequest {
  name: string | undefined;
  id: string | undefined;
  description?: string;
  clientRequestToken?: string;
  sourceCode?: Code[];
  toolchain?: Toolchain;
  tags?: Record<string, string>;
}
export interface CreateProjectResult {
  id: string | undefined;
  arn: string | undefined;
  clientRequestToken?: string;
  projectTemplateId?: string;
}
export declare class ProjectAlreadyExistsException extends __BaseException {
  readonly name: "ProjectAlreadyExistsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ProjectAlreadyExistsException, __BaseException>
  );
}
export declare class ProjectCreationFailedException extends __BaseException {
  readonly name: "ProjectCreationFailedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ProjectCreationFailedException, __BaseException>
  );
}
export interface CreateUserProfileRequest {
  userArn: string | undefined;
  displayName: string | undefined;
  emailAddress: string | undefined;
  sshPublicKey?: string;
}
export interface CreateUserProfileResult {
  userArn: string | undefined;
  displayName?: string;
  emailAddress?: string;
  sshPublicKey?: string;
  createdTimestamp?: Date;
  lastModifiedTimestamp?: Date;
}
export declare class UserProfileAlreadyExistsException extends __BaseException {
  readonly name: "UserProfileAlreadyExistsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      UserProfileAlreadyExistsException,
      __BaseException
    >
  );
}
export interface DeleteProjectRequest {
  id: string | undefined;
  clientRequestToken?: string;
  deleteStack?: boolean;
}
export interface DeleteProjectResult {
  stackId?: string;
  projectArn?: string;
}
export interface DeleteUserProfileRequest {
  userArn: string | undefined;
}
export interface DeleteUserProfileResult {
  userArn: string | undefined;
}
export interface DescribeProjectRequest {
  id: string | undefined;
}
export interface ProjectStatus {
  state: string | undefined;
  reason?: string;
}
export interface DescribeProjectResult {
  name?: string;
  id?: string;
  arn?: string;
  description?: string;
  clientRequestToken?: string;
  createdTimeStamp?: Date;
  stackId?: string;
  projectTemplateId?: string;
  status?: ProjectStatus;
}
export interface DescribeUserProfileRequest {
  userArn: string | undefined;
}
export interface DescribeUserProfileResult {
  userArn: string | undefined;
  displayName?: string;
  emailAddress?: string;
  sshPublicKey?: string;
  createdTimestamp: Date | undefined;
  lastModifiedTimestamp: Date | undefined;
}
export declare class UserProfileNotFoundException extends __BaseException {
  readonly name: "UserProfileNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UserProfileNotFoundException, __BaseException>
  );
}
export interface DisassociateTeamMemberRequest {
  projectId: string | undefined;
  userArn: string | undefined;
}
export interface DisassociateTeamMemberResult {}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface ListProjectsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ProjectSummary {
  projectId?: string;
  projectArn?: string;
}
export interface ListProjectsResult {
  projects: ProjectSummary[] | undefined;
  nextToken?: string;
}
export interface ListResourcesRequest {
  projectId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface Resource {
  id: string | undefined;
}
export interface ListResourcesResult {
  resources?: Resource[];
  nextToken?: string;
}
export interface ListTagsForProjectRequest {
  id: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListTagsForProjectResult {
  tags?: Record<string, string>;
  nextToken?: string;
}
export interface ListTeamMembersRequest {
  projectId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface TeamMember {
  userArn: string | undefined;
  projectRole: string | undefined;
  remoteAccessAllowed?: boolean;
}
export interface ListTeamMembersResult {
  teamMembers: TeamMember[] | undefined;
  nextToken?: string;
}
export interface ListUserProfilesRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface UserProfileSummary {
  userArn?: string;
  displayName?: string;
  emailAddress?: string;
  sshPublicKey?: string;
}
export interface ListUserProfilesResult {
  userProfiles: UserProfileSummary[] | undefined;
  nextToken?: string;
}
export interface TagProjectRequest {
  id: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagProjectResult {
  tags?: Record<string, string>;
}
export interface UntagProjectRequest {
  id: string | undefined;
  tags: string[] | undefined;
}
export interface UntagProjectResult {}
export interface UpdateProjectRequest {
  id: string | undefined;
  name?: string;
  description?: string;
}
export interface UpdateProjectResult {}
export declare class TeamMemberNotFoundException extends __BaseException {
  readonly name: "TeamMemberNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TeamMemberNotFoundException, __BaseException>
  );
}
export interface UpdateTeamMemberRequest {
  projectId: string | undefined;
  userArn: string | undefined;
  projectRole?: string;
  remoteAccessAllowed?: boolean;
}
export interface UpdateTeamMemberResult {
  userArn?: string;
  projectRole?: string;
  remoteAccessAllowed?: boolean;
}
export interface UpdateUserProfileRequest {
  userArn: string | undefined;
  displayName?: string;
  emailAddress?: string;
  sshPublicKey?: string;
}
export interface UpdateUserProfileResult {
  userArn: string | undefined;
  displayName?: string;
  emailAddress?: string;
  sshPublicKey?: string;
  createdTimestamp?: Date;
  lastModifiedTimestamp?: Date;
}
export declare const GitHubCodeDestinationFilterSensitiveLog: (
  obj: GitHubCodeDestination
) => any;
export declare const CodeDestinationFilterSensitiveLog: (
  obj: CodeDestination
) => any;
export declare const CodeFilterSensitiveLog: (obj: Code) => any;
export declare const ToolchainFilterSensitiveLog: (obj: Toolchain) => any;
export declare const CreateProjectRequestFilterSensitiveLog: (
  obj: CreateProjectRequest
) => any;
export declare const CreateUserProfileRequestFilterSensitiveLog: (
  obj: CreateUserProfileRequest
) => any;
export declare const CreateUserProfileResultFilterSensitiveLog: (
  obj: CreateUserProfileResult
) => any;
export declare const DescribeProjectResultFilterSensitiveLog: (
  obj: DescribeProjectResult
) => any;
export declare const DescribeUserProfileResultFilterSensitiveLog: (
  obj: DescribeUserProfileResult
) => any;
export declare const UserProfileSummaryFilterSensitiveLog: (
  obj: UserProfileSummary
) => any;
export declare const ListUserProfilesResultFilterSensitiveLog: (
  obj: ListUserProfilesResult
) => any;
export declare const UpdateProjectRequestFilterSensitiveLog: (
  obj: UpdateProjectRequest
) => any;
export declare const UpdateUserProfileRequestFilterSensitiveLog: (
  obj: UpdateUserProfileRequest
) => any;
export declare const UpdateUserProfileResultFilterSensitiveLog: (
  obj: UpdateUserProfileResult
) => any;
