"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AutoPromotionResult: () => AutoPromotionResult,
  ConflictException: () => ConflictException,
  CreateDatasetCommand: () => CreateDatasetCommand,
  CreateInferenceSchedulerCommand: () => CreateInferenceSchedulerCommand,
  CreateLabelCommand: () => CreateLabelCommand,
  CreateLabelGroupCommand: () => CreateLabelGroupCommand,
  CreateModelCommand: () => CreateModelCommand,
  CreateRetrainingSchedulerCommand: () => CreateRetrainingSchedulerCommand,
  DataUploadFrequency: () => DataUploadFrequency,
  DatasetStatus: () => DatasetStatus,
  DeleteDatasetCommand: () => DeleteDatasetCommand,
  DeleteInferenceSchedulerCommand: () => DeleteInferenceSchedulerCommand,
  DeleteLabelCommand: () => DeleteLabelCommand,
  DeleteLabelGroupCommand: () => DeleteLabelGroupCommand,
  DeleteModelCommand: () => DeleteModelCommand,
  DeleteResourcePolicyCommand: () => DeleteResourcePolicyCommand,
  DeleteRetrainingSchedulerCommand: () => DeleteRetrainingSchedulerCommand,
  DescribeDataIngestionJobCommand: () => DescribeDataIngestionJobCommand,
  DescribeDatasetCommand: () => DescribeDatasetCommand,
  DescribeInferenceSchedulerCommand: () => DescribeInferenceSchedulerCommand,
  DescribeLabelCommand: () => DescribeLabelCommand,
  DescribeLabelGroupCommand: () => DescribeLabelGroupCommand,
  DescribeModelCommand: () => DescribeModelCommand,
  DescribeModelVersionCommand: () => DescribeModelVersionCommand,
  DescribeResourcePolicyCommand: () => DescribeResourcePolicyCommand,
  DescribeRetrainingSchedulerCommand: () => DescribeRetrainingSchedulerCommand,
  ImportDatasetCommand: () => ImportDatasetCommand,
  ImportModelVersionCommand: () => ImportModelVersionCommand,
  InferenceDataImportStrategy: () => InferenceDataImportStrategy,
  InferenceExecutionStatus: () => InferenceExecutionStatus,
  InferenceSchedulerStatus: () => InferenceSchedulerStatus,
  IngestionJobStatus: () => IngestionJobStatus,
  InternalServerException: () => InternalServerException,
  LabelRating: () => LabelRating,
  LatestInferenceResult: () => LatestInferenceResult,
  ListDataIngestionJobsCommand: () => ListDataIngestionJobsCommand,
  ListDatasetsCommand: () => ListDatasetsCommand,
  ListInferenceEventsCommand: () => ListInferenceEventsCommand,
  ListInferenceExecutionsCommand: () => ListInferenceExecutionsCommand,
  ListInferenceSchedulersCommand: () => ListInferenceSchedulersCommand,
  ListLabelGroupsCommand: () => ListLabelGroupsCommand,
  ListLabelsCommand: () => ListLabelsCommand,
  ListModelVersionsCommand: () => ListModelVersionsCommand,
  ListModelsCommand: () => ListModelsCommand,
  ListRetrainingSchedulersCommand: () => ListRetrainingSchedulersCommand,
  ListSensorStatisticsCommand: () => ListSensorStatisticsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  LookoutEquipment: () => LookoutEquipment,
  LookoutEquipmentClient: () => LookoutEquipmentClient,
  LookoutEquipmentServiceException: () => LookoutEquipmentServiceException,
  ModelPromoteMode: () => ModelPromoteMode,
  ModelQuality: () => ModelQuality,
  ModelStatus: () => ModelStatus,
  ModelVersionSourceType: () => ModelVersionSourceType,
  ModelVersionStatus: () => ModelVersionStatus,
  Monotonicity: () => Monotonicity,
  PutResourcePolicyCommand: () => PutResourcePolicyCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RetrainingSchedulerStatus: () => RetrainingSchedulerStatus,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  StartDataIngestionJobCommand: () => StartDataIngestionJobCommand,
  StartInferenceSchedulerCommand: () => StartInferenceSchedulerCommand,
  StartRetrainingSchedulerCommand: () => StartRetrainingSchedulerCommand,
  StatisticalIssueStatus: () => StatisticalIssueStatus,
  StopInferenceSchedulerCommand: () => StopInferenceSchedulerCommand,
  StopRetrainingSchedulerCommand: () => StopRetrainingSchedulerCommand,
  TagResourceCommand: () => TagResourceCommand,
  TargetSamplingRate: () => TargetSamplingRate,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateActiveModelVersionCommand: () => UpdateActiveModelVersionCommand,
  UpdateInferenceSchedulerCommand: () => UpdateInferenceSchedulerCommand,
  UpdateLabelGroupCommand: () => UpdateLabelGroupCommand,
  UpdateModelCommand: () => UpdateModelCommand,
  UpdateRetrainingSchedulerCommand: () => UpdateRetrainingSchedulerCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListDataIngestionJobs: () => paginateListDataIngestionJobs,
  paginateListDatasets: () => paginateListDatasets,
  paginateListInferenceEvents: () => paginateListInferenceEvents,
  paginateListInferenceExecutions: () => paginateListInferenceExecutions,
  paginateListInferenceSchedulers: () => paginateListInferenceSchedulers,
  paginateListLabelGroups: () => paginateListLabelGroups,
  paginateListLabels: () => paginateListLabels,
  paginateListModelVersions: () => paginateListModelVersions,
  paginateListModels: () => paginateListModels,
  paginateListRetrainingSchedulers: () => paginateListRetrainingSchedulers,
  paginateListSensorStatistics: () => paginateListSensorStatistics
});
module.exports = __toCommonJS(src_exports);

// src/LookoutEquipmentClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "lookoutequipment"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/LookoutEquipmentClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/LookoutEquipmentClient.ts
var _LookoutEquipmentClient = class _LookoutEquipmentClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultLookoutEquipmentHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_LookoutEquipmentClient, "LookoutEquipmentClient");
var LookoutEquipmentClient = _LookoutEquipmentClient;

// src/LookoutEquipment.ts


// src/commands/CreateDatasetCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_0.ts


var import_uuid = require("uuid");

// src/models/LookoutEquipmentServiceException.ts

var _LookoutEquipmentServiceException = class _LookoutEquipmentServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _LookoutEquipmentServiceException.prototype);
  }
};
__name(_LookoutEquipmentServiceException, "LookoutEquipmentServiceException");
var LookoutEquipmentServiceException = _LookoutEquipmentServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AutoPromotionResult = {
  MODEL_NOT_PROMOTED: "MODEL_NOT_PROMOTED",
  MODEL_PROMOTED: "MODEL_PROMOTED",
  RETRAINING_CANCELLED: "RETRAINING_CANCELLED",
  RETRAINING_CUSTOMER_ERROR: "RETRAINING_CUSTOMER_ERROR",
  RETRAINING_INTERNAL_ERROR: "RETRAINING_INTERNAL_ERROR"
};
var _ConflictException = class _ConflictException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var DatasetStatus = {
  ACTIVE: "ACTIVE",
  CREATED: "CREATED",
  IMPORT_IN_PROGRESS: "IMPORT_IN_PROGRESS",
  INGESTION_IN_PROGRESS: "INGESTION_IN_PROGRESS"
};
var _InternalServerException = class _InternalServerException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var DataUploadFrequency = {
  PT10M: "PT10M",
  PT15M: "PT15M",
  PT1H: "PT1H",
  PT30M: "PT30M",
  PT5M: "PT5M"
};
var ModelQuality = {
  CANNOT_DETERMINE_QUALITY: "CANNOT_DETERMINE_QUALITY",
  POOR_QUALITY_DETECTED: "POOR_QUALITY_DETECTED",
  QUALITY_THRESHOLD_MET: "QUALITY_THRESHOLD_MET"
};
var InferenceSchedulerStatus = {
  PENDING: "PENDING",
  RUNNING: "RUNNING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends LookoutEquipmentServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var LabelRating = {
  ANOMALY: "ANOMALY",
  NEUTRAL: "NEUTRAL",
  NO_ANOMALY: "NO_ANOMALY"
};
var TargetSamplingRate = {
  PT10M: "PT10M",
  PT10S: "PT10S",
  PT15M: "PT15M",
  PT15S: "PT15S",
  PT1H: "PT1H",
  PT1M: "PT1M",
  PT1S: "PT1S",
  PT30M: "PT30M",
  PT30S: "PT30S",
  PT5M: "PT5M",
  PT5S: "PT5S"
};
var ModelStatus = {
  FAILED: "FAILED",
  IMPORT_IN_PROGRESS: "IMPORT_IN_PROGRESS",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCESS: "SUCCESS"
};
var ModelPromoteMode = {
  MANAGED: "MANAGED",
  MANUAL: "MANUAL"
};
var RetrainingSchedulerStatus = {
  PENDING: "PENDING",
  RUNNING: "RUNNING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING"
};
var IngestionJobStatus = {
  FAILED: "FAILED",
  IMPORT_IN_PROGRESS: "IMPORT_IN_PROGRESS",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCESS: "SUCCESS"
};
var LatestInferenceResult = {
  ANOMALOUS: "ANOMALOUS",
  NORMAL: "NORMAL"
};
var ModelVersionStatus = {
  CANCELED: "CANCELED",
  FAILED: "FAILED",
  IMPORT_IN_PROGRESS: "IMPORT_IN_PROGRESS",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCESS: "SUCCESS"
};
var ModelVersionSourceType = {
  IMPORT: "IMPORT",
  RETRAINING: "RETRAINING",
  TRAINING: "TRAINING"
};
var InferenceDataImportStrategy = {
  ADD_WHEN_EMPTY: "ADD_WHEN_EMPTY",
  NO_IMPORT: "NO_IMPORT",
  OVERWRITE: "OVERWRITE"
};
var InferenceExecutionStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCESS: "SUCCESS"
};
var StatisticalIssueStatus = {
  NO_ISSUE_DETECTED: "NO_ISSUE_DETECTED",
  POTENTIAL_ISSUE_DETECTED: "POTENTIAL_ISSUE_DETECTED"
};
var Monotonicity = {
  DECREASING: "DECREASING",
  INCREASING: "INCREASING",
  STATIC: "STATIC"
};

// src/protocols/Aws_json1_0.ts
var se_CreateDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDataset");
  let body;
  body = JSON.stringify(se_CreateDatasetRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDatasetCommand");
var se_CreateInferenceSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateInferenceScheduler");
  let body;
  body = JSON.stringify(se_CreateInferenceSchedulerRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateInferenceSchedulerCommand");
var se_CreateLabelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateLabel");
  let body;
  body = JSON.stringify(se_CreateLabelRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLabelCommand");
var se_CreateLabelGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateLabelGroup");
  let body;
  body = JSON.stringify(se_CreateLabelGroupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLabelGroupCommand");
var se_CreateModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateModel");
  let body;
  body = JSON.stringify(se_CreateModelRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateModelCommand");
var se_CreateRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateRetrainingScheduler");
  let body;
  body = JSON.stringify(se_CreateRetrainingSchedulerRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRetrainingSchedulerCommand");
var se_DeleteDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDataset");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDatasetCommand");
var se_DeleteInferenceSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteInferenceScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteInferenceSchedulerCommand");
var se_DeleteLabelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteLabel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLabelCommand");
var se_DeleteLabelGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteLabelGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLabelGroupCommand");
var se_DeleteModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteModel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteModelCommand");
var se_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteResourcePolicy");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteResourcePolicyCommand");
var se_DeleteRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteRetrainingScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRetrainingSchedulerCommand");
var se_DescribeDataIngestionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeDataIngestionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDataIngestionJobCommand");
var se_DescribeDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeDataset");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDatasetCommand");
var se_DescribeInferenceSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeInferenceScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeInferenceSchedulerCommand");
var se_DescribeLabelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeLabel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeLabelCommand");
var se_DescribeLabelGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeLabelGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeLabelGroupCommand");
var se_DescribeModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeModel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeModelCommand");
var se_DescribeModelVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeModelVersion");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeModelVersionCommand");
var se_DescribeResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeResourcePolicy");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeResourcePolicyCommand");
var se_DescribeRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeRetrainingScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeRetrainingSchedulerCommand");
var se_ImportDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportDataset");
  let body;
  body = JSON.stringify(se_ImportDatasetRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportDatasetCommand");
var se_ImportModelVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportModelVersion");
  let body;
  body = JSON.stringify(se_ImportModelVersionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportModelVersionCommand");
var se_ListDataIngestionJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListDataIngestionJobs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListDataIngestionJobsCommand");
var se_ListDatasetsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListDatasets");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListDatasetsCommand");
var se_ListInferenceEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListInferenceEvents");
  let body;
  body = JSON.stringify(se_ListInferenceEventsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListInferenceEventsCommand");
var se_ListInferenceExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListInferenceExecutions");
  let body;
  body = JSON.stringify(se_ListInferenceExecutionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListInferenceExecutionsCommand");
var se_ListInferenceSchedulersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListInferenceSchedulers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListInferenceSchedulersCommand");
var se_ListLabelGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListLabelGroups");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListLabelGroupsCommand");
var se_ListLabelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListLabels");
  let body;
  body = JSON.stringify(se_ListLabelsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListLabelsCommand");
var se_ListModelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListModels");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListModelsCommand");
var se_ListModelVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListModelVersions");
  let body;
  body = JSON.stringify(se_ListModelVersionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListModelVersionsCommand");
var se_ListRetrainingSchedulersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListRetrainingSchedulers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRetrainingSchedulersCommand");
var se_ListSensorStatisticsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListSensorStatistics");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSensorStatisticsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PutResourcePolicy");
  let body;
  body = JSON.stringify(se_PutResourcePolicyRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutResourcePolicyCommand");
var se_StartDataIngestionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartDataIngestionJob");
  let body;
  body = JSON.stringify(se_StartDataIngestionJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartDataIngestionJobCommand");
var se_StartInferenceSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartInferenceScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartInferenceSchedulerCommand");
var se_StartRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartRetrainingScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartRetrainingSchedulerCommand");
var se_StopInferenceSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopInferenceScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopInferenceSchedulerCommand");
var se_StopRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopRetrainingScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopRetrainingSchedulerCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateActiveModelVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateActiveModelVersion");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateActiveModelVersionCommand");
var se_UpdateInferenceSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateInferenceScheduler");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateInferenceSchedulerCommand");
var se_UpdateLabelGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateLabelGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateLabelGroupCommand");
var se_UpdateModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateModel");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateModelCommand");
var se_UpdateRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateRetrainingScheduler");
  let body;
  body = JSON.stringify(se_UpdateRetrainingSchedulerRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRetrainingSchedulerCommand");
var de_CreateDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDatasetCommand");
var de_CreateInferenceSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateInferenceSchedulerCommand");
var de_CreateLabelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLabelCommand");
var de_CreateLabelGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLabelGroupCommand");
var de_CreateModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateModelCommand");
var de_CreateRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRetrainingSchedulerCommand");
var de_DeleteDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteDatasetCommand");
var de_DeleteInferenceSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteInferenceSchedulerCommand");
var de_DeleteLabelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteLabelCommand");
var de_DeleteLabelGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteLabelGroupCommand");
var de_DeleteModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteModelCommand");
var de_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteResourcePolicyCommand");
var de_DeleteRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteRetrainingSchedulerCommand");
var de_DescribeDataIngestionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeDataIngestionJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDataIngestionJobCommand");
var de_DescribeDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeDatasetResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDatasetCommand");
var de_DescribeInferenceSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeInferenceSchedulerResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeInferenceSchedulerCommand");
var de_DescribeLabelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeLabelResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeLabelCommand");
var de_DescribeLabelGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeLabelGroupResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeLabelGroupCommand");
var de_DescribeModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeModelResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeModelCommand");
var de_DescribeModelVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeModelVersionResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeModelVersionCommand");
var de_DescribeResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeResourcePolicyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeResourcePolicyCommand");
var de_DescribeRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeRetrainingSchedulerResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeRetrainingSchedulerCommand");
var de_ImportDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportDatasetCommand");
var de_ImportModelVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportModelVersionCommand");
var de_ListDataIngestionJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListDataIngestionJobsCommand");
var de_ListDatasetsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListDatasetsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListDatasetsCommand");
var de_ListInferenceEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListInferenceEventsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListInferenceEventsCommand");
var de_ListInferenceExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListInferenceExecutionsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListInferenceExecutionsCommand");
var de_ListInferenceSchedulersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListInferenceSchedulersCommand");
var de_ListLabelGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListLabelGroupsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListLabelGroupsCommand");
var de_ListLabelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListLabelsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListLabelsCommand");
var de_ListModelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListModelsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListModelsCommand");
var de_ListModelVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListModelVersionsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListModelVersionsCommand");
var de_ListRetrainingSchedulersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListRetrainingSchedulersResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRetrainingSchedulersCommand");
var de_ListSensorStatisticsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListSensorStatisticsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSensorStatisticsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutResourcePolicyCommand");
var de_StartDataIngestionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartDataIngestionJobCommand");
var de_StartInferenceSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartInferenceSchedulerCommand");
var de_StartRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartRetrainingSchedulerCommand");
var de_StopInferenceSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopInferenceSchedulerCommand");
var de_StopRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopRetrainingSchedulerCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateActiveModelVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateActiveModelVersionCommand");
var de_UpdateInferenceSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateInferenceSchedulerCommand");
var de_UpdateLabelGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateLabelGroupCommand");
var de_UpdateModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateModelCommand");
var de_UpdateRetrainingSchedulerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateRetrainingSchedulerCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.lookoutequipment#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.lookoutequipment#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.lookoutequipment#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.lookoutequipment#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.lookoutequipment#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.lookoutequipment#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.lookoutequipment#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_CreateDatasetRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DatasetName: [],
    DatasetSchema: (_) => se_DatasetSchema(_, context),
    ServerSideKmsKeyId: [],
    Tags: import_smithy_client._json
  });
}, "se_CreateDatasetRequest");
var se_CreateInferenceSchedulerRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataDelayOffsetInMinutes: [],
    DataInputConfiguration: import_smithy_client._json,
    DataOutputConfiguration: import_smithy_client._json,
    DataUploadFrequency: [],
    InferenceSchedulerName: [],
    ModelName: [],
    RoleArn: [],
    ServerSideKmsKeyId: [],
    Tags: import_smithy_client._json
  });
}, "se_CreateInferenceSchedulerRequest");
var se_CreateLabelGroupRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FaultCodes: import_smithy_client._json,
    LabelGroupName: [],
    Tags: import_smithy_client._json
  });
}, "se_CreateLabelGroupRequest");
var se_CreateLabelRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    EndTime: (_) => Math.round(_.getTime() / 1e3),
    Equipment: [],
    FaultCode: [],
    LabelGroupName: [],
    Notes: [],
    Rating: [],
    StartTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_CreateLabelRequest");
var se_CreateModelRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataPreProcessingConfiguration: import_smithy_client._json,
    DatasetName: [],
    DatasetSchema: (_) => se_DatasetSchema(_, context),
    EvaluationDataEndTime: (_) => Math.round(_.getTime() / 1e3),
    EvaluationDataStartTime: (_) => Math.round(_.getTime() / 1e3),
    LabelsInputConfiguration: import_smithy_client._json,
    ModelDiagnosticsOutputConfiguration: import_smithy_client._json,
    ModelName: [],
    OffCondition: [],
    RoleArn: [],
    ServerSideKmsKeyId: [],
    Tags: import_smithy_client._json,
    TrainingDataEndTime: (_) => Math.round(_.getTime() / 1e3),
    TrainingDataStartTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_CreateModelRequest");
var se_CreateRetrainingSchedulerRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    LookbackWindow: [],
    ModelName: [],
    PromoteMode: [],
    RetrainingFrequency: [],
    RetrainingStartDate: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_CreateRetrainingSchedulerRequest");
var se_DatasetSchema = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    InlineDataSchema: import_smithy_client.LazyJsonString.fromObject
  });
}, "se_DatasetSchema");
var se_ImportDatasetRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DatasetName: [],
    ServerSideKmsKeyId: [],
    SourceDatasetArn: [],
    Tags: import_smithy_client._json
  });
}, "se_ImportDatasetRequest");
var se_ImportModelVersionRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DatasetName: [],
    InferenceDataImportStrategy: [],
    LabelsInputConfiguration: import_smithy_client._json,
    ModelName: [],
    RoleArn: [],
    ServerSideKmsKeyId: [],
    SourceModelVersionArn: [],
    Tags: import_smithy_client._json
  });
}, "se_ImportModelVersionRequest");
var se_ListInferenceEventsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    InferenceSchedulerName: [],
    IntervalEndTime: (_) => Math.round(_.getTime() / 1e3),
    IntervalStartTime: (_) => Math.round(_.getTime() / 1e3),
    MaxResults: [],
    NextToken: []
  });
}, "se_ListInferenceEventsRequest");
var se_ListInferenceExecutionsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DataEndTimeBefore: (_) => Math.round(_.getTime() / 1e3),
    DataStartTimeAfter: (_) => Math.round(_.getTime() / 1e3),
    InferenceSchedulerName: [],
    MaxResults: [],
    NextToken: [],
    Status: []
  });
}, "se_ListInferenceExecutionsRequest");
var se_ListLabelsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Equipment: [],
    FaultCode: [],
    IntervalEndTime: (_) => Math.round(_.getTime() / 1e3),
    IntervalStartTime: (_) => Math.round(_.getTime() / 1e3),
    LabelGroupName: [],
    MaxResults: [],
    NextToken: []
  });
}, "se_ListLabelsRequest");
var se_ListModelVersionsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CreatedAtEndTime: (_) => Math.round(_.getTime() / 1e3),
    CreatedAtStartTime: (_) => Math.round(_.getTime() / 1e3),
    MaxModelVersion: [],
    MaxResults: [],
    MinModelVersion: [],
    ModelName: [],
    NextToken: [],
    SourceType: [],
    Status: []
  });
}, "se_ListModelVersionsRequest");
var se_PutResourcePolicyRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    PolicyRevisionId: [],
    ResourceArn: [],
    ResourcePolicy: []
  });
}, "se_PutResourcePolicyRequest");
var se_StartDataIngestionJobRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DatasetName: [],
    IngestionInputConfiguration: import_smithy_client._json,
    RoleArn: []
  });
}, "se_StartDataIngestionJobRequest");
var se_UpdateRetrainingSchedulerRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    LookbackWindow: [],
    ModelName: [],
    PromoteMode: [],
    RetrainingFrequency: [],
    RetrainingStartDate: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_UpdateRetrainingSchedulerRequest");
var de_CountPercent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Count: import_smithy_client.expectInt32,
    Percentage: import_smithy_client.limitedParseFloat32
  });
}, "de_CountPercent");
var de_DatasetSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DatasetSummary(entry, context);
  });
  return retVal;
}, "de_DatasetSummaries");
var de_DatasetSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatasetArn: import_smithy_client.expectString,
    DatasetName: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_DatasetSummary");
var de_DescribeDataIngestionJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataQualitySummary: import_smithy_client._json,
    DataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatasetArn: import_smithy_client.expectString,
    FailedReason: import_smithy_client.expectString,
    IngestedDataSize: import_smithy_client.expectLong,
    IngestedFilesSummary: import_smithy_client._json,
    IngestionInputConfiguration: import_smithy_client._json,
    JobId: import_smithy_client.expectString,
    RoleArn: import_smithy_client.expectString,
    SourceDatasetArn: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusDetail: import_smithy_client.expectString
  });
}, "de_DescribeDataIngestionJobResponse");
var de_DescribeDatasetResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataQualitySummary: import_smithy_client._json,
    DataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatasetArn: import_smithy_client.expectString,
    DatasetName: import_smithy_client.expectString,
    IngestedFilesSummary: import_smithy_client._json,
    IngestionInputConfiguration: import_smithy_client._json,
    LastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    RoleArn: import_smithy_client.expectString,
    Schema: (_) => new import_smithy_client.LazyJsonString(_),
    ServerSideKmsKeyId: import_smithy_client.expectString,
    SourceDatasetArn: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_DescribeDatasetResponse");
var de_DescribeInferenceSchedulerResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataDelayOffsetInMinutes: import_smithy_client.expectLong,
    DataInputConfiguration: import_smithy_client._json,
    DataOutputConfiguration: import_smithy_client._json,
    DataUploadFrequency: import_smithy_client.expectString,
    InferenceSchedulerArn: import_smithy_client.expectString,
    InferenceSchedulerName: import_smithy_client.expectString,
    LatestInferenceResult: import_smithy_client.expectString,
    ModelArn: import_smithy_client.expectString,
    ModelName: import_smithy_client.expectString,
    RoleArn: import_smithy_client.expectString,
    ServerSideKmsKeyId: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DescribeInferenceSchedulerResponse");
var de_DescribeLabelGroupResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    FaultCodes: import_smithy_client._json,
    LabelGroupArn: import_smithy_client.expectString,
    LabelGroupName: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DescribeLabelGroupResponse");
var de_DescribeLabelResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Equipment: import_smithy_client.expectString,
    FaultCode: import_smithy_client.expectString,
    LabelGroupArn: import_smithy_client.expectString,
    LabelGroupName: import_smithy_client.expectString,
    LabelId: import_smithy_client.expectString,
    Notes: import_smithy_client.expectString,
    Rating: import_smithy_client.expectString,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DescribeLabelResponse");
var de_DescribeModelResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AccumulatedInferenceDataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    AccumulatedInferenceDataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ActiveModelVersion: import_smithy_client.expectLong,
    ActiveModelVersionArn: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataPreProcessingConfiguration: import_smithy_client._json,
    DatasetArn: import_smithy_client.expectString,
    DatasetName: import_smithy_client.expectString,
    EvaluationDataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EvaluationDataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    FailedReason: import_smithy_client.expectString,
    ImportJobEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ImportJobStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LabelsInputConfiguration: import_smithy_client._json,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LatestScheduledRetrainingAvailableDataInDays: import_smithy_client.expectInt32,
    LatestScheduledRetrainingFailedReason: import_smithy_client.expectString,
    LatestScheduledRetrainingModelVersion: import_smithy_client.expectLong,
    LatestScheduledRetrainingStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LatestScheduledRetrainingStatus: import_smithy_client.expectString,
    ModelArn: import_smithy_client.expectString,
    ModelDiagnosticsOutputConfiguration: import_smithy_client._json,
    ModelMetrics: (_) => new import_smithy_client.LazyJsonString(_),
    ModelName: import_smithy_client.expectString,
    ModelQuality: import_smithy_client.expectString,
    ModelVersionActivatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NextScheduledRetrainingStartDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    OffCondition: import_smithy_client.expectString,
    PreviousActiveModelVersion: import_smithy_client.expectLong,
    PreviousActiveModelVersionArn: import_smithy_client.expectString,
    PreviousModelVersionActivatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PriorModelMetrics: (_) => new import_smithy_client.LazyJsonString(_),
    RetrainingSchedulerStatus: import_smithy_client.expectString,
    RoleArn: import_smithy_client.expectString,
    Schema: (_) => new import_smithy_client.LazyJsonString(_),
    ServerSideKmsKeyId: import_smithy_client.expectString,
    SourceModelVersionArn: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    TrainingDataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TrainingDataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TrainingExecutionEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TrainingExecutionStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DescribeModelResponse");
var de_DescribeModelVersionResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutoPromotionResult: import_smithy_client.expectString,
    AutoPromotionResultReason: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataPreProcessingConfiguration: import_smithy_client._json,
    DatasetArn: import_smithy_client.expectString,
    DatasetName: import_smithy_client.expectString,
    EvaluationDataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EvaluationDataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    FailedReason: import_smithy_client.expectString,
    ImportJobEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ImportJobStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ImportedDataSizeInBytes: import_smithy_client.expectLong,
    LabelsInputConfiguration: import_smithy_client._json,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ModelArn: import_smithy_client.expectString,
    ModelDiagnosticsOutputConfiguration: import_smithy_client._json,
    ModelDiagnosticsResultsObject: import_smithy_client._json,
    ModelMetrics: import_smithy_client.expectString,
    ModelName: import_smithy_client.expectString,
    ModelQuality: import_smithy_client.expectString,
    ModelVersion: import_smithy_client.expectLong,
    ModelVersionArn: import_smithy_client.expectString,
    OffCondition: import_smithy_client.expectString,
    PriorModelMetrics: import_smithy_client.expectString,
    RetrainingAvailableDataInDays: import_smithy_client.expectInt32,
    RoleArn: import_smithy_client.expectString,
    Schema: import_smithy_client.expectString,
    ServerSideKmsKeyId: import_smithy_client.expectString,
    SourceModelVersionArn: import_smithy_client.expectString,
    SourceType: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    TrainingDataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TrainingDataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TrainingExecutionEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TrainingExecutionStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DescribeModelVersionResponse");
var de_DescribeResourcePolicyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LastModifiedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PolicyRevisionId: import_smithy_client.expectString,
    ResourcePolicy: import_smithy_client.expectString
  });
}, "de_DescribeResourcePolicyResponse");
var de_DescribeRetrainingSchedulerResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LookbackWindow: import_smithy_client.expectString,
    ModelArn: import_smithy_client.expectString,
    ModelName: import_smithy_client.expectString,
    PromoteMode: import_smithy_client.expectString,
    RetrainingFrequency: import_smithy_client.expectString,
    RetrainingStartDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_DescribeRetrainingSchedulerResponse");
var de_InferenceEventSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InferenceEventSummary(entry, context);
  });
  return retVal;
}, "de_InferenceEventSummaries");
var de_InferenceEventSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Diagnostics: import_smithy_client.expectString,
    EventDurationInSeconds: import_smithy_client.expectLong,
    EventEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EventStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    InferenceSchedulerArn: import_smithy_client.expectString,
    InferenceSchedulerName: import_smithy_client.expectString
  });
}, "de_InferenceEventSummary");
var de_InferenceExecutionSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InferenceExecutionSummary(entry, context);
  });
  return retVal;
}, "de_InferenceExecutionSummaries");
var de_InferenceExecutionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CustomerResultObject: import_smithy_client._json,
    DataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataInputConfiguration: import_smithy_client._json,
    DataOutputConfiguration: import_smithy_client._json,
    DataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    FailedReason: import_smithy_client.expectString,
    InferenceSchedulerArn: import_smithy_client.expectString,
    InferenceSchedulerName: import_smithy_client.expectString,
    ModelArn: import_smithy_client.expectString,
    ModelName: import_smithy_client.expectString,
    ModelVersion: import_smithy_client.expectLong,
    ModelVersionArn: import_smithy_client.expectString,
    ScheduledStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString
  });
}, "de_InferenceExecutionSummary");
var de_LabelGroupSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LabelGroupSummary(entry, context);
  });
  return retVal;
}, "de_LabelGroupSummaries");
var de_LabelGroupSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LabelGroupArn: import_smithy_client.expectString,
    LabelGroupName: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_LabelGroupSummary");
var de_LabelSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LabelSummary(entry, context);
  });
  return retVal;
}, "de_LabelSummaries");
var de_LabelSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Equipment: import_smithy_client.expectString,
    FaultCode: import_smithy_client.expectString,
    LabelGroupArn: import_smithy_client.expectString,
    LabelGroupName: import_smithy_client.expectString,
    LabelId: import_smithy_client.expectString,
    Rating: import_smithy_client.expectString,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_LabelSummary");
var de_ListDatasetsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DatasetSummaries: (_) => de_DatasetSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListDatasetsResponse");
var de_ListInferenceEventsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    InferenceEventSummaries: (_) => de_InferenceEventSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListInferenceEventsResponse");
var de_ListInferenceExecutionsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    InferenceExecutionSummaries: (_) => de_InferenceExecutionSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListInferenceExecutionsResponse");
var de_ListLabelGroupsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LabelGroupSummaries: (_) => de_LabelGroupSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListLabelGroupsResponse");
var de_ListLabelsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LabelSummaries: (_) => de_LabelSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListLabelsResponse");
var de_ListModelsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ModelSummaries: (_) => de_ModelSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListModelsResponse");
var de_ListModelVersionsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ModelVersionSummaries: (_) => de_ModelVersionSummaries(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListModelVersionsResponse");
var de_ListRetrainingSchedulersResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    RetrainingSchedulerSummaries: (_) => de_RetrainingSchedulerSummaries(_, context)
  });
}, "de_ListRetrainingSchedulersResponse");
var de_ListSensorStatisticsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    SensorStatisticsSummaries: (_) => de_SensorStatisticsSummaries(_, context)
  });
}, "de_ListSensorStatisticsResponse");
var de_ModelSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ModelSummary(entry, context);
  });
  return retVal;
}, "de_ModelSummaries");
var de_ModelSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ActiveModelVersion: import_smithy_client.expectLong,
    ActiveModelVersionArn: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatasetArn: import_smithy_client.expectString,
    DatasetName: import_smithy_client.expectString,
    LatestScheduledRetrainingModelVersion: import_smithy_client.expectLong,
    LatestScheduledRetrainingStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LatestScheduledRetrainingStatus: import_smithy_client.expectString,
    ModelArn: import_smithy_client.expectString,
    ModelDiagnosticsOutputConfiguration: import_smithy_client._json,
    ModelName: import_smithy_client.expectString,
    ModelQuality: import_smithy_client.expectString,
    NextScheduledRetrainingStartDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    RetrainingSchedulerStatus: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ModelSummary");
var de_ModelVersionSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ModelVersionSummary(entry, context);
  });
  return retVal;
}, "de_ModelVersionSummaries");
var de_ModelVersionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ModelArn: import_smithy_client.expectString,
    ModelName: import_smithy_client.expectString,
    ModelQuality: import_smithy_client.expectString,
    ModelVersion: import_smithy_client.expectLong,
    ModelVersionArn: import_smithy_client.expectString,
    SourceType: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ModelVersionSummary");
var de_RetrainingSchedulerSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RetrainingSchedulerSummary(entry, context);
  });
  return retVal;
}, "de_RetrainingSchedulerSummaries");
var de_RetrainingSchedulerSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LookbackWindow: import_smithy_client.expectString,
    ModelArn: import_smithy_client.expectString,
    ModelName: import_smithy_client.expectString,
    RetrainingFrequency: import_smithy_client.expectString,
    RetrainingStartDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString
  });
}, "de_RetrainingSchedulerSummary");
var de_SensorStatisticsSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SensorStatisticsSummary(entry, context);
  });
  return retVal;
}, "de_SensorStatisticsSummaries");
var de_SensorStatisticsSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CategoricalValues: import_smithy_client._json,
    ComponentName: import_smithy_client.expectString,
    DataEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataExists: import_smithy_client.expectBoolean,
    DataStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DuplicateTimestamps: (_) => de_CountPercent(_, context),
    InvalidDateEntries: (_) => de_CountPercent(_, context),
    InvalidValues: (_) => de_CountPercent(_, context),
    LargeTimestampGaps: import_smithy_client._json,
    MissingValues: (_) => de_CountPercent(_, context),
    MonotonicValues: import_smithy_client._json,
    MultipleOperatingModes: import_smithy_client._json,
    SensorName: import_smithy_client.expectString
  });
}, "de_SensorStatisticsSummary");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(LookoutEquipmentServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.0",
    "x-amz-target": `AWSLookoutEquipmentFrontendService.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateDatasetCommand.ts
var _CreateDatasetCommand = class _CreateDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "CreateDataset", {}).n("LookoutEquipmentClient", "CreateDatasetCommand").f(void 0, void 0).ser(se_CreateDatasetCommand).de(de_CreateDatasetCommand).build() {
};
__name(_CreateDatasetCommand, "CreateDatasetCommand");
var CreateDatasetCommand = _CreateDatasetCommand;

// src/commands/CreateInferenceSchedulerCommand.ts




var _CreateInferenceSchedulerCommand = class _CreateInferenceSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "CreateInferenceScheduler", {}).n("LookoutEquipmentClient", "CreateInferenceSchedulerCommand").f(void 0, void 0).ser(se_CreateInferenceSchedulerCommand).de(de_CreateInferenceSchedulerCommand).build() {
};
__name(_CreateInferenceSchedulerCommand, "CreateInferenceSchedulerCommand");
var CreateInferenceSchedulerCommand = _CreateInferenceSchedulerCommand;

// src/commands/CreateLabelCommand.ts




var _CreateLabelCommand = class _CreateLabelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "CreateLabel", {}).n("LookoutEquipmentClient", "CreateLabelCommand").f(void 0, void 0).ser(se_CreateLabelCommand).de(de_CreateLabelCommand).build() {
};
__name(_CreateLabelCommand, "CreateLabelCommand");
var CreateLabelCommand = _CreateLabelCommand;

// src/commands/CreateLabelGroupCommand.ts




var _CreateLabelGroupCommand = class _CreateLabelGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "CreateLabelGroup", {}).n("LookoutEquipmentClient", "CreateLabelGroupCommand").f(void 0, void 0).ser(se_CreateLabelGroupCommand).de(de_CreateLabelGroupCommand).build() {
};
__name(_CreateLabelGroupCommand, "CreateLabelGroupCommand");
var CreateLabelGroupCommand = _CreateLabelGroupCommand;

// src/commands/CreateModelCommand.ts




var _CreateModelCommand = class _CreateModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "CreateModel", {}).n("LookoutEquipmentClient", "CreateModelCommand").f(void 0, void 0).ser(se_CreateModelCommand).de(de_CreateModelCommand).build() {
};
__name(_CreateModelCommand, "CreateModelCommand");
var CreateModelCommand = _CreateModelCommand;

// src/commands/CreateRetrainingSchedulerCommand.ts




var _CreateRetrainingSchedulerCommand = class _CreateRetrainingSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "CreateRetrainingScheduler", {}).n("LookoutEquipmentClient", "CreateRetrainingSchedulerCommand").f(void 0, void 0).ser(se_CreateRetrainingSchedulerCommand).de(de_CreateRetrainingSchedulerCommand).build() {
};
__name(_CreateRetrainingSchedulerCommand, "CreateRetrainingSchedulerCommand");
var CreateRetrainingSchedulerCommand = _CreateRetrainingSchedulerCommand;

// src/commands/DeleteDatasetCommand.ts




var _DeleteDatasetCommand = class _DeleteDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteDataset", {}).n("LookoutEquipmentClient", "DeleteDatasetCommand").f(void 0, void 0).ser(se_DeleteDatasetCommand).de(de_DeleteDatasetCommand).build() {
};
__name(_DeleteDatasetCommand, "DeleteDatasetCommand");
var DeleteDatasetCommand = _DeleteDatasetCommand;

// src/commands/DeleteInferenceSchedulerCommand.ts




var _DeleteInferenceSchedulerCommand = class _DeleteInferenceSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteInferenceScheduler", {}).n("LookoutEquipmentClient", "DeleteInferenceSchedulerCommand").f(void 0, void 0).ser(se_DeleteInferenceSchedulerCommand).de(de_DeleteInferenceSchedulerCommand).build() {
};
__name(_DeleteInferenceSchedulerCommand, "DeleteInferenceSchedulerCommand");
var DeleteInferenceSchedulerCommand = _DeleteInferenceSchedulerCommand;

// src/commands/DeleteLabelCommand.ts




var _DeleteLabelCommand = class _DeleteLabelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteLabel", {}).n("LookoutEquipmentClient", "DeleteLabelCommand").f(void 0, void 0).ser(se_DeleteLabelCommand).de(de_DeleteLabelCommand).build() {
};
__name(_DeleteLabelCommand, "DeleteLabelCommand");
var DeleteLabelCommand = _DeleteLabelCommand;

// src/commands/DeleteLabelGroupCommand.ts




var _DeleteLabelGroupCommand = class _DeleteLabelGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteLabelGroup", {}).n("LookoutEquipmentClient", "DeleteLabelGroupCommand").f(void 0, void 0).ser(se_DeleteLabelGroupCommand).de(de_DeleteLabelGroupCommand).build() {
};
__name(_DeleteLabelGroupCommand, "DeleteLabelGroupCommand");
var DeleteLabelGroupCommand = _DeleteLabelGroupCommand;

// src/commands/DeleteModelCommand.ts




var _DeleteModelCommand = class _DeleteModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteModel", {}).n("LookoutEquipmentClient", "DeleteModelCommand").f(void 0, void 0).ser(se_DeleteModelCommand).de(de_DeleteModelCommand).build() {
};
__name(_DeleteModelCommand, "DeleteModelCommand");
var DeleteModelCommand = _DeleteModelCommand;

// src/commands/DeleteResourcePolicyCommand.ts




var _DeleteResourcePolicyCommand = class _DeleteResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteResourcePolicy", {}).n("LookoutEquipmentClient", "DeleteResourcePolicyCommand").f(void 0, void 0).ser(se_DeleteResourcePolicyCommand).de(de_DeleteResourcePolicyCommand).build() {
};
__name(_DeleteResourcePolicyCommand, "DeleteResourcePolicyCommand");
var DeleteResourcePolicyCommand = _DeleteResourcePolicyCommand;

// src/commands/DeleteRetrainingSchedulerCommand.ts




var _DeleteRetrainingSchedulerCommand = class _DeleteRetrainingSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DeleteRetrainingScheduler", {}).n("LookoutEquipmentClient", "DeleteRetrainingSchedulerCommand").f(void 0, void 0).ser(se_DeleteRetrainingSchedulerCommand).de(de_DeleteRetrainingSchedulerCommand).build() {
};
__name(_DeleteRetrainingSchedulerCommand, "DeleteRetrainingSchedulerCommand");
var DeleteRetrainingSchedulerCommand = _DeleteRetrainingSchedulerCommand;

// src/commands/DescribeDataIngestionJobCommand.ts




var _DescribeDataIngestionJobCommand = class _DescribeDataIngestionJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeDataIngestionJob", {}).n("LookoutEquipmentClient", "DescribeDataIngestionJobCommand").f(void 0, void 0).ser(se_DescribeDataIngestionJobCommand).de(de_DescribeDataIngestionJobCommand).build() {
};
__name(_DescribeDataIngestionJobCommand, "DescribeDataIngestionJobCommand");
var DescribeDataIngestionJobCommand = _DescribeDataIngestionJobCommand;

// src/commands/DescribeDatasetCommand.ts




var _DescribeDatasetCommand = class _DescribeDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeDataset", {}).n("LookoutEquipmentClient", "DescribeDatasetCommand").f(void 0, void 0).ser(se_DescribeDatasetCommand).de(de_DescribeDatasetCommand).build() {
};
__name(_DescribeDatasetCommand, "DescribeDatasetCommand");
var DescribeDatasetCommand = _DescribeDatasetCommand;

// src/commands/DescribeInferenceSchedulerCommand.ts




var _DescribeInferenceSchedulerCommand = class _DescribeInferenceSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeInferenceScheduler", {}).n("LookoutEquipmentClient", "DescribeInferenceSchedulerCommand").f(void 0, void 0).ser(se_DescribeInferenceSchedulerCommand).de(de_DescribeInferenceSchedulerCommand).build() {
};
__name(_DescribeInferenceSchedulerCommand, "DescribeInferenceSchedulerCommand");
var DescribeInferenceSchedulerCommand = _DescribeInferenceSchedulerCommand;

// src/commands/DescribeLabelCommand.ts




var _DescribeLabelCommand = class _DescribeLabelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeLabel", {}).n("LookoutEquipmentClient", "DescribeLabelCommand").f(void 0, void 0).ser(se_DescribeLabelCommand).de(de_DescribeLabelCommand).build() {
};
__name(_DescribeLabelCommand, "DescribeLabelCommand");
var DescribeLabelCommand = _DescribeLabelCommand;

// src/commands/DescribeLabelGroupCommand.ts




var _DescribeLabelGroupCommand = class _DescribeLabelGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeLabelGroup", {}).n("LookoutEquipmentClient", "DescribeLabelGroupCommand").f(void 0, void 0).ser(se_DescribeLabelGroupCommand).de(de_DescribeLabelGroupCommand).build() {
};
__name(_DescribeLabelGroupCommand, "DescribeLabelGroupCommand");
var DescribeLabelGroupCommand = _DescribeLabelGroupCommand;

// src/commands/DescribeModelCommand.ts




var _DescribeModelCommand = class _DescribeModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeModel", {}).n("LookoutEquipmentClient", "DescribeModelCommand").f(void 0, void 0).ser(se_DescribeModelCommand).de(de_DescribeModelCommand).build() {
};
__name(_DescribeModelCommand, "DescribeModelCommand");
var DescribeModelCommand = _DescribeModelCommand;

// src/commands/DescribeModelVersionCommand.ts




var _DescribeModelVersionCommand = class _DescribeModelVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeModelVersion", {}).n("LookoutEquipmentClient", "DescribeModelVersionCommand").f(void 0, void 0).ser(se_DescribeModelVersionCommand).de(de_DescribeModelVersionCommand).build() {
};
__name(_DescribeModelVersionCommand, "DescribeModelVersionCommand");
var DescribeModelVersionCommand = _DescribeModelVersionCommand;

// src/commands/DescribeResourcePolicyCommand.ts




var _DescribeResourcePolicyCommand = class _DescribeResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeResourcePolicy", {}).n("LookoutEquipmentClient", "DescribeResourcePolicyCommand").f(void 0, void 0).ser(se_DescribeResourcePolicyCommand).de(de_DescribeResourcePolicyCommand).build() {
};
__name(_DescribeResourcePolicyCommand, "DescribeResourcePolicyCommand");
var DescribeResourcePolicyCommand = _DescribeResourcePolicyCommand;

// src/commands/DescribeRetrainingSchedulerCommand.ts




var _DescribeRetrainingSchedulerCommand = class _DescribeRetrainingSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "DescribeRetrainingScheduler", {}).n("LookoutEquipmentClient", "DescribeRetrainingSchedulerCommand").f(void 0, void 0).ser(se_DescribeRetrainingSchedulerCommand).de(de_DescribeRetrainingSchedulerCommand).build() {
};
__name(_DescribeRetrainingSchedulerCommand, "DescribeRetrainingSchedulerCommand");
var DescribeRetrainingSchedulerCommand = _DescribeRetrainingSchedulerCommand;

// src/commands/ImportDatasetCommand.ts




var _ImportDatasetCommand = class _ImportDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ImportDataset", {}).n("LookoutEquipmentClient", "ImportDatasetCommand").f(void 0, void 0).ser(se_ImportDatasetCommand).de(de_ImportDatasetCommand).build() {
};
__name(_ImportDatasetCommand, "ImportDatasetCommand");
var ImportDatasetCommand = _ImportDatasetCommand;

// src/commands/ImportModelVersionCommand.ts




var _ImportModelVersionCommand = class _ImportModelVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ImportModelVersion", {}).n("LookoutEquipmentClient", "ImportModelVersionCommand").f(void 0, void 0).ser(se_ImportModelVersionCommand).de(de_ImportModelVersionCommand).build() {
};
__name(_ImportModelVersionCommand, "ImportModelVersionCommand");
var ImportModelVersionCommand = _ImportModelVersionCommand;

// src/commands/ListDataIngestionJobsCommand.ts




var _ListDataIngestionJobsCommand = class _ListDataIngestionJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListDataIngestionJobs", {}).n("LookoutEquipmentClient", "ListDataIngestionJobsCommand").f(void 0, void 0).ser(se_ListDataIngestionJobsCommand).de(de_ListDataIngestionJobsCommand).build() {
};
__name(_ListDataIngestionJobsCommand, "ListDataIngestionJobsCommand");
var ListDataIngestionJobsCommand = _ListDataIngestionJobsCommand;

// src/commands/ListDatasetsCommand.ts




var _ListDatasetsCommand = class _ListDatasetsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListDatasets", {}).n("LookoutEquipmentClient", "ListDatasetsCommand").f(void 0, void 0).ser(se_ListDatasetsCommand).de(de_ListDatasetsCommand).build() {
};
__name(_ListDatasetsCommand, "ListDatasetsCommand");
var ListDatasetsCommand = _ListDatasetsCommand;

// src/commands/ListInferenceEventsCommand.ts




var _ListInferenceEventsCommand = class _ListInferenceEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListInferenceEvents", {}).n("LookoutEquipmentClient", "ListInferenceEventsCommand").f(void 0, void 0).ser(se_ListInferenceEventsCommand).de(de_ListInferenceEventsCommand).build() {
};
__name(_ListInferenceEventsCommand, "ListInferenceEventsCommand");
var ListInferenceEventsCommand = _ListInferenceEventsCommand;

// src/commands/ListInferenceExecutionsCommand.ts




var _ListInferenceExecutionsCommand = class _ListInferenceExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListInferenceExecutions", {}).n("LookoutEquipmentClient", "ListInferenceExecutionsCommand").f(void 0, void 0).ser(se_ListInferenceExecutionsCommand).de(de_ListInferenceExecutionsCommand).build() {
};
__name(_ListInferenceExecutionsCommand, "ListInferenceExecutionsCommand");
var ListInferenceExecutionsCommand = _ListInferenceExecutionsCommand;

// src/commands/ListInferenceSchedulersCommand.ts




var _ListInferenceSchedulersCommand = class _ListInferenceSchedulersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListInferenceSchedulers", {}).n("LookoutEquipmentClient", "ListInferenceSchedulersCommand").f(void 0, void 0).ser(se_ListInferenceSchedulersCommand).de(de_ListInferenceSchedulersCommand).build() {
};
__name(_ListInferenceSchedulersCommand, "ListInferenceSchedulersCommand");
var ListInferenceSchedulersCommand = _ListInferenceSchedulersCommand;

// src/commands/ListLabelGroupsCommand.ts




var _ListLabelGroupsCommand = class _ListLabelGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListLabelGroups", {}).n("LookoutEquipmentClient", "ListLabelGroupsCommand").f(void 0, void 0).ser(se_ListLabelGroupsCommand).de(de_ListLabelGroupsCommand).build() {
};
__name(_ListLabelGroupsCommand, "ListLabelGroupsCommand");
var ListLabelGroupsCommand = _ListLabelGroupsCommand;

// src/commands/ListLabelsCommand.ts




var _ListLabelsCommand = class _ListLabelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListLabels", {}).n("LookoutEquipmentClient", "ListLabelsCommand").f(void 0, void 0).ser(se_ListLabelsCommand).de(de_ListLabelsCommand).build() {
};
__name(_ListLabelsCommand, "ListLabelsCommand");
var ListLabelsCommand = _ListLabelsCommand;

// src/commands/ListModelsCommand.ts




var _ListModelsCommand = class _ListModelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListModels", {}).n("LookoutEquipmentClient", "ListModelsCommand").f(void 0, void 0).ser(se_ListModelsCommand).de(de_ListModelsCommand).build() {
};
__name(_ListModelsCommand, "ListModelsCommand");
var ListModelsCommand = _ListModelsCommand;

// src/commands/ListModelVersionsCommand.ts




var _ListModelVersionsCommand = class _ListModelVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListModelVersions", {}).n("LookoutEquipmentClient", "ListModelVersionsCommand").f(void 0, void 0).ser(se_ListModelVersionsCommand).de(de_ListModelVersionsCommand).build() {
};
__name(_ListModelVersionsCommand, "ListModelVersionsCommand");
var ListModelVersionsCommand = _ListModelVersionsCommand;

// src/commands/ListRetrainingSchedulersCommand.ts




var _ListRetrainingSchedulersCommand = class _ListRetrainingSchedulersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListRetrainingSchedulers", {}).n("LookoutEquipmentClient", "ListRetrainingSchedulersCommand").f(void 0, void 0).ser(se_ListRetrainingSchedulersCommand).de(de_ListRetrainingSchedulersCommand).build() {
};
__name(_ListRetrainingSchedulersCommand, "ListRetrainingSchedulersCommand");
var ListRetrainingSchedulersCommand = _ListRetrainingSchedulersCommand;

// src/commands/ListSensorStatisticsCommand.ts




var _ListSensorStatisticsCommand = class _ListSensorStatisticsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListSensorStatistics", {}).n("LookoutEquipmentClient", "ListSensorStatisticsCommand").f(void 0, void 0).ser(se_ListSensorStatisticsCommand).de(de_ListSensorStatisticsCommand).build() {
};
__name(_ListSensorStatisticsCommand, "ListSensorStatisticsCommand");
var ListSensorStatisticsCommand = _ListSensorStatisticsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "ListTagsForResource", {}).n("LookoutEquipmentClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PutResourcePolicyCommand.ts




var _PutResourcePolicyCommand = class _PutResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "PutResourcePolicy", {}).n("LookoutEquipmentClient", "PutResourcePolicyCommand").f(void 0, void 0).ser(se_PutResourcePolicyCommand).de(de_PutResourcePolicyCommand).build() {
};
__name(_PutResourcePolicyCommand, "PutResourcePolicyCommand");
var PutResourcePolicyCommand = _PutResourcePolicyCommand;

// src/commands/StartDataIngestionJobCommand.ts




var _StartDataIngestionJobCommand = class _StartDataIngestionJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "StartDataIngestionJob", {}).n("LookoutEquipmentClient", "StartDataIngestionJobCommand").f(void 0, void 0).ser(se_StartDataIngestionJobCommand).de(de_StartDataIngestionJobCommand).build() {
};
__name(_StartDataIngestionJobCommand, "StartDataIngestionJobCommand");
var StartDataIngestionJobCommand = _StartDataIngestionJobCommand;

// src/commands/StartInferenceSchedulerCommand.ts




var _StartInferenceSchedulerCommand = class _StartInferenceSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "StartInferenceScheduler", {}).n("LookoutEquipmentClient", "StartInferenceSchedulerCommand").f(void 0, void 0).ser(se_StartInferenceSchedulerCommand).de(de_StartInferenceSchedulerCommand).build() {
};
__name(_StartInferenceSchedulerCommand, "StartInferenceSchedulerCommand");
var StartInferenceSchedulerCommand = _StartInferenceSchedulerCommand;

// src/commands/StartRetrainingSchedulerCommand.ts




var _StartRetrainingSchedulerCommand = class _StartRetrainingSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "StartRetrainingScheduler", {}).n("LookoutEquipmentClient", "StartRetrainingSchedulerCommand").f(void 0, void 0).ser(se_StartRetrainingSchedulerCommand).de(de_StartRetrainingSchedulerCommand).build() {
};
__name(_StartRetrainingSchedulerCommand, "StartRetrainingSchedulerCommand");
var StartRetrainingSchedulerCommand = _StartRetrainingSchedulerCommand;

// src/commands/StopInferenceSchedulerCommand.ts




var _StopInferenceSchedulerCommand = class _StopInferenceSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "StopInferenceScheduler", {}).n("LookoutEquipmentClient", "StopInferenceSchedulerCommand").f(void 0, void 0).ser(se_StopInferenceSchedulerCommand).de(de_StopInferenceSchedulerCommand).build() {
};
__name(_StopInferenceSchedulerCommand, "StopInferenceSchedulerCommand");
var StopInferenceSchedulerCommand = _StopInferenceSchedulerCommand;

// src/commands/StopRetrainingSchedulerCommand.ts




var _StopRetrainingSchedulerCommand = class _StopRetrainingSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "StopRetrainingScheduler", {}).n("LookoutEquipmentClient", "StopRetrainingSchedulerCommand").f(void 0, void 0).ser(se_StopRetrainingSchedulerCommand).de(de_StopRetrainingSchedulerCommand).build() {
};
__name(_StopRetrainingSchedulerCommand, "StopRetrainingSchedulerCommand");
var StopRetrainingSchedulerCommand = _StopRetrainingSchedulerCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "TagResource", {}).n("LookoutEquipmentClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "UntagResource", {}).n("LookoutEquipmentClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateActiveModelVersionCommand.ts




var _UpdateActiveModelVersionCommand = class _UpdateActiveModelVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "UpdateActiveModelVersion", {}).n("LookoutEquipmentClient", "UpdateActiveModelVersionCommand").f(void 0, void 0).ser(se_UpdateActiveModelVersionCommand).de(de_UpdateActiveModelVersionCommand).build() {
};
__name(_UpdateActiveModelVersionCommand, "UpdateActiveModelVersionCommand");
var UpdateActiveModelVersionCommand = _UpdateActiveModelVersionCommand;

// src/commands/UpdateInferenceSchedulerCommand.ts




var _UpdateInferenceSchedulerCommand = class _UpdateInferenceSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "UpdateInferenceScheduler", {}).n("LookoutEquipmentClient", "UpdateInferenceSchedulerCommand").f(void 0, void 0).ser(se_UpdateInferenceSchedulerCommand).de(de_UpdateInferenceSchedulerCommand).build() {
};
__name(_UpdateInferenceSchedulerCommand, "UpdateInferenceSchedulerCommand");
var UpdateInferenceSchedulerCommand = _UpdateInferenceSchedulerCommand;

// src/commands/UpdateLabelGroupCommand.ts




var _UpdateLabelGroupCommand = class _UpdateLabelGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "UpdateLabelGroup", {}).n("LookoutEquipmentClient", "UpdateLabelGroupCommand").f(void 0, void 0).ser(se_UpdateLabelGroupCommand).de(de_UpdateLabelGroupCommand).build() {
};
__name(_UpdateLabelGroupCommand, "UpdateLabelGroupCommand");
var UpdateLabelGroupCommand = _UpdateLabelGroupCommand;

// src/commands/UpdateModelCommand.ts




var _UpdateModelCommand = class _UpdateModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "UpdateModel", {}).n("LookoutEquipmentClient", "UpdateModelCommand").f(void 0, void 0).ser(se_UpdateModelCommand).de(de_UpdateModelCommand).build() {
};
__name(_UpdateModelCommand, "UpdateModelCommand");
var UpdateModelCommand = _UpdateModelCommand;

// src/commands/UpdateRetrainingSchedulerCommand.ts




var _UpdateRetrainingSchedulerCommand = class _UpdateRetrainingSchedulerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLookoutEquipmentFrontendService", "UpdateRetrainingScheduler", {}).n("LookoutEquipmentClient", "UpdateRetrainingSchedulerCommand").f(void 0, void 0).ser(se_UpdateRetrainingSchedulerCommand).de(de_UpdateRetrainingSchedulerCommand).build() {
};
__name(_UpdateRetrainingSchedulerCommand, "UpdateRetrainingSchedulerCommand");
var UpdateRetrainingSchedulerCommand = _UpdateRetrainingSchedulerCommand;

// src/LookoutEquipment.ts
var commands = {
  CreateDatasetCommand,
  CreateInferenceSchedulerCommand,
  CreateLabelCommand,
  CreateLabelGroupCommand,
  CreateModelCommand,
  CreateRetrainingSchedulerCommand,
  DeleteDatasetCommand,
  DeleteInferenceSchedulerCommand,
  DeleteLabelCommand,
  DeleteLabelGroupCommand,
  DeleteModelCommand,
  DeleteResourcePolicyCommand,
  DeleteRetrainingSchedulerCommand,
  DescribeDataIngestionJobCommand,
  DescribeDatasetCommand,
  DescribeInferenceSchedulerCommand,
  DescribeLabelCommand,
  DescribeLabelGroupCommand,
  DescribeModelCommand,
  DescribeModelVersionCommand,
  DescribeResourcePolicyCommand,
  DescribeRetrainingSchedulerCommand,
  ImportDatasetCommand,
  ImportModelVersionCommand,
  ListDataIngestionJobsCommand,
  ListDatasetsCommand,
  ListInferenceEventsCommand,
  ListInferenceExecutionsCommand,
  ListInferenceSchedulersCommand,
  ListLabelGroupsCommand,
  ListLabelsCommand,
  ListModelsCommand,
  ListModelVersionsCommand,
  ListRetrainingSchedulersCommand,
  ListSensorStatisticsCommand,
  ListTagsForResourceCommand,
  PutResourcePolicyCommand,
  StartDataIngestionJobCommand,
  StartInferenceSchedulerCommand,
  StartRetrainingSchedulerCommand,
  StopInferenceSchedulerCommand,
  StopRetrainingSchedulerCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateActiveModelVersionCommand,
  UpdateInferenceSchedulerCommand,
  UpdateLabelGroupCommand,
  UpdateModelCommand,
  UpdateRetrainingSchedulerCommand
};
var _LookoutEquipment = class _LookoutEquipment extends LookoutEquipmentClient {
};
__name(_LookoutEquipment, "LookoutEquipment");
var LookoutEquipment = _LookoutEquipment;
(0, import_smithy_client.createAggregatedClient)(commands, LookoutEquipment);

// src/pagination/ListDataIngestionJobsPaginator.ts

var paginateListDataIngestionJobs = (0, import_core.createPaginator)(LookoutEquipmentClient, ListDataIngestionJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDatasetsPaginator.ts

var paginateListDatasets = (0, import_core.createPaginator)(LookoutEquipmentClient, ListDatasetsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListInferenceEventsPaginator.ts

var paginateListInferenceEvents = (0, import_core.createPaginator)(LookoutEquipmentClient, ListInferenceEventsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListInferenceExecutionsPaginator.ts

var paginateListInferenceExecutions = (0, import_core.createPaginator)(LookoutEquipmentClient, ListInferenceExecutionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListInferenceSchedulersPaginator.ts

var paginateListInferenceSchedulers = (0, import_core.createPaginator)(LookoutEquipmentClient, ListInferenceSchedulersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLabelGroupsPaginator.ts

var paginateListLabelGroups = (0, import_core.createPaginator)(LookoutEquipmentClient, ListLabelGroupsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLabelsPaginator.ts

var paginateListLabels = (0, import_core.createPaginator)(LookoutEquipmentClient, ListLabelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListModelVersionsPaginator.ts

var paginateListModelVersions = (0, import_core.createPaginator)(LookoutEquipmentClient, ListModelVersionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListModelsPaginator.ts

var paginateListModels = (0, import_core.createPaginator)(LookoutEquipmentClient, ListModelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListRetrainingSchedulersPaginator.ts

var paginateListRetrainingSchedulers = (0, import_core.createPaginator)(LookoutEquipmentClient, ListRetrainingSchedulersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListSensorStatisticsPaginator.ts

var paginateListSensorStatistics = (0, import_core.createPaginator)(LookoutEquipmentClient, ListSensorStatisticsCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  LookoutEquipmentServiceException,
  __Client,
  LookoutEquipmentClient,
  LookoutEquipment,
  $Command,
  CreateDatasetCommand,
  CreateInferenceSchedulerCommand,
  CreateLabelCommand,
  CreateLabelGroupCommand,
  CreateModelCommand,
  CreateRetrainingSchedulerCommand,
  DeleteDatasetCommand,
  DeleteInferenceSchedulerCommand,
  DeleteLabelCommand,
  DeleteLabelGroupCommand,
  DeleteModelCommand,
  DeleteResourcePolicyCommand,
  DeleteRetrainingSchedulerCommand,
  DescribeDataIngestionJobCommand,
  DescribeDatasetCommand,
  DescribeInferenceSchedulerCommand,
  DescribeLabelCommand,
  DescribeLabelGroupCommand,
  DescribeModelCommand,
  DescribeModelVersionCommand,
  DescribeResourcePolicyCommand,
  DescribeRetrainingSchedulerCommand,
  ImportDatasetCommand,
  ImportModelVersionCommand,
  ListDataIngestionJobsCommand,
  ListDatasetsCommand,
  ListInferenceEventsCommand,
  ListInferenceExecutionsCommand,
  ListInferenceSchedulersCommand,
  ListLabelGroupsCommand,
  ListLabelsCommand,
  ListModelVersionsCommand,
  ListModelsCommand,
  ListRetrainingSchedulersCommand,
  ListSensorStatisticsCommand,
  ListTagsForResourceCommand,
  PutResourcePolicyCommand,
  StartDataIngestionJobCommand,
  StartInferenceSchedulerCommand,
  StartRetrainingSchedulerCommand,
  StopInferenceSchedulerCommand,
  StopRetrainingSchedulerCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateActiveModelVersionCommand,
  UpdateInferenceSchedulerCommand,
  UpdateLabelGroupCommand,
  UpdateModelCommand,
  UpdateRetrainingSchedulerCommand,
  paginateListDataIngestionJobs,
  paginateListDatasets,
  paginateListInferenceEvents,
  paginateListInferenceExecutions,
  paginateListInferenceSchedulers,
  paginateListLabelGroups,
  paginateListLabels,
  paginateListModelVersions,
  paginateListModels,
  paginateListRetrainingSchedulers,
  paginateListSensorStatistics,
  AccessDeniedException,
  AutoPromotionResult,
  ConflictException,
  DatasetStatus,
  InternalServerException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  DataUploadFrequency,
  ModelQuality,
  InferenceSchedulerStatus,
  ResourceNotFoundException,
  LabelRating,
  TargetSamplingRate,
  ModelStatus,
  ModelPromoteMode,
  RetrainingSchedulerStatus,
  IngestionJobStatus,
  LatestInferenceResult,
  ModelVersionStatus,
  ModelVersionSourceType,
  InferenceDataImportStrategy,
  InferenceExecutionStatus,
  StatisticalIssueStatus,
  Monotonicity
});

