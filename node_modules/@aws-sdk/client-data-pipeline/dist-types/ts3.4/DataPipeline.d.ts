import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  ActivatePipelineCommandInput,
  ActivatePipelineCommandOutput,
} from "./commands/ActivatePipelineCommand";
import {
  AddTagsCommandInput,
  AddTagsCommandOutput,
} from "./commands/AddTagsCommand";
import {
  CreatePipelineCommandInput,
  CreatePipelineCommandOutput,
} from "./commands/CreatePipelineCommand";
import {
  DeactivatePipelineCommandInput,
  DeactivatePipelineCommandOutput,
} from "./commands/DeactivatePipelineCommand";
import {
  DeletePipelineCommandInput,
  DeletePipelineCommandOutput,
} from "./commands/DeletePipelineCommand";
import {
  DescribeObjectsCommandInput,
  DescribeObjectsCommandOutput,
} from "./commands/DescribeObjectsCommand";
import {
  DescribePipelinesCommandInput,
  DescribePipelinesCommandOutput,
} from "./commands/DescribePipelinesCommand";
import {
  EvaluateExpressionCommandInput,
  EvaluateExpressionCommandOutput,
} from "./commands/EvaluateExpressionCommand";
import {
  GetPipelineDefinitionCommandInput,
  GetPipelineDefinitionCommandOutput,
} from "./commands/GetPipelineDefinitionCommand";
import {
  ListPipelinesCommandInput,
  ListPipelinesCommandOutput,
} from "./commands/ListPipelinesCommand";
import {
  PollForTaskCommandInput,
  PollForTaskCommandOutput,
} from "./commands/PollForTaskCommand";
import {
  PutPipelineDefinitionCommandInput,
  PutPipelineDefinitionCommandOutput,
} from "./commands/PutPipelineDefinitionCommand";
import {
  QueryObjectsCommandInput,
  QueryObjectsCommandOutput,
} from "./commands/QueryObjectsCommand";
import {
  RemoveTagsCommandInput,
  RemoveTagsCommandOutput,
} from "./commands/RemoveTagsCommand";
import {
  ReportTaskProgressCommandInput,
  ReportTaskProgressCommandOutput,
} from "./commands/ReportTaskProgressCommand";
import {
  ReportTaskRunnerHeartbeatCommandInput,
  ReportTaskRunnerHeartbeatCommandOutput,
} from "./commands/ReportTaskRunnerHeartbeatCommand";
import {
  SetStatusCommandInput,
  SetStatusCommandOutput,
} from "./commands/SetStatusCommand";
import {
  SetTaskStatusCommandInput,
  SetTaskStatusCommandOutput,
} from "./commands/SetTaskStatusCommand";
import {
  ValidatePipelineDefinitionCommandInput,
  ValidatePipelineDefinitionCommandOutput,
} from "./commands/ValidatePipelineDefinitionCommand";
import { DataPipelineClient } from "./DataPipelineClient";
export interface DataPipeline {
  activatePipeline(
    args: ActivatePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ActivatePipelineCommandOutput>;
  activatePipeline(
    args: ActivatePipelineCommandInput,
    cb: (err: any, data?: ActivatePipelineCommandOutput) => void
  ): void;
  activatePipeline(
    args: ActivatePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ActivatePipelineCommandOutput) => void
  ): void;
  addTags(
    args: AddTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddTagsCommandOutput>;
  addTags(
    args: AddTagsCommandInput,
    cb: (err: any, data?: AddTagsCommandOutput) => void
  ): void;
  addTags(
    args: AddTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddTagsCommandOutput) => void
  ): void;
  createPipeline(
    args: CreatePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePipelineCommandOutput>;
  createPipeline(
    args: CreatePipelineCommandInput,
    cb: (err: any, data?: CreatePipelineCommandOutput) => void
  ): void;
  createPipeline(
    args: CreatePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePipelineCommandOutput) => void
  ): void;
  deactivatePipeline(
    args: DeactivatePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeactivatePipelineCommandOutput>;
  deactivatePipeline(
    args: DeactivatePipelineCommandInput,
    cb: (err: any, data?: DeactivatePipelineCommandOutput) => void
  ): void;
  deactivatePipeline(
    args: DeactivatePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeactivatePipelineCommandOutput) => void
  ): void;
  deletePipeline(
    args: DeletePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePipelineCommandOutput>;
  deletePipeline(
    args: DeletePipelineCommandInput,
    cb: (err: any, data?: DeletePipelineCommandOutput) => void
  ): void;
  deletePipeline(
    args: DeletePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePipelineCommandOutput) => void
  ): void;
  describeObjects(
    args: DescribeObjectsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeObjectsCommandOutput>;
  describeObjects(
    args: DescribeObjectsCommandInput,
    cb: (err: any, data?: DescribeObjectsCommandOutput) => void
  ): void;
  describeObjects(
    args: DescribeObjectsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeObjectsCommandOutput) => void
  ): void;
  describePipelines(
    args: DescribePipelinesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribePipelinesCommandOutput>;
  describePipelines(
    args: DescribePipelinesCommandInput,
    cb: (err: any, data?: DescribePipelinesCommandOutput) => void
  ): void;
  describePipelines(
    args: DescribePipelinesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribePipelinesCommandOutput) => void
  ): void;
  evaluateExpression(
    args: EvaluateExpressionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<EvaluateExpressionCommandOutput>;
  evaluateExpression(
    args: EvaluateExpressionCommandInput,
    cb: (err: any, data?: EvaluateExpressionCommandOutput) => void
  ): void;
  evaluateExpression(
    args: EvaluateExpressionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: EvaluateExpressionCommandOutput) => void
  ): void;
  getPipelineDefinition(
    args: GetPipelineDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetPipelineDefinitionCommandOutput>;
  getPipelineDefinition(
    args: GetPipelineDefinitionCommandInput,
    cb: (err: any, data?: GetPipelineDefinitionCommandOutput) => void
  ): void;
  getPipelineDefinition(
    args: GetPipelineDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetPipelineDefinitionCommandOutput) => void
  ): void;
  listPipelines(
    args: ListPipelinesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPipelinesCommandOutput>;
  listPipelines(
    args: ListPipelinesCommandInput,
    cb: (err: any, data?: ListPipelinesCommandOutput) => void
  ): void;
  listPipelines(
    args: ListPipelinesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPipelinesCommandOutput) => void
  ): void;
  pollForTask(
    args: PollForTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PollForTaskCommandOutput>;
  pollForTask(
    args: PollForTaskCommandInput,
    cb: (err: any, data?: PollForTaskCommandOutput) => void
  ): void;
  pollForTask(
    args: PollForTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PollForTaskCommandOutput) => void
  ): void;
  putPipelineDefinition(
    args: PutPipelineDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutPipelineDefinitionCommandOutput>;
  putPipelineDefinition(
    args: PutPipelineDefinitionCommandInput,
    cb: (err: any, data?: PutPipelineDefinitionCommandOutput) => void
  ): void;
  putPipelineDefinition(
    args: PutPipelineDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutPipelineDefinitionCommandOutput) => void
  ): void;
  queryObjects(
    args: QueryObjectsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<QueryObjectsCommandOutput>;
  queryObjects(
    args: QueryObjectsCommandInput,
    cb: (err: any, data?: QueryObjectsCommandOutput) => void
  ): void;
  queryObjects(
    args: QueryObjectsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: QueryObjectsCommandOutput) => void
  ): void;
  removeTags(
    args: RemoveTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveTagsCommandOutput>;
  removeTags(
    args: RemoveTagsCommandInput,
    cb: (err: any, data?: RemoveTagsCommandOutput) => void
  ): void;
  removeTags(
    args: RemoveTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveTagsCommandOutput) => void
  ): void;
  reportTaskProgress(
    args: ReportTaskProgressCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ReportTaskProgressCommandOutput>;
  reportTaskProgress(
    args: ReportTaskProgressCommandInput,
    cb: (err: any, data?: ReportTaskProgressCommandOutput) => void
  ): void;
  reportTaskProgress(
    args: ReportTaskProgressCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ReportTaskProgressCommandOutput) => void
  ): void;
  reportTaskRunnerHeartbeat(
    args: ReportTaskRunnerHeartbeatCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ReportTaskRunnerHeartbeatCommandOutput>;
  reportTaskRunnerHeartbeat(
    args: ReportTaskRunnerHeartbeatCommandInput,
    cb: (err: any, data?: ReportTaskRunnerHeartbeatCommandOutput) => void
  ): void;
  reportTaskRunnerHeartbeat(
    args: ReportTaskRunnerHeartbeatCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ReportTaskRunnerHeartbeatCommandOutput) => void
  ): void;
  setStatus(
    args: SetStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetStatusCommandOutput>;
  setStatus(
    args: SetStatusCommandInput,
    cb: (err: any, data?: SetStatusCommandOutput) => void
  ): void;
  setStatus(
    args: SetStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetStatusCommandOutput) => void
  ): void;
  setTaskStatus(
    args: SetTaskStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetTaskStatusCommandOutput>;
  setTaskStatus(
    args: SetTaskStatusCommandInput,
    cb: (err: any, data?: SetTaskStatusCommandOutput) => void
  ): void;
  setTaskStatus(
    args: SetTaskStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetTaskStatusCommandOutput) => void
  ): void;
  validatePipelineDefinition(
    args: ValidatePipelineDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ValidatePipelineDefinitionCommandOutput>;
  validatePipelineDefinition(
    args: ValidatePipelineDefinitionCommandInput,
    cb: (err: any, data?: ValidatePipelineDefinitionCommandOutput) => void
  ): void;
  validatePipelineDefinition(
    args: ValidatePipelineDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ValidatePipelineDefinitionCommandOutput) => void
  ): void;
}
export declare class DataPipeline
  extends DataPipelineClient
  implements DataPipeline {}
