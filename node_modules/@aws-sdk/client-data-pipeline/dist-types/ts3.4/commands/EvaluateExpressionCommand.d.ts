import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  DataPipelineClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../DataPipelineClient";
import {
  EvaluateExpressionInput,
  EvaluateExpressionOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface EvaluateExpressionCommandInput
  extends EvaluateExpressionInput {}
export interface EvaluateExpressionCommandOutput
  extends EvaluateExpressionOutput,
    __MetadataBearer {}
declare const EvaluateExpressionCommand_base: {
  new (
    input: EvaluateExpressionCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    EvaluateExpressionCommandInput,
    EvaluateExpressionCommandOutput,
    DataPipelineClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    __0_0: EvaluateExpressionCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    EvaluateExpressionCommandInput,
    EvaluateExpressionCommandOutput,
    DataPipelineClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class EvaluateExpressionCommand extends EvaluateExpressionCommand_base {}
