"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  CodestarNotifications: () => CodestarNotifications,
  CodestarNotificationsClient: () => CodestarNotificationsClient,
  CodestarNotificationsServiceException: () => CodestarNotificationsServiceException,
  ConcurrentModificationException: () => ConcurrentModificationException,
  ConfigurationException: () => ConfigurationException,
  CreateNotificationRuleCommand: () => CreateNotificationRuleCommand,
  CreateNotificationRuleRequestFilterSensitiveLog: () => CreateNotificationRuleRequestFilterSensitiveLog,
  DeleteNotificationRuleCommand: () => DeleteNotificationRuleCommand,
  DeleteTargetCommand: () => DeleteTargetCommand,
  DeleteTargetRequestFilterSensitiveLog: () => DeleteTargetRequestFilterSensitiveLog,
  DescribeNotificationRuleCommand: () => DescribeNotificationRuleCommand,
  DescribeNotificationRuleResultFilterSensitiveLog: () => DescribeNotificationRuleResultFilterSensitiveLog,
  DetailType: () => DetailType,
  InvalidNextTokenException: () => InvalidNextTokenException,
  LimitExceededException: () => LimitExceededException,
  ListEventTypesCommand: () => ListEventTypesCommand,
  ListEventTypesFilterName: () => ListEventTypesFilterName,
  ListNotificationRulesCommand: () => ListNotificationRulesCommand,
  ListNotificationRulesFilterName: () => ListNotificationRulesFilterName,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTargetsCommand: () => ListTargetsCommand,
  ListTargetsFilterName: () => ListTargetsFilterName,
  ListTargetsResultFilterSensitiveLog: () => ListTargetsResultFilterSensitiveLog,
  NotificationRuleStatus: () => NotificationRuleStatus,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  SubscribeCommand: () => SubscribeCommand,
  SubscribeRequestFilterSensitiveLog: () => SubscribeRequestFilterSensitiveLog,
  TagResourceCommand: () => TagResourceCommand,
  TargetFilterSensitiveLog: () => TargetFilterSensitiveLog,
  TargetStatus: () => TargetStatus,
  TargetSummaryFilterSensitiveLog: () => TargetSummaryFilterSensitiveLog,
  UnsubscribeCommand: () => UnsubscribeCommand,
  UnsubscribeRequestFilterSensitiveLog: () => UnsubscribeRequestFilterSensitiveLog,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateNotificationRuleCommand: () => UpdateNotificationRuleCommand,
  UpdateNotificationRuleRequestFilterSensitiveLog: () => UpdateNotificationRuleRequestFilterSensitiveLog,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListEventTypes: () => paginateListEventTypes,
  paginateListNotificationRules: () => paginateListNotificationRules,
  paginateListTargets: () => paginateListTargets
});
module.exports = __toCommonJS(src_exports);

// src/CodestarNotificationsClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "codestar-notifications"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/CodestarNotificationsClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/CodestarNotificationsClient.ts
var _CodestarNotificationsClient = class _CodestarNotificationsClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultCodestarNotificationsHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_CodestarNotificationsClient, "CodestarNotificationsClient");
var CodestarNotificationsClient = _CodestarNotificationsClient;

// src/CodestarNotifications.ts


// src/commands/CreateNotificationRuleCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/models/models_0.ts


// src/models/CodestarNotificationsServiceException.ts

var _CodestarNotificationsServiceException = class _CodestarNotificationsServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _CodestarNotificationsServiceException.prototype);
  }
};
__name(_CodestarNotificationsServiceException, "CodestarNotificationsServiceException");
var CodestarNotificationsServiceException = _CodestarNotificationsServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _ConcurrentModificationException = class _ConcurrentModificationException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentModificationException",
      $fault: "client",
      ...opts
    });
    this.name = "ConcurrentModificationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConcurrentModificationException, "ConcurrentModificationException");
var ConcurrentModificationException = _ConcurrentModificationException;
var _ConfigurationException = class _ConfigurationException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConfigurationException",
      $fault: "client",
      ...opts
    });
    this.name = "ConfigurationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConfigurationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConfigurationException, "ConfigurationException");
var ConfigurationException = _ConfigurationException;
var DetailType = {
  BASIC: "BASIC",
  FULL: "FULL"
};
var NotificationRuleStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var _LimitExceededException = class _LimitExceededException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var _ValidationException = class _ValidationException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var TargetStatus = {
  ACTIVE: "ACTIVE",
  DEACTIVATED: "DEACTIVATED",
  INACTIVE: "INACTIVE",
  PENDING: "PENDING",
  UNREACHABLE: "UNREACHABLE"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _InvalidNextTokenException = class _InvalidNextTokenException extends CodestarNotificationsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidNextTokenException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidNextTokenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidNextTokenException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidNextTokenException, "InvalidNextTokenException");
var InvalidNextTokenException = _InvalidNextTokenException;
var ListEventTypesFilterName = {
  RESOURCE_TYPE: "RESOURCE_TYPE",
  SERVICE_NAME: "SERVICE_NAME"
};
var ListNotificationRulesFilterName = {
  CREATED_BY: "CREATED_BY",
  EVENT_TYPE_ID: "EVENT_TYPE_ID",
  RESOURCE: "RESOURCE",
  TARGET_ADDRESS: "TARGET_ADDRESS"
};
var ListTargetsFilterName = {
  TARGET_ADDRESS: "TARGET_ADDRESS",
  TARGET_STATUS: "TARGET_STATUS",
  TARGET_TYPE: "TARGET_TYPE"
};
var TargetFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TargetAddress && { TargetAddress: import_smithy_client.SENSITIVE_STRING }
}), "TargetFilterSensitiveLog");
var CreateNotificationRuleRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Targets && { Targets: obj.Targets.map((item) => TargetFilterSensitiveLog(item)) }
}), "CreateNotificationRuleRequestFilterSensitiveLog");
var DeleteTargetRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TargetAddress && { TargetAddress: import_smithy_client.SENSITIVE_STRING }
}), "DeleteTargetRequestFilterSensitiveLog");
var TargetSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TargetAddress && { TargetAddress: import_smithy_client.SENSITIVE_STRING }
}), "TargetSummaryFilterSensitiveLog");
var DescribeNotificationRuleResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Targets && { Targets: obj.Targets.map((item) => TargetSummaryFilterSensitiveLog(item)) }
}), "DescribeNotificationRuleResultFilterSensitiveLog");
var ListTargetsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Targets && { Targets: obj.Targets.map((item) => TargetSummaryFilterSensitiveLog(item)) }
}), "ListTargetsResultFilterSensitiveLog");
var SubscribeRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Target && { Target: TargetFilterSensitiveLog(obj.Target) }
}), "SubscribeRequestFilterSensitiveLog");
var UnsubscribeRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TargetAddress && { TargetAddress: import_smithy_client.SENSITIVE_STRING }
}), "UnsubscribeRequestFilterSensitiveLog");
var UpdateNotificationRuleRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Targets && { Targets: obj.Targets.map((item) => TargetFilterSensitiveLog(item)) }
}), "UpdateNotificationRuleRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts


var import_uuid = require("uuid");
var se_CreateNotificationRuleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createNotificationRule");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      DetailType: [],
      EventTypeIds: (_) => (0, import_smithy_client._json)(_),
      Name: [],
      Resource: [],
      Status: [],
      Tags: (_) => (0, import_smithy_client._json)(_),
      Targets: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateNotificationRuleCommand");
var se_DeleteNotificationRuleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteNotificationRule");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteNotificationRuleCommand");
var se_DeleteTargetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteTarget");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ForceUnsubscribeAll: [],
      TargetAddress: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteTargetCommand");
var se_DescribeNotificationRuleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeNotificationRule");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeNotificationRuleCommand");
var se_ListEventTypesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listEventTypes");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListEventTypesCommand");
var se_ListNotificationRulesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listNotificationRules");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListNotificationRulesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listTagsForResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListTargetsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listTargets");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: (_) => (0, import_smithy_client._json)(_),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTargetsCommand");
var se_SubscribeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/subscribe");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: [],
      ClientRequestToken: [],
      Target: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SubscribeCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tagResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UnsubscribeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/unsubscribe");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: [],
      TargetAddress: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UnsubscribeCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/untagResource/{Arn}");
  b.p("Arn", () => input.Arn, "{Arn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateNotificationRuleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateNotificationRule");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Arn: [],
      DetailType: [],
      EventTypeIds: (_) => (0, import_smithy_client._json)(_),
      Name: [],
      Status: [],
      Targets: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateNotificationRuleCommand");
var de_CreateNotificationRuleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateNotificationRuleCommand");
var de_DeleteNotificationRuleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteNotificationRuleCommand");
var de_DeleteTargetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteTargetCommand");
var de_DescribeNotificationRuleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    CreatedBy: import_smithy_client.expectString,
    CreatedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DetailType: import_smithy_client.expectString,
    EventTypes: import_smithy_client._json,
    LastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Resource: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    Targets: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeNotificationRuleCommand");
var de_ListEventTypesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    EventTypes: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListEventTypesCommand");
var de_ListNotificationRulesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    NotificationRules: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListNotificationRulesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListTargetsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Targets: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTargetsCommand");
var de_SubscribeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SubscribeCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_TagResourceCommand");
var de_UnsubscribeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UnsubscribeCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateNotificationRuleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateNotificationRuleCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.codestarnotifications#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConcurrentModificationException":
    case "com.amazonaws.codestarnotifications#ConcurrentModificationException":
      throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
    case "ConfigurationException":
    case "com.amazonaws.codestarnotifications#ConfigurationException":
      throw await de_ConfigurationExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.codestarnotifications#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.codestarnotifications#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.codestarnotifications#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.codestarnotifications#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "InvalidNextTokenException":
    case "com.amazonaws.codestarnotifications#InvalidNextTokenException":
      throw await de_InvalidNextTokenExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(CodestarNotificationsServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConcurrentModificationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConcurrentModificationExceptionRes");
var de_ConfigurationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConfigurationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConfigurationExceptionRes");
var de_InvalidNextTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidNextTokenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidNextTokenExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _TK = "TagKeys";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateNotificationRuleCommand.ts
var _CreateNotificationRuleCommand = class _CreateNotificationRuleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "CreateNotificationRule", {}).n("CodestarNotificationsClient", "CreateNotificationRuleCommand").f(CreateNotificationRuleRequestFilterSensitiveLog, void 0).ser(se_CreateNotificationRuleCommand).de(de_CreateNotificationRuleCommand).build() {
};
__name(_CreateNotificationRuleCommand, "CreateNotificationRuleCommand");
var CreateNotificationRuleCommand = _CreateNotificationRuleCommand;

// src/commands/DeleteNotificationRuleCommand.ts




var _DeleteNotificationRuleCommand = class _DeleteNotificationRuleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "DeleteNotificationRule", {}).n("CodestarNotificationsClient", "DeleteNotificationRuleCommand").f(void 0, void 0).ser(se_DeleteNotificationRuleCommand).de(de_DeleteNotificationRuleCommand).build() {
};
__name(_DeleteNotificationRuleCommand, "DeleteNotificationRuleCommand");
var DeleteNotificationRuleCommand = _DeleteNotificationRuleCommand;

// src/commands/DeleteTargetCommand.ts




var _DeleteTargetCommand = class _DeleteTargetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "DeleteTarget", {}).n("CodestarNotificationsClient", "DeleteTargetCommand").f(DeleteTargetRequestFilterSensitiveLog, void 0).ser(se_DeleteTargetCommand).de(de_DeleteTargetCommand).build() {
};
__name(_DeleteTargetCommand, "DeleteTargetCommand");
var DeleteTargetCommand = _DeleteTargetCommand;

// src/commands/DescribeNotificationRuleCommand.ts




var _DescribeNotificationRuleCommand = class _DescribeNotificationRuleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "DescribeNotificationRule", {}).n("CodestarNotificationsClient", "DescribeNotificationRuleCommand").f(void 0, DescribeNotificationRuleResultFilterSensitiveLog).ser(se_DescribeNotificationRuleCommand).de(de_DescribeNotificationRuleCommand).build() {
};
__name(_DescribeNotificationRuleCommand, "DescribeNotificationRuleCommand");
var DescribeNotificationRuleCommand = _DescribeNotificationRuleCommand;

// src/commands/ListEventTypesCommand.ts




var _ListEventTypesCommand = class _ListEventTypesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "ListEventTypes", {}).n("CodestarNotificationsClient", "ListEventTypesCommand").f(void 0, void 0).ser(se_ListEventTypesCommand).de(de_ListEventTypesCommand).build() {
};
__name(_ListEventTypesCommand, "ListEventTypesCommand");
var ListEventTypesCommand = _ListEventTypesCommand;

// src/commands/ListNotificationRulesCommand.ts




var _ListNotificationRulesCommand = class _ListNotificationRulesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "ListNotificationRules", {}).n("CodestarNotificationsClient", "ListNotificationRulesCommand").f(void 0, void 0).ser(se_ListNotificationRulesCommand).de(de_ListNotificationRulesCommand).build() {
};
__name(_ListNotificationRulesCommand, "ListNotificationRulesCommand");
var ListNotificationRulesCommand = _ListNotificationRulesCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "ListTagsForResource", {}).n("CodestarNotificationsClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListTargetsCommand.ts




var _ListTargetsCommand = class _ListTargetsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "ListTargets", {}).n("CodestarNotificationsClient", "ListTargetsCommand").f(void 0, ListTargetsResultFilterSensitiveLog).ser(se_ListTargetsCommand).de(de_ListTargetsCommand).build() {
};
__name(_ListTargetsCommand, "ListTargetsCommand");
var ListTargetsCommand = _ListTargetsCommand;

// src/commands/SubscribeCommand.ts




var _SubscribeCommand = class _SubscribeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "Subscribe", {}).n("CodestarNotificationsClient", "SubscribeCommand").f(SubscribeRequestFilterSensitiveLog, void 0).ser(se_SubscribeCommand).de(de_SubscribeCommand).build() {
};
__name(_SubscribeCommand, "SubscribeCommand");
var SubscribeCommand = _SubscribeCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "TagResource", {}).n("CodestarNotificationsClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UnsubscribeCommand.ts




var _UnsubscribeCommand = class _UnsubscribeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "Unsubscribe", {}).n("CodestarNotificationsClient", "UnsubscribeCommand").f(UnsubscribeRequestFilterSensitiveLog, void 0).ser(se_UnsubscribeCommand).de(de_UnsubscribeCommand).build() {
};
__name(_UnsubscribeCommand, "UnsubscribeCommand");
var UnsubscribeCommand = _UnsubscribeCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "UntagResource", {}).n("CodestarNotificationsClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateNotificationRuleCommand.ts




var _UpdateNotificationRuleCommand = class _UpdateNotificationRuleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStarNotifications_20191015", "UpdateNotificationRule", {}).n("CodestarNotificationsClient", "UpdateNotificationRuleCommand").f(UpdateNotificationRuleRequestFilterSensitiveLog, void 0).ser(se_UpdateNotificationRuleCommand).de(de_UpdateNotificationRuleCommand).build() {
};
__name(_UpdateNotificationRuleCommand, "UpdateNotificationRuleCommand");
var UpdateNotificationRuleCommand = _UpdateNotificationRuleCommand;

// src/CodestarNotifications.ts
var commands = {
  CreateNotificationRuleCommand,
  DeleteNotificationRuleCommand,
  DeleteTargetCommand,
  DescribeNotificationRuleCommand,
  ListEventTypesCommand,
  ListNotificationRulesCommand,
  ListTagsForResourceCommand,
  ListTargetsCommand,
  SubscribeCommand,
  TagResourceCommand,
  UnsubscribeCommand,
  UntagResourceCommand,
  UpdateNotificationRuleCommand
};
var _CodestarNotifications = class _CodestarNotifications extends CodestarNotificationsClient {
};
__name(_CodestarNotifications, "CodestarNotifications");
var CodestarNotifications = _CodestarNotifications;
(0, import_smithy_client.createAggregatedClient)(commands, CodestarNotifications);

// src/pagination/ListEventTypesPaginator.ts

var paginateListEventTypes = (0, import_core.createPaginator)(CodestarNotificationsClient, ListEventTypesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListNotificationRulesPaginator.ts

var paginateListNotificationRules = (0, import_core.createPaginator)(CodestarNotificationsClient, ListNotificationRulesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTargetsPaginator.ts

var paginateListTargets = (0, import_core.createPaginator)(CodestarNotificationsClient, ListTargetsCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  CodestarNotificationsServiceException,
  __Client,
  CodestarNotificationsClient,
  CodestarNotifications,
  $Command,
  CreateNotificationRuleCommand,
  DeleteNotificationRuleCommand,
  DeleteTargetCommand,
  DescribeNotificationRuleCommand,
  ListEventTypesCommand,
  ListNotificationRulesCommand,
  ListTagsForResourceCommand,
  ListTargetsCommand,
  SubscribeCommand,
  TagResourceCommand,
  UnsubscribeCommand,
  UntagResourceCommand,
  UpdateNotificationRuleCommand,
  paginateListEventTypes,
  paginateListNotificationRules,
  paginateListTargets,
  AccessDeniedException,
  ConcurrentModificationException,
  ConfigurationException,
  DetailType,
  NotificationRuleStatus,
  LimitExceededException,
  ResourceAlreadyExistsException,
  ValidationException,
  TargetStatus,
  ResourceNotFoundException,
  InvalidNextTokenException,
  ListEventTypesFilterName,
  ListNotificationRulesFilterName,
  ListTargetsFilterName,
  TargetFilterSensitiveLog,
  CreateNotificationRuleRequestFilterSensitiveLog,
  DeleteTargetRequestFilterSensitiveLog,
  TargetSummaryFilterSensitiveLog,
  DescribeNotificationRuleResultFilterSensitiveLog,
  ListTargetsResultFilterSensitiveLog,
  SubscribeRequestFilterSensitiveLog,
  UnsubscribeRequestFilterSensitiveLog,
  UpdateNotificationRuleRequestFilterSensitiveLog
});

