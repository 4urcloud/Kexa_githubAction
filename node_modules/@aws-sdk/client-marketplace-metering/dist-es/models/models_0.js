import { MarketplaceMeteringServiceException as __BaseException } from "./MarketplaceMeteringServiceException";
export const UsageRecordResultStatus = {
    CUSTOMER_NOT_SUBSCRIBED: "CustomerNotSubscribed",
    DUPLICATE_RECORD: "DuplicateRecord",
    SUCCESS: "Success",
};
export class DisabledApiException extends __BaseException {
    constructor(opts) {
        super({
            name: "DisabledApiException",
            $fault: "client",
            ...opts,
        });
        this.name = "DisabledApiException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DisabledApiException.prototype);
    }
}
export class InternalServiceErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceErrorException.prototype);
    }
}
export class InvalidCustomerIdentifierException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCustomerIdentifierException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCustomerIdentifierException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCustomerIdentifierException.prototype);
    }
}
export class InvalidProductCodeException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidProductCodeException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidProductCodeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidProductCodeException.prototype);
    }
}
export class InvalidTagException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTagException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagException.prototype);
    }
}
export class InvalidUsageAllocationsException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidUsageAllocationsException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUsageAllocationsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUsageAllocationsException.prototype);
    }
}
export class InvalidUsageDimensionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidUsageDimensionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUsageDimensionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUsageDimensionException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class TimestampOutOfBoundsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TimestampOutOfBoundsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TimestampOutOfBoundsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TimestampOutOfBoundsException.prototype);
    }
}
export class CustomerNotEntitledException extends __BaseException {
    constructor(opts) {
        super({
            name: "CustomerNotEntitledException",
            $fault: "client",
            ...opts,
        });
        this.name = "CustomerNotEntitledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CustomerNotEntitledException.prototype);
    }
}
export class DuplicateRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateRequestException.prototype);
    }
}
export class InvalidEndpointRegionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidEndpointRegionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEndpointRegionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEndpointRegionException.prototype);
    }
}
export class InvalidPublicKeyVersionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPublicKeyVersionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPublicKeyVersionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPublicKeyVersionException.prototype);
    }
}
export class InvalidRegionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRegionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRegionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRegionException.prototype);
    }
}
export class PlatformNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "PlatformNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "PlatformNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PlatformNotSupportedException.prototype);
    }
}
export class ExpiredTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ExpiredTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredTokenException.prototype);
    }
}
export class InvalidTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTokenException.prototype);
    }
}
