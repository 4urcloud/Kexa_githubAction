import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { MarketplaceMeteringServiceException as __BaseException } from "./MarketplaceMeteringServiceException";
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface UsageAllocation {
  AllocatedUsageQuantity: number | undefined;
  Tags?: Tag[];
}
export interface UsageRecord {
  Timestamp: Date | undefined;
  CustomerIdentifier: string | undefined;
  Dimension: string | undefined;
  Quantity?: number;
  UsageAllocations?: UsageAllocation[];
}
export interface BatchMeterUsageRequest {
  UsageRecords: UsageRecord[] | undefined;
  ProductCode: string | undefined;
}
export declare const UsageRecordResultStatus: {
  readonly CUSTOMER_NOT_SUBSCRIBED: "CustomerNotSubscribed";
  readonly DUPLICATE_RECORD: "DuplicateRecord";
  readonly SUCCESS: "Success";
};
export type UsageRecordResultStatus =
  (typeof UsageRecordResultStatus)[keyof typeof UsageRecordResultStatus];
export interface UsageRecordResult {
  UsageRecord?: UsageRecord;
  MeteringRecordId?: string;
  Status?: UsageRecordResultStatus;
}
export interface BatchMeterUsageResult {
  Results?: UsageRecordResult[];
  UnprocessedRecords?: UsageRecord[];
}
export declare class DisabledApiException extends __BaseException {
  readonly name: "DisabledApiException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DisabledApiException, __BaseException>
  );
}
export declare class InternalServiceErrorException extends __BaseException {
  readonly name: "InternalServiceErrorException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>
  );
}
export declare class InvalidCustomerIdentifierException extends __BaseException {
  readonly name: "InvalidCustomerIdentifierException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidCustomerIdentifierException,
      __BaseException
    >
  );
}
export declare class InvalidProductCodeException extends __BaseException {
  readonly name: "InvalidProductCodeException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidProductCodeException, __BaseException>
  );
}
export declare class InvalidTagException extends __BaseException {
  readonly name: "InvalidTagException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidTagException, __BaseException>
  );
}
export declare class InvalidUsageAllocationsException extends __BaseException {
  readonly name: "InvalidUsageAllocationsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidUsageAllocationsException,
      __BaseException
    >
  );
}
export declare class InvalidUsageDimensionException extends __BaseException {
  readonly name: "InvalidUsageDimensionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidUsageDimensionException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class TimestampOutOfBoundsException extends __BaseException {
  readonly name: "TimestampOutOfBoundsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TimestampOutOfBoundsException, __BaseException>
  );
}
export declare class CustomerNotEntitledException extends __BaseException {
  readonly name: "CustomerNotEntitledException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CustomerNotEntitledException, __BaseException>
  );
}
export declare class DuplicateRequestException extends __BaseException {
  readonly name: "DuplicateRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DuplicateRequestException, __BaseException>
  );
}
export declare class InvalidEndpointRegionException extends __BaseException {
  readonly name: "InvalidEndpointRegionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidEndpointRegionException, __BaseException>
  );
}
export interface MeterUsageRequest {
  ProductCode: string | undefined;
  Timestamp: Date | undefined;
  UsageDimension: string | undefined;
  UsageQuantity?: number;
  DryRun?: boolean;
  UsageAllocations?: UsageAllocation[];
}
export interface MeterUsageResult {
  MeteringRecordId?: string;
}
export declare class InvalidPublicKeyVersionException extends __BaseException {
  readonly name: "InvalidPublicKeyVersionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidPublicKeyVersionException,
      __BaseException
    >
  );
}
export declare class InvalidRegionException extends __BaseException {
  readonly name: "InvalidRegionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRegionException, __BaseException>
  );
}
export declare class PlatformNotSupportedException extends __BaseException {
  readonly name: "PlatformNotSupportedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<PlatformNotSupportedException, __BaseException>
  );
}
export interface RegisterUsageRequest {
  ProductCode: string | undefined;
  PublicKeyVersion: number | undefined;
  Nonce?: string;
}
export interface RegisterUsageResult {
  PublicKeyRotationTimestamp?: Date;
  Signature?: string;
}
export declare class ExpiredTokenException extends __BaseException {
  readonly name: "ExpiredTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ExpiredTokenException, __BaseException>
  );
}
export declare class InvalidTokenException extends __BaseException {
  readonly name: "InvalidTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidTokenException, __BaseException>
  );
}
export interface ResolveCustomerRequest {
  RegistrationToken: string | undefined;
}
export interface ResolveCustomerResult {
  CustomerIdentifier?: string;
  ProductCode?: string;
  CustomerAWSAccountId?: string;
}
