import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  BatchMeterUsageCommandInput,
  BatchMeterUsageCommandOutput,
} from "./commands/BatchMeterUsageCommand";
import {
  MeterUsageCommandInput,
  MeterUsageCommandOutput,
} from "./commands/MeterUsageCommand";
import {
  RegisterUsageCommandInput,
  RegisterUsageCommandOutput,
} from "./commands/RegisterUsageCommand";
import {
  ResolveCustomerCommandInput,
  ResolveCustomerCommandOutput,
} from "./commands/ResolveCustomerCommand";
import { MarketplaceMeteringClient } from "./MarketplaceMeteringClient";
export interface MarketplaceMetering {
  batchMeterUsage(
    args: BatchMeterUsageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchMeterUsageCommandOutput>;
  batchMeterUsage(
    args: BatchMeterUsageCommandInput,
    cb: (err: any, data?: BatchMeterUsageCommandOutput) => void
  ): void;
  batchMeterUsage(
    args: BatchMeterUsageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchMeterUsageCommandOutput) => void
  ): void;
  meterUsage(
    args: MeterUsageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<MeterUsageCommandOutput>;
  meterUsage(
    args: MeterUsageCommandInput,
    cb: (err: any, data?: MeterUsageCommandOutput) => void
  ): void;
  meterUsage(
    args: MeterUsageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: MeterUsageCommandOutput) => void
  ): void;
  registerUsage(
    args: RegisterUsageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterUsageCommandOutput>;
  registerUsage(
    args: RegisterUsageCommandInput,
    cb: (err: any, data?: RegisterUsageCommandOutput) => void
  ): void;
  registerUsage(
    args: RegisterUsageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterUsageCommandOutput) => void
  ): void;
  resolveCustomer(
    args: ResolveCustomerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ResolveCustomerCommandOutput>;
  resolveCustomer(
    args: ResolveCustomerCommandInput,
    cb: (err: any, data?: ResolveCustomerCommandOutput) => void
  ): void;
  resolveCustomer(
    args: ResolveCustomerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ResolveCustomerCommandOutput) => void
  ): void;
}
export declare class MarketplaceMetering
  extends MarketplaceMeteringClient
  implements MarketplaceMetering {}
