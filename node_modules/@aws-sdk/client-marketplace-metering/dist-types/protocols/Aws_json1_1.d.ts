import { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from "@smithy/protocol-http";
import { SerdeContext as __SerdeContext } from "@smithy/types";
import { BatchMeterUsageCommandInput, BatchMeterUsageCommandOutput } from "../commands/BatchMeterUsageCommand";
import { MeterUsageCommandInput, MeterUsageCommandOutput } from "../commands/MeterUsageCommand";
import { RegisterUsageCommandInput, RegisterUsageCommandOutput } from "../commands/RegisterUsageCommand";
import { ResolveCustomerCommandInput, ResolveCustomerCommandOutput } from "../commands/ResolveCustomerCommand";
/**
 * serializeAws_json1_1BatchMeterUsageCommand
 */
export declare const se_BatchMeterUsageCommand: (input: BatchMeterUsageCommandInput, context: __SerdeContext) => Promise<__HttpRequest>;
/**
 * serializeAws_json1_1MeterUsageCommand
 */
export declare const se_MeterUsageCommand: (input: MeterUsageCommandInput, context: __SerdeContext) => Promise<__HttpRequest>;
/**
 * serializeAws_json1_1RegisterUsageCommand
 */
export declare const se_RegisterUsageCommand: (input: RegisterUsageCommandInput, context: __SerdeContext) => Promise<__HttpRequest>;
/**
 * serializeAws_json1_1ResolveCustomerCommand
 */
export declare const se_ResolveCustomerCommand: (input: ResolveCustomerCommandInput, context: __SerdeContext) => Promise<__HttpRequest>;
/**
 * deserializeAws_json1_1BatchMeterUsageCommand
 */
export declare const de_BatchMeterUsageCommand: (output: __HttpResponse, context: __SerdeContext) => Promise<BatchMeterUsageCommandOutput>;
/**
 * deserializeAws_json1_1MeterUsageCommand
 */
export declare const de_MeterUsageCommand: (output: __HttpResponse, context: __SerdeContext) => Promise<MeterUsageCommandOutput>;
/**
 * deserializeAws_json1_1RegisterUsageCommand
 */
export declare const de_RegisterUsageCommand: (output: __HttpResponse, context: __SerdeContext) => Promise<RegisterUsageCommandOutput>;
/**
 * deserializeAws_json1_1ResolveCustomerCommand
 */
export declare const de_ResolveCustomerCommand: (output: __HttpResponse, context: __SerdeContext) => Promise<ResolveCustomerCommandOutput>;
