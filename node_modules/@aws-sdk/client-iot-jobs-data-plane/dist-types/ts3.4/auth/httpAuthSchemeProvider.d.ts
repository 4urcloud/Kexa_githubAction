import {
  AwsSdkSigV4AuthInputConfig,
  AwsSdkSigV4AuthResolvedConfig,
  AwsSdkSigV4PreviouslyResolved,
} from "@aws-sdk/core";
import {
  HandlerExecutionContext,
  HttpAuthScheme,
  HttpAuthSchemeParameters,
  HttpAuthSchemeParametersProvider,
  HttpAuthSchemeProvider,
} from "@smithy/types";
import { IoTJobsDataPlaneClientResolvedConfig } from "../IoTJobsDataPlaneClient";
export interface IoTJobsDataPlaneHttpAuthSchemeParameters
  extends HttpAuthSchemeParameters {
  region?: string;
}
export interface IoTJobsDataPlaneHttpAuthSchemeParametersProvider
  extends HttpAuthSchemeParametersProvider<
    IoTJobsDataPlaneClientResolvedConfig,
    HandlerExecutionContext,
    IoTJobsDataPlaneHttpAuthSchemeParameters,
    object
  > {}
export declare const defaultIoTJobsDataPlaneHttpAuthSchemeParametersProvider: (
  config: IoTJobsDataPlaneClientResolvedConfig,
  context: HandlerExecutionContext,
  input: object
) => Promise<IoTJobsDataPlaneHttpAuthSchemeParameters>;
export interface IoTJobsDataPlaneHttpAuthSchemeProvider
  extends HttpAuthSchemeProvider<IoTJobsDataPlaneHttpAuthSchemeParameters> {}
export declare const defaultIoTJobsDataPlaneHttpAuthSchemeProvider: IoTJobsDataPlaneHttpAuthSchemeProvider;
export interface HttpAuthSchemeInputConfig extends AwsSdkSigV4AuthInputConfig {
  httpAuthSchemes?: HttpAuthScheme[];
  httpAuthSchemeProvider?: IoTJobsDataPlaneHttpAuthSchemeProvider;
}
export interface HttpAuthSchemeResolvedConfig
  extends AwsSdkSigV4AuthResolvedConfig {
  readonly httpAuthSchemes: HttpAuthScheme[];
  readonly httpAuthSchemeProvider: IoTJobsDataPlaneHttpAuthSchemeProvider;
}
export declare const resolveHttpAuthSchemeConfig: <T>(
  config: T & HttpAuthSchemeInputConfig & AwsSdkSigV4PreviouslyResolved
) => T & HttpAuthSchemeResolvedConfig;
