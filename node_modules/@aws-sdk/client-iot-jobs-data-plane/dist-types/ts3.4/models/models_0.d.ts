import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { IoTJobsDataPlaneServiceException as __BaseException } from "./IoTJobsDataPlaneServiceException";
export declare class CertificateValidationException extends __BaseException {
  readonly name: "CertificateValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CertificateValidationException, __BaseException>
  );
}
export interface DescribeJobExecutionRequest {
  jobId: string | undefined;
  thingName: string | undefined;
  includeJobDocument?: boolean;
  executionNumber?: number;
}
export declare const JobExecutionStatus: {
  readonly CANCELED: "CANCELED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED: "QUEUED";
  readonly REJECTED: "REJECTED";
  readonly REMOVED: "REMOVED";
  readonly SUCCEEDED: "SUCCEEDED";
  readonly TIMED_OUT: "TIMED_OUT";
};
export type JobExecutionStatus =
  (typeof JobExecutionStatus)[keyof typeof JobExecutionStatus];
export interface JobExecution {
  jobId?: string;
  thingName?: string;
  status?: JobExecutionStatus;
  statusDetails?: Record<string, string>;
  queuedAt?: number;
  startedAt?: number;
  lastUpdatedAt?: number;
  approximateSecondsBeforeTimedOut?: number;
  versionNumber?: number;
  executionNumber?: number;
  jobDocument?: string;
}
export interface DescribeJobExecutionResponse {
  execution?: JobExecution;
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class TerminalStateException extends __BaseException {
  readonly name: "TerminalStateException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TerminalStateException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  payload?: Uint8Array;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface GetPendingJobExecutionsRequest {
  thingName: string | undefined;
}
export interface JobExecutionSummary {
  jobId?: string;
  queuedAt?: number;
  startedAt?: number;
  lastUpdatedAt?: number;
  versionNumber?: number;
  executionNumber?: number;
}
export interface GetPendingJobExecutionsResponse {
  inProgressJobs?: JobExecutionSummary[];
  queuedJobs?: JobExecutionSummary[];
}
export declare class InvalidStateTransitionException extends __BaseException {
  readonly name: "InvalidStateTransitionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidStateTransitionException,
      __BaseException
    >
  );
}
export interface StartNextPendingJobExecutionRequest {
  thingName: string | undefined;
  statusDetails?: Record<string, string>;
  stepTimeoutInMinutes?: number;
}
export interface StartNextPendingJobExecutionResponse {
  execution?: JobExecution;
}
export interface UpdateJobExecutionRequest {
  jobId: string | undefined;
  thingName: string | undefined;
  status: JobExecutionStatus | undefined;
  statusDetails?: Record<string, string>;
  stepTimeoutInMinutes?: number;
  expectedVersion?: number;
  includeJobExecutionState?: boolean;
  includeJobDocument?: boolean;
  executionNumber?: number;
}
export interface JobExecutionState {
  status?: JobExecutionStatus;
  statusDetails?: Record<string, string>;
  versionNumber?: number;
}
export interface UpdateJobExecutionResponse {
  executionState?: JobExecutionState;
  jobDocument?: string;
}
