import { IoTJobsDataPlaneServiceException as __BaseException } from "./IoTJobsDataPlaneServiceException";
export class CertificateValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "CertificateValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateValidationException.prototype);
    }
}
export const JobExecutionStatus = {
    CANCELED: "CANCELED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    QUEUED: "QUEUED",
    REJECTED: "REJECTED",
    REMOVED: "REMOVED",
    SUCCEEDED: "SUCCEEDED",
    TIMED_OUT: "TIMED_OUT",
};
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
export class TerminalStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "TerminalStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "TerminalStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TerminalStateException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.payload = opts.payload;
    }
}
export class InvalidStateTransitionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidStateTransitionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStateTransitionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStateTransitionException.prototype);
    }
}
