import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { CloudControlServiceException as __BaseException } from "./CloudControlServiceException";
export declare class AlreadyExistsException extends __BaseException {
  readonly name: "AlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>
  );
}
export interface CancelResourceRequestInput {
  RequestToken: string | undefined;
}
export declare const HandlerErrorCode: {
  readonly ACCESS_DENIED: "AccessDenied";
  readonly ALREADY_EXISTS: "AlreadyExists";
  readonly GENERAL_SERVICE_EXCEPTION: "GeneralServiceException";
  readonly INTERNAL_FAILURE: "InternalFailure";
  readonly INVALID_CREDENTIALS: "InvalidCredentials";
  readonly INVALID_REQUEST: "InvalidRequest";
  readonly NETWORK_FAILURE: "NetworkFailure";
  readonly NOT_FOUND: "NotFound";
  readonly NOT_STABILIZED: "NotStabilized";
  readonly NOT_UPDATABLE: "NotUpdatable";
  readonly RESOURCE_CONFLICT: "ResourceConflict";
  readonly SERVICE_INTERNAL_ERROR: "ServiceInternalError";
  readonly SERVICE_LIMIT_EXCEEDED: "ServiceLimitExceeded";
  readonly SERVICE_TIMEOUT: "ServiceTimeout";
  readonly THROTTLING: "Throttling";
};
export type HandlerErrorCode =
  (typeof HandlerErrorCode)[keyof typeof HandlerErrorCode];
export declare const Operation: {
  readonly CREATE: "CREATE";
  readonly DELETE: "DELETE";
  readonly UPDATE: "UPDATE";
};
export type Operation = (typeof Operation)[keyof typeof Operation];
export declare const OperationStatus: {
  readonly CANCEL_COMPLETE: "CANCEL_COMPLETE";
  readonly CANCEL_IN_PROGRESS: "CANCEL_IN_PROGRESS";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
  readonly SUCCESS: "SUCCESS";
};
export type OperationStatus =
  (typeof OperationStatus)[keyof typeof OperationStatus];
export interface ProgressEvent {
  TypeName?: string;
  Identifier?: string;
  RequestToken?: string;
  Operation?: Operation;
  OperationStatus?: OperationStatus;
  EventTime?: Date;
  ResourceModel?: string;
  StatusMessage?: string;
  ErrorCode?: HandlerErrorCode;
  RetryAfter?: Date;
}
export interface CancelResourceRequestOutput {
  ProgressEvent?: ProgressEvent;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class RequestTokenNotFoundException extends __BaseException {
  readonly name: "RequestTokenNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<RequestTokenNotFoundException, __BaseException>
  );
}
export declare class ClientTokenConflictException extends __BaseException {
  readonly name: "ClientTokenConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ClientTokenConflictException, __BaseException>
  );
}
export declare class ConcurrentOperationException extends __BaseException {
  readonly name: "ConcurrentOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ConcurrentOperationException, __BaseException>
  );
}
export interface CreateResourceInput {
  TypeName: string | undefined;
  TypeVersionId?: string;
  RoleArn?: string;
  ClientToken?: string;
  DesiredState: string | undefined;
}
export interface CreateResourceOutput {
  ProgressEvent?: ProgressEvent;
}
export declare class GeneralServiceException extends __BaseException {
  readonly name: "GeneralServiceException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<GeneralServiceException, __BaseException>
  );
}
export declare class HandlerFailureException extends __BaseException {
  readonly name: "HandlerFailureException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<HandlerFailureException, __BaseException>
  );
}
export declare class HandlerInternalFailureException extends __BaseException {
  readonly name: "HandlerInternalFailureException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      HandlerInternalFailureException,
      __BaseException
    >
  );
}
export declare class InvalidCredentialsException extends __BaseException {
  readonly name: "InvalidCredentialsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidCredentialsException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class NetworkFailureException extends __BaseException {
  readonly name: "NetworkFailureException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<NetworkFailureException, __BaseException>
  );
}
export declare class NotStabilizedException extends __BaseException {
  readonly name: "NotStabilizedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<NotStabilizedException, __BaseException>
  );
}
export declare class NotUpdatableException extends __BaseException {
  readonly name: "NotUpdatableException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<NotUpdatableException, __BaseException>
  );
}
export declare class PrivateTypeException extends __BaseException {
  readonly name: "PrivateTypeException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<PrivateTypeException, __BaseException>
  );
}
export declare class ResourceConflictException extends __BaseException {
  readonly name: "ResourceConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceConflictException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceInternalErrorException extends __BaseException {
  readonly name: "ServiceInternalErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceInternalErrorException, __BaseException>
  );
}
export declare class ServiceLimitExceededException extends __BaseException {
  readonly name: "ServiceLimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceLimitExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class TypeNotFoundException extends __BaseException {
  readonly name: "TypeNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TypeNotFoundException, __BaseException>
  );
}
export declare class UnsupportedActionException extends __BaseException {
  readonly name: "UnsupportedActionException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UnsupportedActionException, __BaseException>
  );
}
export interface DeleteResourceInput {
  TypeName: string | undefined;
  TypeVersionId?: string;
  RoleArn?: string;
  ClientToken?: string;
  Identifier: string | undefined;
}
export interface DeleteResourceOutput {
  ProgressEvent?: ProgressEvent;
}
export interface GetResourceInput {
  TypeName: string | undefined;
  TypeVersionId?: string;
  RoleArn?: string;
  Identifier: string | undefined;
}
export interface ResourceDescription {
  Identifier?: string;
  Properties?: string;
}
export interface GetResourceOutput {
  TypeName?: string;
  ResourceDescription?: ResourceDescription;
}
export interface GetResourceRequestStatusInput {
  RequestToken: string | undefined;
}
export interface GetResourceRequestStatusOutput {
  ProgressEvent?: ProgressEvent;
}
export interface ResourceRequestStatusFilter {
  Operations?: Operation[];
  OperationStatuses?: OperationStatus[];
}
export interface ListResourceRequestsInput {
  MaxResults?: number;
  NextToken?: string;
  ResourceRequestStatusFilter?: ResourceRequestStatusFilter;
}
export interface ListResourceRequestsOutput {
  ResourceRequestStatusSummaries?: ProgressEvent[];
  NextToken?: string;
}
export interface ListResourcesInput {
  TypeName: string | undefined;
  TypeVersionId?: string;
  RoleArn?: string;
  NextToken?: string;
  MaxResults?: number;
  ResourceModel?: string;
}
export interface ListResourcesOutput {
  TypeName?: string;
  ResourceDescriptions?: ResourceDescription[];
  NextToken?: string;
}
export interface UpdateResourceInput {
  TypeName: string | undefined;
  TypeVersionId?: string;
  RoleArn?: string;
  ClientToken?: string;
  Identifier: string | undefined;
  PatchDocument: string | undefined;
}
export interface UpdateResourceOutput {
  ProgressEvent?: ProgressEvent;
}
export declare const ProgressEventFilterSensitiveLog: (
  obj: ProgressEvent
) => any;
export declare const CancelResourceRequestOutputFilterSensitiveLog: (
  obj: CancelResourceRequestOutput
) => any;
export declare const CreateResourceInputFilterSensitiveLog: (
  obj: CreateResourceInput
) => any;
export declare const CreateResourceOutputFilterSensitiveLog: (
  obj: CreateResourceOutput
) => any;
export declare const DeleteResourceOutputFilterSensitiveLog: (
  obj: DeleteResourceOutput
) => any;
export declare const ResourceDescriptionFilterSensitiveLog: (
  obj: ResourceDescription
) => any;
export declare const GetResourceOutputFilterSensitiveLog: (
  obj: GetResourceOutput
) => any;
export declare const GetResourceRequestStatusOutputFilterSensitiveLog: (
  obj: GetResourceRequestStatusOutput
) => any;
export declare const ListResourceRequestsOutputFilterSensitiveLog: (
  obj: ListResourceRequestsOutput
) => any;
export declare const ListResourcesInputFilterSensitiveLog: (
  obj: ListResourcesInput
) => any;
export declare const ListResourcesOutputFilterSensitiveLog: (
  obj: ListResourcesOutput
) => any;
export declare const UpdateResourceInputFilterSensitiveLog: (
  obj: UpdateResourceInput
) => any;
export declare const UpdateResourceOutputFilterSensitiveLog: (
  obj: UpdateResourceOutput
) => any;
