import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { CloudControlServiceException as __BaseException } from "./CloudControlServiceException";
export class AlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "AlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "AlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export const HandlerErrorCode = {
    ACCESS_DENIED: "AccessDenied",
    ALREADY_EXISTS: "AlreadyExists",
    GENERAL_SERVICE_EXCEPTION: "GeneralServiceException",
    INTERNAL_FAILURE: "InternalFailure",
    INVALID_CREDENTIALS: "InvalidCredentials",
    INVALID_REQUEST: "InvalidRequest",
    NETWORK_FAILURE: "NetworkFailure",
    NOT_FOUND: "NotFound",
    NOT_STABILIZED: "NotStabilized",
    NOT_UPDATABLE: "NotUpdatable",
    RESOURCE_CONFLICT: "ResourceConflict",
    SERVICE_INTERNAL_ERROR: "ServiceInternalError",
    SERVICE_LIMIT_EXCEEDED: "ServiceLimitExceeded",
    SERVICE_TIMEOUT: "ServiceTimeout",
    THROTTLING: "Throttling",
};
export const Operation = {
    CREATE: "CREATE",
    DELETE: "DELETE",
    UPDATE: "UPDATE",
};
export const OperationStatus = {
    CANCEL_COMPLETE: "CANCEL_COMPLETE",
    CANCEL_IN_PROGRESS: "CANCEL_IN_PROGRESS",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    PENDING: "PENDING",
    SUCCESS: "SUCCESS",
};
export class ConcurrentModificationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "server",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
        this.Message = opts.Message;
    }
}
export class RequestTokenNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "RequestTokenNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestTokenNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestTokenNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ClientTokenConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClientTokenConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClientTokenConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClientTokenConflictException.prototype);
        this.Message = opts.Message;
    }
}
export class ConcurrentOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentOperationException.prototype);
        this.Message = opts.Message;
    }
}
export class GeneralServiceException extends __BaseException {
    constructor(opts) {
        super({
            name: "GeneralServiceException",
            $fault: "client",
            ...opts,
        });
        this.name = "GeneralServiceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, GeneralServiceException.prototype);
        this.Message = opts.Message;
    }
}
export class HandlerFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "HandlerFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "HandlerFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, HandlerFailureException.prototype);
        this.Message = opts.Message;
    }
}
export class HandlerInternalFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "HandlerInternalFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "HandlerInternalFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, HandlerInternalFailureException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidCredentialsException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCredentialsException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCredentialsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCredentialsException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class NetworkFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "NetworkFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "NetworkFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, NetworkFailureException.prototype);
        this.Message = opts.Message;
    }
}
export class NotStabilizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotStabilizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotStabilizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotStabilizedException.prototype);
        this.Message = opts.Message;
    }
}
export class NotUpdatableException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotUpdatableException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotUpdatableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotUpdatableException.prototype);
        this.Message = opts.Message;
    }
}
export class PrivateTypeException extends __BaseException {
    constructor(opts) {
        super({
            name: "PrivateTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "PrivateTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PrivateTypeException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceConflictException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceInternalErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceInternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceInternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceInternalErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export class TypeNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "TypeNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "TypeNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TypeNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class UnsupportedActionException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedActionException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedActionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedActionException.prototype);
        this.Message = opts.Message;
    }
}
export const ProgressEventFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceModel && { ResourceModel: SENSITIVE_STRING }),
});
export const CancelResourceRequestOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ProgressEvent && { ProgressEvent: ProgressEventFilterSensitiveLog(obj.ProgressEvent) }),
});
export const CreateResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DesiredState && { DesiredState: SENSITIVE_STRING }),
});
export const CreateResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ProgressEvent && { ProgressEvent: ProgressEventFilterSensitiveLog(obj.ProgressEvent) }),
});
export const DeleteResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ProgressEvent && { ProgressEvent: ProgressEventFilterSensitiveLog(obj.ProgressEvent) }),
});
export const ResourceDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Properties && { Properties: SENSITIVE_STRING }),
});
export const GetResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceDescription && {
        ResourceDescription: ResourceDescriptionFilterSensitiveLog(obj.ResourceDescription),
    }),
});
export const GetResourceRequestStatusOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ProgressEvent && { ProgressEvent: ProgressEventFilterSensitiveLog(obj.ProgressEvent) }),
});
export const ListResourceRequestsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceRequestStatusSummaries && {
        ResourceRequestStatusSummaries: obj.ResourceRequestStatusSummaries.map((item) => ProgressEventFilterSensitiveLog(item)),
    }),
});
export const ListResourcesInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceModel && { ResourceModel: SENSITIVE_STRING }),
});
export const ListResourcesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceDescriptions && {
        ResourceDescriptions: obj.ResourceDescriptions.map((item) => ResourceDescriptionFilterSensitiveLog(item)),
    }),
});
export const UpdateResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PatchDocument && { PatchDocument: SENSITIVE_STRING }),
});
export const UpdateResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ProgressEvent && { ProgressEvent: ProgressEventFilterSensitiveLog(obj.ProgressEvent) }),
});
