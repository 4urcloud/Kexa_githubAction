import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CreateAddressRequest, CreateAddressResult } from "../models/models_0";
import {
  ServiceInputTypes,
  ServiceOutputTypes,
  SnowballClientResolvedConfig,
} from "../SnowballClient";
export { __MetadataBearer, $Command };
export interface CreateAddressCommandInput extends CreateAddressRequest {}
export interface CreateAddressCommandOutput
  extends CreateAddressResult,
    __MetadataBearer {}
declare const CreateAddressCommand_base: {
  new (
    input: CreateAddressCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    CreateAddressCommandInput,
    CreateAddressCommandOutput,
    SnowballClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    __0_0: CreateAddressCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    CreateAddressCommandInput,
    CreateAddressCommandOutput,
    SnowballClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class CreateAddressCommand extends CreateAddressCommand_base {}
