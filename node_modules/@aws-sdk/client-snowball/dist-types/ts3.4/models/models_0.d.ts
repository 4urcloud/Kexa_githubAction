import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { SnowballServiceException as __BaseException } from "./SnowballServiceException";
export declare const AddressType: {
  readonly AWS_SHIP: "AWS_SHIP";
  readonly CUST_PICKUP: "CUST_PICKUP";
};
export type AddressType = (typeof AddressType)[keyof typeof AddressType];
export interface Address {
  AddressId?: string;
  Name?: string;
  Company?: string;
  Street1?: string;
  Street2?: string;
  Street3?: string;
  City?: string;
  StateOrProvince?: string;
  PrefectureOrDistrict?: string;
  Landmark?: string;
  Country?: string;
  PostalCode?: string;
  PhoneNumber?: string;
  IsRestricted?: boolean;
  Type?: AddressType;
}
export interface CancelClusterRequest {
  ClusterId: string | undefined;
}
export interface CancelClusterResult {}
export declare class InvalidJobStateException extends __BaseException {
  readonly name: "InvalidJobStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidJobStateException, __BaseException>
  );
}
export declare class InvalidResourceException extends __BaseException {
  readonly name: "InvalidResourceException";
  readonly $fault: "client";
  Message?: string;
  ResourceType?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidResourceException, __BaseException>
  );
}
export declare class KMSRequestFailedException extends __BaseException {
  readonly name: "KMSRequestFailedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<KMSRequestFailedException, __BaseException>
  );
}
export interface CancelJobRequest {
  JobId: string | undefined;
}
export interface CancelJobResult {}
export interface CreateAddressRequest {
  Address: Address | undefined;
}
export interface CreateAddressResult {
  AddressId?: string;
}
export declare class InvalidAddressException extends __BaseException {
  readonly name: "InvalidAddressException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidAddressException, __BaseException>
  );
}
export declare class UnsupportedAddressException extends __BaseException {
  readonly name: "UnsupportedAddressException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UnsupportedAddressException, __BaseException>
  );
}
export declare const JobType: {
  readonly EXPORT: "EXPORT";
  readonly IMPORT: "IMPORT";
  readonly LOCAL_USE: "LOCAL_USE";
};
export type JobType = (typeof JobType)[keyof typeof JobType];
export declare const JobState: {
  readonly CANCELLED: "Cancelled";
  readonly COMPLETE: "Complete";
  readonly IN_PROGRESS: "InProgress";
  readonly IN_TRANSIT_TO_AWS: "InTransitToAWS";
  readonly IN_TRANSIT_TO_CUSTOMER: "InTransitToCustomer";
  readonly LISTING: "Listing";
  readonly NEW: "New";
  readonly PENDING: "Pending";
  readonly PREPARING_APPLIANCE: "PreparingAppliance";
  readonly PREPARING_SHIPMENT: "PreparingShipment";
  readonly WITH_AWS: "WithAWS";
  readonly WITH_AWS_SORTING_FACILITY: "WithAWSSortingFacility";
  readonly WITH_CUSTOMER: "WithCustomer";
};
export type JobState = (typeof JobState)[keyof typeof JobState];
export interface Notification {
  SnsTopicARN?: string;
  JobStatesToNotify?: JobState[];
  NotifyAll?: boolean;
  DevicePickupSnsTopicARN?: string;
}
export interface EKSOnDeviceServiceConfiguration {
  KubernetesVersion?: string;
  EKSAnywhereVersion?: string;
}
export declare const StorageUnit: {
  readonly TB: "TB";
};
export type StorageUnit = (typeof StorageUnit)[keyof typeof StorageUnit];
export interface NFSOnDeviceServiceConfiguration {
  StorageLimit?: number;
  StorageUnit?: StorageUnit;
}
export interface S3OnDeviceServiceConfiguration {
  StorageLimit?: number;
  StorageUnit?: StorageUnit;
  ServiceSize?: number;
  FaultTolerance?: number;
}
export interface TGWOnDeviceServiceConfiguration {
  StorageLimit?: number;
  StorageUnit?: StorageUnit;
}
export interface OnDeviceServiceConfiguration {
  NFSOnDeviceService?: NFSOnDeviceServiceConfiguration;
  TGWOnDeviceService?: TGWOnDeviceServiceConfiguration;
  EKSOnDeviceService?: EKSOnDeviceServiceConfiguration;
  S3OnDeviceService?: S3OnDeviceServiceConfiguration;
}
export declare const RemoteManagement: {
  readonly INSTALLED_AUTOSTART: "INSTALLED_AUTOSTART";
  readonly INSTALLED_ONLY: "INSTALLED_ONLY";
  readonly NOT_INSTALLED: "NOT_INSTALLED";
};
export type RemoteManagement =
  (typeof RemoteManagement)[keyof typeof RemoteManagement];
export interface Ec2AmiResource {
  AmiId: string | undefined;
  SnowballAmiId?: string;
}
export interface EventTriggerDefinition {
  EventResourceARN?: string;
}
export interface LambdaResource {
  LambdaArn?: string;
  EventTriggers?: EventTriggerDefinition[];
}
export interface KeyRange {
  BeginMarker?: string;
  EndMarker?: string;
}
export declare const DeviceServiceName: {
  readonly NFS_ON_DEVICE_SERVICE: "NFS_ON_DEVICE_SERVICE";
  readonly S3_ON_DEVICE_SERVICE: "S3_ON_DEVICE_SERVICE";
};
export type DeviceServiceName =
  (typeof DeviceServiceName)[keyof typeof DeviceServiceName];
export declare const TransferOption: {
  readonly EXPORT: "EXPORT";
  readonly IMPORT: "IMPORT";
  readonly LOCAL_USE: "LOCAL_USE";
};
export type TransferOption =
  (typeof TransferOption)[keyof typeof TransferOption];
export interface TargetOnDeviceService {
  ServiceName?: DeviceServiceName;
  TransferOption?: TransferOption;
}
export interface S3Resource {
  BucketArn?: string;
  KeyRange?: KeyRange;
  TargetOnDeviceServices?: TargetOnDeviceService[];
}
export interface JobResource {
  S3Resources?: S3Resource[];
  LambdaResources?: LambdaResource[];
  Ec2AmiResources?: Ec2AmiResource[];
}
export declare const ShippingOption: {
  readonly EXPRESS: "EXPRESS";
  readonly NEXT_DAY: "NEXT_DAY";
  readonly SECOND_DAY: "SECOND_DAY";
  readonly STANDARD: "STANDARD";
};
export type ShippingOption =
  (typeof ShippingOption)[keyof typeof ShippingOption];
export declare const SnowballCapacity: {
  readonly NO_PREFERENCE: "NoPreference";
  readonly T100: "T100";
  readonly T13: "T13";
  readonly T14: "T14";
  readonly T240: "T240";
  readonly T32: "T32";
  readonly T42: "T42";
  readonly T50: "T50";
  readonly T8: "T8";
  readonly T80: "T80";
  readonly T98: "T98";
};
export type SnowballCapacity =
  (typeof SnowballCapacity)[keyof typeof SnowballCapacity];
export declare const SnowballType: {
  readonly EDGE: "EDGE";
  readonly EDGE_C: "EDGE_C";
  readonly EDGE_CG: "EDGE_CG";
  readonly EDGE_S: "EDGE_S";
  readonly RACK_5U_C: "RACK_5U_C";
  readonly SNC1_HDD: "SNC1_HDD";
  readonly SNC1_SSD: "SNC1_SSD";
  readonly STANDARD: "STANDARD";
  readonly V3_5C: "V3_5C";
  readonly V3_5S: "V3_5S";
};
export type SnowballType = (typeof SnowballType)[keyof typeof SnowballType];
export interface INDTaxDocuments {
  GSTIN?: string;
}
export interface TaxDocuments {
  IND?: INDTaxDocuments;
}
export interface CreateClusterRequest {
  JobType: JobType | undefined;
  Resources?: JobResource;
  OnDeviceServiceConfiguration?: OnDeviceServiceConfiguration;
  Description?: string;
  AddressId: string | undefined;
  KmsKeyARN?: string;
  RoleARN?: string;
  SnowballType: SnowballType | undefined;
  ShippingOption: ShippingOption | undefined;
  Notification?: Notification;
  ForwardingAddressId?: string;
  TaxDocuments?: TaxDocuments;
  RemoteManagement?: RemoteManagement;
  InitialClusterSize?: number;
  ForceCreateJobs?: boolean;
  LongTermPricingIds?: string[];
  SnowballCapacityPreference?: SnowballCapacity;
}
export interface JobListEntry {
  JobId?: string;
  JobState?: JobState;
  IsMaster?: boolean;
  JobType?: JobType;
  SnowballType?: SnowballType;
  CreationDate?: Date;
  Description?: string;
}
export interface CreateClusterResult {
  ClusterId?: string;
  JobListEntries?: JobListEntry[];
}
export declare class Ec2RequestFailedException extends __BaseException {
  readonly name: "Ec2RequestFailedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<Ec2RequestFailedException, __BaseException>
  );
}
export declare class InvalidInputCombinationException extends __BaseException {
  readonly name: "InvalidInputCombinationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      InvalidInputCombinationException,
      __BaseException
    >
  );
}
export declare class ClusterLimitExceededException extends __BaseException {
  readonly name: "ClusterLimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ClusterLimitExceededException, __BaseException>
  );
}
export interface WirelessConnection {
  IsWifiEnabled?: boolean;
}
export interface SnowconeDeviceConfiguration {
  WirelessConnection?: WirelessConnection;
}
export interface DeviceConfiguration {
  SnowconeDeviceConfiguration?: SnowconeDeviceConfiguration;
}
export declare const ImpactLevel: {
  readonly IL2: "IL2";
  readonly IL4: "IL4";
  readonly IL5: "IL5";
  readonly IL6: "IL6";
  readonly IL99: "IL99";
};
export type ImpactLevel = (typeof ImpactLevel)[keyof typeof ImpactLevel];
export interface PickupDetails {
  Name?: string;
  PhoneNumber?: string;
  Email?: string;
  IdentificationNumber?: string;
  IdentificationExpirationDate?: Date;
  IdentificationIssuingOrg?: string;
  DevicePickupId?: string;
}
export interface CreateJobRequest {
  JobType?: JobType;
  Resources?: JobResource;
  OnDeviceServiceConfiguration?: OnDeviceServiceConfiguration;
  Description?: string;
  AddressId?: string;
  KmsKeyARN?: string;
  RoleARN?: string;
  SnowballCapacityPreference?: SnowballCapacity;
  ShippingOption?: ShippingOption;
  Notification?: Notification;
  ClusterId?: string;
  SnowballType?: SnowballType;
  ForwardingAddressId?: string;
  TaxDocuments?: TaxDocuments;
  DeviceConfiguration?: DeviceConfiguration;
  RemoteManagement?: RemoteManagement;
  LongTermPricingId?: string;
  ImpactLevel?: ImpactLevel;
  PickupDetails?: PickupDetails;
}
export interface CreateJobResult {
  JobId?: string;
}
export declare const LongTermPricingType: {
  readonly ONE_MONTH: "OneMonth";
  readonly ONE_YEAR: "OneYear";
  readonly THREE_YEAR: "ThreeYear";
};
export type LongTermPricingType =
  (typeof LongTermPricingType)[keyof typeof LongTermPricingType];
export interface CreateLongTermPricingRequest {
  LongTermPricingType: LongTermPricingType | undefined;
  IsLongTermPricingAutoRenew?: boolean;
  SnowballType: SnowballType | undefined;
}
export interface CreateLongTermPricingResult {
  LongTermPricingId?: string;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  ConflictResource?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateReturnShippingLabelRequest {
  JobId: string | undefined;
  ShippingOption?: ShippingOption;
}
export declare const ShippingLabelStatus: {
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly SUCCEEDED: "Succeeded";
  readonly TIMED_OUT: "TimedOut";
};
export type ShippingLabelStatus =
  (typeof ShippingLabelStatus)[keyof typeof ShippingLabelStatus];
export interface CreateReturnShippingLabelResult {
  Status?: ShippingLabelStatus;
}
export declare class ReturnShippingLabelAlreadyExistsException extends __BaseException {
  readonly name: "ReturnShippingLabelAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ReturnShippingLabelAlreadyExistsException,
      __BaseException
    >
  );
}
export interface DescribeAddressRequest {
  AddressId: string | undefined;
}
export interface DescribeAddressResult {
  Address?: Address;
}
export interface DescribeAddressesRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeAddressesResult {
  Addresses?: Address[];
  NextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface DescribeClusterRequest {
  ClusterId: string | undefined;
}
export declare const ClusterState: {
  readonly AWAITING_QUORUM: "AwaitingQuorum";
  readonly CANCELLED: "Cancelled";
  readonly COMPLETE: "Complete";
  readonly IN_USE: "InUse";
  readonly PENDING: "Pending";
};
export type ClusterState = (typeof ClusterState)[keyof typeof ClusterState];
export interface ClusterMetadata {
  ClusterId?: string;
  Description?: string;
  KmsKeyARN?: string;
  RoleARN?: string;
  ClusterState?: ClusterState;
  JobType?: JobType;
  SnowballType?: SnowballType;
  CreationDate?: Date;
  Resources?: JobResource;
  AddressId?: string;
  ShippingOption?: ShippingOption;
  Notification?: Notification;
  ForwardingAddressId?: string;
  TaxDocuments?: TaxDocuments;
  OnDeviceServiceConfiguration?: OnDeviceServiceConfiguration;
}
export interface DescribeClusterResult {
  ClusterMetadata?: ClusterMetadata;
}
export interface DescribeJobRequest {
  JobId: string | undefined;
}
export interface DataTransfer {
  BytesTransferred?: number;
  ObjectsTransferred?: number;
  TotalBytes?: number;
  TotalObjects?: number;
}
export interface JobLogs {
  JobCompletionReportURI?: string;
  JobSuccessLogURI?: string;
  JobFailureLogURI?: string;
}
export interface Shipment {
  Status?: string;
  TrackingNumber?: string;
}
export interface ShippingDetails {
  ShippingOption?: ShippingOption;
  InboundShipment?: Shipment;
  OutboundShipment?: Shipment;
}
export interface JobMetadata {
  JobId?: string;
  JobState?: JobState;
  JobType?: JobType;
  SnowballType?: SnowballType;
  CreationDate?: Date;
  Resources?: JobResource;
  Description?: string;
  KmsKeyARN?: string;
  RoleARN?: string;
  AddressId?: string;
  ShippingDetails?: ShippingDetails;
  SnowballCapacityPreference?: SnowballCapacity;
  Notification?: Notification;
  DataTransferProgress?: DataTransfer;
  JobLogInfo?: JobLogs;
  ClusterId?: string;
  ForwardingAddressId?: string;
  TaxDocuments?: TaxDocuments;
  DeviceConfiguration?: DeviceConfiguration;
  RemoteManagement?: RemoteManagement;
  LongTermPricingId?: string;
  OnDeviceServiceConfiguration?: OnDeviceServiceConfiguration;
  ImpactLevel?: ImpactLevel;
  PickupDetails?: PickupDetails;
  SnowballId?: string;
}
export interface DescribeJobResult {
  JobMetadata?: JobMetadata;
  SubJobMetadata?: JobMetadata[];
}
export interface DescribeReturnShippingLabelRequest {
  JobId: string | undefined;
}
export interface DescribeReturnShippingLabelResult {
  Status?: ShippingLabelStatus;
  ExpirationDate?: Date;
  ReturnShippingLabelURI?: string;
}
export interface GetJobManifestRequest {
  JobId: string | undefined;
}
export interface GetJobManifestResult {
  ManifestURI?: string;
}
export interface GetJobUnlockCodeRequest {
  JobId: string | undefined;
}
export interface GetJobUnlockCodeResult {
  UnlockCode?: string;
}
export interface GetSnowballUsageRequest {}
export interface GetSnowballUsageResult {
  SnowballLimit?: number;
  SnowballsInUse?: number;
}
export interface GetSoftwareUpdatesRequest {
  JobId: string | undefined;
}
export interface GetSoftwareUpdatesResult {
  UpdatesURI?: string;
}
export interface ListClusterJobsRequest {
  ClusterId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListClusterJobsResult {
  JobListEntries?: JobListEntry[];
  NextToken?: string;
}
export interface ListClustersRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ClusterListEntry {
  ClusterId?: string;
  ClusterState?: ClusterState;
  CreationDate?: Date;
  Description?: string;
}
export interface ListClustersResult {
  ClusterListEntries?: ClusterListEntry[];
  NextToken?: string;
}
export interface ListCompatibleImagesRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface CompatibleImage {
  AmiId?: string;
  Name?: string;
}
export interface ListCompatibleImagesResult {
  CompatibleImages?: CompatibleImage[];
  NextToken?: string;
}
export interface ListJobsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListJobsResult {
  JobListEntries?: JobListEntry[];
  NextToken?: string;
}
export interface ListLongTermPricingRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface LongTermPricingListEntry {
  LongTermPricingId?: string;
  LongTermPricingEndDate?: Date;
  LongTermPricingStartDate?: Date;
  LongTermPricingType?: LongTermPricingType;
  CurrentActiveJob?: string;
  ReplacementJob?: string;
  IsLongTermPricingAutoRenew?: boolean;
  LongTermPricingStatus?: string;
  SnowballType?: SnowballType;
  JobIds?: string[];
}
export interface ListLongTermPricingResult {
  LongTermPricingEntries?: LongTermPricingListEntry[];
  NextToken?: string;
}
export interface ListPickupLocationsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListPickupLocationsResult {
  Addresses?: Address[];
  NextToken?: string;
}
export declare const ServiceName: {
  readonly EKS_ANYWHERE: "EKS_ANYWHERE";
  readonly KUBERNETES: "KUBERNETES";
};
export type ServiceName = (typeof ServiceName)[keyof typeof ServiceName];
export interface ServiceVersion {
  Version?: string;
}
export interface DependentService {
  ServiceName?: ServiceName;
  ServiceVersion?: ServiceVersion;
}
export interface ListServiceVersionsRequest {
  ServiceName: ServiceName | undefined;
  DependentServices?: DependentService[];
  MaxResults?: number;
  NextToken?: string;
}
export interface ListServiceVersionsResult {
  ServiceVersions: ServiceVersion[] | undefined;
  ServiceName: ServiceName | undefined;
  DependentServices?: DependentService[];
  NextToken?: string;
}
export interface UpdateClusterRequest {
  ClusterId: string | undefined;
  RoleARN?: string;
  Description?: string;
  Resources?: JobResource;
  OnDeviceServiceConfiguration?: OnDeviceServiceConfiguration;
  AddressId?: string;
  ShippingOption?: ShippingOption;
  Notification?: Notification;
  ForwardingAddressId?: string;
}
export interface UpdateClusterResult {}
export interface UpdateJobRequest {
  JobId: string | undefined;
  RoleARN?: string;
  Notification?: Notification;
  Resources?: JobResource;
  OnDeviceServiceConfiguration?: OnDeviceServiceConfiguration;
  AddressId?: string;
  ShippingOption?: ShippingOption;
  Description?: string;
  SnowballCapacityPreference?: SnowballCapacity;
  ForwardingAddressId?: string;
  PickupDetails?: PickupDetails;
}
export interface UpdateJobResult {}
export declare const ShipmentState: {
  readonly RECEIVED: "RECEIVED";
  readonly RETURNED: "RETURNED";
};
export type ShipmentState = (typeof ShipmentState)[keyof typeof ShipmentState];
export interface UpdateJobShipmentStateRequest {
  JobId: string | undefined;
  ShipmentState: ShipmentState | undefined;
}
export interface UpdateJobShipmentStateResult {}
export interface UpdateLongTermPricingRequest {
  LongTermPricingId: string | undefined;
  ReplacementJob?: string;
  IsLongTermPricingAutoRenew?: boolean;
}
export interface UpdateLongTermPricingResult {}
export declare const PickupDetailsFilterSensitiveLog: (
  obj: PickupDetails
) => any;
export declare const CreateJobRequestFilterSensitiveLog: (
  obj: CreateJobRequest
) => any;
export declare const JobMetadataFilterSensitiveLog: (obj: JobMetadata) => any;
export declare const DescribeJobResultFilterSensitiveLog: (
  obj: DescribeJobResult
) => any;
export declare const UpdateJobRequestFilterSensitiveLog: (
  obj: UpdateJobRequest
) => any;
