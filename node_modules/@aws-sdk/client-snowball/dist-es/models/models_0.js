import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { SnowballServiceException as __BaseException } from "./SnowballServiceException";
export const AddressType = {
    AWS_SHIP: "AWS_SHIP",
    CUST_PICKUP: "CUST_PICKUP",
};
export class InvalidJobStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidJobStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidJobStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidJobStateException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidResourceException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidResourceException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidResourceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidResourceException.prototype);
        this.Message = opts.Message;
        this.ResourceType = opts.ResourceType;
    }
}
export class KMSRequestFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSRequestFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSRequestFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSRequestFailedException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidAddressException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidAddressException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAddressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAddressException.prototype);
        this.Message = opts.Message;
    }
}
export class UnsupportedAddressException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedAddressException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedAddressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedAddressException.prototype);
        this.Message = opts.Message;
    }
}
export const JobType = {
    EXPORT: "EXPORT",
    IMPORT: "IMPORT",
    LOCAL_USE: "LOCAL_USE",
};
export const JobState = {
    CANCELLED: "Cancelled",
    COMPLETE: "Complete",
    IN_PROGRESS: "InProgress",
    IN_TRANSIT_TO_AWS: "InTransitToAWS",
    IN_TRANSIT_TO_CUSTOMER: "InTransitToCustomer",
    LISTING: "Listing",
    NEW: "New",
    PENDING: "Pending",
    PREPARING_APPLIANCE: "PreparingAppliance",
    PREPARING_SHIPMENT: "PreparingShipment",
    WITH_AWS: "WithAWS",
    WITH_AWS_SORTING_FACILITY: "WithAWSSortingFacility",
    WITH_CUSTOMER: "WithCustomer",
};
export const StorageUnit = {
    TB: "TB",
};
export const RemoteManagement = {
    INSTALLED_AUTOSTART: "INSTALLED_AUTOSTART",
    INSTALLED_ONLY: "INSTALLED_ONLY",
    NOT_INSTALLED: "NOT_INSTALLED",
};
export const DeviceServiceName = {
    NFS_ON_DEVICE_SERVICE: "NFS_ON_DEVICE_SERVICE",
    S3_ON_DEVICE_SERVICE: "S3_ON_DEVICE_SERVICE",
};
export const TransferOption = {
    EXPORT: "EXPORT",
    IMPORT: "IMPORT",
    LOCAL_USE: "LOCAL_USE",
};
export const ShippingOption = {
    EXPRESS: "EXPRESS",
    NEXT_DAY: "NEXT_DAY",
    SECOND_DAY: "SECOND_DAY",
    STANDARD: "STANDARD",
};
export const SnowballCapacity = {
    NO_PREFERENCE: "NoPreference",
    T100: "T100",
    T13: "T13",
    T14: "T14",
    T240: "T240",
    T32: "T32",
    T42: "T42",
    T50: "T50",
    T8: "T8",
    T80: "T80",
    T98: "T98",
};
export const SnowballType = {
    EDGE: "EDGE",
    EDGE_C: "EDGE_C",
    EDGE_CG: "EDGE_CG",
    EDGE_S: "EDGE_S",
    RACK_5U_C: "RACK_5U_C",
    SNC1_HDD: "SNC1_HDD",
    SNC1_SSD: "SNC1_SSD",
    STANDARD: "STANDARD",
    V3_5C: "V3_5C",
    V3_5S: "V3_5S",
};
export class Ec2RequestFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "Ec2RequestFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "Ec2RequestFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, Ec2RequestFailedException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidInputCombinationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidInputCombinationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidInputCombinationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidInputCombinationException.prototype);
        this.Message = opts.Message;
    }
}
export class ClusterLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const ImpactLevel = {
    IL2: "IL2",
    IL4: "IL4",
    IL5: "IL5",
    IL6: "IL6",
    IL99: "IL99",
};
export const LongTermPricingType = {
    ONE_MONTH: "OneMonth",
    ONE_YEAR: "OneYear",
    THREE_YEAR: "ThreeYear",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.ConflictResource = opts.ConflictResource;
        this.Message = opts.Message;
    }
}
export const ShippingLabelStatus = {
    FAILED: "Failed",
    IN_PROGRESS: "InProgress",
    SUCCEEDED: "Succeeded",
    TIMED_OUT: "TimedOut",
};
export class ReturnShippingLabelAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ReturnShippingLabelAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ReturnShippingLabelAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReturnShippingLabelAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
export const ClusterState = {
    AWAITING_QUORUM: "AwaitingQuorum",
    CANCELLED: "Cancelled",
    COMPLETE: "Complete",
    IN_USE: "InUse",
    PENDING: "Pending",
};
export const ServiceName = {
    EKS_ANYWHERE: "EKS_ANYWHERE",
    KUBERNETES: "KUBERNETES",
};
export const ShipmentState = {
    RECEIVED: "RECEIVED",
    RETURNED: "RETURNED",
};
export const PickupDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PhoneNumber && { PhoneNumber: SENSITIVE_STRING }),
    ...(obj.Email && { Email: SENSITIVE_STRING }),
});
export const CreateJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PickupDetails && { PickupDetails: PickupDetailsFilterSensitiveLog(obj.PickupDetails) }),
});
export const JobMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PickupDetails && { PickupDetails: PickupDetailsFilterSensitiveLog(obj.PickupDetails) }),
});
export const DescribeJobResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.JobMetadata && { JobMetadata: JobMetadataFilterSensitiveLog(obj.JobMetadata) }),
    ...(obj.SubJobMetadata && { SubJobMetadata: obj.SubJobMetadata.map((item) => JobMetadataFilterSensitiveLog(item)) }),
});
export const UpdateJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PickupDetails && { PickupDetails: PickupDetailsFilterSensitiveLog(obj.PickupDetails) }),
});
