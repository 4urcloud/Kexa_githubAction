"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  BatchLoadDataFormat: () => BatchLoadDataFormat,
  BatchLoadStatus: () => BatchLoadStatus,
  ConflictException: () => ConflictException,
  CreateBatchLoadTaskCommand: () => CreateBatchLoadTaskCommand,
  CreateBatchLoadTaskRequestFilterSensitiveLog: () => CreateBatchLoadTaskRequestFilterSensitiveLog,
  CreateDatabaseCommand: () => CreateDatabaseCommand,
  CreateTableCommand: () => CreateTableCommand,
  DeleteDatabaseCommand: () => DeleteDatabaseCommand,
  DeleteTableCommand: () => DeleteTableCommand,
  DescribeBatchLoadTaskCommand: () => DescribeBatchLoadTaskCommand,
  DescribeDatabaseCommand: () => DescribeDatabaseCommand,
  DescribeEndpointsCommand: () => DescribeEndpointsCommand,
  DescribeTableCommand: () => DescribeTableCommand,
  DimensionValueType: () => DimensionValueType,
  InternalServerException: () => InternalServerException,
  InvalidEndpointException: () => InvalidEndpointException,
  ListBatchLoadTasksCommand: () => ListBatchLoadTasksCommand,
  ListDatabasesCommand: () => ListDatabasesCommand,
  ListTablesCommand: () => ListTablesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  MeasureValueType: () => MeasureValueType,
  PartitionKeyEnforcementLevel: () => PartitionKeyEnforcementLevel,
  PartitionKeyType: () => PartitionKeyType,
  RejectedRecordsException: () => RejectedRecordsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResumeBatchLoadTaskCommand: () => ResumeBatchLoadTaskCommand,
  S3EncryptionOption: () => S3EncryptionOption,
  ScalarMeasureValueType: () => ScalarMeasureValueType,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  TableStatus: () => TableStatus,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  TimeUnit: () => TimeUnit,
  TimestreamWrite: () => TimestreamWrite,
  TimestreamWriteClient: () => TimestreamWriteClient,
  TimestreamWriteServiceException: () => TimestreamWriteServiceException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateDatabaseCommand: () => UpdateDatabaseCommand,
  UpdateTableCommand: () => UpdateTableCommand,
  ValidationException: () => ValidationException,
  WriteRecordsCommand: () => WriteRecordsCommand,
  __Client: () => import_smithy_client.Client,
  paginateListBatchLoadTasks: () => paginateListBatchLoadTasks,
  paginateListDatabases: () => paginateListDatabases,
  paginateListTables: () => paginateListTables
});
module.exports = __toCommonJS(src_exports);

// src/TimestreamWriteClient.ts
var import_middleware_endpoint_discovery = require("@aws-sdk/middleware-endpoint-discovery");
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core2 = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");

var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/commands/DescribeEndpointsCommand.ts
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "timestream"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/protocols/Aws_json1_0.ts
var import_core = require("@aws-sdk/core");
var import_protocol_http = require("@smithy/protocol-http");

var import_uuid = require("uuid");

// src/models/models_0.ts


// src/models/TimestreamWriteServiceException.ts
var import_smithy_client = require("@smithy/smithy-client");
var _TimestreamWriteServiceException = class _TimestreamWriteServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _TimestreamWriteServiceException.prototype);
  }
};
__name(_TimestreamWriteServiceException, "TimestreamWriteServiceException");
var TimestreamWriteServiceException = _TimestreamWriteServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var BatchLoadDataFormat = {
  CSV: "CSV"
};
var BatchLoadStatus = {
  CREATED: "CREATED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING_RESUME: "PENDING_RESUME",
  PROGRESS_STOPPED: "PROGRESS_STOPPED",
  SUCCEEDED: "SUCCEEDED"
};
var MeasureValueType = {
  BIGINT: "BIGINT",
  BOOLEAN: "BOOLEAN",
  DOUBLE: "DOUBLE",
  MULTI: "MULTI",
  TIMESTAMP: "TIMESTAMP",
  VARCHAR: "VARCHAR"
};
var ScalarMeasureValueType = {
  BIGINT: "BIGINT",
  BOOLEAN: "BOOLEAN",
  DOUBLE: "DOUBLE",
  TIMESTAMP: "TIMESTAMP",
  VARCHAR: "VARCHAR"
};
var TimeUnit = {
  MICROSECONDS: "MICROSECONDS",
  MILLISECONDS: "MILLISECONDS",
  NANOSECONDS: "NANOSECONDS",
  SECONDS: "SECONDS"
};
var S3EncryptionOption = {
  SSE_KMS: "SSE_KMS",
  SSE_S3: "SSE_S3"
};
var _ConflictException = class _ConflictException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _InvalidEndpointException = class _InvalidEndpointException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidEndpointException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidEndpointException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidEndpointException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidEndpointException, "InvalidEndpointException");
var InvalidEndpointException = _InvalidEndpointException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var PartitionKeyEnforcementLevel = {
  OPTIONAL: "OPTIONAL",
  REQUIRED: "REQUIRED"
};
var PartitionKeyType = {
  DIMENSION: "DIMENSION",
  MEASURE: "MEASURE"
};
var TableStatus = {
  ACTIVE: "ACTIVE",
  DELETING: "DELETING",
  RESTORING: "RESTORING"
};
var DimensionValueType = {
  VARCHAR: "VARCHAR"
};
var _RejectedRecordsException = class _RejectedRecordsException extends TimestreamWriteServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RejectedRecordsException",
      $fault: "client",
      ...opts
    });
    this.name = "RejectedRecordsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _RejectedRecordsException.prototype);
    this.Message = opts.Message;
    this.RejectedRecords = opts.RejectedRecords;
  }
};
__name(_RejectedRecordsException, "RejectedRecordsException");
var RejectedRecordsException = _RejectedRecordsException;
var CreateBatchLoadTaskRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ClientToken && { ClientToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateBatchLoadTaskRequestFilterSensitiveLog");

// src/protocols/Aws_json1_0.ts
var se_CreateBatchLoadTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateBatchLoadTask");
  let body;
  body = JSON.stringify(se_CreateBatchLoadTaskRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateBatchLoadTaskCommand");
var se_CreateDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDatabaseCommand");
var se_CreateTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateTableCommand");
var se_DeleteDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDatabaseCommand");
var se_DeleteTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteTableCommand");
var se_DescribeBatchLoadTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeBatchLoadTask");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeBatchLoadTaskCommand");
var se_DescribeDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDatabaseCommand");
var se_DescribeEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeEndpoints");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEndpointsCommand");
var se_DescribeTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeTableCommand");
var se_ListBatchLoadTasksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListBatchLoadTasks");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListBatchLoadTasksCommand");
var se_ListDatabasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListDatabases");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListDatabasesCommand");
var se_ListTablesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTables");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTablesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_ResumeBatchLoadTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ResumeBatchLoadTask");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResumeBatchLoadTaskCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateDatabaseCommand");
var se_UpdateTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateTableCommand");
var se_WriteRecordsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("WriteRecords");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_WriteRecordsCommand");
var de_CreateBatchLoadTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateBatchLoadTaskCommand");
var de_CreateDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_CreateDatabaseResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDatabaseCommand");
var de_CreateTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_CreateTableResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateTableCommand");
var de_DeleteDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteDatabaseCommand");
var de_DeleteTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteTableCommand");
var de_DescribeBatchLoadTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeBatchLoadTaskResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeBatchLoadTaskCommand");
var de_DescribeDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeDatabaseResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDatabaseCommand");
var de_DescribeEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEndpointsCommand");
var de_DescribeTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeTableResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeTableCommand");
var de_ListBatchLoadTasksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListBatchLoadTasksResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListBatchLoadTasksCommand");
var de_ListDatabasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListDatabasesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListDatabasesCommand");
var de_ListTablesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListTablesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTablesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_ResumeBatchLoadTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResumeBatchLoadTaskCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_UpdateDatabaseResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateDatabaseCommand");
var de_UpdateTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_UpdateTableResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateTableCommand");
var de_WriteRecordsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_WriteRecordsCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.timestreamwrite#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.timestreamwrite#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.timestreamwrite#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "InvalidEndpointException":
    case "com.amazonaws.timestreamwrite#InvalidEndpointException":
      throw await de_InvalidEndpointExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.timestreamwrite#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.timestreamwrite#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.timestreamwrite#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.timestreamwrite#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "RejectedRecordsException":
    case "com.amazonaws.timestreamwrite#RejectedRecordsException":
      throw await de_RejectedRecordsExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_InvalidEndpointExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidEndpointException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidEndpointExceptionRes");
var de_RejectedRecordsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new RejectedRecordsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_RejectedRecordsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_CreateBatchLoadTaskRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataModelConfiguration: import_smithy_client._json,
    DataSourceConfiguration: import_smithy_client._json,
    RecordVersion: [],
    ReportConfiguration: import_smithy_client._json,
    TargetDatabaseName: [],
    TargetTableName: []
  });
}, "se_CreateBatchLoadTaskRequest");
var de_BatchLoadTask = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatabaseName: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ResumableUntil: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TableName: import_smithy_client.expectString,
    TaskId: import_smithy_client.expectString,
    TaskStatus: import_smithy_client.expectString
  });
}, "de_BatchLoadTask");
var de_BatchLoadTaskDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataModelConfiguration: import_smithy_client._json,
    DataSourceConfiguration: import_smithy_client._json,
    ErrorMessage: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ProgressReport: import_smithy_client._json,
    RecordVersion: import_smithy_client.expectLong,
    ReportConfiguration: import_smithy_client._json,
    ResumableUntil: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TargetDatabaseName: import_smithy_client.expectString,
    TargetTableName: import_smithy_client.expectString,
    TaskId: import_smithy_client.expectString,
    TaskStatus: import_smithy_client.expectString
  });
}, "de_BatchLoadTaskDescription");
var de_BatchLoadTaskList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_BatchLoadTask(entry, context);
  });
  return retVal;
}, "de_BatchLoadTaskList");
var de_CreateDatabaseResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Database: (_) => de_Database(_, context)
  });
}, "de_CreateDatabaseResponse");
var de_CreateTableResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Table: (_) => de_Table(_, context)
  });
}, "de_CreateTableResponse");
var de_Database = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatabaseName: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    TableCount: import_smithy_client.expectLong
  });
}, "de_Database");
var de_DatabaseList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Database(entry, context);
  });
  return retVal;
}, "de_DatabaseList");
var de_DescribeBatchLoadTaskResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BatchLoadTaskDescription: (_) => de_BatchLoadTaskDescription(_, context)
  });
}, "de_DescribeBatchLoadTaskResponse");
var de_DescribeDatabaseResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Database: (_) => de_Database(_, context)
  });
}, "de_DescribeDatabaseResponse");
var de_DescribeTableResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Table: (_) => de_Table(_, context)
  });
}, "de_DescribeTableResponse");
var de_ListBatchLoadTasksResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BatchLoadTasks: (_) => de_BatchLoadTaskList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListBatchLoadTasksResponse");
var de_ListDatabasesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Databases: (_) => de_DatabaseList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListDatabasesResponse");
var de_ListTablesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Tables: (_) => de_TableList(_, context)
  });
}, "de_ListTablesResponse");
var de_Table = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DatabaseName: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    MagneticStoreWriteProperties: import_smithy_client._json,
    RetentionProperties: import_smithy_client._json,
    Schema: import_smithy_client._json,
    TableName: import_smithy_client.expectString,
    TableStatus: import_smithy_client.expectString
  });
}, "de_Table");
var de_TableList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Table(entry, context);
  });
  return retVal;
}, "de_TableList");
var de_UpdateDatabaseResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Database: (_) => de_Database(_, context)
  });
}, "de_UpdateDatabaseResponse");
var de_UpdateTableResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Table: (_) => de_Table(_, context)
  });
}, "de_UpdateTableResponse");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(TimestreamWriteServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.0",
    "x-amz-target": `Timestream_20181101.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/DescribeEndpointsCommand.ts
var _DescribeEndpointsCommand = class _DescribeEndpointsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Timestream_20181101", "DescribeEndpoints", {}).n("TimestreamWriteClient", "DescribeEndpointsCommand").f(void 0, void 0).ser(se_DescribeEndpointsCommand).de(de_DescribeEndpointsCommand).build() {
};
__name(_DescribeEndpointsCommand, "DescribeEndpointsCommand");
var DescribeEndpointsCommand = _DescribeEndpointsCommand;

// src/TimestreamWriteClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");



// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/TimestreamWriteClient.ts
var _TimestreamWriteClient = class _TimestreamWriteClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = (0, import_middleware_endpoint_discovery.resolveEndpointDiscoveryConfig)(_config_7, {
      endpointDiscoveryCommandCtor: DescribeEndpointsCommand
    });
    const _config_9 = resolveRuntimeExtensions(_config_8, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_9);
    this.config = _config_9;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core2.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core2.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultTimestreamWriteHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core2.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_TimestreamWriteClient, "TimestreamWriteClient");
var TimestreamWriteClient = _TimestreamWriteClient;

// src/TimestreamWrite.ts


// src/commands/CreateBatchLoadTaskCommand.ts





var _CreateBatchLoadTaskCommand = class _CreateBatchLoadTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "CreateBatchLoadTask", {}).n("TimestreamWriteClient", "CreateBatchLoadTaskCommand").f(CreateBatchLoadTaskRequestFilterSensitiveLog, void 0).ser(se_CreateBatchLoadTaskCommand).de(de_CreateBatchLoadTaskCommand).build() {
};
__name(_CreateBatchLoadTaskCommand, "CreateBatchLoadTaskCommand");
var CreateBatchLoadTaskCommand = _CreateBatchLoadTaskCommand;

// src/commands/CreateDatabaseCommand.ts





var _CreateDatabaseCommand = class _CreateDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "CreateDatabase", {}).n("TimestreamWriteClient", "CreateDatabaseCommand").f(void 0, void 0).ser(se_CreateDatabaseCommand).de(de_CreateDatabaseCommand).build() {
};
__name(_CreateDatabaseCommand, "CreateDatabaseCommand");
var CreateDatabaseCommand = _CreateDatabaseCommand;

// src/commands/CreateTableCommand.ts





var _CreateTableCommand = class _CreateTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "CreateTable", {}).n("TimestreamWriteClient", "CreateTableCommand").f(void 0, void 0).ser(se_CreateTableCommand).de(de_CreateTableCommand).build() {
};
__name(_CreateTableCommand, "CreateTableCommand");
var CreateTableCommand = _CreateTableCommand;

// src/commands/DeleteDatabaseCommand.ts





var _DeleteDatabaseCommand = class _DeleteDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "DeleteDatabase", {}).n("TimestreamWriteClient", "DeleteDatabaseCommand").f(void 0, void 0).ser(se_DeleteDatabaseCommand).de(de_DeleteDatabaseCommand).build() {
};
__name(_DeleteDatabaseCommand, "DeleteDatabaseCommand");
var DeleteDatabaseCommand = _DeleteDatabaseCommand;

// src/commands/DeleteTableCommand.ts





var _DeleteTableCommand = class _DeleteTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "DeleteTable", {}).n("TimestreamWriteClient", "DeleteTableCommand").f(void 0, void 0).ser(se_DeleteTableCommand).de(de_DeleteTableCommand).build() {
};
__name(_DeleteTableCommand, "DeleteTableCommand");
var DeleteTableCommand = _DeleteTableCommand;

// src/commands/DescribeBatchLoadTaskCommand.ts





var _DescribeBatchLoadTaskCommand = class _DescribeBatchLoadTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "DescribeBatchLoadTask", {}).n("TimestreamWriteClient", "DescribeBatchLoadTaskCommand").f(void 0, void 0).ser(se_DescribeBatchLoadTaskCommand).de(de_DescribeBatchLoadTaskCommand).build() {
};
__name(_DescribeBatchLoadTaskCommand, "DescribeBatchLoadTaskCommand");
var DescribeBatchLoadTaskCommand = _DescribeBatchLoadTaskCommand;

// src/commands/DescribeDatabaseCommand.ts





var _DescribeDatabaseCommand = class _DescribeDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "DescribeDatabase", {}).n("TimestreamWriteClient", "DescribeDatabaseCommand").f(void 0, void 0).ser(se_DescribeDatabaseCommand).de(de_DescribeDatabaseCommand).build() {
};
__name(_DescribeDatabaseCommand, "DescribeDatabaseCommand");
var DescribeDatabaseCommand = _DescribeDatabaseCommand;

// src/commands/DescribeTableCommand.ts





var _DescribeTableCommand = class _DescribeTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "DescribeTable", {}).n("TimestreamWriteClient", "DescribeTableCommand").f(void 0, void 0).ser(se_DescribeTableCommand).de(de_DescribeTableCommand).build() {
};
__name(_DescribeTableCommand, "DescribeTableCommand");
var DescribeTableCommand = _DescribeTableCommand;

// src/commands/ListBatchLoadTasksCommand.ts





var _ListBatchLoadTasksCommand = class _ListBatchLoadTasksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "ListBatchLoadTasks", {}).n("TimestreamWriteClient", "ListBatchLoadTasksCommand").f(void 0, void 0).ser(se_ListBatchLoadTasksCommand).de(de_ListBatchLoadTasksCommand).build() {
};
__name(_ListBatchLoadTasksCommand, "ListBatchLoadTasksCommand");
var ListBatchLoadTasksCommand = _ListBatchLoadTasksCommand;

// src/commands/ListDatabasesCommand.ts





var _ListDatabasesCommand = class _ListDatabasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "ListDatabases", {}).n("TimestreamWriteClient", "ListDatabasesCommand").f(void 0, void 0).ser(se_ListDatabasesCommand).de(de_ListDatabasesCommand).build() {
};
__name(_ListDatabasesCommand, "ListDatabasesCommand");
var ListDatabasesCommand = _ListDatabasesCommand;

// src/commands/ListTablesCommand.ts





var _ListTablesCommand = class _ListTablesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "ListTables", {}).n("TimestreamWriteClient", "ListTablesCommand").f(void 0, void 0).ser(se_ListTablesCommand).de(de_ListTablesCommand).build() {
};
__name(_ListTablesCommand, "ListTablesCommand");
var ListTablesCommand = _ListTablesCommand;

// src/commands/ListTagsForResourceCommand.ts





var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "ListTagsForResource", {}).n("TimestreamWriteClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ResumeBatchLoadTaskCommand.ts





var _ResumeBatchLoadTaskCommand = class _ResumeBatchLoadTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "ResumeBatchLoadTask", {}).n("TimestreamWriteClient", "ResumeBatchLoadTaskCommand").f(void 0, void 0).ser(se_ResumeBatchLoadTaskCommand).de(de_ResumeBatchLoadTaskCommand).build() {
};
__name(_ResumeBatchLoadTaskCommand, "ResumeBatchLoadTaskCommand");
var ResumeBatchLoadTaskCommand = _ResumeBatchLoadTaskCommand;

// src/commands/TagResourceCommand.ts





var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "TagResource", {}).n("TimestreamWriteClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts





var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "UntagResource", {}).n("TimestreamWriteClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateDatabaseCommand.ts





var _UpdateDatabaseCommand = class _UpdateDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "UpdateDatabase", {}).n("TimestreamWriteClient", "UpdateDatabaseCommand").f(void 0, void 0).ser(se_UpdateDatabaseCommand).de(de_UpdateDatabaseCommand).build() {
};
__name(_UpdateDatabaseCommand, "UpdateDatabaseCommand");
var UpdateDatabaseCommand = _UpdateDatabaseCommand;

// src/commands/UpdateTableCommand.ts





var _UpdateTableCommand = class _UpdateTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "UpdateTable", {}).n("TimestreamWriteClient", "UpdateTableCommand").f(void 0, void 0).ser(se_UpdateTableCommand).de(de_UpdateTableCommand).build() {
};
__name(_UpdateTableCommand, "UpdateTableCommand");
var UpdateTableCommand = _UpdateTableCommand;

// src/commands/WriteRecordsCommand.ts





var _WriteRecordsCommand = class _WriteRecordsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_endpoint_discovery.getEndpointDiscoveryPlugin)(config, { clientStack: cs, isDiscoveredEndpointRequired: true, options: o })
  ];
}).s("Timestream_20181101", "WriteRecords", {}).n("TimestreamWriteClient", "WriteRecordsCommand").f(void 0, void 0).ser(se_WriteRecordsCommand).de(de_WriteRecordsCommand).build() {
};
__name(_WriteRecordsCommand, "WriteRecordsCommand");
var WriteRecordsCommand = _WriteRecordsCommand;

// src/TimestreamWrite.ts
var commands = {
  CreateBatchLoadTaskCommand,
  CreateDatabaseCommand,
  CreateTableCommand,
  DeleteDatabaseCommand,
  DeleteTableCommand,
  DescribeBatchLoadTaskCommand,
  DescribeDatabaseCommand,
  DescribeEndpointsCommand,
  DescribeTableCommand,
  ListBatchLoadTasksCommand,
  ListDatabasesCommand,
  ListTablesCommand,
  ListTagsForResourceCommand,
  ResumeBatchLoadTaskCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateDatabaseCommand,
  UpdateTableCommand,
  WriteRecordsCommand
};
var _TimestreamWrite = class _TimestreamWrite extends TimestreamWriteClient {
};
__name(_TimestreamWrite, "TimestreamWrite");
var TimestreamWrite = _TimestreamWrite;
(0, import_smithy_client.createAggregatedClient)(commands, TimestreamWrite);

// src/pagination/ListBatchLoadTasksPaginator.ts
var import_core3 = require("@smithy/core");
var paginateListBatchLoadTasks = (0, import_core3.createPaginator)(TimestreamWriteClient, ListBatchLoadTasksCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDatabasesPaginator.ts
var import_core4 = require("@smithy/core");
var paginateListDatabases = (0, import_core4.createPaginator)(TimestreamWriteClient, ListDatabasesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTablesPaginator.ts
var import_core5 = require("@smithy/core");
var paginateListTables = (0, import_core5.createPaginator)(TimestreamWriteClient, ListTablesCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  TimestreamWriteServiceException,
  __Client,
  TimestreamWriteClient,
  TimestreamWrite,
  $Command,
  CreateBatchLoadTaskCommand,
  CreateDatabaseCommand,
  CreateTableCommand,
  DeleteDatabaseCommand,
  DeleteTableCommand,
  DescribeBatchLoadTaskCommand,
  DescribeDatabaseCommand,
  DescribeEndpointsCommand,
  DescribeTableCommand,
  ListBatchLoadTasksCommand,
  ListDatabasesCommand,
  ListTablesCommand,
  ListTagsForResourceCommand,
  ResumeBatchLoadTaskCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateDatabaseCommand,
  UpdateTableCommand,
  WriteRecordsCommand,
  paginateListBatchLoadTasks,
  paginateListDatabases,
  paginateListTables,
  AccessDeniedException,
  BatchLoadDataFormat,
  BatchLoadStatus,
  MeasureValueType,
  ScalarMeasureValueType,
  TimeUnit,
  S3EncryptionOption,
  ConflictException,
  InternalServerException,
  InvalidEndpointException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  PartitionKeyEnforcementLevel,
  PartitionKeyType,
  TableStatus,
  DimensionValueType,
  RejectedRecordsException,
  CreateBatchLoadTaskRequestFilterSensitiveLog
});

