import { ResourceGroupsTaggingAPIServiceException as __BaseException } from "./ResourceGroupsTaggingAPIServiceException";
export class ConcurrentModificationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
        this.Message = opts.Message;
    }
}
export class ConstraintViolationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConstraintViolationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConstraintViolationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConstraintViolationException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServiceException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottledException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottledException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottledException.prototype);
        this.Message = opts.Message;
    }
}
export const ErrorCode = {
    INTERNAL_SERVICE_EXCEPTION: "InternalServiceException",
    INVALID_PARAMETER_EXCEPTION: "InvalidParameterException",
};
export const GroupByAttribute = {
    REGION: "REGION",
    RESOURCE_TYPE: "RESOURCE_TYPE",
    TARGET_ID: "TARGET_ID",
};
export const TargetIdType = {
    ACCOUNT: "ACCOUNT",
    OU: "OU",
    ROOT: "ROOT",
};
export class PaginationTokenExpiredException extends __BaseException {
    constructor(opts) {
        super({
            name: "PaginationTokenExpiredException",
            $fault: "client",
            ...opts,
        });
        this.name = "PaginationTokenExpiredException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PaginationTokenExpiredException.prototype);
        this.Message = opts.Message;
    }
}
