import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ResourceGroupsTaggingAPIServiceException as __BaseException } from "./ResourceGroupsTaggingAPIServiceException";
export interface ComplianceDetails {
  NoncompliantKeys?: string[];
  KeysWithNoncompliantValues?: string[];
  ComplianceStatus?: boolean;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class ConstraintViolationException extends __BaseException {
  readonly name: "ConstraintViolationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ConstraintViolationException, __BaseException>
  );
}
export interface DescribeReportCreationInput {}
export interface DescribeReportCreationOutput {
  Status?: string;
  S3Location?: string;
  StartDate?: string;
  ErrorMessage?: string;
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class ThrottledException extends __BaseException {
  readonly name: "ThrottledException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ThrottledException, __BaseException>);
}
export declare const ErrorCode: {
  readonly INTERNAL_SERVICE_EXCEPTION: "InternalServiceException";
  readonly INVALID_PARAMETER_EXCEPTION: "InvalidParameterException";
};
export type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];
export interface FailureInfo {
  StatusCode?: number;
  ErrorCode?: ErrorCode;
  ErrorMessage?: string;
}
export declare const GroupByAttribute: {
  readonly REGION: "REGION";
  readonly RESOURCE_TYPE: "RESOURCE_TYPE";
  readonly TARGET_ID: "TARGET_ID";
};
export type GroupByAttribute =
  (typeof GroupByAttribute)[keyof typeof GroupByAttribute];
export interface GetComplianceSummaryInput {
  TargetIdFilters?: string[];
  RegionFilters?: string[];
  ResourceTypeFilters?: string[];
  TagKeyFilters?: string[];
  GroupBy?: GroupByAttribute[];
  MaxResults?: number;
  PaginationToken?: string;
}
export declare const TargetIdType: {
  readonly ACCOUNT: "ACCOUNT";
  readonly OU: "OU";
  readonly ROOT: "ROOT";
};
export type TargetIdType = (typeof TargetIdType)[keyof typeof TargetIdType];
export interface Summary {
  LastUpdated?: string;
  TargetId?: string;
  TargetIdType?: TargetIdType;
  Region?: string;
  ResourceType?: string;
  NonCompliantResources?: number;
}
export interface GetComplianceSummaryOutput {
  SummaryList?: Summary[];
  PaginationToken?: string;
}
export interface TagFilter {
  Key?: string;
  Values?: string[];
}
export interface GetResourcesInput {
  PaginationToken?: string;
  TagFilters?: TagFilter[];
  ResourcesPerPage?: number;
  TagsPerPage?: number;
  ResourceTypeFilters?: string[];
  IncludeComplianceDetails?: boolean;
  ExcludeCompliantResources?: boolean;
  ResourceARNList?: string[];
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface ResourceTagMapping {
  ResourceARN?: string;
  Tags?: Tag[];
  ComplianceDetails?: ComplianceDetails;
}
export interface GetResourcesOutput {
  PaginationToken?: string;
  ResourceTagMappingList?: ResourceTagMapping[];
}
export declare class PaginationTokenExpiredException extends __BaseException {
  readonly name: "PaginationTokenExpiredException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      PaginationTokenExpiredException,
      __BaseException
    >
  );
}
export interface GetTagKeysInput {
  PaginationToken?: string;
}
export interface GetTagKeysOutput {
  PaginationToken?: string;
  TagKeys?: string[];
}
export interface GetTagValuesInput {
  PaginationToken?: string;
  Key: string | undefined;
}
export interface GetTagValuesOutput {
  PaginationToken?: string;
  TagValues?: string[];
}
export interface StartReportCreationInput {
  S3Bucket: string | undefined;
}
export interface StartReportCreationOutput {}
export interface TagResourcesInput {
  ResourceARNList: string[] | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourcesOutput {
  FailedResourcesMap?: Record<string, FailureInfo>;
}
export interface UntagResourcesInput {
  ResourceARNList: string[] | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourcesOutput {
  FailedResourcesMap?: Record<string, FailureInfo>;
}
