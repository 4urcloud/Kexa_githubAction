import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { MWAAServiceException as __BaseException } from "./MWAAServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export const EndpointManagement = {
    CUSTOMER: "CUSTOMER",
    SERVICE: "SERVICE",
};
export const LoggingLevel = {
    CRITICAL: "CRITICAL",
    DEBUG: "DEBUG",
    ERROR: "ERROR",
    INFO: "INFO",
    WARNING: "WARNING",
};
export const WebserverAccessMode = {
    PRIVATE_ONLY: "PRIVATE_ONLY",
    PUBLIC_ONLY: "PUBLIC_ONLY",
};
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const UpdateStatus = {
    FAILED: "FAILED",
    PENDING: "PENDING",
    SUCCESS: "SUCCESS",
};
export const EnvironmentStatus = {
    AVAILABLE: "AVAILABLE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    CREATING_SNAPSHOT: "CREATING_SNAPSHOT",
    DELETED: "DELETED",
    DELETING: "DELETING",
    MAINTENANCE: "MAINTENANCE",
    PENDING: "PENDING",
    ROLLING_BACK: "ROLLING_BACK",
    UNAVAILABLE: "UNAVAILABLE",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export const Unit = {
    BITS: "Bits",
    BITS_PER_SECOND: "Bits/Second",
    BYTES: "Bytes",
    BYTES_PER_SECOND: "Bytes/Second",
    COUNT: "Count",
    COUNT_PER_SECOND: "Count/Second",
    GIGABITS: "Gigabits",
    GIGABITS_PER_SECOND: "Gigabits/Second",
    GIGABYTES: "Gigabytes",
    GIGABYTES_PER_SECOND: "Gigabytes/Second",
    KILOBITS: "Kilobits",
    KILOBITS_PER_SECOND: "Kilobits/Second",
    KILOBYTES: "Kilobytes",
    KILOBYTES_PER_SECOND: "Kilobytes/Second",
    MEGABITS: "Megabits",
    MEGABITS_PER_SECOND: "Megabits/Second",
    MEGABYTES: "Megabytes",
    MEGABYTES_PER_SECOND: "Megabytes/Second",
    MICROSECONDS: "Microseconds",
    MILLISECONDS: "Milliseconds",
    NONE: "None",
    PERCENT: "Percent",
    SECONDS: "Seconds",
    TERABITS: "Terabits",
    TERABITS_PER_SECOND: "Terabits/Second",
    TERABYTES: "Terabytes",
    TERABYTES_PER_SECOND: "Terabytes/Second",
};
export const CreateCliTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CliToken && { CliToken: SENSITIVE_STRING }),
});
export const CreateEnvironmentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AirflowConfigurationOptions && { AirflowConfigurationOptions: SENSITIVE_STRING }),
});
export const CreateWebLoginTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.WebToken && { WebToken: SENSITIVE_STRING }),
});
export const EnvironmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AirflowConfigurationOptions && { AirflowConfigurationOptions: SENSITIVE_STRING }),
});
export const GetEnvironmentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Environment && { Environment: EnvironmentFilterSensitiveLog(obj.Environment) }),
});
export const UpdateEnvironmentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AirflowConfigurationOptions && { AirflowConfigurationOptions: SENSITIVE_STRING }),
});
