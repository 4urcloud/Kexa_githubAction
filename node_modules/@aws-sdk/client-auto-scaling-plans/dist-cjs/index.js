"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AutoScalingPlans: () => AutoScalingPlans,
  AutoScalingPlansClient: () => AutoScalingPlansClient,
  AutoScalingPlansServiceException: () => AutoScalingPlansServiceException,
  ConcurrentUpdateException: () => ConcurrentUpdateException,
  CreateScalingPlanCommand: () => CreateScalingPlanCommand,
  DeleteScalingPlanCommand: () => DeleteScalingPlanCommand,
  DescribeScalingPlanResourcesCommand: () => DescribeScalingPlanResourcesCommand,
  DescribeScalingPlansCommand: () => DescribeScalingPlansCommand,
  ForecastDataType: () => ForecastDataType,
  GetScalingPlanResourceForecastDataCommand: () => GetScalingPlanResourceForecastDataCommand,
  InternalServiceException: () => InternalServiceException,
  InvalidNextTokenException: () => InvalidNextTokenException,
  LimitExceededException: () => LimitExceededException,
  LoadMetricType: () => LoadMetricType,
  MetricStatistic: () => MetricStatistic,
  ObjectNotFoundException: () => ObjectNotFoundException,
  PolicyType: () => PolicyType,
  PredictiveScalingMaxCapacityBehavior: () => PredictiveScalingMaxCapacityBehavior,
  PredictiveScalingMode: () => PredictiveScalingMode,
  ScalableDimension: () => ScalableDimension,
  ScalingMetricType: () => ScalingMetricType,
  ScalingPlanStatusCode: () => ScalingPlanStatusCode,
  ScalingPolicyUpdateBehavior: () => ScalingPolicyUpdateBehavior,
  ScalingStatusCode: () => ScalingStatusCode,
  ServiceNamespace: () => ServiceNamespace,
  UpdateScalingPlanCommand: () => UpdateScalingPlanCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client
});
module.exports = __toCommonJS(src_exports);

// src/AutoScalingPlansClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "autoscaling-plans"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/AutoScalingPlansClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/AutoScalingPlansClient.ts
var _AutoScalingPlansClient = class _AutoScalingPlansClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultAutoScalingPlansHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_AutoScalingPlansClient, "AutoScalingPlansClient");
var AutoScalingPlansClient = _AutoScalingPlansClient;

// src/AutoScalingPlans.ts


// src/commands/CreateScalingPlanCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts



// src/models/AutoScalingPlansServiceException.ts

var _AutoScalingPlansServiceException = class _AutoScalingPlansServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _AutoScalingPlansServiceException.prototype);
  }
};
__name(_AutoScalingPlansServiceException, "AutoScalingPlansServiceException");
var AutoScalingPlansServiceException = _AutoScalingPlansServiceException;

// src/models/models_0.ts
var _ConcurrentUpdateException = class _ConcurrentUpdateException extends AutoScalingPlansServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentUpdateException",
      $fault: "server",
      ...opts
    });
    this.name = "ConcurrentUpdateException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ConcurrentUpdateException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConcurrentUpdateException, "ConcurrentUpdateException");
var ConcurrentUpdateException = _ConcurrentUpdateException;
var MetricStatistic = {
  Average: "Average",
  Maximum: "Maximum",
  Minimum: "Minimum",
  SampleCount: "SampleCount",
  Sum: "Sum"
};
var LoadMetricType = {
  ALBTargetGroupRequestCount: "ALBTargetGroupRequestCount",
  ASGTotalCPUUtilization: "ASGTotalCPUUtilization",
  ASGTotalNetworkIn: "ASGTotalNetworkIn",
  ASGTotalNetworkOut: "ASGTotalNetworkOut"
};
var PredictiveScalingMaxCapacityBehavior = {
  SetForecastCapacityToMaxCapacity: "SetForecastCapacityToMaxCapacity",
  SetMaxCapacityAboveForecastCapacity: "SetMaxCapacityAboveForecastCapacity",
  SetMaxCapacityToForecastCapacity: "SetMaxCapacityToForecastCapacity"
};
var PredictiveScalingMode = {
  ForecastAndScale: "ForecastAndScale",
  ForecastOnly: "ForecastOnly"
};
var ScalableDimension = {
  AutoScalingGroupDesiredCapacity: "autoscaling:autoScalingGroup:DesiredCapacity",
  DynamoDBIndexReadCapacityUnits: "dynamodb:index:ReadCapacityUnits",
  DynamoDBIndexWriteCapacityUnits: "dynamodb:index:WriteCapacityUnits",
  DynamoDBTableReadCapacityUnits: "dynamodb:table:ReadCapacityUnits",
  DynamoDBTableWriteCapacityUnits: "dynamodb:table:WriteCapacityUnits",
  EC2SpotFleetRequestTargetCapacity: "ec2:spot-fleet-request:TargetCapacity",
  ECSServiceDesiredCount: "ecs:service:DesiredCount",
  RDSClusterReadReplicaCount: "rds:cluster:ReadReplicaCount"
};
var ScalingPolicyUpdateBehavior = {
  KeepExternalPolicies: "KeepExternalPolicies",
  ReplaceExternalPolicies: "ReplaceExternalPolicies"
};
var ServiceNamespace = {
  AUTOSCALING: "autoscaling",
  DYNAMODB: "dynamodb",
  EC2: "ec2",
  ECS: "ecs",
  RDS: "rds"
};
var ScalingMetricType = {
  ALBRequestCountPerTarget: "ALBRequestCountPerTarget",
  ASGAverageCPUUtilization: "ASGAverageCPUUtilization",
  ASGAverageNetworkIn: "ASGAverageNetworkIn",
  ASGAverageNetworkOut: "ASGAverageNetworkOut",
  DynamoDBReadCapacityUtilization: "DynamoDBReadCapacityUtilization",
  DynamoDBWriteCapacityUtilization: "DynamoDBWriteCapacityUtilization",
  EC2SpotFleetRequestAverageCPUUtilization: "EC2SpotFleetRequestAverageCPUUtilization",
  EC2SpotFleetRequestAverageNetworkIn: "EC2SpotFleetRequestAverageNetworkIn",
  EC2SpotFleetRequestAverageNetworkOut: "EC2SpotFleetRequestAverageNetworkOut",
  ECSServiceAverageCPUUtilization: "ECSServiceAverageCPUUtilization",
  ECSServiceAverageMemoryUtilization: "ECSServiceAverageMemoryUtilization",
  RDSReaderAverageCPUUtilization: "RDSReaderAverageCPUUtilization",
  RDSReaderAverageDatabaseConnections: "RDSReaderAverageDatabaseConnections"
};
var _InternalServiceException = class _InternalServiceException extends AutoScalingPlansServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServiceException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServiceException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServiceException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServiceException, "InternalServiceException");
var InternalServiceException = _InternalServiceException;
var _LimitExceededException = class _LimitExceededException extends AutoScalingPlansServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ValidationException = class _ValidationException extends AutoScalingPlansServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _ObjectNotFoundException = class _ObjectNotFoundException extends AutoScalingPlansServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ObjectNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ObjectNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ObjectNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ObjectNotFoundException, "ObjectNotFoundException");
var ObjectNotFoundException = _ObjectNotFoundException;
var PolicyType = {
  TargetTrackingScaling: "TargetTrackingScaling"
};
var ScalingStatusCode = {
  Active: "Active",
  Inactive: "Inactive",
  PartiallyActive: "PartiallyActive"
};
var _InvalidNextTokenException = class _InvalidNextTokenException extends AutoScalingPlansServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidNextTokenException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidNextTokenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidNextTokenException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidNextTokenException, "InvalidNextTokenException");
var InvalidNextTokenException = _InvalidNextTokenException;
var ScalingPlanStatusCode = {
  Active: "Active",
  ActiveWithProblems: "ActiveWithProblems",
  CreationFailed: "CreationFailed",
  CreationInProgress: "CreationInProgress",
  DeletionFailed: "DeletionFailed",
  DeletionInProgress: "DeletionInProgress",
  UpdateFailed: "UpdateFailed",
  UpdateInProgress: "UpdateInProgress"
};
var ForecastDataType = {
  CapacityForecast: "CapacityForecast",
  LoadForecast: "LoadForecast",
  ScheduledActionMaxCapacity: "ScheduledActionMaxCapacity",
  ScheduledActionMinCapacity: "ScheduledActionMinCapacity"
};

// src/protocols/Aws_json1_1.ts
var se_CreateScalingPlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateScalingPlan");
  let body;
  body = JSON.stringify(se_CreateScalingPlanRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateScalingPlanCommand");
var se_DeleteScalingPlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteScalingPlan");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteScalingPlanCommand");
var se_DescribeScalingPlanResourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeScalingPlanResources");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeScalingPlanResourcesCommand");
var se_DescribeScalingPlansCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeScalingPlans");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeScalingPlansCommand");
var se_GetScalingPlanResourceForecastDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetScalingPlanResourceForecastData");
  let body;
  body = JSON.stringify(se_GetScalingPlanResourceForecastDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetScalingPlanResourceForecastDataCommand");
var se_UpdateScalingPlanCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateScalingPlan");
  let body;
  body = JSON.stringify(se_UpdateScalingPlanRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateScalingPlanCommand");
var de_CreateScalingPlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateScalingPlanCommand");
var de_DeleteScalingPlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteScalingPlanCommand");
var de_DescribeScalingPlanResourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeScalingPlanResourcesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeScalingPlanResourcesCommand");
var de_DescribeScalingPlansCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeScalingPlansResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeScalingPlansCommand");
var de_GetScalingPlanResourceForecastDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetScalingPlanResourceForecastDataResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetScalingPlanResourceForecastDataCommand");
var de_UpdateScalingPlanCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateScalingPlanCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConcurrentUpdateException":
    case "com.amazonaws.autoscalingplans#ConcurrentUpdateException":
      throw await de_ConcurrentUpdateExceptionRes(parsedOutput, context);
    case "InternalServiceException":
    case "com.amazonaws.autoscalingplans#InternalServiceException":
      throw await de_InternalServiceExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.autoscalingplans#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.autoscalingplans#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ObjectNotFoundException":
    case "com.amazonaws.autoscalingplans#ObjectNotFoundException":
      throw await de_ObjectNotFoundExceptionRes(parsedOutput, context);
    case "InvalidNextTokenException":
    case "com.amazonaws.autoscalingplans#InvalidNextTokenException":
      throw await de_InvalidNextTokenExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_ConcurrentUpdateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConcurrentUpdateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConcurrentUpdateExceptionRes");
var de_InternalServiceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServiceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServiceExceptionRes");
var de_InvalidNextTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidNextTokenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidNextTokenExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_LimitExceededExceptionRes");
var de_ObjectNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ObjectNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ObjectNotFoundExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_CreateScalingPlanRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ApplicationSource: import_smithy_client._json,
    ScalingInstructions: (_) => se_ScalingInstructions(_, context),
    ScalingPlanName: []
  });
}, "se_CreateScalingPlanRequest");
var se_GetScalingPlanResourceForecastDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    EndTime: (_) => Math.round(_.getTime() / 1e3),
    ForecastDataType: [],
    ResourceId: [],
    ScalableDimension: [],
    ScalingPlanName: [],
    ScalingPlanVersion: [],
    ServiceNamespace: [],
    StartTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_GetScalingPlanResourceForecastDataRequest");
var se_ScalingInstruction = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CustomizedLoadMetricSpecification: import_smithy_client._json,
    DisableDynamicScaling: [],
    MaxCapacity: [],
    MinCapacity: [],
    PredefinedLoadMetricSpecification: import_smithy_client._json,
    PredictiveScalingMaxCapacityBehavior: [],
    PredictiveScalingMaxCapacityBuffer: [],
    PredictiveScalingMode: [],
    ResourceId: [],
    ScalableDimension: [],
    ScalingPolicyUpdateBehavior: [],
    ScheduledActionBufferTime: [],
    ServiceNamespace: [],
    TargetTrackingConfigurations: (_) => se_TargetTrackingConfigurations(_, context)
  });
}, "se_ScalingInstruction");
var se_ScalingInstructions = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ScalingInstruction(entry, context);
  });
}, "se_ScalingInstructions");
var se_TargetTrackingConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CustomizedScalingMetricSpecification: import_smithy_client._json,
    DisableScaleIn: [],
    EstimatedInstanceWarmup: [],
    PredefinedScalingMetricSpecification: import_smithy_client._json,
    ScaleInCooldown: [],
    ScaleOutCooldown: [],
    TargetValue: import_smithy_client.serializeFloat
  });
}, "se_TargetTrackingConfiguration");
var se_TargetTrackingConfigurations = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_TargetTrackingConfiguration(entry, context);
  });
}, "se_TargetTrackingConfigurations");
var se_UpdateScalingPlanRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ApplicationSource: import_smithy_client._json,
    ScalingInstructions: (_) => se_ScalingInstructions(_, context),
    ScalingPlanName: [],
    ScalingPlanVersion: []
  });
}, "se_UpdateScalingPlanRequest");
var de_Datapoint = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Timestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Value: import_smithy_client.limitedParseDouble
  });
}, "de_Datapoint");
var de_Datapoints = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Datapoint(entry, context);
  });
  return retVal;
}, "de_Datapoints");
var de_DescribeScalingPlanResourcesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    ScalingPlanResources: (_) => de_ScalingPlanResources(_, context)
  });
}, "de_DescribeScalingPlanResourcesResponse");
var de_DescribeScalingPlansResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    ScalingPlans: (_) => de_ScalingPlans(_, context)
  });
}, "de_DescribeScalingPlansResponse");
var de_GetScalingPlanResourceForecastDataResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Datapoints: (_) => de_Datapoints(_, context)
  });
}, "de_GetScalingPlanResourceForecastDataResponse");
var de_ScalingInstruction = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CustomizedLoadMetricSpecification: import_smithy_client._json,
    DisableDynamicScaling: import_smithy_client.expectBoolean,
    MaxCapacity: import_smithy_client.expectInt32,
    MinCapacity: import_smithy_client.expectInt32,
    PredefinedLoadMetricSpecification: import_smithy_client._json,
    PredictiveScalingMaxCapacityBehavior: import_smithy_client.expectString,
    PredictiveScalingMaxCapacityBuffer: import_smithy_client.expectInt32,
    PredictiveScalingMode: import_smithy_client.expectString,
    ResourceId: import_smithy_client.expectString,
    ScalableDimension: import_smithy_client.expectString,
    ScalingPolicyUpdateBehavior: import_smithy_client.expectString,
    ScheduledActionBufferTime: import_smithy_client.expectInt32,
    ServiceNamespace: import_smithy_client.expectString,
    TargetTrackingConfigurations: (_) => de_TargetTrackingConfigurations(_, context)
  });
}, "de_ScalingInstruction");
var de_ScalingInstructions = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ScalingInstruction(entry, context);
  });
  return retVal;
}, "de_ScalingInstructions");
var de_ScalingPlan = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApplicationSource: import_smithy_client._json,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ScalingInstructions: (_) => de_ScalingInstructions(_, context),
    ScalingPlanName: import_smithy_client.expectString,
    ScalingPlanVersion: import_smithy_client.expectLong,
    StatusCode: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    StatusStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ScalingPlan");
var de_ScalingPlanResource = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ResourceId: import_smithy_client.expectString,
    ScalableDimension: import_smithy_client.expectString,
    ScalingPlanName: import_smithy_client.expectString,
    ScalingPlanVersion: import_smithy_client.expectLong,
    ScalingPolicies: (_) => de_ScalingPolicies(_, context),
    ScalingStatusCode: import_smithy_client.expectString,
    ScalingStatusMessage: import_smithy_client.expectString,
    ServiceNamespace: import_smithy_client.expectString
  });
}, "de_ScalingPlanResource");
var de_ScalingPlanResources = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ScalingPlanResource(entry, context);
  });
  return retVal;
}, "de_ScalingPlanResources");
var de_ScalingPlans = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ScalingPlan(entry, context);
  });
  return retVal;
}, "de_ScalingPlans");
var de_ScalingPolicies = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ScalingPolicy(entry, context);
  });
  return retVal;
}, "de_ScalingPolicies");
var de_ScalingPolicy = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    PolicyName: import_smithy_client.expectString,
    PolicyType: import_smithy_client.expectString,
    TargetTrackingConfiguration: (_) => de_TargetTrackingConfiguration(_, context)
  });
}, "de_ScalingPolicy");
var de_TargetTrackingConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CustomizedScalingMetricSpecification: import_smithy_client._json,
    DisableScaleIn: import_smithy_client.expectBoolean,
    EstimatedInstanceWarmup: import_smithy_client.expectInt32,
    PredefinedScalingMetricSpecification: import_smithy_client._json,
    ScaleInCooldown: import_smithy_client.expectInt32,
    ScaleOutCooldown: import_smithy_client.expectInt32,
    TargetValue: import_smithy_client.limitedParseDouble
  });
}, "de_TargetTrackingConfiguration");
var de_TargetTrackingConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_TargetTrackingConfiguration(entry, context);
  });
  return retVal;
}, "de_TargetTrackingConfigurations");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(AutoScalingPlansServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `AnyScaleScalingPlannerFrontendService.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateScalingPlanCommand.ts
var _CreateScalingPlanCommand = class _CreateScalingPlanCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AnyScaleScalingPlannerFrontendService", "CreateScalingPlan", {}).n("AutoScalingPlansClient", "CreateScalingPlanCommand").f(void 0, void 0).ser(se_CreateScalingPlanCommand).de(de_CreateScalingPlanCommand).build() {
};
__name(_CreateScalingPlanCommand, "CreateScalingPlanCommand");
var CreateScalingPlanCommand = _CreateScalingPlanCommand;

// src/commands/DeleteScalingPlanCommand.ts




var _DeleteScalingPlanCommand = class _DeleteScalingPlanCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AnyScaleScalingPlannerFrontendService", "DeleteScalingPlan", {}).n("AutoScalingPlansClient", "DeleteScalingPlanCommand").f(void 0, void 0).ser(se_DeleteScalingPlanCommand).de(de_DeleteScalingPlanCommand).build() {
};
__name(_DeleteScalingPlanCommand, "DeleteScalingPlanCommand");
var DeleteScalingPlanCommand = _DeleteScalingPlanCommand;

// src/commands/DescribeScalingPlanResourcesCommand.ts




var _DescribeScalingPlanResourcesCommand = class _DescribeScalingPlanResourcesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AnyScaleScalingPlannerFrontendService", "DescribeScalingPlanResources", {}).n("AutoScalingPlansClient", "DescribeScalingPlanResourcesCommand").f(void 0, void 0).ser(se_DescribeScalingPlanResourcesCommand).de(de_DescribeScalingPlanResourcesCommand).build() {
};
__name(_DescribeScalingPlanResourcesCommand, "DescribeScalingPlanResourcesCommand");
var DescribeScalingPlanResourcesCommand = _DescribeScalingPlanResourcesCommand;

// src/commands/DescribeScalingPlansCommand.ts




var _DescribeScalingPlansCommand = class _DescribeScalingPlansCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AnyScaleScalingPlannerFrontendService", "DescribeScalingPlans", {}).n("AutoScalingPlansClient", "DescribeScalingPlansCommand").f(void 0, void 0).ser(se_DescribeScalingPlansCommand).de(de_DescribeScalingPlansCommand).build() {
};
__name(_DescribeScalingPlansCommand, "DescribeScalingPlansCommand");
var DescribeScalingPlansCommand = _DescribeScalingPlansCommand;

// src/commands/GetScalingPlanResourceForecastDataCommand.ts




var _GetScalingPlanResourceForecastDataCommand = class _GetScalingPlanResourceForecastDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AnyScaleScalingPlannerFrontendService", "GetScalingPlanResourceForecastData", {}).n("AutoScalingPlansClient", "GetScalingPlanResourceForecastDataCommand").f(void 0, void 0).ser(se_GetScalingPlanResourceForecastDataCommand).de(de_GetScalingPlanResourceForecastDataCommand).build() {
};
__name(_GetScalingPlanResourceForecastDataCommand, "GetScalingPlanResourceForecastDataCommand");
var GetScalingPlanResourceForecastDataCommand = _GetScalingPlanResourceForecastDataCommand;

// src/commands/UpdateScalingPlanCommand.ts




var _UpdateScalingPlanCommand = class _UpdateScalingPlanCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AnyScaleScalingPlannerFrontendService", "UpdateScalingPlan", {}).n("AutoScalingPlansClient", "UpdateScalingPlanCommand").f(void 0, void 0).ser(se_UpdateScalingPlanCommand).de(de_UpdateScalingPlanCommand).build() {
};
__name(_UpdateScalingPlanCommand, "UpdateScalingPlanCommand");
var UpdateScalingPlanCommand = _UpdateScalingPlanCommand;

// src/AutoScalingPlans.ts
var commands = {
  CreateScalingPlanCommand,
  DeleteScalingPlanCommand,
  DescribeScalingPlanResourcesCommand,
  DescribeScalingPlansCommand,
  GetScalingPlanResourceForecastDataCommand,
  UpdateScalingPlanCommand
};
var _AutoScalingPlans = class _AutoScalingPlans extends AutoScalingPlansClient {
};
__name(_AutoScalingPlans, "AutoScalingPlans");
var AutoScalingPlans = _AutoScalingPlans;
(0, import_smithy_client.createAggregatedClient)(commands, AutoScalingPlans);

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  AutoScalingPlansServiceException,
  __Client,
  AutoScalingPlansClient,
  AutoScalingPlans,
  $Command,
  CreateScalingPlanCommand,
  DeleteScalingPlanCommand,
  DescribeScalingPlanResourcesCommand,
  DescribeScalingPlansCommand,
  GetScalingPlanResourceForecastDataCommand,
  UpdateScalingPlanCommand,
  ConcurrentUpdateException,
  MetricStatistic,
  LoadMetricType,
  PredictiveScalingMaxCapacityBehavior,
  PredictiveScalingMode,
  ScalableDimension,
  ScalingPolicyUpdateBehavior,
  ServiceNamespace,
  ScalingMetricType,
  InternalServiceException,
  LimitExceededException,
  ValidationException,
  ObjectNotFoundException,
  PolicyType,
  ScalingStatusCode,
  InvalidNextTokenException,
  ScalingPlanStatusCode,
  ForecastDataType
});

