import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { AutoScalingPlansServiceException as __BaseException } from "./AutoScalingPlansServiceException";
export declare class ConcurrentUpdateException extends __BaseException {
  readonly name: "ConcurrentUpdateException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ConcurrentUpdateException, __BaseException>
  );
}
export interface TagFilter {
  Key?: string;
  Values?: string[];
}
export interface ApplicationSource {
  CloudFormationStackARN?: string;
  TagFilters?: TagFilter[];
}
export interface MetricDimension {
  Name: string | undefined;
  Value: string | undefined;
}
export declare const MetricStatistic: {
  readonly Average: "Average";
  readonly Maximum: "Maximum";
  readonly Minimum: "Minimum";
  readonly SampleCount: "SampleCount";
  readonly Sum: "Sum";
};
export type MetricStatistic =
  (typeof MetricStatistic)[keyof typeof MetricStatistic];
export interface CustomizedLoadMetricSpecification {
  MetricName: string | undefined;
  Namespace: string | undefined;
  Dimensions?: MetricDimension[];
  Statistic: MetricStatistic | undefined;
  Unit?: string;
}
export declare const LoadMetricType: {
  readonly ALBTargetGroupRequestCount: "ALBTargetGroupRequestCount";
  readonly ASGTotalCPUUtilization: "ASGTotalCPUUtilization";
  readonly ASGTotalNetworkIn: "ASGTotalNetworkIn";
  readonly ASGTotalNetworkOut: "ASGTotalNetworkOut";
};
export type LoadMetricType =
  (typeof LoadMetricType)[keyof typeof LoadMetricType];
export interface PredefinedLoadMetricSpecification {
  PredefinedLoadMetricType: LoadMetricType | undefined;
  ResourceLabel?: string;
}
export declare const PredictiveScalingMaxCapacityBehavior: {
  readonly SetForecastCapacityToMaxCapacity: "SetForecastCapacityToMaxCapacity";
  readonly SetMaxCapacityAboveForecastCapacity: "SetMaxCapacityAboveForecastCapacity";
  readonly SetMaxCapacityToForecastCapacity: "SetMaxCapacityToForecastCapacity";
};
export type PredictiveScalingMaxCapacityBehavior =
  (typeof PredictiveScalingMaxCapacityBehavior)[keyof typeof PredictiveScalingMaxCapacityBehavior];
export declare const PredictiveScalingMode: {
  readonly ForecastAndScale: "ForecastAndScale";
  readonly ForecastOnly: "ForecastOnly";
};
export type PredictiveScalingMode =
  (typeof PredictiveScalingMode)[keyof typeof PredictiveScalingMode];
export declare const ScalableDimension: {
  readonly AutoScalingGroupDesiredCapacity: "autoscaling:autoScalingGroup:DesiredCapacity";
  readonly DynamoDBIndexReadCapacityUnits: "dynamodb:index:ReadCapacityUnits";
  readonly DynamoDBIndexWriteCapacityUnits: "dynamodb:index:WriteCapacityUnits";
  readonly DynamoDBTableReadCapacityUnits: "dynamodb:table:ReadCapacityUnits";
  readonly DynamoDBTableWriteCapacityUnits: "dynamodb:table:WriteCapacityUnits";
  readonly EC2SpotFleetRequestTargetCapacity: "ec2:spot-fleet-request:TargetCapacity";
  readonly ECSServiceDesiredCount: "ecs:service:DesiredCount";
  readonly RDSClusterReadReplicaCount: "rds:cluster:ReadReplicaCount";
};
export type ScalableDimension =
  (typeof ScalableDimension)[keyof typeof ScalableDimension];
export declare const ScalingPolicyUpdateBehavior: {
  readonly KeepExternalPolicies: "KeepExternalPolicies";
  readonly ReplaceExternalPolicies: "ReplaceExternalPolicies";
};
export type ScalingPolicyUpdateBehavior =
  (typeof ScalingPolicyUpdateBehavior)[keyof typeof ScalingPolicyUpdateBehavior];
export declare const ServiceNamespace: {
  readonly AUTOSCALING: "autoscaling";
  readonly DYNAMODB: "dynamodb";
  readonly EC2: "ec2";
  readonly ECS: "ecs";
  readonly RDS: "rds";
};
export type ServiceNamespace =
  (typeof ServiceNamespace)[keyof typeof ServiceNamespace];
export interface CustomizedScalingMetricSpecification {
  MetricName: string | undefined;
  Namespace: string | undefined;
  Dimensions?: MetricDimension[];
  Statistic: MetricStatistic | undefined;
  Unit?: string;
}
export declare const ScalingMetricType: {
  readonly ALBRequestCountPerTarget: "ALBRequestCountPerTarget";
  readonly ASGAverageCPUUtilization: "ASGAverageCPUUtilization";
  readonly ASGAverageNetworkIn: "ASGAverageNetworkIn";
  readonly ASGAverageNetworkOut: "ASGAverageNetworkOut";
  readonly DynamoDBReadCapacityUtilization: "DynamoDBReadCapacityUtilization";
  readonly DynamoDBWriteCapacityUtilization: "DynamoDBWriteCapacityUtilization";
  readonly EC2SpotFleetRequestAverageCPUUtilization: "EC2SpotFleetRequestAverageCPUUtilization";
  readonly EC2SpotFleetRequestAverageNetworkIn: "EC2SpotFleetRequestAverageNetworkIn";
  readonly EC2SpotFleetRequestAverageNetworkOut: "EC2SpotFleetRequestAverageNetworkOut";
  readonly ECSServiceAverageCPUUtilization: "ECSServiceAverageCPUUtilization";
  readonly ECSServiceAverageMemoryUtilization: "ECSServiceAverageMemoryUtilization";
  readonly RDSReaderAverageCPUUtilization: "RDSReaderAverageCPUUtilization";
  readonly RDSReaderAverageDatabaseConnections: "RDSReaderAverageDatabaseConnections";
};
export type ScalingMetricType =
  (typeof ScalingMetricType)[keyof typeof ScalingMetricType];
export interface PredefinedScalingMetricSpecification {
  PredefinedScalingMetricType: ScalingMetricType | undefined;
  ResourceLabel?: string;
}
export interface TargetTrackingConfiguration {
  PredefinedScalingMetricSpecification?: PredefinedScalingMetricSpecification;
  CustomizedScalingMetricSpecification?: CustomizedScalingMetricSpecification;
  TargetValue: number | undefined;
  DisableScaleIn?: boolean;
  ScaleOutCooldown?: number;
  ScaleInCooldown?: number;
  EstimatedInstanceWarmup?: number;
}
export interface ScalingInstruction {
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  MinCapacity: number | undefined;
  MaxCapacity: number | undefined;
  TargetTrackingConfigurations: TargetTrackingConfiguration[] | undefined;
  PredefinedLoadMetricSpecification?: PredefinedLoadMetricSpecification;
  CustomizedLoadMetricSpecification?: CustomizedLoadMetricSpecification;
  ScheduledActionBufferTime?: number;
  PredictiveScalingMaxCapacityBehavior?: PredictiveScalingMaxCapacityBehavior;
  PredictiveScalingMaxCapacityBuffer?: number;
  PredictiveScalingMode?: PredictiveScalingMode;
  ScalingPolicyUpdateBehavior?: ScalingPolicyUpdateBehavior;
  DisableDynamicScaling?: boolean;
}
export interface CreateScalingPlanRequest {
  ScalingPlanName: string | undefined;
  ApplicationSource: ApplicationSource | undefined;
  ScalingInstructions: ScalingInstruction[] | undefined;
}
export interface CreateScalingPlanResponse {
  ScalingPlanVersion: number | undefined;
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DeleteScalingPlanRequest {
  ScalingPlanName: string | undefined;
  ScalingPlanVersion: number | undefined;
}
export interface DeleteScalingPlanResponse {}
export declare class ObjectNotFoundException extends __BaseException {
  readonly name: "ObjectNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ObjectNotFoundException, __BaseException>
  );
}
export interface DescribeScalingPlanResourcesRequest {
  ScalingPlanName: string | undefined;
  ScalingPlanVersion: number | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export declare const PolicyType: {
  readonly TargetTrackingScaling: "TargetTrackingScaling";
};
export type PolicyType = (typeof PolicyType)[keyof typeof PolicyType];
export interface ScalingPolicy {
  PolicyName: string | undefined;
  PolicyType: PolicyType | undefined;
  TargetTrackingConfiguration?: TargetTrackingConfiguration;
}
export declare const ScalingStatusCode: {
  readonly Active: "Active";
  readonly Inactive: "Inactive";
  readonly PartiallyActive: "PartiallyActive";
};
export type ScalingStatusCode =
  (typeof ScalingStatusCode)[keyof typeof ScalingStatusCode];
export interface ScalingPlanResource {
  ScalingPlanName: string | undefined;
  ScalingPlanVersion: number | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  ScalingPolicies?: ScalingPolicy[];
  ScalingStatusCode: ScalingStatusCode | undefined;
  ScalingStatusMessage?: string;
}
export interface DescribeScalingPlanResourcesResponse {
  ScalingPlanResources?: ScalingPlanResource[];
  NextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface DescribeScalingPlansRequest {
  ScalingPlanNames?: string[];
  ScalingPlanVersion?: number;
  ApplicationSources?: ApplicationSource[];
  MaxResults?: number;
  NextToken?: string;
}
export declare const ScalingPlanStatusCode: {
  readonly Active: "Active";
  readonly ActiveWithProblems: "ActiveWithProblems";
  readonly CreationFailed: "CreationFailed";
  readonly CreationInProgress: "CreationInProgress";
  readonly DeletionFailed: "DeletionFailed";
  readonly DeletionInProgress: "DeletionInProgress";
  readonly UpdateFailed: "UpdateFailed";
  readonly UpdateInProgress: "UpdateInProgress";
};
export type ScalingPlanStatusCode =
  (typeof ScalingPlanStatusCode)[keyof typeof ScalingPlanStatusCode];
export interface ScalingPlan {
  ScalingPlanName: string | undefined;
  ScalingPlanVersion: number | undefined;
  ApplicationSource: ApplicationSource | undefined;
  ScalingInstructions: ScalingInstruction[] | undefined;
  StatusCode: ScalingPlanStatusCode | undefined;
  StatusMessage?: string;
  StatusStartTime?: Date;
  CreationTime?: Date;
}
export interface DescribeScalingPlansResponse {
  ScalingPlans?: ScalingPlan[];
  NextToken?: string;
}
export declare const ForecastDataType: {
  readonly CapacityForecast: "CapacityForecast";
  readonly LoadForecast: "LoadForecast";
  readonly ScheduledActionMaxCapacity: "ScheduledActionMaxCapacity";
  readonly ScheduledActionMinCapacity: "ScheduledActionMinCapacity";
};
export type ForecastDataType =
  (typeof ForecastDataType)[keyof typeof ForecastDataType];
export interface GetScalingPlanResourceForecastDataRequest {
  ScalingPlanName: string | undefined;
  ScalingPlanVersion: number | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  ForecastDataType: ForecastDataType | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface Datapoint {
  Timestamp?: Date;
  Value?: number;
}
export interface GetScalingPlanResourceForecastDataResponse {
  Datapoints: Datapoint[] | undefined;
}
export interface UpdateScalingPlanRequest {
  ScalingPlanName: string | undefined;
  ScalingPlanVersion: number | undefined;
  ApplicationSource?: ApplicationSource;
  ScalingInstructions?: ScalingInstruction[];
}
export interface UpdateScalingPlanResponse {}
