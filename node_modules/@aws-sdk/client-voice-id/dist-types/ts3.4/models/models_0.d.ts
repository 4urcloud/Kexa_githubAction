import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { VoiceIDServiceException as __BaseException } from "./VoiceIDServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AssociateFraudsterRequest {
  DomainId: string | undefined;
  WatchlistId: string | undefined;
  FraudsterId: string | undefined;
}
export interface Fraudster {
  DomainId?: string;
  GeneratedFraudsterId?: string;
  CreatedAt?: Date;
  WatchlistIds?: string[];
}
export interface AssociateFraudsterResponse {
  Fraudster?: Fraudster;
}
export declare const ConflictType: {
  readonly ANOTHER_ACTIVE_STREAM: "ANOTHER_ACTIVE_STREAM";
  readonly CANNOT_CHANGE_SPEAKER_AFTER_ENROLLMENT: "CANNOT_CHANGE_SPEAKER_AFTER_ENROLLMENT";
  readonly CANNOT_DELETE_NON_EMPTY_WATCHLIST: "CANNOT_DELETE_NON_EMPTY_WATCHLIST";
  readonly CONCURRENT_CHANGES: "CONCURRENT_CHANGES";
  readonly DOMAIN_LOCKED_FROM_ENCRYPTION_UPDATES: "DOMAIN_LOCKED_FROM_ENCRYPTION_UPDATES";
  readonly DOMAIN_NOT_ACTIVE: "DOMAIN_NOT_ACTIVE";
  readonly ENROLLMENT_ALREADY_EXISTS: "ENROLLMENT_ALREADY_EXISTS";
  readonly FRAUDSTER_MUST_BELONG_TO_AT_LEAST_ONE_WATCHLIST: "FRAUDSTER_MUST_BELONG_TO_AT_LEAST_ONE_WATCHLIST";
  readonly SPEAKER_NOT_SET: "SPEAKER_NOT_SET";
  readonly SPEAKER_OPTED_OUT: "SPEAKER_OPTED_OUT";
};
export type ConflictType = (typeof ConflictType)[keyof typeof ConflictType];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  ConflictType?: ConflictType;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare const ResourceType: {
  readonly BATCH_JOB: "BATCH_JOB";
  readonly COMPLIANCE_CONSENT: "COMPLIANCE_CONSENT";
  readonly DOMAIN: "DOMAIN";
  readonly FRAUDSTER: "FRAUDSTER";
  readonly SESSION: "SESSION";
  readonly SPEAKER: "SPEAKER";
  readonly WATCHLIST: "WATCHLIST";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  ResourceType?: ResourceType;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface AuthenticationConfiguration {
  AcceptanceThreshold: number | undefined;
}
export declare const AuthenticationDecision: {
  readonly ACCEPT: "ACCEPT";
  readonly NOT_ENOUGH_SPEECH: "NOT_ENOUGH_SPEECH";
  readonly REJECT: "REJECT";
  readonly SPEAKER_EXPIRED: "SPEAKER_EXPIRED";
  readonly SPEAKER_ID_NOT_PROVIDED: "SPEAKER_ID_NOT_PROVIDED";
  readonly SPEAKER_NOT_ENROLLED: "SPEAKER_NOT_ENROLLED";
  readonly SPEAKER_OPTED_OUT: "SPEAKER_OPTED_OUT";
};
export type AuthenticationDecision =
  (typeof AuthenticationDecision)[keyof typeof AuthenticationDecision];
export interface AuthenticationResult {
  AuthenticationResultId?: string;
  AudioAggregationStartedAt?: Date;
  AudioAggregationEndedAt?: Date;
  CustomerSpeakerId?: string;
  GeneratedSpeakerId?: string;
  Decision?: AuthenticationDecision;
  Score?: number;
  Configuration?: AuthenticationConfiguration;
}
export interface ServerSideEncryptionConfiguration {
  KmsKeyId: string | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateDomainRequest {
  Name: string | undefined;
  Description?: string;
  ServerSideEncryptionConfiguration:
    | ServerSideEncryptionConfiguration
    | undefined;
  ClientToken?: string;
  Tags?: Tag[];
}
export declare const DomainStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly PENDING: "PENDING";
  readonly SUSPENDED: "SUSPENDED";
};
export type DomainStatus = (typeof DomainStatus)[keyof typeof DomainStatus];
export declare const ServerSideEncryptionUpdateStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type ServerSideEncryptionUpdateStatus =
  (typeof ServerSideEncryptionUpdateStatus)[keyof typeof ServerSideEncryptionUpdateStatus];
export interface ServerSideEncryptionUpdateDetails {
  OldKmsKeyId?: string;
  UpdateStatus?: ServerSideEncryptionUpdateStatus;
  Message?: string;
}
export interface WatchlistDetails {
  DefaultWatchlistId: string | undefined;
}
export interface Domain {
  DomainId?: string;
  Arn?: string;
  Name?: string;
  Description?: string;
  DomainStatus?: DomainStatus;
  ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  ServerSideEncryptionUpdateDetails?: ServerSideEncryptionUpdateDetails;
  WatchlistDetails?: WatchlistDetails;
}
export interface CreateDomainResponse {
  Domain?: Domain;
}
export interface CreateWatchlistRequest {
  DomainId: string | undefined;
  Name: string | undefined;
  Description?: string;
  ClientToken?: string;
}
export interface Watchlist {
  DomainId?: string;
  WatchlistId?: string;
  Name?: string;
  Description?: string;
  DefaultWatchlist?: boolean;
  CreatedAt?: Date;
  UpdatedAt?: Date;
}
export interface CreateWatchlistResponse {
  Watchlist?: Watchlist;
}
export interface DeleteDomainRequest {
  DomainId: string | undefined;
}
export interface DeleteFraudsterRequest {
  DomainId: string | undefined;
  FraudsterId: string | undefined;
}
export interface DeleteSpeakerRequest {
  DomainId: string | undefined;
  SpeakerId: string | undefined;
}
export interface DeleteWatchlistRequest {
  DomainId: string | undefined;
  WatchlistId: string | undefined;
}
export interface DescribeDomainRequest {
  DomainId: string | undefined;
}
export interface DescribeDomainResponse {
  Domain?: Domain;
}
export interface DescribeFraudsterRequest {
  DomainId: string | undefined;
  FraudsterId: string | undefined;
}
export interface DescribeFraudsterResponse {
  Fraudster?: Fraudster;
}
export interface DescribeFraudsterRegistrationJobRequest {
  DomainId: string | undefined;
  JobId: string | undefined;
}
export interface FailureDetails {
  StatusCode?: number;
  Message?: string;
}
export interface InputDataConfig {
  S3Uri: string | undefined;
}
export interface JobProgress {
  PercentComplete?: number;
}
export declare const FraudsterRegistrationJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETED_WITH_ERRORS: "COMPLETED_WITH_ERRORS";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUBMITTED: "SUBMITTED";
};
export type FraudsterRegistrationJobStatus =
  (typeof FraudsterRegistrationJobStatus)[keyof typeof FraudsterRegistrationJobStatus];
export interface OutputDataConfig {
  S3Uri: string | undefined;
  KmsKeyId?: string;
}
export declare const DuplicateRegistrationAction: {
  readonly REGISTER_AS_NEW: "REGISTER_AS_NEW";
  readonly SKIP: "SKIP";
};
export type DuplicateRegistrationAction =
  (typeof DuplicateRegistrationAction)[keyof typeof DuplicateRegistrationAction];
export interface RegistrationConfig {
  DuplicateRegistrationAction?: DuplicateRegistrationAction;
  FraudsterSimilarityThreshold?: number;
  WatchlistIds?: string[];
}
export interface FraudsterRegistrationJob {
  JobName?: string;
  JobId?: string;
  JobStatus?: FraudsterRegistrationJobStatus;
  DomainId?: string;
  DataAccessRoleArn?: string;
  RegistrationConfig?: RegistrationConfig;
  InputDataConfig?: InputDataConfig;
  OutputDataConfig?: OutputDataConfig;
  CreatedAt?: Date;
  EndedAt?: Date;
  FailureDetails?: FailureDetails;
  JobProgress?: JobProgress;
}
export interface DescribeFraudsterRegistrationJobResponse {
  Job?: FraudsterRegistrationJob;
}
export interface DescribeSpeakerRequest {
  DomainId: string | undefined;
  SpeakerId: string | undefined;
}
export declare const SpeakerStatus: {
  readonly ENROLLED: "ENROLLED";
  readonly EXPIRED: "EXPIRED";
  readonly OPTED_OUT: "OPTED_OUT";
  readonly PENDING: "PENDING";
};
export type SpeakerStatus = (typeof SpeakerStatus)[keyof typeof SpeakerStatus];
export interface Speaker {
  DomainId?: string;
  CustomerSpeakerId?: string;
  GeneratedSpeakerId?: string;
  Status?: SpeakerStatus;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  LastAccessedAt?: Date;
}
export interface DescribeSpeakerResponse {
  Speaker?: Speaker;
}
export interface DescribeSpeakerEnrollmentJobRequest {
  DomainId: string | undefined;
  JobId: string | undefined;
}
export declare const ExistingEnrollmentAction: {
  readonly OVERWRITE: "OVERWRITE";
  readonly SKIP: "SKIP";
};
export type ExistingEnrollmentAction =
  (typeof ExistingEnrollmentAction)[keyof typeof ExistingEnrollmentAction];
export declare const FraudDetectionAction: {
  readonly FAIL: "FAIL";
  readonly IGNORE: "IGNORE";
};
export type FraudDetectionAction =
  (typeof FraudDetectionAction)[keyof typeof FraudDetectionAction];
export interface EnrollmentJobFraudDetectionConfig {
  FraudDetectionAction?: FraudDetectionAction;
  RiskThreshold?: number;
  WatchlistIds?: string[];
}
export interface EnrollmentConfig {
  ExistingEnrollmentAction?: ExistingEnrollmentAction;
  FraudDetectionConfig?: EnrollmentJobFraudDetectionConfig;
}
export declare const SpeakerEnrollmentJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETED_WITH_ERRORS: "COMPLETED_WITH_ERRORS";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUBMITTED: "SUBMITTED";
};
export type SpeakerEnrollmentJobStatus =
  (typeof SpeakerEnrollmentJobStatus)[keyof typeof SpeakerEnrollmentJobStatus];
export interface SpeakerEnrollmentJob {
  JobName?: string;
  JobId?: string;
  JobStatus?: SpeakerEnrollmentJobStatus;
  DomainId?: string;
  DataAccessRoleArn?: string;
  EnrollmentConfig?: EnrollmentConfig;
  InputDataConfig?: InputDataConfig;
  OutputDataConfig?: OutputDataConfig;
  CreatedAt?: Date;
  EndedAt?: Date;
  FailureDetails?: FailureDetails;
  JobProgress?: JobProgress;
}
export interface DescribeSpeakerEnrollmentJobResponse {
  Job?: SpeakerEnrollmentJob;
}
export interface DescribeWatchlistRequest {
  DomainId: string | undefined;
  WatchlistId: string | undefined;
}
export interface DescribeWatchlistResponse {
  Watchlist?: Watchlist;
}
export interface DisassociateFraudsterRequest {
  DomainId: string | undefined;
  WatchlistId: string | undefined;
  FraudsterId: string | undefined;
}
export interface DisassociateFraudsterResponse {
  Fraudster?: Fraudster;
}
export interface ListDomainsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface DomainSummary {
  DomainId?: string;
  Arn?: string;
  Name?: string;
  Description?: string;
  DomainStatus?: DomainStatus;
  ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  ServerSideEncryptionUpdateDetails?: ServerSideEncryptionUpdateDetails;
  WatchlistDetails?: WatchlistDetails;
}
export interface ListDomainsResponse {
  DomainSummaries?: DomainSummary[];
  NextToken?: string;
}
export interface UpdateDomainRequest {
  DomainId: string | undefined;
  Name: string | undefined;
  Description?: string;
  ServerSideEncryptionConfiguration:
    | ServerSideEncryptionConfiguration
    | undefined;
}
export interface UpdateDomainResponse {
  Domain?: Domain;
}
export interface EvaluateSessionRequest {
  DomainId: string | undefined;
  SessionNameOrId: string | undefined;
}
export interface FraudDetectionConfiguration {
  RiskThreshold?: number;
  WatchlistId?: string;
}
export declare const FraudDetectionDecision: {
  readonly HIGH_RISK: "HIGH_RISK";
  readonly LOW_RISK: "LOW_RISK";
  readonly NOT_ENOUGH_SPEECH: "NOT_ENOUGH_SPEECH";
};
export type FraudDetectionDecision =
  (typeof FraudDetectionDecision)[keyof typeof FraudDetectionDecision];
export declare const FraudDetectionReason: {
  readonly KNOWN_FRAUDSTER: "KNOWN_FRAUDSTER";
  readonly VOICE_SPOOFING: "VOICE_SPOOFING";
};
export type FraudDetectionReason =
  (typeof FraudDetectionReason)[keyof typeof FraudDetectionReason];
export interface KnownFraudsterRisk {
  RiskScore: number | undefined;
  GeneratedFraudsterId?: string;
}
export interface VoiceSpoofingRisk {
  RiskScore: number | undefined;
}
export interface FraudRiskDetails {
  KnownFraudsterRisk: KnownFraudsterRisk | undefined;
  VoiceSpoofingRisk: VoiceSpoofingRisk | undefined;
}
export interface FraudDetectionResult {
  FraudDetectionResultId?: string;
  AudioAggregationStartedAt?: Date;
  AudioAggregationEndedAt?: Date;
  Configuration?: FraudDetectionConfiguration;
  Decision?: FraudDetectionDecision;
  Reasons?: FraudDetectionReason[];
  RiskDetails?: FraudRiskDetails;
}
export declare const StreamingStatus: {
  readonly ENDED: "ENDED";
  readonly ONGOING: "ONGOING";
  readonly PENDING_CONFIGURATION: "PENDING_CONFIGURATION";
};
export type StreamingStatus =
  (typeof StreamingStatus)[keyof typeof StreamingStatus];
export interface EvaluateSessionResponse {
  DomainId?: string;
  SessionId?: string;
  SessionName?: string;
  StreamingStatus?: StreamingStatus;
  AuthenticationResult?: AuthenticationResult;
  FraudDetectionResult?: FraudDetectionResult;
}
export interface FraudsterRegistrationJobSummary {
  JobName?: string;
  JobId?: string;
  JobStatus?: FraudsterRegistrationJobStatus;
  DomainId?: string;
  CreatedAt?: Date;
  EndedAt?: Date;
  FailureDetails?: FailureDetails;
  JobProgress?: JobProgress;
}
export interface FraudsterSummary {
  DomainId?: string;
  GeneratedFraudsterId?: string;
  CreatedAt?: Date;
  WatchlistIds?: string[];
}
export interface ListFraudsterRegistrationJobsRequest {
  DomainId: string | undefined;
  JobStatus?: FraudsterRegistrationJobStatus;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListFraudsterRegistrationJobsResponse {
  JobSummaries?: FraudsterRegistrationJobSummary[];
  NextToken?: string;
}
export interface ListFraudstersRequest {
  DomainId: string | undefined;
  WatchlistId?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListFraudstersResponse {
  FraudsterSummaries?: FraudsterSummary[];
  NextToken?: string;
}
export interface ListSpeakerEnrollmentJobsRequest {
  DomainId: string | undefined;
  JobStatus?: SpeakerEnrollmentJobStatus;
  MaxResults?: number;
  NextToken?: string;
}
export interface SpeakerEnrollmentJobSummary {
  JobName?: string;
  JobId?: string;
  JobStatus?: SpeakerEnrollmentJobStatus;
  DomainId?: string;
  CreatedAt?: Date;
  EndedAt?: Date;
  FailureDetails?: FailureDetails;
  JobProgress?: JobProgress;
}
export interface ListSpeakerEnrollmentJobsResponse {
  JobSummaries?: SpeakerEnrollmentJobSummary[];
  NextToken?: string;
}
export interface ListSpeakersRequest {
  DomainId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface SpeakerSummary {
  DomainId?: string;
  CustomerSpeakerId?: string;
  GeneratedSpeakerId?: string;
  Status?: SpeakerStatus;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  LastAccessedAt?: Date;
}
export interface ListSpeakersResponse {
  SpeakerSummaries?: SpeakerSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface ListWatchlistsRequest {
  DomainId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface WatchlistSummary {
  DomainId?: string;
  WatchlistId?: string;
  Name?: string;
  Description?: string;
  DefaultWatchlist?: boolean;
  CreatedAt?: Date;
  UpdatedAt?: Date;
}
export interface ListWatchlistsResponse {
  WatchlistSummaries?: WatchlistSummary[];
  NextToken?: string;
}
export interface OptOutSpeakerRequest {
  DomainId: string | undefined;
  SpeakerId: string | undefined;
}
export interface OptOutSpeakerResponse {
  Speaker?: Speaker;
}
export interface StartFraudsterRegistrationJobRequest {
  ClientToken?: string;
  JobName?: string;
  DomainId: string | undefined;
  DataAccessRoleArn: string | undefined;
  RegistrationConfig?: RegistrationConfig;
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
}
export interface StartFraudsterRegistrationJobResponse {
  Job?: FraudsterRegistrationJob;
}
export interface StartSpeakerEnrollmentJobRequest {
  ClientToken?: string;
  JobName?: string;
  DomainId: string | undefined;
  DataAccessRoleArn: string | undefined;
  EnrollmentConfig?: EnrollmentConfig;
  InputDataConfig: InputDataConfig | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
}
export interface StartSpeakerEnrollmentJobResponse {
  Job?: SpeakerEnrollmentJob;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateWatchlistRequest {
  DomainId: string | undefined;
  WatchlistId: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateWatchlistResponse {
  Watchlist?: Watchlist;
}
export declare const AssociateFraudsterRequestFilterSensitiveLog: (
  obj: AssociateFraudsterRequest
) => any;
export declare const AuthenticationResultFilterSensitiveLog: (
  obj: AuthenticationResult
) => any;
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateDomainRequestFilterSensitiveLog: (
  obj: CreateDomainRequest
) => any;
export declare const DomainFilterSensitiveLog: (obj: Domain) => any;
export declare const CreateDomainResponseFilterSensitiveLog: (
  obj: CreateDomainResponse
) => any;
export declare const CreateWatchlistRequestFilterSensitiveLog: (
  obj: CreateWatchlistRequest
) => any;
export declare const WatchlistFilterSensitiveLog: (obj: Watchlist) => any;
export declare const CreateWatchlistResponseFilterSensitiveLog: (
  obj: CreateWatchlistResponse
) => any;
export declare const DeleteFraudsterRequestFilterSensitiveLog: (
  obj: DeleteFraudsterRequest
) => any;
export declare const DeleteSpeakerRequestFilterSensitiveLog: (
  obj: DeleteSpeakerRequest
) => any;
export declare const DescribeDomainResponseFilterSensitiveLog: (
  obj: DescribeDomainResponse
) => any;
export declare const DescribeFraudsterRequestFilterSensitiveLog: (
  obj: DescribeFraudsterRequest
) => any;
export declare const FraudsterRegistrationJobFilterSensitiveLog: (
  obj: FraudsterRegistrationJob
) => any;
export declare const DescribeFraudsterRegistrationJobResponseFilterSensitiveLog: (
  obj: DescribeFraudsterRegistrationJobResponse
) => any;
export declare const DescribeSpeakerRequestFilterSensitiveLog: (
  obj: DescribeSpeakerRequest
) => any;
export declare const SpeakerFilterSensitiveLog: (obj: Speaker) => any;
export declare const DescribeSpeakerResponseFilterSensitiveLog: (
  obj: DescribeSpeakerResponse
) => any;
export declare const SpeakerEnrollmentJobFilterSensitiveLog: (
  obj: SpeakerEnrollmentJob
) => any;
export declare const DescribeSpeakerEnrollmentJobResponseFilterSensitiveLog: (
  obj: DescribeSpeakerEnrollmentJobResponse
) => any;
export declare const DescribeWatchlistResponseFilterSensitiveLog: (
  obj: DescribeWatchlistResponse
) => any;
export declare const DisassociateFraudsterRequestFilterSensitiveLog: (
  obj: DisassociateFraudsterRequest
) => any;
export declare const DomainSummaryFilterSensitiveLog: (
  obj: DomainSummary
) => any;
export declare const ListDomainsResponseFilterSensitiveLog: (
  obj: ListDomainsResponse
) => any;
export declare const UpdateDomainRequestFilterSensitiveLog: (
  obj: UpdateDomainRequest
) => any;
export declare const UpdateDomainResponseFilterSensitiveLog: (
  obj: UpdateDomainResponse
) => any;
export declare const EvaluateSessionResponseFilterSensitiveLog: (
  obj: EvaluateSessionResponse
) => any;
export declare const FraudsterRegistrationJobSummaryFilterSensitiveLog: (
  obj: FraudsterRegistrationJobSummary
) => any;
export declare const ListFraudsterRegistrationJobsResponseFilterSensitiveLog: (
  obj: ListFraudsterRegistrationJobsResponse
) => any;
export declare const SpeakerEnrollmentJobSummaryFilterSensitiveLog: (
  obj: SpeakerEnrollmentJobSummary
) => any;
export declare const ListSpeakerEnrollmentJobsResponseFilterSensitiveLog: (
  obj: ListSpeakerEnrollmentJobsResponse
) => any;
export declare const SpeakerSummaryFilterSensitiveLog: (
  obj: SpeakerSummary
) => any;
export declare const ListSpeakersResponseFilterSensitiveLog: (
  obj: ListSpeakersResponse
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const WatchlistSummaryFilterSensitiveLog: (
  obj: WatchlistSummary
) => any;
export declare const ListWatchlistsResponseFilterSensitiveLog: (
  obj: ListWatchlistsResponse
) => any;
export declare const OptOutSpeakerRequestFilterSensitiveLog: (
  obj: OptOutSpeakerRequest
) => any;
export declare const OptOutSpeakerResponseFilterSensitiveLog: (
  obj: OptOutSpeakerResponse
) => any;
export declare const StartFraudsterRegistrationJobRequestFilterSensitiveLog: (
  obj: StartFraudsterRegistrationJobRequest
) => any;
export declare const StartFraudsterRegistrationJobResponseFilterSensitiveLog: (
  obj: StartFraudsterRegistrationJobResponse
) => any;
export declare const StartSpeakerEnrollmentJobRequestFilterSensitiveLog: (
  obj: StartSpeakerEnrollmentJobRequest
) => any;
export declare const StartSpeakerEnrollmentJobResponseFilterSensitiveLog: (
  obj: StartSpeakerEnrollmentJobResponse
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UpdateWatchlistRequestFilterSensitiveLog: (
  obj: UpdateWatchlistRequest
) => any;
export declare const UpdateWatchlistResponseFilterSensitiveLog: (
  obj: UpdateWatchlistResponse
) => any;
