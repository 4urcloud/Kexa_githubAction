import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { IoTFleetHubServiceException as __BaseException } from "./IoTFleetHubServiceException";
export declare const ApplicationState: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETING: "DELETING";
};
export type ApplicationState =
  (typeof ApplicationState)[keyof typeof ApplicationState];
export interface ApplicationSummary {
  applicationId: string | undefined;
  applicationName: string | undefined;
  applicationDescription?: string;
  applicationUrl: string | undefined;
  applicationCreationDate?: number;
  applicationLastUpdateDate?: number;
  applicationState?: ApplicationState;
}
export interface CreateApplicationRequest {
  applicationName: string | undefined;
  applicationDescription?: string;
  clientToken?: string;
  roleArn: string | undefined;
  tags?: Record<string, string>;
}
export interface CreateApplicationResponse {
  applicationId: string | undefined;
  applicationArn: string | undefined;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface DeleteApplicationRequest {
  applicationId: string | undefined;
  clientToken?: string;
}
export interface DeleteApplicationResponse {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DescribeApplicationRequest {
  applicationId: string | undefined;
}
export interface DescribeApplicationResponse {
  applicationId: string | undefined;
  applicationArn: string | undefined;
  applicationName: string | undefined;
  applicationDescription?: string;
  applicationUrl: string | undefined;
  applicationState: ApplicationState | undefined;
  applicationCreationDate: number | undefined;
  applicationLastUpdateDate: number | undefined;
  roleArn: string | undefined;
  ssoClientId?: string;
  errorMessage?: string;
  tags?: Record<string, string>;
}
export interface ListApplicationsRequest {
  nextToken?: string;
}
export interface ListApplicationsResponse {
  applicationSummaries?: ApplicationSummary[];
  nextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface UpdateApplicationRequest {
  applicationId: string | undefined;
  applicationName?: string;
  applicationDescription?: string;
  clientToken?: string;
}
export interface UpdateApplicationResponse {}
