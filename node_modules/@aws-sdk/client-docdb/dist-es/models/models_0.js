import { DocDBServiceException as __BaseException } from "./DocDBServiceException";
export class SourceNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SourceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SourceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SourceNotFoundFault.prototype);
    }
}
export class SubscriptionNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubscriptionNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionNotFoundFault.prototype);
    }
}
export class DBClusterNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterNotFoundFault.prototype);
    }
}
export class DBInstanceNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBInstanceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBInstanceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBInstanceNotFoundFault.prototype);
    }
}
export class DBSnapshotNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSnapshotNotFoundFault.prototype);
    }
}
export class InvalidDBClusterStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBClusterStateFault.prototype);
    }
}
export class InvalidDBInstanceStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBInstanceStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBInstanceStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBInstanceStateFault.prototype);
    }
}
export class ResourceNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundFault.prototype);
    }
}
export class DBParameterGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBParameterGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBParameterGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBParameterGroupAlreadyExistsFault.prototype);
    }
}
export class DBParameterGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBParameterGroupNotFoundFault.prototype);
    }
}
export class DBParameterGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBParameterGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBParameterGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBParameterGroupQuotaExceededFault.prototype);
    }
}
export class DBClusterSnapshotAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterSnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterSnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterSnapshotAlreadyExistsFault.prototype);
    }
}
export class DBClusterSnapshotNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterSnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterSnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterSnapshotNotFoundFault.prototype);
    }
}
export class InvalidDBClusterSnapshotStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBClusterSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBClusterSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBClusterSnapshotStateFault.prototype);
    }
}
export class KMSKeyNotAccessibleFault extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSKeyNotAccessibleFault",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSKeyNotAccessibleFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSKeyNotAccessibleFault.prototype);
    }
}
export class SnapshotQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotQuotaExceededFault.prototype);
    }
}
export class DBClusterAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterAlreadyExistsFault.prototype);
    }
}
export class DBClusterParameterGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterParameterGroupNotFoundFault.prototype);
    }
}
export class DBClusterQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBClusterQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterQuotaExceededFault.prototype);
    }
}
export class DBSubnetGroupDoesNotCoverEnoughAZs extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupDoesNotCoverEnoughAZs",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupDoesNotCoverEnoughAZs";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupDoesNotCoverEnoughAZs.prototype);
    }
}
export class DBSubnetGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupNotFoundFault.prototype);
    }
}
export class GlobalClusterNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "GlobalClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalClusterNotFoundFault.prototype);
    }
}
export class InsufficientStorageClusterCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientStorageClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientStorageClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientStorageClusterCapacityFault.prototype);
    }
}
export class InvalidDBSubnetGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBSubnetGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSubnetGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSubnetGroupStateFault.prototype);
    }
}
export class InvalidGlobalClusterStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidGlobalClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidGlobalClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidGlobalClusterStateFault.prototype);
    }
}
export class InvalidSubnet extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSubnet",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubnet";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubnet.prototype);
    }
}
export class InvalidVPCNetworkStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidVPCNetworkStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidVPCNetworkStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidVPCNetworkStateFault.prototype);
    }
}
export class StorageQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "StorageQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "StorageQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, StorageQuotaExceededFault.prototype);
    }
}
export class AuthorizationNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "AuthorizationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationNotFoundFault.prototype);
    }
}
export class DBInstanceAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBInstanceAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBInstanceAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBInstanceAlreadyExistsFault.prototype);
    }
}
export class DBSecurityGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSecurityGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSecurityGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSecurityGroupNotFoundFault.prototype);
    }
}
export class InstanceQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InstanceQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InstanceQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InstanceQuotaExceededFault.prototype);
    }
}
export class InsufficientDBInstanceCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientDBInstanceCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientDBInstanceCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientDBInstanceCapacityFault.prototype);
    }
}
export class StorageTypeNotSupportedFault extends __BaseException {
    constructor(opts) {
        super({
            name: "StorageTypeNotSupportedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "StorageTypeNotSupportedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, StorageTypeNotSupportedFault.prototype);
    }
}
export class DBSubnetGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupAlreadyExistsFault.prototype);
    }
}
export class DBSubnetGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupQuotaExceededFault.prototype);
    }
}
export class DBSubnetQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSubnetQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetQuotaExceededFault.prototype);
    }
}
export class EventSubscriptionQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "EventSubscriptionQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EventSubscriptionQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EventSubscriptionQuotaExceededFault.prototype);
    }
}
export class SNSInvalidTopicFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SNSInvalidTopicFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSInvalidTopicFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSInvalidTopicFault.prototype);
    }
}
export class SNSNoAuthorizationFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SNSNoAuthorizationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSNoAuthorizationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSNoAuthorizationFault.prototype);
    }
}
export class SNSTopicArnNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SNSTopicArnNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSTopicArnNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSTopicArnNotFoundFault.prototype);
    }
}
export class SubscriptionAlreadyExistFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubscriptionAlreadyExistFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionAlreadyExistFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionAlreadyExistFault.prototype);
    }
}
export class SubscriptionCategoryNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubscriptionCategoryNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionCategoryNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionCategoryNotFoundFault.prototype);
    }
}
export class GlobalClusterAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "GlobalClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalClusterAlreadyExistsFault.prototype);
    }
}
export class GlobalClusterQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "GlobalClusterQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalClusterQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalClusterQuotaExceededFault.prototype);
    }
}
export class InvalidDBParameterGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBParameterGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBParameterGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBParameterGroupStateFault.prototype);
    }
}
export class DBSnapshotAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBSnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSnapshotAlreadyExistsFault.prototype);
    }
}
export class InvalidDBSubnetStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBSubnetStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSubnetStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSubnetStateFault.prototype);
    }
}
export class InvalidEventSubscriptionStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidEventSubscriptionStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEventSubscriptionStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEventSubscriptionStateFault.prototype);
    }
}
export class CertificateNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CertificateNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateNotFoundFault.prototype);
    }
}
export const ApplyMethod = {
    immediate: "immediate",
    pending_reboot: "pending-reboot",
};
export const SourceType = {
    db_cluster: "db-cluster",
    db_cluster_snapshot: "db-cluster-snapshot",
    db_instance: "db-instance",
    db_parameter_group: "db-parameter-group",
    db_security_group: "db-security-group",
    db_snapshot: "db-snapshot",
};
export class InvalidDBSecurityGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBSecurityGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSecurityGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSecurityGroupStateFault.prototype);
    }
}
export class SharedSnapshotQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SharedSnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SharedSnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SharedSnapshotQuotaExceededFault.prototype);
    }
}
export class DBUpgradeDependencyFailureFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DBUpgradeDependencyFailureFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBUpgradeDependencyFailureFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBUpgradeDependencyFailureFault.prototype);
    }
}
export class SubnetAlreadyInUse extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetAlreadyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetAlreadyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetAlreadyInUse.prototype);
    }
}
export class InsufficientDBClusterCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientDBClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientDBClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientDBClusterCapacityFault.prototype);
    }
}
export class InvalidDBSnapshotStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDBSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSnapshotStateFault.prototype);
    }
}
export class InvalidRestoreFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRestoreFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRestoreFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRestoreFault.prototype);
    }
}
