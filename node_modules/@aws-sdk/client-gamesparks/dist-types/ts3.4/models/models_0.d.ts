import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DocumentType as __DocumentType } from "@smithy/types";
import { GameSparksServiceException as __BaseException } from "./GameSparksServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface Connection {
  Id?: string;
  Created?: Date;
}
export interface CreateGameRequest {
  GameName: string | undefined;
  Description?: string;
  ClientToken?: string;
  Tags?: Record<string, string>;
}
export declare const GameState: {
  readonly ACTIVE: "ACTIVE";
  readonly DELETING: "DELETING";
};
export type GameState = (typeof GameState)[keyof typeof GameState];
export interface GameDetails {
  Name?: string;
  Arn?: string;
  Description?: string;
  Created?: Date;
  LastUpdated?: Date;
  State?: GameState;
  EnableTerminationProtection?: boolean;
  Tags?: Record<string, string>;
}
export interface CreateGameResult {
  Game?: GameDetails;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface CreateSnapshotRequest {
  GameName: string | undefined;
  Description?: string;
}
export interface Section {
  Name?: string;
  Size?: number;
  Attributes?: __DocumentType;
}
export interface SnapshotDetails {
  Id?: string;
  Description?: string;
  Sections?: Record<string, Section>;
  Created?: Date;
  LastUpdated?: Date;
}
export interface CreateSnapshotResult {
  Snapshot?: SnapshotDetails;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface CreateStageRequest {
  GameName: string | undefined;
  StageName: string | undefined;
  Role: string | undefined;
  Description?: string;
  ClientToken?: string;
  Tags?: Record<string, string>;
}
export declare const StageState: {
  readonly ACTIVE: "ACTIVE";
  readonly DELETING: "DELETING";
};
export type StageState = (typeof StageState)[keyof typeof StageState];
export interface StageDetails {
  Name?: string;
  GameKey?: string;
  Arn?: string;
  Role?: string;
  Description?: string;
  Created?: Date;
  LastUpdated?: Date;
  State?: StageState;
  Tags?: Record<string, string>;
  LogGroup?: string;
}
export interface CreateStageResult {
  Stage?: StageDetails;
}
export interface DeleteGameRequest {
  GameName: string | undefined;
}
export interface DeleteGameResult {}
export interface DeleteStageRequest {
  GameName: string | undefined;
  StageName: string | undefined;
}
export interface DeleteStageResult {}
export declare const DeploymentAction: {
  readonly DEPLOY: "DEPLOY";
  readonly UNDEPLOY: "UNDEPLOY";
};
export type DeploymentAction =
  (typeof DeploymentAction)[keyof typeof DeploymentAction];
export declare const ResultCode: {
  readonly INVALID_ROLE_FAILURE: "INVALID_ROLE_FAILURE";
  readonly SUCCESS: "SUCCESS";
  readonly UNSPECIFIED_FAILURE: "UNSPECIFIED_FAILURE";
};
export type ResultCode = (typeof ResultCode)[keyof typeof ResultCode];
export interface DeploymentResult {
  ResultCode?: ResultCode;
  Message?: string;
}
export declare const DeploymentState: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
};
export type DeploymentState =
  (typeof DeploymentState)[keyof typeof DeploymentState];
export interface DisconnectPlayerRequest {
  PlayerId: string | undefined;
  GameName: string | undefined;
  StageName: string | undefined;
}
export interface DisconnectPlayerResult {
  DisconnectSuccesses?: string[];
  DisconnectFailures?: string[];
}
export interface ExportSnapshotRequest {
  GameName: string | undefined;
  SnapshotId: string | undefined;
}
export interface ExportSnapshotResult {
  S3Url?: string;
}
export interface ExtensionDetails {
  Namespace?: string;
  Name?: string;
  Description?: string;
}
export interface ExtensionVersionDetails {
  Namespace?: string;
  Name?: string;
  Schema?: string;
  Version?: string;
}
export interface GameConfigurationDetails {
  Sections?: Record<string, Section>;
  Created?: Date;
  LastUpdated?: Date;
}
export interface GetExtensionRequest {
  Namespace: string | undefined;
  Name: string | undefined;
}
export interface GetExtensionResult {
  Extension?: ExtensionDetails;
}
export interface GetExtensionVersionRequest {
  Namespace: string | undefined;
  Name: string | undefined;
  ExtensionVersion: string | undefined;
}
export interface GetExtensionVersionResult {
  ExtensionVersion?: ExtensionVersionDetails;
}
export interface GetGameRequest {
  GameName: string | undefined;
}
export interface GetGameResult {
  Game?: GameDetails;
}
export interface GetGameConfigurationRequest {
  GameName: string | undefined;
  Sections?: string[];
}
export interface GetGameConfigurationResult {
  GameConfiguration?: GameConfigurationDetails;
}
export interface GetGeneratedCodeJobRequest {
  GameName: string | undefined;
  SnapshotId: string | undefined;
  JobId: string | undefined;
}
export declare const GeneratedCodeJobState: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
};
export type GeneratedCodeJobState =
  (typeof GeneratedCodeJobState)[keyof typeof GeneratedCodeJobState];
export interface GeneratedCodeJobDetails {
  S3Url?: string;
  Status?: GeneratedCodeJobState;
  Description?: string;
  ExpirationTime?: Date;
  GeneratedCodeJobId?: string;
}
export interface GetGeneratedCodeJobResult {
  GeneratedCodeJob?: GeneratedCodeJobDetails;
}
export interface GetPlayerConnectionStatusRequest {
  PlayerId: string | undefined;
  GameName: string | undefined;
  StageName: string | undefined;
}
export interface GetPlayerConnectionStatusResult {
  Connections?: Connection[];
}
export interface GetSnapshotRequest {
  GameName: string | undefined;
  SnapshotId: string | undefined;
  Sections?: string[];
}
export interface GetSnapshotResult {
  Snapshot?: SnapshotDetails;
}
export interface GetStageRequest {
  GameName: string | undefined;
  StageName: string | undefined;
}
export interface GetStageResult {
  Stage?: StageDetails;
}
export interface GetStageDeploymentRequest {
  GameName: string | undefined;
  StageName: string | undefined;
  DeploymentId?: string;
}
export interface StageDeploymentDetails {
  DeploymentId?: string;
  SnapshotId?: string;
  DeploymentAction?: DeploymentAction;
  DeploymentState?: DeploymentState;
  Created?: Date;
  LastUpdated?: Date;
  DeploymentResult?: DeploymentResult;
}
export interface GetStageDeploymentResult {
  StageDeployment?: StageDeploymentDetails;
}
export interface ImportGameConfigurationSource {
  File: Uint8Array | undefined;
}
export interface ImportGameConfigurationRequest {
  GameName: string | undefined;
  ImportSource: ImportGameConfigurationSource | undefined;
}
export interface ImportGameConfigurationResult {
  GameConfiguration?: GameConfigurationDetails;
}
export interface ListExtensionsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListExtensionsResult {
  Extensions?: ExtensionDetails[];
  NextToken?: string;
}
export interface ListExtensionVersionsRequest {
  Namespace: string | undefined;
  Name: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListExtensionVersionsResult {
  ExtensionVersions?: ExtensionVersionDetails[];
  NextToken?: string;
}
export interface ListGamesRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface GameSummary {
  Name?: string;
  Description?: string;
  State?: GameState;
  Tags?: Record<string, string>;
}
export interface ListGamesResult {
  Games?: GameSummary[];
  NextToken?: string;
}
export interface ListGeneratedCodeJobsRequest {
  GameName: string | undefined;
  SnapshotId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListGeneratedCodeJobsResult {
  GeneratedCodeJobs?: GeneratedCodeJobDetails[];
  NextToken?: string;
}
export interface ListSnapshotsRequest {
  GameName: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface SnapshotSummary {
  Id?: string;
  Description?: string;
  Created?: Date;
  LastUpdated?: Date;
}
export interface ListSnapshotsResult {
  Snapshots?: SnapshotSummary[];
  NextToken?: string;
}
export interface ListStageDeploymentsRequest {
  GameName: string | undefined;
  StageName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface StageDeploymentSummary {
  DeploymentId?: string;
  SnapshotId?: string;
  DeploymentAction?: DeploymentAction;
  DeploymentState?: DeploymentState;
  LastUpdated?: Date;
  DeploymentResult?: DeploymentResult;
}
export interface ListStageDeploymentsResult {
  StageDeployments?: StageDeploymentSummary[];
  NextToken?: string;
}
export interface ListStagesRequest {
  GameName: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface StageSummary {
  Name?: string;
  GameKey?: string;
  Description?: string;
  State?: StageState;
  Tags?: Record<string, string>;
}
export interface ListStagesResult {
  Stages?: StageSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResult {
  tags?: Record<string, string>;
}
export interface Generator {
  TargetPlatform?: string;
  Language?: string;
  GameSdkVersion?: string;
}
export interface StartGeneratedCodeJobRequest {
  GameName: string | undefined;
  SnapshotId: string | undefined;
  Generator: Generator | undefined;
}
export interface StartGeneratedCodeJobResult {
  GeneratedCodeJobId?: string;
}
export interface StartStageDeploymentRequest {
  GameName: string | undefined;
  StageName: string | undefined;
  SnapshotId: string | undefined;
  ClientToken?: string;
}
export interface StartStageDeploymentResult {
  StageDeployment?: StageDeploymentDetails;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResult {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResult {}
export interface UpdateGameRequest {
  GameName: string | undefined;
  Description?: string;
}
export interface UpdateGameResult {
  Game?: GameDetails;
}
export declare const Operation: {
  readonly ADD: "ADD";
  readonly REMOVE: "REMOVE";
  readonly REPLACE: "REPLACE";
};
export type Operation = (typeof Operation)[keyof typeof Operation];
export interface SectionModification {
  Section: string | undefined;
  Path: string | undefined;
  Operation: Operation | undefined;
  Value?: __DocumentType;
}
export interface UpdateGameConfigurationRequest {
  GameName: string | undefined;
  Modifications: SectionModification[] | undefined;
}
export interface UpdateGameConfigurationResult {
  GameConfiguration?: GameConfigurationDetails;
}
export interface UpdateSnapshotRequest {
  GameName: string | undefined;
  SnapshotId: string | undefined;
  Description?: string;
}
export interface UpdateSnapshotResult {
  Snapshot?: SnapshotDetails;
}
export interface UpdateStageRequest {
  GameName: string | undefined;
  StageName: string | undefined;
  Role?: string;
  Description?: string;
}
export interface UpdateStageResult {
  Stage?: StageDetails;
}
