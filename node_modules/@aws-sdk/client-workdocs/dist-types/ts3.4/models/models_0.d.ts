import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { WorkDocsServiceException as __BaseException } from "./WorkDocsServiceException";
export interface AbortDocumentVersionUploadRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class EntityNotExistsException extends __BaseException {
  readonly name: "EntityNotExistsException";
  readonly $fault: "client";
  Message?: string;
  EntityIds?: string[];
  constructor(
    opts: __ExceptionOptionType<EntityNotExistsException, __BaseException>
  );
}
export declare class FailedDependencyException extends __BaseException {
  readonly name: "FailedDependencyException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<FailedDependencyException, __BaseException>
  );
}
export declare class ProhibitedStateException extends __BaseException {
  readonly name: "ProhibitedStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ProhibitedStateException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class UnauthorizedOperationException extends __BaseException {
  readonly name: "UnauthorizedOperationException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<UnauthorizedOperationException, __BaseException>
  );
}
export declare class UnauthorizedResourceAccessException extends __BaseException {
  readonly name: "UnauthorizedResourceAccessException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      UnauthorizedResourceAccessException,
      __BaseException
    >
  );
}
export interface ActivateUserRequest {
  UserId: string | undefined;
  AuthenticationToken?: string;
}
export declare const LocaleType: {
  readonly DE: "de";
  readonly DEFAULT: "default";
  readonly EN: "en";
  readonly ES: "es";
  readonly FR: "fr";
  readonly JA: "ja";
  readonly KO: "ko";
  readonly PT_BR: "pt_BR";
  readonly RU: "ru";
  readonly ZH_CN: "zh_CN";
  readonly ZH_TW: "zh_TW";
};
export type LocaleType = (typeof LocaleType)[keyof typeof LocaleType];
export declare const UserStatusType: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
  readonly PENDING: "PENDING";
};
export type UserStatusType =
  (typeof UserStatusType)[keyof typeof UserStatusType];
export declare const StorageType: {
  readonly QUOTA: "QUOTA";
  readonly UNLIMITED: "UNLIMITED";
};
export type StorageType = (typeof StorageType)[keyof typeof StorageType];
export interface StorageRuleType {
  StorageAllocatedInBytes?: number;
  StorageType?: StorageType;
}
export interface UserStorageMetadata {
  StorageUtilizedInBytes?: number;
  StorageRule?: StorageRuleType;
}
export declare const UserType: {
  readonly ADMIN: "ADMIN";
  readonly MINIMALUSER: "MINIMALUSER";
  readonly POWERUSER: "POWERUSER";
  readonly USER: "USER";
  readonly WORKSPACESUSER: "WORKSPACESUSER";
};
export type UserType = (typeof UserType)[keyof typeof UserType];
export interface User {
  Id?: string;
  Username?: string;
  EmailAddress?: string;
  GivenName?: string;
  Surname?: string;
  OrganizationId?: string;
  RootFolderId?: string;
  RecycleBinFolderId?: string;
  Status?: UserStatusType;
  Type?: UserType;
  CreatedTimestamp?: Date;
  ModifiedTimestamp?: Date;
  TimeZoneId?: string;
  Locale?: LocaleType;
  Storage?: UserStorageMetadata;
}
export interface ActivateUserResponse {
  User?: User;
}
export declare const CommentStatusType: {
  readonly DELETED: "DELETED";
  readonly DRAFT: "DRAFT";
  readonly PUBLISHED: "PUBLISHED";
};
export type CommentStatusType =
  (typeof CommentStatusType)[keyof typeof CommentStatusType];
export interface CommentMetadata {
  CommentId?: string;
  Contributor?: User;
  CreatedTimestamp?: Date;
  CommentStatus?: CommentStatusType;
  RecipientId?: string;
  ContributorId?: string;
}
export interface UserMetadata {
  Id?: string;
  Username?: string;
  GivenName?: string;
  Surname?: string;
  EmailAddress?: string;
}
export declare const ResourceType: {
  readonly DOCUMENT: "DOCUMENT";
  readonly FOLDER: "FOLDER";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export interface ResourceMetadata {
  Type?: ResourceType;
  Name?: string;
  OriginalName?: string;
  Id?: string;
  VersionId?: string;
  Owner?: UserMetadata;
  ParentId?: string;
}
export interface GroupMetadata {
  Id?: string;
  Name?: string;
}
export interface Participants {
  Users?: UserMetadata[];
  Groups?: GroupMetadata[];
}
export declare const ActivityType: {
  readonly DOCUMENT_ANNOTATION_ADDED: "DOCUMENT_ANNOTATION_ADDED";
  readonly DOCUMENT_ANNOTATION_DELETED: "DOCUMENT_ANNOTATION_DELETED";
  readonly DOCUMENT_CHECKED_IN: "DOCUMENT_CHECKED_IN";
  readonly DOCUMENT_CHECKED_OUT: "DOCUMENT_CHECKED_OUT";
  readonly DOCUMENT_COMMENT_ADDED: "DOCUMENT_COMMENT_ADDED";
  readonly DOCUMENT_COMMENT_DELETED: "DOCUMENT_COMMENT_DELETED";
  readonly DOCUMENT_MOVED: "DOCUMENT_MOVED";
  readonly DOCUMENT_RECYCLED: "DOCUMENT_RECYCLED";
  readonly DOCUMENT_RENAMED: "DOCUMENT_RENAMED";
  readonly DOCUMENT_RESTORED: "DOCUMENT_RESTORED";
  readonly DOCUMENT_REVERTED: "DOCUMENT_REVERTED";
  readonly DOCUMENT_SHAREABLE_LINK_CREATED: "DOCUMENT_SHAREABLE_LINK_CREATED";
  readonly DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED: "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED";
  readonly DOCUMENT_SHAREABLE_LINK_REMOVED: "DOCUMENT_SHAREABLE_LINK_REMOVED";
  readonly DOCUMENT_SHARED: "DOCUMENT_SHARED";
  readonly DOCUMENT_SHARE_PERMISSION_CHANGED: "DOCUMENT_SHARE_PERMISSION_CHANGED";
  readonly DOCUMENT_UNSHARED: "DOCUMENT_UNSHARED";
  readonly DOCUMENT_VERSION_DELETED: "DOCUMENT_VERSION_DELETED";
  readonly DOCUMENT_VERSION_DOWNLOADED: "DOCUMENT_VERSION_DOWNLOADED";
  readonly DOCUMENT_VERSION_UPLOADED: "DOCUMENT_VERSION_UPLOADED";
  readonly DOCUMENT_VERSION_VIEWED: "DOCUMENT_VERSION_VIEWED";
  readonly FOLDER_CREATED: "FOLDER_CREATED";
  readonly FOLDER_DELETED: "FOLDER_DELETED";
  readonly FOLDER_MOVED: "FOLDER_MOVED";
  readonly FOLDER_RECYCLED: "FOLDER_RECYCLED";
  readonly FOLDER_RENAMED: "FOLDER_RENAMED";
  readonly FOLDER_RESTORED: "FOLDER_RESTORED";
  readonly FOLDER_SHAREABLE_LINK_CREATED: "FOLDER_SHAREABLE_LINK_CREATED";
  readonly FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED: "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED";
  readonly FOLDER_SHAREABLE_LINK_REMOVED: "FOLDER_SHAREABLE_LINK_REMOVED";
  readonly FOLDER_SHARED: "FOLDER_SHARED";
  readonly FOLDER_SHARE_PERMISSION_CHANGED: "FOLDER_SHARE_PERMISSION_CHANGED";
  readonly FOLDER_UNSHARED: "FOLDER_UNSHARED";
};
export type ActivityType = (typeof ActivityType)[keyof typeof ActivityType];
export interface Activity {
  Type?: ActivityType;
  TimeStamp?: Date;
  IsIndirectActivity?: boolean;
  OrganizationId?: string;
  Initiator?: UserMetadata;
  Participants?: Participants;
  ResourceMetadata?: ResourceMetadata;
  OriginalParent?: ResourceMetadata;
  CommentMetadata?: CommentMetadata;
}
export declare const AdditionalResponseFieldType: {
  readonly WEBURL: "WEBURL";
};
export type AdditionalResponseFieldType =
  (typeof AdditionalResponseFieldType)[keyof typeof AdditionalResponseFieldType];
export interface NotificationOptions {
  SendEmail?: boolean;
  EmailMessage?: string;
}
export declare const RoleType: {
  readonly CONTRIBUTOR: "CONTRIBUTOR";
  readonly COOWNER: "COOWNER";
  readonly OWNER: "OWNER";
  readonly VIEWER: "VIEWER";
};
export type RoleType = (typeof RoleType)[keyof typeof RoleType];
export declare const PrincipalType: {
  readonly ANONYMOUS: "ANONYMOUS";
  readonly GROUP: "GROUP";
  readonly INVITE: "INVITE";
  readonly ORGANIZATION: "ORGANIZATION";
  readonly USER: "USER";
};
export type PrincipalType = (typeof PrincipalType)[keyof typeof PrincipalType];
export interface SharePrincipal {
  Id: string | undefined;
  Type: PrincipalType | undefined;
  Role: RoleType | undefined;
}
export interface AddResourcePermissionsRequest {
  AuthenticationToken?: string;
  ResourceId: string | undefined;
  Principals: SharePrincipal[] | undefined;
  NotificationOptions?: NotificationOptions;
}
export declare const ShareStatusType: {
  readonly FAILURE: "FAILURE";
  readonly SUCCESS: "SUCCESS";
};
export type ShareStatusType =
  (typeof ShareStatusType)[keyof typeof ShareStatusType];
export interface ShareResult {
  PrincipalId?: string;
  InviteePrincipalId?: string;
  Role?: RoleType;
  Status?: ShareStatusType;
  ShareId?: string;
  StatusMessage?: string;
}
export interface AddResourcePermissionsResponse {
  ShareResults?: ShareResult[];
}
export declare const CommentVisibilityType: {
  readonly PRIVATE: "PRIVATE";
  readonly PUBLIC: "PUBLIC";
};
export type CommentVisibilityType =
  (typeof CommentVisibilityType)[keyof typeof CommentVisibilityType];
export interface CreateCommentRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
  ParentId?: string;
  ThreadId?: string;
  Text: string | undefined;
  Visibility?: CommentVisibilityType;
  NotifyCollaborators?: boolean;
}
export interface Comment {
  CommentId: string | undefined;
  ParentId?: string;
  ThreadId?: string;
  Text?: string;
  Contributor?: User;
  CreatedTimestamp?: Date;
  Status?: CommentStatusType;
  Visibility?: CommentVisibilityType;
  RecipientId?: string;
}
export interface CreateCommentResponse {
  Comment?: Comment;
}
export declare class DocumentLockedForCommentsException extends __BaseException {
  readonly name: "DocumentLockedForCommentsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      DocumentLockedForCommentsException,
      __BaseException
    >
  );
}
export declare class InvalidCommentOperationException extends __BaseException {
  readonly name: "InvalidCommentOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      InvalidCommentOperationException,
      __BaseException
    >
  );
}
export interface CreateCustomMetadataRequest {
  AuthenticationToken?: string;
  ResourceId: string | undefined;
  VersionId?: string;
  CustomMetadata: Record<string, string> | undefined;
}
export interface CreateCustomMetadataResponse {}
export declare class CustomMetadataLimitExceededException extends __BaseException {
  readonly name: "CustomMetadataLimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      CustomMetadataLimitExceededException,
      __BaseException
    >
  );
}
export declare class ConflictingOperationException extends __BaseException {
  readonly name: "ConflictingOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ConflictingOperationException, __BaseException>
  );
}
export interface CreateFolderRequest {
  AuthenticationToken?: string;
  Name?: string;
  ParentFolderId: string | undefined;
}
export declare const ResourceStateType: {
  readonly ACTIVE: "ACTIVE";
  readonly RECYCLED: "RECYCLED";
  readonly RECYCLING: "RECYCLING";
  readonly RESTORING: "RESTORING";
};
export type ResourceStateType =
  (typeof ResourceStateType)[keyof typeof ResourceStateType];
export interface FolderMetadata {
  Id?: string;
  Name?: string;
  CreatorId?: string;
  ParentFolderId?: string;
  CreatedTimestamp?: Date;
  ModifiedTimestamp?: Date;
  ResourceState?: ResourceStateType;
  Signature?: string;
  Labels?: string[];
  Size?: number;
  LatestVersionSize?: number;
}
export interface CreateFolderResponse {
  Metadata?: FolderMetadata;
}
export declare class EntityAlreadyExistsException extends __BaseException {
  readonly name: "EntityAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<EntityAlreadyExistsException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface CreateLabelsRequest {
  ResourceId: string | undefined;
  Labels: string[] | undefined;
  AuthenticationToken?: string;
}
export interface CreateLabelsResponse {}
export declare class TooManyLabelsException extends __BaseException {
  readonly name: "TooManyLabelsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyLabelsException, __BaseException>
  );
}
export declare const SubscriptionProtocolType: {
  readonly HTTPS: "HTTPS";
  readonly SQS: "SQS";
};
export type SubscriptionProtocolType =
  (typeof SubscriptionProtocolType)[keyof typeof SubscriptionProtocolType];
export declare const SubscriptionType: {
  readonly ALL: "ALL";
};
export type SubscriptionType =
  (typeof SubscriptionType)[keyof typeof SubscriptionType];
export interface CreateNotificationSubscriptionRequest {
  OrganizationId: string | undefined;
  Endpoint: string | undefined;
  Protocol: SubscriptionProtocolType | undefined;
  SubscriptionType: SubscriptionType | undefined;
}
export interface Subscription {
  SubscriptionId?: string;
  EndPoint?: string;
  Protocol?: SubscriptionProtocolType;
}
export interface CreateNotificationSubscriptionResponse {
  Subscription?: Subscription;
}
export declare class InvalidArgumentException extends __BaseException {
  readonly name: "InvalidArgumentException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidArgumentException, __BaseException>
  );
}
export declare class TooManySubscriptionsException extends __BaseException {
  readonly name: "TooManySubscriptionsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManySubscriptionsException, __BaseException>
  );
}
export interface CreateUserRequest {
  OrganizationId?: string;
  Username: string | undefined;
  EmailAddress?: string;
  GivenName: string | undefined;
  Surname: string | undefined;
  Password: string | undefined;
  TimeZoneId?: string;
  StorageRule?: StorageRuleType;
  AuthenticationToken?: string;
}
export interface CreateUserResponse {
  User?: User;
}
export interface DeactivateUserRequest {
  UserId: string | undefined;
  AuthenticationToken?: string;
}
export interface DeleteCommentRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
  CommentId: string | undefined;
}
export interface DeleteCustomMetadataRequest {
  AuthenticationToken?: string;
  ResourceId: string | undefined;
  VersionId?: string;
  Keys?: string[];
  DeleteAll?: boolean;
}
export interface DeleteCustomMetadataResponse {}
export interface DeleteDocumentRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
}
export interface DeleteDocumentVersionRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
  DeletePriorVersions: boolean | undefined;
}
export declare class InvalidOperationException extends __BaseException {
  readonly name: "InvalidOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidOperationException, __BaseException>
  );
}
export interface DeleteFolderRequest {
  AuthenticationToken?: string;
  FolderId: string | undefined;
}
export interface DeleteFolderContentsRequest {
  AuthenticationToken?: string;
  FolderId: string | undefined;
}
export interface DeleteLabelsRequest {
  ResourceId: string | undefined;
  AuthenticationToken?: string;
  Labels?: string[];
  DeleteAll?: boolean;
}
export interface DeleteLabelsResponse {}
export interface DeleteNotificationSubscriptionRequest {
  SubscriptionId: string | undefined;
  OrganizationId: string | undefined;
}
export interface DeleteUserRequest {
  AuthenticationToken?: string;
  UserId: string | undefined;
}
export interface DescribeActivitiesRequest {
  AuthenticationToken?: string;
  StartTime?: Date;
  EndTime?: Date;
  OrganizationId?: string;
  ActivityTypes?: string;
  ResourceId?: string;
  UserId?: string;
  IncludeIndirectActivities?: boolean;
  Limit?: number;
  Marker?: string;
}
export interface DescribeActivitiesResponse {
  UserActivities?: Activity[];
  Marker?: string;
}
export interface DescribeCommentsRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
  Limit?: number;
  Marker?: string;
}
export interface DescribeCommentsResponse {
  Comments?: Comment[];
  Marker?: string;
}
export interface DescribeDocumentVersionsRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  Marker?: string;
  Limit?: number;
  Include?: string;
  Fields?: string;
}
export declare const DocumentSourceType: {
  readonly ORIGINAL: "ORIGINAL";
  readonly WITH_COMMENTS: "WITH_COMMENTS";
};
export type DocumentSourceType =
  (typeof DocumentSourceType)[keyof typeof DocumentSourceType];
export declare const DocumentStatusType: {
  readonly ACTIVE: "ACTIVE";
  readonly INITIALIZED: "INITIALIZED";
};
export type DocumentStatusType =
  (typeof DocumentStatusType)[keyof typeof DocumentStatusType];
export declare const DocumentThumbnailType: {
  readonly LARGE: "LARGE";
  readonly SMALL: "SMALL";
  readonly SMALL_HQ: "SMALL_HQ";
};
export type DocumentThumbnailType =
  (typeof DocumentThumbnailType)[keyof typeof DocumentThumbnailType];
export interface DocumentVersionMetadata {
  Id?: string;
  Name?: string;
  ContentType?: string;
  Size?: number;
  Signature?: string;
  Status?: DocumentStatusType;
  CreatedTimestamp?: Date;
  ModifiedTimestamp?: Date;
  ContentCreatedTimestamp?: Date;
  ContentModifiedTimestamp?: Date;
  CreatorId?: string;
  Thumbnail?: Partial<Record<DocumentThumbnailType, string>>;
  Source?: Partial<Record<DocumentSourceType, string>>;
}
export interface DescribeDocumentVersionsResponse {
  DocumentVersions?: DocumentVersionMetadata[];
  Marker?: string;
}
export declare class InvalidPasswordException extends __BaseException {
  readonly name: "InvalidPasswordException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidPasswordException, __BaseException>
  );
}
export declare const OrderType: {
  readonly ASCENDING: "ASCENDING";
  readonly DESCENDING: "DESCENDING";
};
export type OrderType = (typeof OrderType)[keyof typeof OrderType];
export declare const ResourceSortType: {
  readonly DATE: "DATE";
  readonly NAME: "NAME";
};
export type ResourceSortType =
  (typeof ResourceSortType)[keyof typeof ResourceSortType];
export declare const FolderContentType: {
  readonly ALL: "ALL";
  readonly DOCUMENT: "DOCUMENT";
  readonly FOLDER: "FOLDER";
};
export type FolderContentType =
  (typeof FolderContentType)[keyof typeof FolderContentType];
export interface DescribeFolderContentsRequest {
  AuthenticationToken?: string;
  FolderId: string | undefined;
  Sort?: ResourceSortType;
  Order?: OrderType;
  Limit?: number;
  Marker?: string;
  Type?: FolderContentType;
  Include?: string;
}
export interface DocumentMetadata {
  Id?: string;
  CreatorId?: string;
  ParentFolderId?: string;
  CreatedTimestamp?: Date;
  ModifiedTimestamp?: Date;
  LatestVersionMetadata?: DocumentVersionMetadata;
  ResourceState?: ResourceStateType;
  Labels?: string[];
}
export interface DescribeFolderContentsResponse {
  Folders?: FolderMetadata[];
  Documents?: DocumentMetadata[];
  Marker?: string;
}
export interface DescribeGroupsRequest {
  AuthenticationToken?: string;
  SearchQuery: string | undefined;
  OrganizationId?: string;
  Marker?: string;
  Limit?: number;
}
export interface DescribeGroupsResponse {
  Groups?: GroupMetadata[];
  Marker?: string;
}
export interface DescribeNotificationSubscriptionsRequest {
  OrganizationId: string | undefined;
  Marker?: string;
  Limit?: number;
}
export interface DescribeNotificationSubscriptionsResponse {
  Subscriptions?: Subscription[];
  Marker?: string;
}
export interface DescribeResourcePermissionsRequest {
  AuthenticationToken?: string;
  ResourceId: string | undefined;
  PrincipalId?: string;
  Limit?: number;
  Marker?: string;
}
export declare const RolePermissionType: {
  readonly DIRECT: "DIRECT";
  readonly INHERITED: "INHERITED";
};
export type RolePermissionType =
  (typeof RolePermissionType)[keyof typeof RolePermissionType];
export interface PermissionInfo {
  Role?: RoleType;
  Type?: RolePermissionType;
}
export interface Principal {
  Id?: string;
  Type?: PrincipalType;
  Roles?: PermissionInfo[];
}
export interface DescribeResourcePermissionsResponse {
  Principals?: Principal[];
  Marker?: string;
}
export interface DescribeRootFoldersRequest {
  AuthenticationToken: string | undefined;
  Limit?: number;
  Marker?: string;
}
export interface DescribeRootFoldersResponse {
  Folders?: FolderMetadata[];
  Marker?: string;
}
export declare const UserFilterType: {
  readonly ACTIVE_PENDING: "ACTIVE_PENDING";
  readonly ALL: "ALL";
};
export type UserFilterType =
  (typeof UserFilterType)[keyof typeof UserFilterType];
export declare const UserSortType: {
  readonly FULL_NAME: "FULL_NAME";
  readonly STORAGE_LIMIT: "STORAGE_LIMIT";
  readonly STORAGE_USED: "STORAGE_USED";
  readonly USER_NAME: "USER_NAME";
  readonly USER_STATUS: "USER_STATUS";
};
export type UserSortType = (typeof UserSortType)[keyof typeof UserSortType];
export interface DescribeUsersRequest {
  AuthenticationToken?: string;
  OrganizationId?: string;
  UserIds?: string;
  Query?: string;
  Include?: UserFilterType;
  Order?: OrderType;
  Sort?: UserSortType;
  Marker?: string;
  Limit?: number;
  Fields?: string;
}
export interface DescribeUsersResponse {
  Users?: User[];
  TotalNumberOfUsers?: number;
  Marker?: string;
}
export declare class RequestedEntityTooLargeException extends __BaseException {
  readonly name: "RequestedEntityTooLargeException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      RequestedEntityTooLargeException,
      __BaseException
    >
  );
}
export interface GetCurrentUserRequest {
  AuthenticationToken: string | undefined;
}
export interface GetCurrentUserResponse {
  User?: User;
}
export interface GetDocumentRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  IncludeCustomMetadata?: boolean;
}
export interface GetDocumentResponse {
  Metadata?: DocumentMetadata;
  CustomMetadata?: Record<string, string>;
}
export interface GetDocumentPathRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  Limit?: number;
  Fields?: string;
  Marker?: string;
}
export interface ResourcePathComponent {
  Id?: string;
  Name?: string;
}
export interface ResourcePath {
  Components?: ResourcePathComponent[];
}
export interface GetDocumentPathResponse {
  Path?: ResourcePath;
}
export interface GetDocumentVersionRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
  Fields?: string;
  IncludeCustomMetadata?: boolean;
}
export interface GetDocumentVersionResponse {
  Metadata?: DocumentVersionMetadata;
  CustomMetadata?: Record<string, string>;
}
export interface GetFolderRequest {
  AuthenticationToken?: string;
  FolderId: string | undefined;
  IncludeCustomMetadata?: boolean;
}
export interface GetFolderResponse {
  Metadata?: FolderMetadata;
  CustomMetadata?: Record<string, string>;
}
export interface GetFolderPathRequest {
  AuthenticationToken?: string;
  FolderId: string | undefined;
  Limit?: number;
  Fields?: string;
  Marker?: string;
}
export interface GetFolderPathResponse {
  Path?: ResourcePath;
}
export declare const ResourceCollectionType: {
  readonly SHARED_WITH_ME: "SHARED_WITH_ME";
};
export type ResourceCollectionType =
  (typeof ResourceCollectionType)[keyof typeof ResourceCollectionType];
export interface GetResourcesRequest {
  AuthenticationToken?: string;
  UserId?: string;
  CollectionType?: ResourceCollectionType;
  Limit?: number;
  Marker?: string;
}
export interface GetResourcesResponse {
  Folders?: FolderMetadata[];
  Documents?: DocumentMetadata[];
  Marker?: string;
}
export declare class DraftUploadOutOfSyncException extends __BaseException {
  readonly name: "DraftUploadOutOfSyncException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<DraftUploadOutOfSyncException, __BaseException>
  );
}
export interface InitiateDocumentVersionUploadRequest {
  AuthenticationToken?: string;
  Id?: string;
  Name?: string;
  ContentCreatedTimestamp?: Date;
  ContentModifiedTimestamp?: Date;
  ContentType?: string;
  DocumentSizeInBytes?: number;
  ParentFolderId?: string;
}
export interface UploadMetadata {
  UploadUrl?: string;
  SignedHeaders?: Record<string, string>;
}
export interface InitiateDocumentVersionUploadResponse {
  Metadata?: DocumentMetadata;
  UploadMetadata?: UploadMetadata;
}
export declare class ResourceAlreadyCheckedOutException extends __BaseException {
  readonly name: "ResourceAlreadyCheckedOutException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ResourceAlreadyCheckedOutException,
      __BaseException
    >
  );
}
export declare class StorageLimitExceededException extends __BaseException {
  readonly name: "StorageLimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<StorageLimitExceededException, __BaseException>
  );
}
export declare class StorageLimitWillExceedException extends __BaseException {
  readonly name: "StorageLimitWillExceedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      StorageLimitWillExceedException,
      __BaseException
    >
  );
}
export interface RemoveAllResourcePermissionsRequest {
  AuthenticationToken?: string;
  ResourceId: string | undefined;
}
export interface RemoveResourcePermissionRequest {
  AuthenticationToken?: string;
  ResourceId: string | undefined;
  PrincipalId: string | undefined;
  PrincipalType?: PrincipalType;
}
export interface RestoreDocumentVersionsRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
}
export declare const ContentCategoryType: {
  readonly AUDIO: "AUDIO";
  readonly DOCUMENT: "DOCUMENT";
  readonly IMAGE: "IMAGE";
  readonly OTHER: "OTHER";
  readonly PDF: "PDF";
  readonly PRESENTATION: "PRESENTATION";
  readonly SOURCE_CODE: "SOURCE_CODE";
  readonly SPREADSHEET: "SPREADSHEET";
  readonly VIDEO: "VIDEO";
};
export type ContentCategoryType =
  (typeof ContentCategoryType)[keyof typeof ContentCategoryType];
export interface DateRangeType {
  StartValue?: Date;
  EndValue?: Date;
}
export declare const PrincipalRoleType: {
  readonly CONTRIBUTOR: "CONTRIBUTOR";
  readonly COOWNER: "COOWNER";
  readonly OWNER: "OWNER";
  readonly VIEWER: "VIEWER";
};
export type PrincipalRoleType =
  (typeof PrincipalRoleType)[keyof typeof PrincipalRoleType];
export interface SearchPrincipalType {
  Id: string | undefined;
  Roles?: PrincipalRoleType[];
}
export declare const SearchResourceType: {
  readonly COMMENT: "COMMENT";
  readonly DOCUMENT: "DOCUMENT";
  readonly DOCUMENT_VERSION: "DOCUMENT_VERSION";
  readonly FOLDER: "FOLDER";
};
export type SearchResourceType =
  (typeof SearchResourceType)[keyof typeof SearchResourceType];
export declare const SearchCollectionType: {
  readonly OWNED: "OWNED";
  readonly SHARED_WITH_ME: "SHARED_WITH_ME";
};
export type SearchCollectionType =
  (typeof SearchCollectionType)[keyof typeof SearchCollectionType];
export interface LongRangeType {
  StartValue?: number;
  EndValue?: number;
}
export declare const LanguageCodeType: {
  readonly AR: "AR";
  readonly BG: "BG";
  readonly BN: "BN";
  readonly CS: "CS";
  readonly DA: "DA";
  readonly DE: "DE";
  readonly DEFAULT: "DEFAULT";
  readonly EL: "EL";
  readonly EN: "EN";
  readonly ES: "ES";
  readonly FA: "FA";
  readonly FI: "FI";
  readonly FR: "FR";
  readonly HI: "HI";
  readonly HU: "HU";
  readonly ID: "ID";
  readonly IT: "IT";
  readonly JA: "JA";
  readonly KO: "KO";
  readonly LT: "LT";
  readonly LV: "LV";
  readonly NL: "NL";
  readonly NO: "NO";
  readonly PT: "PT";
  readonly RO: "RO";
  readonly RU: "RU";
  readonly SV: "SV";
  readonly SW: "SW";
  readonly TH: "TH";
  readonly TR: "TR";
  readonly ZH: "ZH";
};
export type LanguageCodeType =
  (typeof LanguageCodeType)[keyof typeof LanguageCodeType];
export interface Filters {
  TextLocales?: LanguageCodeType[];
  ContentCategories?: ContentCategoryType[];
  ResourceTypes?: SearchResourceType[];
  Labels?: string[];
  Principals?: SearchPrincipalType[];
  AncestorIds?: string[];
  SearchCollectionTypes?: SearchCollectionType[];
  SizeRange?: LongRangeType;
  CreatedRange?: DateRangeType;
  ModifiedRange?: DateRangeType;
}
export declare const OrderByFieldType: {
  readonly CREATED_TIMESTAMP: "CREATED_TIMESTAMP";
  readonly MODIFIED_TIMESTAMP: "MODIFIED_TIMESTAMP";
  readonly NAME: "NAME";
  readonly RELEVANCE: "RELEVANCE";
  readonly SIZE: "SIZE";
};
export type OrderByFieldType =
  (typeof OrderByFieldType)[keyof typeof OrderByFieldType];
export declare const SortOrder: {
  readonly ASC: "ASC";
  readonly DESC: "DESC";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface SearchSortResult {
  Field?: OrderByFieldType;
  Order?: SortOrder;
}
export declare const SearchQueryScopeType: {
  readonly CONTENT: "CONTENT";
  readonly NAME: "NAME";
};
export type SearchQueryScopeType =
  (typeof SearchQueryScopeType)[keyof typeof SearchQueryScopeType];
export interface SearchResourcesRequest {
  AuthenticationToken?: string;
  QueryText?: string;
  QueryScopes?: SearchQueryScopeType[];
  OrganizationId?: string;
  AdditionalResponseFields?: AdditionalResponseFieldType[];
  Filters?: Filters;
  OrderBy?: SearchSortResult[];
  Limit?: number;
  Marker?: string;
}
export declare const ResponseItemType: {
  readonly COMMENT: "COMMENT";
  readonly DOCUMENT: "DOCUMENT";
  readonly DOCUMENT_VERSION: "DOCUMENT_VERSION";
  readonly FOLDER: "FOLDER";
};
export type ResponseItemType =
  (typeof ResponseItemType)[keyof typeof ResponseItemType];
export interface ResponseItem {
  ResourceType?: ResponseItemType;
  WebUrl?: string;
  DocumentMetadata?: DocumentMetadata;
  FolderMetadata?: FolderMetadata;
  CommentMetadata?: CommentMetadata;
  DocumentVersionMetadata?: DocumentVersionMetadata;
}
export interface SearchResourcesResponse {
  Items?: ResponseItem[];
  Marker?: string;
}
export interface UpdateDocumentRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  Name?: string;
  ParentFolderId?: string;
  ResourceState?: ResourceStateType;
}
export declare const DocumentVersionStatus: {
  readonly ACTIVE: "ACTIVE";
};
export type DocumentVersionStatus =
  (typeof DocumentVersionStatus)[keyof typeof DocumentVersionStatus];
export interface UpdateDocumentVersionRequest {
  AuthenticationToken?: string;
  DocumentId: string | undefined;
  VersionId: string | undefined;
  VersionStatus?: DocumentVersionStatus;
}
export interface UpdateFolderRequest {
  AuthenticationToken?: string;
  FolderId: string | undefined;
  Name?: string;
  ParentFolderId?: string;
  ResourceState?: ResourceStateType;
}
export declare class DeactivatingLastSystemUserException extends __BaseException {
  readonly name: "DeactivatingLastSystemUserException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<
      DeactivatingLastSystemUserException,
      __BaseException
    >
  );
}
export declare class IllegalUserStateException extends __BaseException {
  readonly name: "IllegalUserStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<IllegalUserStateException, __BaseException>
  );
}
export declare const BooleanEnumType: {
  readonly FALSE: "FALSE";
  readonly TRUE: "TRUE";
};
export type BooleanEnumType =
  (typeof BooleanEnumType)[keyof typeof BooleanEnumType];
export interface UpdateUserRequest {
  AuthenticationToken?: string;
  UserId: string | undefined;
  GivenName?: string;
  Surname?: string;
  Type?: UserType;
  StorageRule?: StorageRuleType;
  TimeZoneId?: string;
  Locale?: LocaleType;
  GrantPoweruserPrivileges?: BooleanEnumType;
}
export interface UpdateUserResponse {
  User?: User;
}
export declare const AbortDocumentVersionUploadRequestFilterSensitiveLog: (
  obj: AbortDocumentVersionUploadRequest
) => any;
export declare const ActivateUserRequestFilterSensitiveLog: (
  obj: ActivateUserRequest
) => any;
export declare const UserFilterSensitiveLog: (obj: User) => any;
export declare const ActivateUserResponseFilterSensitiveLog: (
  obj: ActivateUserResponse
) => any;
export declare const CommentMetadataFilterSensitiveLog: (
  obj: CommentMetadata
) => any;
export declare const UserMetadataFilterSensitiveLog: (obj: UserMetadata) => any;
export declare const ResourceMetadataFilterSensitiveLog: (
  obj: ResourceMetadata
) => any;
export declare const ParticipantsFilterSensitiveLog: (obj: Participants) => any;
export declare const ActivityFilterSensitiveLog: (obj: Activity) => any;
export declare const NotificationOptionsFilterSensitiveLog: (
  obj: NotificationOptions
) => any;
export declare const AddResourcePermissionsRequestFilterSensitiveLog: (
  obj: AddResourcePermissionsRequest
) => any;
export declare const ShareResultFilterSensitiveLog: (obj: ShareResult) => any;
export declare const AddResourcePermissionsResponseFilterSensitiveLog: (
  obj: AddResourcePermissionsResponse
) => any;
export declare const CreateCommentRequestFilterSensitiveLog: (
  obj: CreateCommentRequest
) => any;
export declare const CommentFilterSensitiveLog: (obj: Comment) => any;
export declare const CreateCommentResponseFilterSensitiveLog: (
  obj: CreateCommentResponse
) => any;
export declare const CreateCustomMetadataRequestFilterSensitiveLog: (
  obj: CreateCustomMetadataRequest
) => any;
export declare const CreateFolderRequestFilterSensitiveLog: (
  obj: CreateFolderRequest
) => any;
export declare const FolderMetadataFilterSensitiveLog: (
  obj: FolderMetadata
) => any;
export declare const CreateFolderResponseFilterSensitiveLog: (
  obj: CreateFolderResponse
) => any;
export declare const CreateLabelsRequestFilterSensitiveLog: (
  obj: CreateLabelsRequest
) => any;
export declare const CreateUserRequestFilterSensitiveLog: (
  obj: CreateUserRequest
) => any;
export declare const CreateUserResponseFilterSensitiveLog: (
  obj: CreateUserResponse
) => any;
export declare const DeactivateUserRequestFilterSensitiveLog: (
  obj: DeactivateUserRequest
) => any;
export declare const DeleteCommentRequestFilterSensitiveLog: (
  obj: DeleteCommentRequest
) => any;
export declare const DeleteCustomMetadataRequestFilterSensitiveLog: (
  obj: DeleteCustomMetadataRequest
) => any;
export declare const DeleteDocumentRequestFilterSensitiveLog: (
  obj: DeleteDocumentRequest
) => any;
export declare const DeleteDocumentVersionRequestFilterSensitiveLog: (
  obj: DeleteDocumentVersionRequest
) => any;
export declare const DeleteFolderRequestFilterSensitiveLog: (
  obj: DeleteFolderRequest
) => any;
export declare const DeleteFolderContentsRequestFilterSensitiveLog: (
  obj: DeleteFolderContentsRequest
) => any;
export declare const DeleteLabelsRequestFilterSensitiveLog: (
  obj: DeleteLabelsRequest
) => any;
export declare const DeleteUserRequestFilterSensitiveLog: (
  obj: DeleteUserRequest
) => any;
export declare const DescribeActivitiesRequestFilterSensitiveLog: (
  obj: DescribeActivitiesRequest
) => any;
export declare const DescribeActivitiesResponseFilterSensitiveLog: (
  obj: DescribeActivitiesResponse
) => any;
export declare const DescribeCommentsRequestFilterSensitiveLog: (
  obj: DescribeCommentsRequest
) => any;
export declare const DescribeCommentsResponseFilterSensitiveLog: (
  obj: DescribeCommentsResponse
) => any;
export declare const DescribeDocumentVersionsRequestFilterSensitiveLog: (
  obj: DescribeDocumentVersionsRequest
) => any;
export declare const DocumentVersionMetadataFilterSensitiveLog: (
  obj: DocumentVersionMetadata
) => any;
export declare const DescribeDocumentVersionsResponseFilterSensitiveLog: (
  obj: DescribeDocumentVersionsResponse
) => any;
export declare const DescribeFolderContentsRequestFilterSensitiveLog: (
  obj: DescribeFolderContentsRequest
) => any;
export declare const DocumentMetadataFilterSensitiveLog: (
  obj: DocumentMetadata
) => any;
export declare const DescribeFolderContentsResponseFilterSensitiveLog: (
  obj: DescribeFolderContentsResponse
) => any;
export declare const DescribeGroupsRequestFilterSensitiveLog: (
  obj: DescribeGroupsRequest
) => any;
export declare const DescribeResourcePermissionsRequestFilterSensitiveLog: (
  obj: DescribeResourcePermissionsRequest
) => any;
export declare const DescribeRootFoldersRequestFilterSensitiveLog: (
  obj: DescribeRootFoldersRequest
) => any;
export declare const DescribeRootFoldersResponseFilterSensitiveLog: (
  obj: DescribeRootFoldersResponse
) => any;
export declare const DescribeUsersRequestFilterSensitiveLog: (
  obj: DescribeUsersRequest
) => any;
export declare const DescribeUsersResponseFilterSensitiveLog: (
  obj: DescribeUsersResponse
) => any;
export declare const GetCurrentUserRequestFilterSensitiveLog: (
  obj: GetCurrentUserRequest
) => any;
export declare const GetCurrentUserResponseFilterSensitiveLog: (
  obj: GetCurrentUserResponse
) => any;
export declare const GetDocumentRequestFilterSensitiveLog: (
  obj: GetDocumentRequest
) => any;
export declare const GetDocumentResponseFilterSensitiveLog: (
  obj: GetDocumentResponse
) => any;
export declare const GetDocumentPathRequestFilterSensitiveLog: (
  obj: GetDocumentPathRequest
) => any;
export declare const ResourcePathComponentFilterSensitiveLog: (
  obj: ResourcePathComponent
) => any;
export declare const ResourcePathFilterSensitiveLog: (obj: ResourcePath) => any;
export declare const GetDocumentPathResponseFilterSensitiveLog: (
  obj: GetDocumentPathResponse
) => any;
export declare const GetDocumentVersionRequestFilterSensitiveLog: (
  obj: GetDocumentVersionRequest
) => any;
export declare const GetDocumentVersionResponseFilterSensitiveLog: (
  obj: GetDocumentVersionResponse
) => any;
export declare const GetFolderRequestFilterSensitiveLog: (
  obj: GetFolderRequest
) => any;
export declare const GetFolderResponseFilterSensitiveLog: (
  obj: GetFolderResponse
) => any;
export declare const GetFolderPathRequestFilterSensitiveLog: (
  obj: GetFolderPathRequest
) => any;
export declare const GetFolderPathResponseFilterSensitiveLog: (
  obj: GetFolderPathResponse
) => any;
export declare const GetResourcesRequestFilterSensitiveLog: (
  obj: GetResourcesRequest
) => any;
export declare const GetResourcesResponseFilterSensitiveLog: (
  obj: GetResourcesResponse
) => any;
export declare const InitiateDocumentVersionUploadRequestFilterSensitiveLog: (
  obj: InitiateDocumentVersionUploadRequest
) => any;
export declare const UploadMetadataFilterSensitiveLog: (
  obj: UploadMetadata
) => any;
export declare const InitiateDocumentVersionUploadResponseFilterSensitiveLog: (
  obj: InitiateDocumentVersionUploadResponse
) => any;
export declare const RemoveAllResourcePermissionsRequestFilterSensitiveLog: (
  obj: RemoveAllResourcePermissionsRequest
) => any;
export declare const RemoveResourcePermissionRequestFilterSensitiveLog: (
  obj: RemoveResourcePermissionRequest
) => any;
export declare const RestoreDocumentVersionsRequestFilterSensitiveLog: (
  obj: RestoreDocumentVersionsRequest
) => any;
export declare const SearchResourcesRequestFilterSensitiveLog: (
  obj: SearchResourcesRequest
) => any;
export declare const ResponseItemFilterSensitiveLog: (obj: ResponseItem) => any;
export declare const SearchResourcesResponseFilterSensitiveLog: (
  obj: SearchResourcesResponse
) => any;
export declare const UpdateDocumentRequestFilterSensitiveLog: (
  obj: UpdateDocumentRequest
) => any;
export declare const UpdateDocumentVersionRequestFilterSensitiveLog: (
  obj: UpdateDocumentVersionRequest
) => any;
export declare const UpdateFolderRequestFilterSensitiveLog: (
  obj: UpdateFolderRequest
) => any;
export declare const UpdateUserRequestFilterSensitiveLog: (
  obj: UpdateUserRequest
) => any;
export declare const UpdateUserResponseFilterSensitiveLog: (
  obj: UpdateUserResponse
) => any;
