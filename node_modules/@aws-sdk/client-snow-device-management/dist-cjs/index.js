"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AttachmentStatus: () => AttachmentStatus,
  CancelTaskCommand: () => CancelTaskCommand,
  Command: () => Command,
  CreateTaskCommand: () => CreateTaskCommand,
  DescribeDeviceCommand: () => DescribeDeviceCommand,
  DescribeDeviceEc2InstancesCommand: () => DescribeDeviceEc2InstancesCommand,
  DescribeExecutionCommand: () => DescribeExecutionCommand,
  DescribeTaskCommand: () => DescribeTaskCommand,
  ExecutionState: () => ExecutionState,
  InstanceStateName: () => InstanceStateName,
  InternalServerException: () => InternalServerException,
  IpAddressAssignment: () => IpAddressAssignment,
  ListDeviceResourcesCommand: () => ListDeviceResourcesCommand,
  ListDevicesCommand: () => ListDevicesCommand,
  ListExecutionsCommand: () => ListExecutionsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTasksCommand: () => ListTasksCommand,
  PhysicalConnectorType: () => PhysicalConnectorType,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SnowDeviceManagement: () => SnowDeviceManagement,
  SnowDeviceManagementClient: () => SnowDeviceManagementClient,
  SnowDeviceManagementServiceException: () => SnowDeviceManagementServiceException,
  TagResourceCommand: () => TagResourceCommand,
  TaskState: () => TaskState,
  ThrottlingException: () => ThrottlingException,
  UnlockState: () => UnlockState,
  UntagResourceCommand: () => UntagResourceCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListDeviceResources: () => paginateListDeviceResources,
  paginateListDevices: () => paginateListDevices,
  paginateListExecutions: () => paginateListExecutions,
  paginateListTasks: () => paginateListTasks
});
module.exports = __toCommonJS(src_exports);

// src/SnowDeviceManagementClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "snow-device-management"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/SnowDeviceManagementClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/SnowDeviceManagementClient.ts
var _SnowDeviceManagementClient = class _SnowDeviceManagementClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultSnowDeviceManagementHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_SnowDeviceManagementClient, "SnowDeviceManagementClient");
var SnowDeviceManagementClient = _SnowDeviceManagementClient;

// src/SnowDeviceManagement.ts


// src/commands/CancelTaskCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/SnowDeviceManagementServiceException.ts

var _SnowDeviceManagementServiceException = class _SnowDeviceManagementServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _SnowDeviceManagementServiceException.prototype);
  }
};
__name(_SnowDeviceManagementServiceException, "SnowDeviceManagementServiceException");
var SnowDeviceManagementServiceException = _SnowDeviceManagementServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends SnowDeviceManagementServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AttachmentStatus = {
  ATTACHED: "ATTACHED",
  ATTACHING: "ATTACHING",
  DETACHED: "DETACHED",
  DETACHING: "DETACHING"
};
var _InternalServerException = class _InternalServerException extends SnowDeviceManagementServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    this.$retryable = {};
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends SnowDeviceManagementServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ThrottlingException = class _ThrottlingException extends SnowDeviceManagementServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    this.$retryable = {
      throttling: true
    };
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends SnowDeviceManagementServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var Command;
((Command3) => {
  Command3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.unlock !== void 0)
      return visitor.unlock(value.unlock);
    if (value.reboot !== void 0)
      return visitor.reboot(value.reboot);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Command || (Command = {}));
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends SnowDeviceManagementServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var UnlockState = {
  LOCKED: "LOCKED",
  UNLOCKED: "UNLOCKED",
  UNLOCKING: "UNLOCKING"
};
var IpAddressAssignment = {
  DHCP: "DHCP",
  STATIC: "STATIC"
};
var PhysicalConnectorType = {
  QSFP: "QSFP",
  RJ45: "RJ45",
  RJ45_2: "RJ45_2",
  SFP_PLUS: "SFP_PLUS",
  WIFI: "WIFI"
};
var InstanceStateName = {
  PENDING: "PENDING",
  RUNNING: "RUNNING",
  SHUTTING_DOWN: "SHUTTING_DOWN",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING",
  TERMINATED: "TERMINATED"
};
var ExecutionState = {
  CANCELED: "CANCELED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  QUEUED: "QUEUED",
  REJECTED: "REJECTED",
  SUCCEEDED: "SUCCEEDED",
  TIMED_OUT: "TIMED_OUT"
};
var TaskState = {
  CANCELED: "CANCELED",
  COMPLETED: "COMPLETED",
  IN_PROGRESS: "IN_PROGRESS"
};

// src/protocols/Aws_restJson1.ts
var se_CancelTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/task/{taskId}/cancel");
  b.p("taskId", () => input.taskId, "{taskId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelTaskCommand");
var se_CreateTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/task");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      command: (_) => (0, import_smithy_client._json)(_),
      description: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      targets: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateTaskCommand");
var se_DescribeDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/managed-device/{managedDeviceId}/describe");
  b.p("managedDeviceId", () => input.managedDeviceId, "{managedDeviceId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeDeviceCommand");
var se_DescribeDeviceEc2InstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/managed-device/{managedDeviceId}/resources/ec2/describe");
  b.p("managedDeviceId", () => input.managedDeviceId, "{managedDeviceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      instanceIds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeDeviceEc2InstancesCommand");
var se_DescribeExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/task/{taskId}/execution/{managedDeviceId}");
  b.p("taskId", () => input.taskId, "{taskId}", false);
  b.p("managedDeviceId", () => input.managedDeviceId, "{managedDeviceId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeExecutionCommand");
var se_DescribeTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/task/{taskId}");
  b.p("taskId", () => input.taskId, "{taskId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeTaskCommand");
var se_ListDeviceResourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/managed-device/{managedDeviceId}/resources");
  b.p("managedDeviceId", () => input.managedDeviceId, "{managedDeviceId}", false);
  const query = (0, import_smithy_client.map)({
    [_t]: [, input[_t]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDeviceResourcesCommand");
var se_ListDevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/managed-devices");
  const query = (0, import_smithy_client.map)({
    [_jI]: [, input[_jI]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDevicesCommand");
var se_ListExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/executions");
  const query = (0, import_smithy_client.map)({
    [_tI]: [, (0, import_smithy_client.expectNonNull)(input[_tI], `taskId`)],
    [_s]: [, input[_s]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListExecutionsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListTasksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tasks");
  const query = (0, import_smithy_client.map)({
    [_s]: [, input[_s]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTasksCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var de_CancelTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    taskId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelTaskCommand");
var de_CreateTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    taskArn: import_smithy_client.expectString,
    taskId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateTaskCommand");
var de_DescribeDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associatedWithJob: import_smithy_client.expectString,
    deviceCapacities: import_smithy_client._json,
    deviceState: import_smithy_client.expectString,
    deviceType: import_smithy_client.expectString,
    lastReachedOutAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    managedDeviceArn: import_smithy_client.expectString,
    managedDeviceId: import_smithy_client.expectString,
    physicalNetworkInterfaces: import_smithy_client._json,
    software: import_smithy_client._json,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDeviceCommand");
var de_DescribeDeviceEc2InstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    instances: (_) => de_InstanceSummaryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDeviceEc2InstancesCommand");
var de_DescribeExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    executionId: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    managedDeviceId: import_smithy_client.expectString,
    startedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    state: import_smithy_client.expectString,
    taskId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeExecutionCommand");
var de_DescribeTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    completedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    targets: import_smithy_client._json,
    taskArn: import_smithy_client.expectString,
    taskId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeTaskCommand");
var de_ListDeviceResourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    resources: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDeviceResourcesCommand");
var de_ListDevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    devices: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDevicesCommand");
var de_ListExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    executions: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListExecutionsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListTasksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    tasks: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTasksCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.snowdevicemanagement#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.snowdevicemanagement#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.snowdevicemanagement#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.snowdevicemanagement#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.snowdevicemanagement#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.snowdevicemanagement#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(SnowDeviceManagementServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_EbsInstanceBlockDevice = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    attachTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deleteOnTermination: import_smithy_client.expectBoolean,
    status: import_smithy_client.expectString,
    volumeId: import_smithy_client.expectString
  });
}, "de_EbsInstanceBlockDevice");
var de_Instance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    amiLaunchIndex: import_smithy_client.expectInt32,
    blockDeviceMappings: (_) => de_InstanceBlockDeviceMappingList(_, context),
    cpuOptions: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    imageId: import_smithy_client.expectString,
    instanceId: import_smithy_client.expectString,
    instanceType: import_smithy_client.expectString,
    privateIpAddress: import_smithy_client.expectString,
    publicIpAddress: import_smithy_client.expectString,
    rootDeviceName: import_smithy_client.expectString,
    securityGroups: import_smithy_client._json,
    state: import_smithy_client._json,
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_Instance");
var de_InstanceBlockDeviceMapping = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    deviceName: import_smithy_client.expectString,
    ebs: (_) => de_EbsInstanceBlockDevice(_, context)
  });
}, "de_InstanceBlockDeviceMapping");
var de_InstanceBlockDeviceMappingList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InstanceBlockDeviceMapping(entry, context);
  });
  return retVal;
}, "de_InstanceBlockDeviceMappingList");
var de_InstanceSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    instance: (_) => de_Instance(_, context),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_InstanceSummary");
var de_InstanceSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InstanceSummary(entry, context);
  });
  return retVal;
}, "de_InstanceSummaryList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _jI = "jobId";
var _mR = "maxResults";
var _nT = "nextToken";
var _s = "state";
var _t = "type";
var _tI = "taskId";
var _tK = "tagKeys";

// src/commands/CancelTaskCommand.ts
var _CancelTaskCommand = class _CancelTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "CancelTask", {}).n("SnowDeviceManagementClient", "CancelTaskCommand").f(void 0, void 0).ser(se_CancelTaskCommand).de(de_CancelTaskCommand).build() {
};
__name(_CancelTaskCommand, "CancelTaskCommand");
var CancelTaskCommand = _CancelTaskCommand;

// src/commands/CreateTaskCommand.ts




var _CreateTaskCommand = class _CreateTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "CreateTask", {}).n("SnowDeviceManagementClient", "CreateTaskCommand").f(void 0, void 0).ser(se_CreateTaskCommand).de(de_CreateTaskCommand).build() {
};
__name(_CreateTaskCommand, "CreateTaskCommand");
var CreateTaskCommand = _CreateTaskCommand;

// src/commands/DescribeDeviceCommand.ts




var _DescribeDeviceCommand = class _DescribeDeviceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "DescribeDevice", {}).n("SnowDeviceManagementClient", "DescribeDeviceCommand").f(void 0, void 0).ser(se_DescribeDeviceCommand).de(de_DescribeDeviceCommand).build() {
};
__name(_DescribeDeviceCommand, "DescribeDeviceCommand");
var DescribeDeviceCommand = _DescribeDeviceCommand;

// src/commands/DescribeDeviceEc2InstancesCommand.ts




var _DescribeDeviceEc2InstancesCommand = class _DescribeDeviceEc2InstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "DescribeDeviceEc2Instances", {}).n("SnowDeviceManagementClient", "DescribeDeviceEc2InstancesCommand").f(void 0, void 0).ser(se_DescribeDeviceEc2InstancesCommand).de(de_DescribeDeviceEc2InstancesCommand).build() {
};
__name(_DescribeDeviceEc2InstancesCommand, "DescribeDeviceEc2InstancesCommand");
var DescribeDeviceEc2InstancesCommand = _DescribeDeviceEc2InstancesCommand;

// src/commands/DescribeExecutionCommand.ts




var _DescribeExecutionCommand = class _DescribeExecutionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "DescribeExecution", {}).n("SnowDeviceManagementClient", "DescribeExecutionCommand").f(void 0, void 0).ser(se_DescribeExecutionCommand).de(de_DescribeExecutionCommand).build() {
};
__name(_DescribeExecutionCommand, "DescribeExecutionCommand");
var DescribeExecutionCommand = _DescribeExecutionCommand;

// src/commands/DescribeTaskCommand.ts




var _DescribeTaskCommand = class _DescribeTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "DescribeTask", {}).n("SnowDeviceManagementClient", "DescribeTaskCommand").f(void 0, void 0).ser(se_DescribeTaskCommand).de(de_DescribeTaskCommand).build() {
};
__name(_DescribeTaskCommand, "DescribeTaskCommand");
var DescribeTaskCommand = _DescribeTaskCommand;

// src/commands/ListDeviceResourcesCommand.ts




var _ListDeviceResourcesCommand = class _ListDeviceResourcesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "ListDeviceResources", {}).n("SnowDeviceManagementClient", "ListDeviceResourcesCommand").f(void 0, void 0).ser(se_ListDeviceResourcesCommand).de(de_ListDeviceResourcesCommand).build() {
};
__name(_ListDeviceResourcesCommand, "ListDeviceResourcesCommand");
var ListDeviceResourcesCommand = _ListDeviceResourcesCommand;

// src/commands/ListDevicesCommand.ts




var _ListDevicesCommand = class _ListDevicesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "ListDevices", {}).n("SnowDeviceManagementClient", "ListDevicesCommand").f(void 0, void 0).ser(se_ListDevicesCommand).de(de_ListDevicesCommand).build() {
};
__name(_ListDevicesCommand, "ListDevicesCommand");
var ListDevicesCommand = _ListDevicesCommand;

// src/commands/ListExecutionsCommand.ts




var _ListExecutionsCommand = class _ListExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "ListExecutions", {}).n("SnowDeviceManagementClient", "ListExecutionsCommand").f(void 0, void 0).ser(se_ListExecutionsCommand).de(de_ListExecutionsCommand).build() {
};
__name(_ListExecutionsCommand, "ListExecutionsCommand");
var ListExecutionsCommand = _ListExecutionsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "ListTagsForResource", {}).n("SnowDeviceManagementClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListTasksCommand.ts




var _ListTasksCommand = class _ListTasksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "ListTasks", {}).n("SnowDeviceManagementClient", "ListTasksCommand").f(void 0, void 0).ser(se_ListTasksCommand).de(de_ListTasksCommand).build() {
};
__name(_ListTasksCommand, "ListTasksCommand");
var ListTasksCommand = _ListTasksCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "TagResource", {}).n("SnowDeviceManagementClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command3, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command3.getEndpointParameterInstructions())
  ];
}).s("SnowDeviceManagement", "UntagResource", {}).n("SnowDeviceManagementClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/SnowDeviceManagement.ts
var commands = {
  CancelTaskCommand,
  CreateTaskCommand,
  DescribeDeviceCommand,
  DescribeDeviceEc2InstancesCommand,
  DescribeExecutionCommand,
  DescribeTaskCommand,
  ListDeviceResourcesCommand,
  ListDevicesCommand,
  ListExecutionsCommand,
  ListTagsForResourceCommand,
  ListTasksCommand,
  TagResourceCommand,
  UntagResourceCommand
};
var _SnowDeviceManagement = class _SnowDeviceManagement extends SnowDeviceManagementClient {
};
__name(_SnowDeviceManagement, "SnowDeviceManagement");
var SnowDeviceManagement = _SnowDeviceManagement;
(0, import_smithy_client.createAggregatedClient)(commands, SnowDeviceManagement);

// src/pagination/ListDeviceResourcesPaginator.ts

var paginateListDeviceResources = (0, import_core.createPaginator)(SnowDeviceManagementClient, ListDeviceResourcesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDevicesPaginator.ts

var paginateListDevices = (0, import_core.createPaginator)(SnowDeviceManagementClient, ListDevicesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListExecutionsPaginator.ts

var paginateListExecutions = (0, import_core.createPaginator)(SnowDeviceManagementClient, ListExecutionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListTasksPaginator.ts

var paginateListTasks = (0, import_core.createPaginator)(SnowDeviceManagementClient, ListTasksCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  SnowDeviceManagementServiceException,
  __Client,
  SnowDeviceManagementClient,
  SnowDeviceManagement,
  $Command,
  CancelTaskCommand,
  CreateTaskCommand,
  DescribeDeviceCommand,
  DescribeDeviceEc2InstancesCommand,
  DescribeExecutionCommand,
  DescribeTaskCommand,
  ListDeviceResourcesCommand,
  ListDevicesCommand,
  ListExecutionsCommand,
  ListTagsForResourceCommand,
  ListTasksCommand,
  TagResourceCommand,
  UntagResourceCommand,
  paginateListDeviceResources,
  paginateListDevices,
  paginateListExecutions,
  paginateListTasks,
  AccessDeniedException,
  AttachmentStatus,
  InternalServerException,
  ResourceNotFoundException,
  ThrottlingException,
  ValidationException,
  Command,
  ServiceQuotaExceededException,
  UnlockState,
  IpAddressAssignment,
  PhysicalConnectorType,
  InstanceStateName,
  ExecutionState,
  TaskState
});

