import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { PinpointEmailServiceException as __BaseException } from "./PinpointEmailServiceException";
export declare class AccountSuspendedException extends __BaseException {
  readonly name: "AccountSuspendedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccountSuspendedException, __BaseException>
  );
}
export declare class AlreadyExistsException extends __BaseException {
  readonly name: "AlreadyExistsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>
  );
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare const TlsPolicy: {
  readonly OPTIONAL: "OPTIONAL";
  readonly REQUIRE: "REQUIRE";
};
export type TlsPolicy = (typeof TlsPolicy)[keyof typeof TlsPolicy];
export interface DeliveryOptions {
  TlsPolicy?: TlsPolicy;
  SendingPoolName?: string;
}
export interface ReputationOptions {
  ReputationMetricsEnabled?: boolean;
  LastFreshStart?: Date;
}
export interface SendingOptions {
  SendingEnabled?: boolean;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface TrackingOptions {
  CustomRedirectDomain: string | undefined;
}
export interface CreateConfigurationSetRequest {
  ConfigurationSetName: string | undefined;
  TrackingOptions?: TrackingOptions;
  DeliveryOptions?: DeliveryOptions;
  ReputationOptions?: ReputationOptions;
  SendingOptions?: SendingOptions;
  Tags?: Tag[];
}
export interface CreateConfigurationSetResponse {}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare const DimensionValueSource: {
  readonly EMAIL_HEADER: "EMAIL_HEADER";
  readonly LINK_TAG: "LINK_TAG";
  readonly MESSAGE_TAG: "MESSAGE_TAG";
};
export type DimensionValueSource =
  (typeof DimensionValueSource)[keyof typeof DimensionValueSource];
export interface CloudWatchDimensionConfiguration {
  DimensionName: string | undefined;
  DimensionValueSource: DimensionValueSource | undefined;
  DefaultDimensionValue: string | undefined;
}
export interface CloudWatchDestination {
  DimensionConfigurations: CloudWatchDimensionConfiguration[] | undefined;
}
export interface KinesisFirehoseDestination {
  IamRoleArn: string | undefined;
  DeliveryStreamArn: string | undefined;
}
export declare const EventType: {
  readonly BOUNCE: "BOUNCE";
  readonly CLICK: "CLICK";
  readonly COMPLAINT: "COMPLAINT";
  readonly DELIVERY: "DELIVERY";
  readonly OPEN: "OPEN";
  readonly REJECT: "REJECT";
  readonly RENDERING_FAILURE: "RENDERING_FAILURE";
  readonly SEND: "SEND";
};
export type EventType = (typeof EventType)[keyof typeof EventType];
export interface PinpointDestination {
  ApplicationArn?: string;
}
export interface SnsDestination {
  TopicArn: string | undefined;
}
export interface EventDestinationDefinition {
  Enabled?: boolean;
  MatchingEventTypes?: EventType[];
  KinesisFirehoseDestination?: KinesisFirehoseDestination;
  CloudWatchDestination?: CloudWatchDestination;
  SnsDestination?: SnsDestination;
  PinpointDestination?: PinpointDestination;
}
export interface CreateConfigurationSetEventDestinationRequest {
  ConfigurationSetName: string | undefined;
  EventDestinationName: string | undefined;
  EventDestination: EventDestinationDefinition | undefined;
}
export interface CreateConfigurationSetEventDestinationResponse {}
export interface CreateDedicatedIpPoolRequest {
  PoolName: string | undefined;
  Tags?: Tag[];
}
export interface CreateDedicatedIpPoolResponse {}
export interface RawMessage {
  Data: Uint8Array | undefined;
}
export interface Content {
  Data: string | undefined;
  Charset?: string;
}
export interface Body {
  Text?: Content;
  Html?: Content;
}
export interface Message {
  Subject: Content | undefined;
  Body: Body | undefined;
}
export interface Template {
  TemplateArn?: string;
  TemplateData?: string;
}
export interface EmailContent {
  Simple?: Message;
  Raw?: RawMessage;
  Template?: Template;
}
export interface CreateDeliverabilityTestReportRequest {
  ReportName?: string;
  FromEmailAddress: string | undefined;
  Content: EmailContent | undefined;
  Tags?: Tag[];
}
export declare const DeliverabilityTestStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type DeliverabilityTestStatus =
  (typeof DeliverabilityTestStatus)[keyof typeof DeliverabilityTestStatus];
export interface CreateDeliverabilityTestReportResponse {
  ReportId: string | undefined;
  DeliverabilityTestStatus: DeliverabilityTestStatus | undefined;
}
export declare class MailFromDomainNotVerifiedException extends __BaseException {
  readonly name: "MailFromDomainNotVerifiedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MailFromDomainNotVerifiedException,
      __BaseException
    >
  );
}
export declare class MessageRejected extends __BaseException {
  readonly name: "MessageRejected";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<MessageRejected, __BaseException>);
}
export declare class SendingPausedException extends __BaseException {
  readonly name: "SendingPausedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SendingPausedException, __BaseException>
  );
}
export interface CreateEmailIdentityRequest {
  EmailIdentity: string | undefined;
  Tags?: Tag[];
}
export declare const DkimStatus: {
  readonly FAILED: "FAILED";
  readonly NOT_STARTED: "NOT_STARTED";
  readonly PENDING: "PENDING";
  readonly SUCCESS: "SUCCESS";
  readonly TEMPORARY_FAILURE: "TEMPORARY_FAILURE";
};
export type DkimStatus = (typeof DkimStatus)[keyof typeof DkimStatus];
export interface DkimAttributes {
  SigningEnabled?: boolean;
  Status?: DkimStatus;
  Tokens?: string[];
}
export declare const IdentityType: {
  readonly DOMAIN: "DOMAIN";
  readonly EMAIL_ADDRESS: "EMAIL_ADDRESS";
  readonly MANAGED_DOMAIN: "MANAGED_DOMAIN";
};
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export interface CreateEmailIdentityResponse {
  IdentityType?: IdentityType;
  VerifiedForSendingStatus?: boolean;
  DkimAttributes?: DkimAttributes;
}
export interface DeleteConfigurationSetRequest {
  ConfigurationSetName: string | undefined;
}
export interface DeleteConfigurationSetResponse {}
export interface DeleteConfigurationSetEventDestinationRequest {
  ConfigurationSetName: string | undefined;
  EventDestinationName: string | undefined;
}
export interface DeleteConfigurationSetEventDestinationResponse {}
export interface DeleteDedicatedIpPoolRequest {
  PoolName: string | undefined;
}
export interface DeleteDedicatedIpPoolResponse {}
export interface DeleteEmailIdentityRequest {
  EmailIdentity: string | undefined;
}
export interface DeleteEmailIdentityResponse {}
export interface GetAccountRequest {}
export interface SendQuota {
  Max24HourSend?: number;
  MaxSendRate?: number;
  SentLast24Hours?: number;
}
export interface GetAccountResponse {
  SendQuota?: SendQuota;
  SendingEnabled?: boolean;
  DedicatedIpAutoWarmupEnabled?: boolean;
  EnforcementStatus?: string;
  ProductionAccessEnabled?: boolean;
}
export interface GetBlacklistReportsRequest {
  BlacklistItemNames: string[] | undefined;
}
export interface BlacklistEntry {
  RblName?: string;
  ListingTime?: Date;
  Description?: string;
}
export interface GetBlacklistReportsResponse {
  BlacklistReport: Record<string, BlacklistEntry[]> | undefined;
}
export interface GetConfigurationSetRequest {
  ConfigurationSetName: string | undefined;
}
export interface GetConfigurationSetResponse {
  ConfigurationSetName?: string;
  TrackingOptions?: TrackingOptions;
  DeliveryOptions?: DeliveryOptions;
  ReputationOptions?: ReputationOptions;
  SendingOptions?: SendingOptions;
  Tags?: Tag[];
}
export interface GetConfigurationSetEventDestinationsRequest {
  ConfigurationSetName: string | undefined;
}
export interface EventDestination {
  Name: string | undefined;
  Enabled?: boolean;
  MatchingEventTypes: EventType[] | undefined;
  KinesisFirehoseDestination?: KinesisFirehoseDestination;
  CloudWatchDestination?: CloudWatchDestination;
  SnsDestination?: SnsDestination;
  PinpointDestination?: PinpointDestination;
}
export interface GetConfigurationSetEventDestinationsResponse {
  EventDestinations?: EventDestination[];
}
export interface GetDedicatedIpRequest {
  Ip: string | undefined;
}
export declare const WarmupStatus: {
  readonly DONE: "DONE";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type WarmupStatus = (typeof WarmupStatus)[keyof typeof WarmupStatus];
export interface DedicatedIp {
  Ip: string | undefined;
  WarmupStatus: WarmupStatus | undefined;
  WarmupPercentage: number | undefined;
  PoolName?: string;
}
export interface GetDedicatedIpResponse {
  DedicatedIp?: DedicatedIp;
}
export interface GetDedicatedIpsRequest {
  PoolName?: string;
  NextToken?: string;
  PageSize?: number;
}
export interface GetDedicatedIpsResponse {
  DedicatedIps?: DedicatedIp[];
  NextToken?: string;
}
export interface GetDeliverabilityDashboardOptionsRequest {}
export declare const DeliverabilityDashboardAccountStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly DISABLED: "DISABLED";
  readonly PENDING_EXPIRATION: "PENDING_EXPIRATION";
};
export type DeliverabilityDashboardAccountStatus =
  (typeof DeliverabilityDashboardAccountStatus)[keyof typeof DeliverabilityDashboardAccountStatus];
export interface InboxPlacementTrackingOption {
  Global?: boolean;
  TrackedIsps?: string[];
}
export interface DomainDeliverabilityTrackingOption {
  Domain?: string;
  SubscriptionStartDate?: Date;
  InboxPlacementTrackingOption?: InboxPlacementTrackingOption;
}
export interface GetDeliverabilityDashboardOptionsResponse {
  DashboardEnabled: boolean | undefined;
  SubscriptionExpiryDate?: Date;
  AccountStatus?: DeliverabilityDashboardAccountStatus;
  ActiveSubscribedDomains?: DomainDeliverabilityTrackingOption[];
  PendingExpirationSubscribedDomains?: DomainDeliverabilityTrackingOption[];
}
export interface GetDeliverabilityTestReportRequest {
  ReportId: string | undefined;
}
export interface DeliverabilityTestReport {
  ReportId?: string;
  ReportName?: string;
  Subject?: string;
  FromEmailAddress?: string;
  CreateDate?: Date;
  DeliverabilityTestStatus?: DeliverabilityTestStatus;
}
export interface PlacementStatistics {
  InboxPercentage?: number;
  SpamPercentage?: number;
  MissingPercentage?: number;
  SpfPercentage?: number;
  DkimPercentage?: number;
}
export interface IspPlacement {
  IspName?: string;
  PlacementStatistics?: PlacementStatistics;
}
export interface GetDeliverabilityTestReportResponse {
  DeliverabilityTestReport: DeliverabilityTestReport | undefined;
  OverallPlacement: PlacementStatistics | undefined;
  IspPlacements: IspPlacement[] | undefined;
  Message?: string;
  Tags?: Tag[];
}
export interface GetDomainDeliverabilityCampaignRequest {
  CampaignId: string | undefined;
}
export interface DomainDeliverabilityCampaign {
  CampaignId?: string;
  ImageUrl?: string;
  Subject?: string;
  FromAddress?: string;
  SendingIps?: string[];
  FirstSeenDateTime?: Date;
  LastSeenDateTime?: Date;
  InboxCount?: number;
  SpamCount?: number;
  ReadRate?: number;
  DeleteRate?: number;
  ReadDeleteRate?: number;
  ProjectedVolume?: number;
  Esps?: string[];
}
export interface GetDomainDeliverabilityCampaignResponse {
  DomainDeliverabilityCampaign: DomainDeliverabilityCampaign | undefined;
}
export interface GetDomainStatisticsReportRequest {
  Domain: string | undefined;
  StartDate: Date | undefined;
  EndDate: Date | undefined;
}
export interface DomainIspPlacement {
  IspName?: string;
  InboxRawCount?: number;
  SpamRawCount?: number;
  InboxPercentage?: number;
  SpamPercentage?: number;
}
export interface VolumeStatistics {
  InboxRawCount?: number;
  SpamRawCount?: number;
  ProjectedInbox?: number;
  ProjectedSpam?: number;
}
export interface DailyVolume {
  StartDate?: Date;
  VolumeStatistics?: VolumeStatistics;
  DomainIspPlacements?: DomainIspPlacement[];
}
export interface OverallVolume {
  VolumeStatistics?: VolumeStatistics;
  ReadRatePercent?: number;
  DomainIspPlacements?: DomainIspPlacement[];
}
export interface GetDomainStatisticsReportResponse {
  OverallVolume: OverallVolume | undefined;
  DailyVolumes: DailyVolume[] | undefined;
}
export interface GetEmailIdentityRequest {
  EmailIdentity: string | undefined;
}
export declare const BehaviorOnMxFailure: {
  readonly REJECT_MESSAGE: "REJECT_MESSAGE";
  readonly USE_DEFAULT_VALUE: "USE_DEFAULT_VALUE";
};
export type BehaviorOnMxFailure =
  (typeof BehaviorOnMxFailure)[keyof typeof BehaviorOnMxFailure];
export declare const MailFromDomainStatus: {
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly SUCCESS: "SUCCESS";
  readonly TEMPORARY_FAILURE: "TEMPORARY_FAILURE";
};
export type MailFromDomainStatus =
  (typeof MailFromDomainStatus)[keyof typeof MailFromDomainStatus];
export interface MailFromAttributes {
  MailFromDomain: string | undefined;
  MailFromDomainStatus: MailFromDomainStatus | undefined;
  BehaviorOnMxFailure: BehaviorOnMxFailure | undefined;
}
export interface GetEmailIdentityResponse {
  IdentityType?: IdentityType;
  FeedbackForwardingStatus?: boolean;
  VerifiedForSendingStatus?: boolean;
  DkimAttributes?: DkimAttributes;
  MailFromAttributes?: MailFromAttributes;
  Tags?: Tag[];
}
export interface ListConfigurationSetsRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListConfigurationSetsResponse {
  ConfigurationSets?: string[];
  NextToken?: string;
}
export interface ListDedicatedIpPoolsRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListDedicatedIpPoolsResponse {
  DedicatedIpPools?: string[];
  NextToken?: string;
}
export interface ListDeliverabilityTestReportsRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface ListDeliverabilityTestReportsResponse {
  DeliverabilityTestReports: DeliverabilityTestReport[] | undefined;
  NextToken?: string;
}
export interface ListDomainDeliverabilityCampaignsRequest {
  StartDate: Date | undefined;
  EndDate: Date | undefined;
  SubscribedDomain: string | undefined;
  NextToken?: string;
  PageSize?: number;
}
export interface ListDomainDeliverabilityCampaignsResponse {
  DomainDeliverabilityCampaigns: DomainDeliverabilityCampaign[] | undefined;
  NextToken?: string;
}
export interface ListEmailIdentitiesRequest {
  NextToken?: string;
  PageSize?: number;
}
export interface IdentityInfo {
  IdentityType?: IdentityType;
  IdentityName?: string;
  SendingEnabled?: boolean;
}
export interface ListEmailIdentitiesResponse {
  EmailIdentities?: IdentityInfo[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags: Tag[] | undefined;
}
export interface PutAccountDedicatedIpWarmupAttributesRequest {
  AutoWarmupEnabled?: boolean;
}
export interface PutAccountDedicatedIpWarmupAttributesResponse {}
export interface PutAccountSendingAttributesRequest {
  SendingEnabled?: boolean;
}
export interface PutAccountSendingAttributesResponse {}
export interface PutConfigurationSetDeliveryOptionsRequest {
  ConfigurationSetName: string | undefined;
  TlsPolicy?: TlsPolicy;
  SendingPoolName?: string;
}
export interface PutConfigurationSetDeliveryOptionsResponse {}
export interface PutConfigurationSetReputationOptionsRequest {
  ConfigurationSetName: string | undefined;
  ReputationMetricsEnabled?: boolean;
}
export interface PutConfigurationSetReputationOptionsResponse {}
export interface PutConfigurationSetSendingOptionsRequest {
  ConfigurationSetName: string | undefined;
  SendingEnabled?: boolean;
}
export interface PutConfigurationSetSendingOptionsResponse {}
export interface PutConfigurationSetTrackingOptionsRequest {
  ConfigurationSetName: string | undefined;
  CustomRedirectDomain?: string;
}
export interface PutConfigurationSetTrackingOptionsResponse {}
export interface PutDedicatedIpInPoolRequest {
  Ip: string | undefined;
  DestinationPoolName: string | undefined;
}
export interface PutDedicatedIpInPoolResponse {}
export interface PutDedicatedIpWarmupAttributesRequest {
  Ip: string | undefined;
  WarmupPercentage: number | undefined;
}
export interface PutDedicatedIpWarmupAttributesResponse {}
export interface PutDeliverabilityDashboardOptionRequest {
  DashboardEnabled: boolean | undefined;
  SubscribedDomains?: DomainDeliverabilityTrackingOption[];
}
export interface PutDeliverabilityDashboardOptionResponse {}
export interface PutEmailIdentityDkimAttributesRequest {
  EmailIdentity: string | undefined;
  SigningEnabled?: boolean;
}
export interface PutEmailIdentityDkimAttributesResponse {}
export interface PutEmailIdentityFeedbackAttributesRequest {
  EmailIdentity: string | undefined;
  EmailForwardingEnabled?: boolean;
}
export interface PutEmailIdentityFeedbackAttributesResponse {}
export interface PutEmailIdentityMailFromAttributesRequest {
  EmailIdentity: string | undefined;
  MailFromDomain?: string;
  BehaviorOnMxFailure?: BehaviorOnMxFailure;
}
export interface PutEmailIdentityMailFromAttributesResponse {}
export interface Destination {
  ToAddresses?: string[];
  CcAddresses?: string[];
  BccAddresses?: string[];
}
export interface MessageTag {
  Name: string | undefined;
  Value: string | undefined;
}
export interface SendEmailRequest {
  FromEmailAddress?: string;
  Destination: Destination | undefined;
  ReplyToAddresses?: string[];
  FeedbackForwardingEmailAddress?: string;
  Content: EmailContent | undefined;
  EmailTags?: MessageTag[];
  ConfigurationSetName?: string;
}
export interface SendEmailResponse {
  MessageId?: string;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateConfigurationSetEventDestinationRequest {
  ConfigurationSetName: string | undefined;
  EventDestinationName: string | undefined;
  EventDestination: EventDestinationDefinition | undefined;
}
export interface UpdateConfigurationSetEventDestinationResponse {}
