import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateConfigurationSetCommandInput,
  CreateConfigurationSetCommandOutput,
} from "./commands/CreateConfigurationSetCommand";
import {
  CreateConfigurationSetEventDestinationCommandInput,
  CreateConfigurationSetEventDestinationCommandOutput,
} from "./commands/CreateConfigurationSetEventDestinationCommand";
import {
  CreateDedicatedIpPoolCommandInput,
  CreateDedicatedIpPoolCommandOutput,
} from "./commands/CreateDedicatedIpPoolCommand";
import {
  CreateDeliverabilityTestReportCommandInput,
  CreateDeliverabilityTestReportCommandOutput,
} from "./commands/CreateDeliverabilityTestReportCommand";
import {
  CreateEmailIdentityCommandInput,
  CreateEmailIdentityCommandOutput,
} from "./commands/CreateEmailIdentityCommand";
import {
  DeleteConfigurationSetCommandInput,
  DeleteConfigurationSetCommandOutput,
} from "./commands/DeleteConfigurationSetCommand";
import {
  DeleteConfigurationSetEventDestinationCommandInput,
  DeleteConfigurationSetEventDestinationCommandOutput,
} from "./commands/DeleteConfigurationSetEventDestinationCommand";
import {
  DeleteDedicatedIpPoolCommandInput,
  DeleteDedicatedIpPoolCommandOutput,
} from "./commands/DeleteDedicatedIpPoolCommand";
import {
  DeleteEmailIdentityCommandInput,
  DeleteEmailIdentityCommandOutput,
} from "./commands/DeleteEmailIdentityCommand";
import {
  GetAccountCommandInput,
  GetAccountCommandOutput,
} from "./commands/GetAccountCommand";
import {
  GetBlacklistReportsCommandInput,
  GetBlacklistReportsCommandOutput,
} from "./commands/GetBlacklistReportsCommand";
import {
  GetConfigurationSetCommandInput,
  GetConfigurationSetCommandOutput,
} from "./commands/GetConfigurationSetCommand";
import {
  GetConfigurationSetEventDestinationsCommandInput,
  GetConfigurationSetEventDestinationsCommandOutput,
} from "./commands/GetConfigurationSetEventDestinationsCommand";
import {
  GetDedicatedIpCommandInput,
  GetDedicatedIpCommandOutput,
} from "./commands/GetDedicatedIpCommand";
import {
  GetDedicatedIpsCommandInput,
  GetDedicatedIpsCommandOutput,
} from "./commands/GetDedicatedIpsCommand";
import {
  GetDeliverabilityDashboardOptionsCommandInput,
  GetDeliverabilityDashboardOptionsCommandOutput,
} from "./commands/GetDeliverabilityDashboardOptionsCommand";
import {
  GetDeliverabilityTestReportCommandInput,
  GetDeliverabilityTestReportCommandOutput,
} from "./commands/GetDeliverabilityTestReportCommand";
import {
  GetDomainDeliverabilityCampaignCommandInput,
  GetDomainDeliverabilityCampaignCommandOutput,
} from "./commands/GetDomainDeliverabilityCampaignCommand";
import {
  GetDomainStatisticsReportCommandInput,
  GetDomainStatisticsReportCommandOutput,
} from "./commands/GetDomainStatisticsReportCommand";
import {
  GetEmailIdentityCommandInput,
  GetEmailIdentityCommandOutput,
} from "./commands/GetEmailIdentityCommand";
import {
  ListConfigurationSetsCommandInput,
  ListConfigurationSetsCommandOutput,
} from "./commands/ListConfigurationSetsCommand";
import {
  ListDedicatedIpPoolsCommandInput,
  ListDedicatedIpPoolsCommandOutput,
} from "./commands/ListDedicatedIpPoolsCommand";
import {
  ListDeliverabilityTestReportsCommandInput,
  ListDeliverabilityTestReportsCommandOutput,
} from "./commands/ListDeliverabilityTestReportsCommand";
import {
  ListDomainDeliverabilityCampaignsCommandInput,
  ListDomainDeliverabilityCampaignsCommandOutput,
} from "./commands/ListDomainDeliverabilityCampaignsCommand";
import {
  ListEmailIdentitiesCommandInput,
  ListEmailIdentitiesCommandOutput,
} from "./commands/ListEmailIdentitiesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PutAccountDedicatedIpWarmupAttributesCommandInput,
  PutAccountDedicatedIpWarmupAttributesCommandOutput,
} from "./commands/PutAccountDedicatedIpWarmupAttributesCommand";
import {
  PutAccountSendingAttributesCommandInput,
  PutAccountSendingAttributesCommandOutput,
} from "./commands/PutAccountSendingAttributesCommand";
import {
  PutConfigurationSetDeliveryOptionsCommandInput,
  PutConfigurationSetDeliveryOptionsCommandOutput,
} from "./commands/PutConfigurationSetDeliveryOptionsCommand";
import {
  PutConfigurationSetReputationOptionsCommandInput,
  PutConfigurationSetReputationOptionsCommandOutput,
} from "./commands/PutConfigurationSetReputationOptionsCommand";
import {
  PutConfigurationSetSendingOptionsCommandInput,
  PutConfigurationSetSendingOptionsCommandOutput,
} from "./commands/PutConfigurationSetSendingOptionsCommand";
import {
  PutConfigurationSetTrackingOptionsCommandInput,
  PutConfigurationSetTrackingOptionsCommandOutput,
} from "./commands/PutConfigurationSetTrackingOptionsCommand";
import {
  PutDedicatedIpInPoolCommandInput,
  PutDedicatedIpInPoolCommandOutput,
} from "./commands/PutDedicatedIpInPoolCommand";
import {
  PutDedicatedIpWarmupAttributesCommandInput,
  PutDedicatedIpWarmupAttributesCommandOutput,
} from "./commands/PutDedicatedIpWarmupAttributesCommand";
import {
  PutDeliverabilityDashboardOptionCommandInput,
  PutDeliverabilityDashboardOptionCommandOutput,
} from "./commands/PutDeliverabilityDashboardOptionCommand";
import {
  PutEmailIdentityDkimAttributesCommandInput,
  PutEmailIdentityDkimAttributesCommandOutput,
} from "./commands/PutEmailIdentityDkimAttributesCommand";
import {
  PutEmailIdentityFeedbackAttributesCommandInput,
  PutEmailIdentityFeedbackAttributesCommandOutput,
} from "./commands/PutEmailIdentityFeedbackAttributesCommand";
import {
  PutEmailIdentityMailFromAttributesCommandInput,
  PutEmailIdentityMailFromAttributesCommandOutput,
} from "./commands/PutEmailIdentityMailFromAttributesCommand";
import {
  SendEmailCommandInput,
  SendEmailCommandOutput,
} from "./commands/SendEmailCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateConfigurationSetEventDestinationCommandInput,
  UpdateConfigurationSetEventDestinationCommandOutput,
} from "./commands/UpdateConfigurationSetEventDestinationCommand";
import { PinpointEmailClient } from "./PinpointEmailClient";
export interface PinpointEmail {
  createConfigurationSet(
    args: CreateConfigurationSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateConfigurationSetCommandOutput>;
  createConfigurationSet(
    args: CreateConfigurationSetCommandInput,
    cb: (err: any, data?: CreateConfigurationSetCommandOutput) => void
  ): void;
  createConfigurationSet(
    args: CreateConfigurationSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateConfigurationSetCommandOutput) => void
  ): void;
  createConfigurationSetEventDestination(
    args: CreateConfigurationSetEventDestinationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateConfigurationSetEventDestinationCommandOutput>;
  createConfigurationSetEventDestination(
    args: CreateConfigurationSetEventDestinationCommandInput,
    cb: (
      err: any,
      data?: CreateConfigurationSetEventDestinationCommandOutput
    ) => void
  ): void;
  createConfigurationSetEventDestination(
    args: CreateConfigurationSetEventDestinationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: CreateConfigurationSetEventDestinationCommandOutput
    ) => void
  ): void;
  createDedicatedIpPool(
    args: CreateDedicatedIpPoolCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDedicatedIpPoolCommandOutput>;
  createDedicatedIpPool(
    args: CreateDedicatedIpPoolCommandInput,
    cb: (err: any, data?: CreateDedicatedIpPoolCommandOutput) => void
  ): void;
  createDedicatedIpPool(
    args: CreateDedicatedIpPoolCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDedicatedIpPoolCommandOutput) => void
  ): void;
  createDeliverabilityTestReport(
    args: CreateDeliverabilityTestReportCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDeliverabilityTestReportCommandOutput>;
  createDeliverabilityTestReport(
    args: CreateDeliverabilityTestReportCommandInput,
    cb: (err: any, data?: CreateDeliverabilityTestReportCommandOutput) => void
  ): void;
  createDeliverabilityTestReport(
    args: CreateDeliverabilityTestReportCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDeliverabilityTestReportCommandOutput) => void
  ): void;
  createEmailIdentity(
    args: CreateEmailIdentityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateEmailIdentityCommandOutput>;
  createEmailIdentity(
    args: CreateEmailIdentityCommandInput,
    cb: (err: any, data?: CreateEmailIdentityCommandOutput) => void
  ): void;
  createEmailIdentity(
    args: CreateEmailIdentityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateEmailIdentityCommandOutput) => void
  ): void;
  deleteConfigurationSet(
    args: DeleteConfigurationSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteConfigurationSetCommandOutput>;
  deleteConfigurationSet(
    args: DeleteConfigurationSetCommandInput,
    cb: (err: any, data?: DeleteConfigurationSetCommandOutput) => void
  ): void;
  deleteConfigurationSet(
    args: DeleteConfigurationSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteConfigurationSetCommandOutput) => void
  ): void;
  deleteConfigurationSetEventDestination(
    args: DeleteConfigurationSetEventDestinationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteConfigurationSetEventDestinationCommandOutput>;
  deleteConfigurationSetEventDestination(
    args: DeleteConfigurationSetEventDestinationCommandInput,
    cb: (
      err: any,
      data?: DeleteConfigurationSetEventDestinationCommandOutput
    ) => void
  ): void;
  deleteConfigurationSetEventDestination(
    args: DeleteConfigurationSetEventDestinationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DeleteConfigurationSetEventDestinationCommandOutput
    ) => void
  ): void;
  deleteDedicatedIpPool(
    args: DeleteDedicatedIpPoolCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDedicatedIpPoolCommandOutput>;
  deleteDedicatedIpPool(
    args: DeleteDedicatedIpPoolCommandInput,
    cb: (err: any, data?: DeleteDedicatedIpPoolCommandOutput) => void
  ): void;
  deleteDedicatedIpPool(
    args: DeleteDedicatedIpPoolCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDedicatedIpPoolCommandOutput) => void
  ): void;
  deleteEmailIdentity(
    args: DeleteEmailIdentityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEmailIdentityCommandOutput>;
  deleteEmailIdentity(
    args: DeleteEmailIdentityCommandInput,
    cb: (err: any, data?: DeleteEmailIdentityCommandOutput) => void
  ): void;
  deleteEmailIdentity(
    args: DeleteEmailIdentityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEmailIdentityCommandOutput) => void
  ): void;
  getAccount(): Promise<GetAccountCommandOutput>;
  getAccount(
    args: GetAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAccountCommandOutput>;
  getAccount(
    args: GetAccountCommandInput,
    cb: (err: any, data?: GetAccountCommandOutput) => void
  ): void;
  getAccount(
    args: GetAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAccountCommandOutput) => void
  ): void;
  getBlacklistReports(
    args: GetBlacklistReportsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBlacklistReportsCommandOutput>;
  getBlacklistReports(
    args: GetBlacklistReportsCommandInput,
    cb: (err: any, data?: GetBlacklistReportsCommandOutput) => void
  ): void;
  getBlacklistReports(
    args: GetBlacklistReportsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBlacklistReportsCommandOutput) => void
  ): void;
  getConfigurationSet(
    args: GetConfigurationSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetConfigurationSetCommandOutput>;
  getConfigurationSet(
    args: GetConfigurationSetCommandInput,
    cb: (err: any, data?: GetConfigurationSetCommandOutput) => void
  ): void;
  getConfigurationSet(
    args: GetConfigurationSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetConfigurationSetCommandOutput) => void
  ): void;
  getConfigurationSetEventDestinations(
    args: GetConfigurationSetEventDestinationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetConfigurationSetEventDestinationsCommandOutput>;
  getConfigurationSetEventDestinations(
    args: GetConfigurationSetEventDestinationsCommandInput,
    cb: (
      err: any,
      data?: GetConfigurationSetEventDestinationsCommandOutput
    ) => void
  ): void;
  getConfigurationSetEventDestinations(
    args: GetConfigurationSetEventDestinationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: GetConfigurationSetEventDestinationsCommandOutput
    ) => void
  ): void;
  getDedicatedIp(
    args: GetDedicatedIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDedicatedIpCommandOutput>;
  getDedicatedIp(
    args: GetDedicatedIpCommandInput,
    cb: (err: any, data?: GetDedicatedIpCommandOutput) => void
  ): void;
  getDedicatedIp(
    args: GetDedicatedIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDedicatedIpCommandOutput) => void
  ): void;
  getDedicatedIps(): Promise<GetDedicatedIpsCommandOutput>;
  getDedicatedIps(
    args: GetDedicatedIpsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDedicatedIpsCommandOutput>;
  getDedicatedIps(
    args: GetDedicatedIpsCommandInput,
    cb: (err: any, data?: GetDedicatedIpsCommandOutput) => void
  ): void;
  getDedicatedIps(
    args: GetDedicatedIpsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDedicatedIpsCommandOutput) => void
  ): void;
  getDeliverabilityDashboardOptions(): Promise<GetDeliverabilityDashboardOptionsCommandOutput>;
  getDeliverabilityDashboardOptions(
    args: GetDeliverabilityDashboardOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDeliverabilityDashboardOptionsCommandOutput>;
  getDeliverabilityDashboardOptions(
    args: GetDeliverabilityDashboardOptionsCommandInput,
    cb: (
      err: any,
      data?: GetDeliverabilityDashboardOptionsCommandOutput
    ) => void
  ): void;
  getDeliverabilityDashboardOptions(
    args: GetDeliverabilityDashboardOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: GetDeliverabilityDashboardOptionsCommandOutput
    ) => void
  ): void;
  getDeliverabilityTestReport(
    args: GetDeliverabilityTestReportCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDeliverabilityTestReportCommandOutput>;
  getDeliverabilityTestReport(
    args: GetDeliverabilityTestReportCommandInput,
    cb: (err: any, data?: GetDeliverabilityTestReportCommandOutput) => void
  ): void;
  getDeliverabilityTestReport(
    args: GetDeliverabilityTestReportCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDeliverabilityTestReportCommandOutput) => void
  ): void;
  getDomainDeliverabilityCampaign(
    args: GetDomainDeliverabilityCampaignCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDomainDeliverabilityCampaignCommandOutput>;
  getDomainDeliverabilityCampaign(
    args: GetDomainDeliverabilityCampaignCommandInput,
    cb: (err: any, data?: GetDomainDeliverabilityCampaignCommandOutput) => void
  ): void;
  getDomainDeliverabilityCampaign(
    args: GetDomainDeliverabilityCampaignCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDomainDeliverabilityCampaignCommandOutput) => void
  ): void;
  getDomainStatisticsReport(
    args: GetDomainStatisticsReportCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDomainStatisticsReportCommandOutput>;
  getDomainStatisticsReport(
    args: GetDomainStatisticsReportCommandInput,
    cb: (err: any, data?: GetDomainStatisticsReportCommandOutput) => void
  ): void;
  getDomainStatisticsReport(
    args: GetDomainStatisticsReportCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDomainStatisticsReportCommandOutput) => void
  ): void;
  getEmailIdentity(
    args: GetEmailIdentityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEmailIdentityCommandOutput>;
  getEmailIdentity(
    args: GetEmailIdentityCommandInput,
    cb: (err: any, data?: GetEmailIdentityCommandOutput) => void
  ): void;
  getEmailIdentity(
    args: GetEmailIdentityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEmailIdentityCommandOutput) => void
  ): void;
  listConfigurationSets(): Promise<ListConfigurationSetsCommandOutput>;
  listConfigurationSets(
    args: ListConfigurationSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListConfigurationSetsCommandOutput>;
  listConfigurationSets(
    args: ListConfigurationSetsCommandInput,
    cb: (err: any, data?: ListConfigurationSetsCommandOutput) => void
  ): void;
  listConfigurationSets(
    args: ListConfigurationSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListConfigurationSetsCommandOutput) => void
  ): void;
  listDedicatedIpPools(): Promise<ListDedicatedIpPoolsCommandOutput>;
  listDedicatedIpPools(
    args: ListDedicatedIpPoolsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDedicatedIpPoolsCommandOutput>;
  listDedicatedIpPools(
    args: ListDedicatedIpPoolsCommandInput,
    cb: (err: any, data?: ListDedicatedIpPoolsCommandOutput) => void
  ): void;
  listDedicatedIpPools(
    args: ListDedicatedIpPoolsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDedicatedIpPoolsCommandOutput) => void
  ): void;
  listDeliverabilityTestReports(): Promise<ListDeliverabilityTestReportsCommandOutput>;
  listDeliverabilityTestReports(
    args: ListDeliverabilityTestReportsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDeliverabilityTestReportsCommandOutput>;
  listDeliverabilityTestReports(
    args: ListDeliverabilityTestReportsCommandInput,
    cb: (err: any, data?: ListDeliverabilityTestReportsCommandOutput) => void
  ): void;
  listDeliverabilityTestReports(
    args: ListDeliverabilityTestReportsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDeliverabilityTestReportsCommandOutput) => void
  ): void;
  listDomainDeliverabilityCampaigns(
    args: ListDomainDeliverabilityCampaignsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDomainDeliverabilityCampaignsCommandOutput>;
  listDomainDeliverabilityCampaigns(
    args: ListDomainDeliverabilityCampaignsCommandInput,
    cb: (
      err: any,
      data?: ListDomainDeliverabilityCampaignsCommandOutput
    ) => void
  ): void;
  listDomainDeliverabilityCampaigns(
    args: ListDomainDeliverabilityCampaignsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListDomainDeliverabilityCampaignsCommandOutput
    ) => void
  ): void;
  listEmailIdentities(): Promise<ListEmailIdentitiesCommandOutput>;
  listEmailIdentities(
    args: ListEmailIdentitiesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListEmailIdentitiesCommandOutput>;
  listEmailIdentities(
    args: ListEmailIdentitiesCommandInput,
    cb: (err: any, data?: ListEmailIdentitiesCommandOutput) => void
  ): void;
  listEmailIdentities(
    args: ListEmailIdentitiesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListEmailIdentitiesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  putAccountDedicatedIpWarmupAttributes(): Promise<PutAccountDedicatedIpWarmupAttributesCommandOutput>;
  putAccountDedicatedIpWarmupAttributes(
    args: PutAccountDedicatedIpWarmupAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutAccountDedicatedIpWarmupAttributesCommandOutput>;
  putAccountDedicatedIpWarmupAttributes(
    args: PutAccountDedicatedIpWarmupAttributesCommandInput,
    cb: (
      err: any,
      data?: PutAccountDedicatedIpWarmupAttributesCommandOutput
    ) => void
  ): void;
  putAccountDedicatedIpWarmupAttributes(
    args: PutAccountDedicatedIpWarmupAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutAccountDedicatedIpWarmupAttributesCommandOutput
    ) => void
  ): void;
  putAccountSendingAttributes(): Promise<PutAccountSendingAttributesCommandOutput>;
  putAccountSendingAttributes(
    args: PutAccountSendingAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutAccountSendingAttributesCommandOutput>;
  putAccountSendingAttributes(
    args: PutAccountSendingAttributesCommandInput,
    cb: (err: any, data?: PutAccountSendingAttributesCommandOutput) => void
  ): void;
  putAccountSendingAttributes(
    args: PutAccountSendingAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutAccountSendingAttributesCommandOutput) => void
  ): void;
  putConfigurationSetDeliveryOptions(
    args: PutConfigurationSetDeliveryOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutConfigurationSetDeliveryOptionsCommandOutput>;
  putConfigurationSetDeliveryOptions(
    args: PutConfigurationSetDeliveryOptionsCommandInput,
    cb: (
      err: any,
      data?: PutConfigurationSetDeliveryOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetDeliveryOptions(
    args: PutConfigurationSetDeliveryOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutConfigurationSetDeliveryOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetReputationOptions(
    args: PutConfigurationSetReputationOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutConfigurationSetReputationOptionsCommandOutput>;
  putConfigurationSetReputationOptions(
    args: PutConfigurationSetReputationOptionsCommandInput,
    cb: (
      err: any,
      data?: PutConfigurationSetReputationOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetReputationOptions(
    args: PutConfigurationSetReputationOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutConfigurationSetReputationOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetSendingOptions(
    args: PutConfigurationSetSendingOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutConfigurationSetSendingOptionsCommandOutput>;
  putConfigurationSetSendingOptions(
    args: PutConfigurationSetSendingOptionsCommandInput,
    cb: (
      err: any,
      data?: PutConfigurationSetSendingOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetSendingOptions(
    args: PutConfigurationSetSendingOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutConfigurationSetSendingOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetTrackingOptions(
    args: PutConfigurationSetTrackingOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutConfigurationSetTrackingOptionsCommandOutput>;
  putConfigurationSetTrackingOptions(
    args: PutConfigurationSetTrackingOptionsCommandInput,
    cb: (
      err: any,
      data?: PutConfigurationSetTrackingOptionsCommandOutput
    ) => void
  ): void;
  putConfigurationSetTrackingOptions(
    args: PutConfigurationSetTrackingOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutConfigurationSetTrackingOptionsCommandOutput
    ) => void
  ): void;
  putDedicatedIpInPool(
    args: PutDedicatedIpInPoolCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutDedicatedIpInPoolCommandOutput>;
  putDedicatedIpInPool(
    args: PutDedicatedIpInPoolCommandInput,
    cb: (err: any, data?: PutDedicatedIpInPoolCommandOutput) => void
  ): void;
  putDedicatedIpInPool(
    args: PutDedicatedIpInPoolCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutDedicatedIpInPoolCommandOutput) => void
  ): void;
  putDedicatedIpWarmupAttributes(
    args: PutDedicatedIpWarmupAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutDedicatedIpWarmupAttributesCommandOutput>;
  putDedicatedIpWarmupAttributes(
    args: PutDedicatedIpWarmupAttributesCommandInput,
    cb: (err: any, data?: PutDedicatedIpWarmupAttributesCommandOutput) => void
  ): void;
  putDedicatedIpWarmupAttributes(
    args: PutDedicatedIpWarmupAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutDedicatedIpWarmupAttributesCommandOutput) => void
  ): void;
  putDeliverabilityDashboardOption(
    args: PutDeliverabilityDashboardOptionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutDeliverabilityDashboardOptionCommandOutput>;
  putDeliverabilityDashboardOption(
    args: PutDeliverabilityDashboardOptionCommandInput,
    cb: (err: any, data?: PutDeliverabilityDashboardOptionCommandOutput) => void
  ): void;
  putDeliverabilityDashboardOption(
    args: PutDeliverabilityDashboardOptionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutDeliverabilityDashboardOptionCommandOutput) => void
  ): void;
  putEmailIdentityDkimAttributes(
    args: PutEmailIdentityDkimAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutEmailIdentityDkimAttributesCommandOutput>;
  putEmailIdentityDkimAttributes(
    args: PutEmailIdentityDkimAttributesCommandInput,
    cb: (err: any, data?: PutEmailIdentityDkimAttributesCommandOutput) => void
  ): void;
  putEmailIdentityDkimAttributes(
    args: PutEmailIdentityDkimAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutEmailIdentityDkimAttributesCommandOutput) => void
  ): void;
  putEmailIdentityFeedbackAttributes(
    args: PutEmailIdentityFeedbackAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutEmailIdentityFeedbackAttributesCommandOutput>;
  putEmailIdentityFeedbackAttributes(
    args: PutEmailIdentityFeedbackAttributesCommandInput,
    cb: (
      err: any,
      data?: PutEmailIdentityFeedbackAttributesCommandOutput
    ) => void
  ): void;
  putEmailIdentityFeedbackAttributes(
    args: PutEmailIdentityFeedbackAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutEmailIdentityFeedbackAttributesCommandOutput
    ) => void
  ): void;
  putEmailIdentityMailFromAttributes(
    args: PutEmailIdentityMailFromAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutEmailIdentityMailFromAttributesCommandOutput>;
  putEmailIdentityMailFromAttributes(
    args: PutEmailIdentityMailFromAttributesCommandInput,
    cb: (
      err: any,
      data?: PutEmailIdentityMailFromAttributesCommandOutput
    ) => void
  ): void;
  putEmailIdentityMailFromAttributes(
    args: PutEmailIdentityMailFromAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: PutEmailIdentityMailFromAttributesCommandOutput
    ) => void
  ): void;
  sendEmail(
    args: SendEmailCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendEmailCommandOutput>;
  sendEmail(
    args: SendEmailCommandInput,
    cb: (err: any, data?: SendEmailCommandOutput) => void
  ): void;
  sendEmail(
    args: SendEmailCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendEmailCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateConfigurationSetEventDestination(
    args: UpdateConfigurationSetEventDestinationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateConfigurationSetEventDestinationCommandOutput>;
  updateConfigurationSetEventDestination(
    args: UpdateConfigurationSetEventDestinationCommandInput,
    cb: (
      err: any,
      data?: UpdateConfigurationSetEventDestinationCommandOutput
    ) => void
  ): void;
  updateConfigurationSetEventDestination(
    args: UpdateConfigurationSetEventDestinationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateConfigurationSetEventDestinationCommandOutput
    ) => void
  ): void;
}
export declare class PinpointEmail
  extends PinpointEmailClient
  implements PinpointEmail {}
