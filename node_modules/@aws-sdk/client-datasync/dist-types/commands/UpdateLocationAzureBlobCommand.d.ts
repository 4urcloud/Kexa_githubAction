import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DataSyncClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DataSyncClient";
import { UpdateLocationAzureBlobRequest, UpdateLocationAzureBlobResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link UpdateLocationAzureBlobCommand}.
 */
export interface UpdateLocationAzureBlobCommandInput extends UpdateLocationAzureBlobRequest {
}
/**
 * @public
 *
 * The output of {@link UpdateLocationAzureBlobCommand}.
 */
export interface UpdateLocationAzureBlobCommandOutput extends UpdateLocationAzureBlobResponse, __MetadataBearer {
}
declare const UpdateLocationAzureBlobCommand_base: {
    new (input: UpdateLocationAzureBlobCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateLocationAzureBlobCommandInput, UpdateLocationAzureBlobCommandOutput, DataSyncClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>Modifies some configurations of the Microsoft Azure Blob Storage transfer location that you're using with DataSync.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { DataSyncClient, UpdateLocationAzureBlobCommand } from "@aws-sdk/client-datasync"; // ES Modules import
 * // const { DataSyncClient, UpdateLocationAzureBlobCommand } = require("@aws-sdk/client-datasync"); // CommonJS import
 * const client = new DataSyncClient(config);
 * const input = { // UpdateLocationAzureBlobRequest
 *   LocationArn: "STRING_VALUE", // required
 *   Subdirectory: "STRING_VALUE",
 *   AuthenticationType: "SAS",
 *   SasConfiguration: { // AzureBlobSasConfiguration
 *     Token: "STRING_VALUE", // required
 *   },
 *   BlobType: "BLOCK",
 *   AccessTier: "HOT" || "COOL" || "ARCHIVE",
 *   AgentArns: [ // AgentArnList
 *     "STRING_VALUE",
 *   ],
 * };
 * const command = new UpdateLocationAzureBlobCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param UpdateLocationAzureBlobCommandInput - {@link UpdateLocationAzureBlobCommandInput}
 * @returns {@link UpdateLocationAzureBlobCommandOutput}
 * @see {@link UpdateLocationAzureBlobCommandInput} for command's `input` shape.
 * @see {@link UpdateLocationAzureBlobCommandOutput} for command's `response` shape.
 * @see {@link DataSyncClientResolvedConfig | config} for DataSyncClient's `config` shape.
 *
 * @throws {@link InternalException} (server fault)
 *  <p>This exception is thrown when an error occurs in the DataSync
 *       service.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>This exception is thrown when the client submits a malformed request.</p>
 *
 * @throws {@link DataSyncServiceException}
 * <p>Base exception class for all service exceptions from DataSync service.</p>
 *
 */
export declare class UpdateLocationAzureBlobCommand extends UpdateLocationAzureBlobCommand_base {
}
