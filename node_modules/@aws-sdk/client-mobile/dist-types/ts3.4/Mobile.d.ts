import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateProjectCommandInput,
  CreateProjectCommandOutput,
} from "./commands/CreateProjectCommand";
import {
  DeleteProjectCommandInput,
  DeleteProjectCommandOutput,
} from "./commands/DeleteProjectCommand";
import {
  DescribeBundleCommandInput,
  DescribeBundleCommandOutput,
} from "./commands/DescribeBundleCommand";
import {
  DescribeProjectCommandInput,
  DescribeProjectCommandOutput,
} from "./commands/DescribeProjectCommand";
import {
  ExportBundleCommandInput,
  ExportBundleCommandOutput,
} from "./commands/ExportBundleCommand";
import {
  ExportProjectCommandInput,
  ExportProjectCommandOutput,
} from "./commands/ExportProjectCommand";
import {
  ListBundlesCommandInput,
  ListBundlesCommandOutput,
} from "./commands/ListBundlesCommand";
import {
  ListProjectsCommandInput,
  ListProjectsCommandOutput,
} from "./commands/ListProjectsCommand";
import {
  UpdateProjectCommandInput,
  UpdateProjectCommandOutput,
} from "./commands/UpdateProjectCommand";
import { MobileClient } from "./MobileClient";
export interface Mobile {
  createProject(
    args: CreateProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateProjectCommandOutput>;
  createProject(
    args: CreateProjectCommandInput,
    cb: (err: any, data?: CreateProjectCommandOutput) => void
  ): void;
  createProject(
    args: CreateProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateProjectCommandOutput) => void
  ): void;
  deleteProject(
    args: DeleteProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteProjectCommandOutput>;
  deleteProject(
    args: DeleteProjectCommandInput,
    cb: (err: any, data?: DeleteProjectCommandOutput) => void
  ): void;
  deleteProject(
    args: DeleteProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteProjectCommandOutput) => void
  ): void;
  describeBundle(
    args: DescribeBundleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBundleCommandOutput>;
  describeBundle(
    args: DescribeBundleCommandInput,
    cb: (err: any, data?: DescribeBundleCommandOutput) => void
  ): void;
  describeBundle(
    args: DescribeBundleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBundleCommandOutput) => void
  ): void;
  describeProject(
    args: DescribeProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeProjectCommandOutput>;
  describeProject(
    args: DescribeProjectCommandInput,
    cb: (err: any, data?: DescribeProjectCommandOutput) => void
  ): void;
  describeProject(
    args: DescribeProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeProjectCommandOutput) => void
  ): void;
  exportBundle(
    args: ExportBundleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ExportBundleCommandOutput>;
  exportBundle(
    args: ExportBundleCommandInput,
    cb: (err: any, data?: ExportBundleCommandOutput) => void
  ): void;
  exportBundle(
    args: ExportBundleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ExportBundleCommandOutput) => void
  ): void;
  exportProject(
    args: ExportProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ExportProjectCommandOutput>;
  exportProject(
    args: ExportProjectCommandInput,
    cb: (err: any, data?: ExportProjectCommandOutput) => void
  ): void;
  exportProject(
    args: ExportProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ExportProjectCommandOutput) => void
  ): void;
  listBundles(
    args: ListBundlesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListBundlesCommandOutput>;
  listBundles(
    args: ListBundlesCommandInput,
    cb: (err: any, data?: ListBundlesCommandOutput) => void
  ): void;
  listBundles(
    args: ListBundlesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListBundlesCommandOutput) => void
  ): void;
  listProjects(
    args: ListProjectsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListProjectsCommandOutput>;
  listProjects(
    args: ListProjectsCommandInput,
    cb: (err: any, data?: ListProjectsCommandOutput) => void
  ): void;
  listProjects(
    args: ListProjectsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListProjectsCommandOutput) => void
  ): void;
  updateProject(
    args: UpdateProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateProjectCommandOutput>;
  updateProject(
    args: UpdateProjectCommandInput,
    cb: (err: any, data?: UpdateProjectCommandOutput) => void
  ): void;
  updateProject(
    args: UpdateProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateProjectCommandOutput) => void
  ): void;
}
export declare class Mobile extends MobileClient implements Mobile {}
