import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { MobileServiceException as __BaseException } from "./MobileServiceException";
export declare class AccountActionRequiredException extends __BaseException {
  readonly name: "AccountActionRequiredException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccountActionRequiredException, __BaseException>
  );
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export interface CreateProjectRequest {
  name?: string;
  region?: string;
  contents?: Uint8Array;
  snapshotId?: string;
}
export interface Resource {
  type?: string;
  name?: string;
  arn?: string;
  feature?: string;
  attributes?: Record<string, string>;
}
export declare const ProjectState: {
  readonly IMPORTING: "IMPORTING";
  readonly NORMAL: "NORMAL";
  readonly SYNCING: "SYNCING";
};
export type ProjectState = (typeof ProjectState)[keyof typeof ProjectState];
export interface ProjectDetails {
  name?: string;
  projectId?: string;
  region?: string;
  state?: ProjectState;
  createdDate?: Date;
  lastUpdatedDate?: Date;
  consoleUrl?: string;
  resources?: Resource[];
}
export interface CreateProjectResult {
  details?: ProjectDetails;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  retryAfterSeconds?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  retryAfterSeconds?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  retryAfterSeconds?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare class UnauthorizedException extends __BaseException {
  readonly name: "UnauthorizedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnauthorizedException, __BaseException>
  );
}
export interface DeleteProjectRequest {
  projectId: string | undefined;
}
export interface DeleteProjectResult {
  deletedResources?: Resource[];
  orphanedResources?: Resource[];
}
export interface DescribeBundleRequest {
  bundleId: string | undefined;
}
export declare const Platform: {
  readonly ANDROID: "ANDROID";
  readonly JAVASCRIPT: "JAVASCRIPT";
  readonly LINUX: "LINUX";
  readonly OBJC: "OBJC";
  readonly OSX: "OSX";
  readonly SWIFT: "SWIFT";
  readonly WINDOWS: "WINDOWS";
};
export type Platform = (typeof Platform)[keyof typeof Platform];
export interface BundleDetails {
  bundleId?: string;
  title?: string;
  version?: string;
  description?: string;
  iconUrl?: string;
  availablePlatforms?: Platform[];
}
export interface DescribeBundleResult {
  details?: BundleDetails;
}
export interface DescribeProjectRequest {
  projectId: string | undefined;
  syncFromResources?: boolean;
}
export interface DescribeProjectResult {
  details?: ProjectDetails;
}
export interface ExportBundleRequest {
  bundleId: string | undefined;
  projectId?: string;
  platform?: Platform;
}
export interface ExportBundleResult {
  downloadUrl?: string;
}
export interface ExportProjectRequest {
  projectId: string | undefined;
}
export interface ExportProjectResult {
  downloadUrl?: string;
  shareUrl?: string;
  snapshotId?: string;
}
export interface ListBundlesRequest {
  maxResults?: number;
  nextToken?: string;
}
export interface ListBundlesResult {
  bundleList?: BundleDetails[];
  nextToken?: string;
}
export interface ListProjectsRequest {
  maxResults?: number;
  nextToken?: string;
}
export interface ProjectSummary {
  name?: string;
  projectId?: string;
}
export interface ListProjectsResult {
  projects?: ProjectSummary[];
  nextToken?: string;
}
export interface UpdateProjectRequest {
  contents?: Uint8Array;
  projectId: string | undefined;
}
export interface UpdateProjectResult {
  details?: ProjectDetails;
}
