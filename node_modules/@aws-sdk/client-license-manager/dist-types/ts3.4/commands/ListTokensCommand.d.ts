import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  LicenseManagerClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LicenseManagerClient";
import { ListTokensRequest, ListTokensResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface ListTokensCommandInput extends ListTokensRequest {}
export interface ListTokensCommandOutput
  extends ListTokensResponse,
    __MetadataBearer {}
declare const ListTokensCommand_base: {
  new (
    input: ListTokensCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    ListTokensCommandInput,
    ListTokensCommandOutput,
    LicenseManagerClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    ...[input]: [] | [ListTokensCommandInput]
  ): import("@smithy/smithy-client").CommandImpl<
    ListTokensCommandInput,
    ListTokensCommandOutput,
    LicenseManagerClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class ListTokensCommand extends ListTokensCommand_base {}
