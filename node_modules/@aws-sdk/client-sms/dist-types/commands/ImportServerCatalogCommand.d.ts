import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ImportServerCatalogRequest, ImportServerCatalogResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, SMSClientResolvedConfig } from "../SMSClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link ImportServerCatalogCommand}.
 */
export interface ImportServerCatalogCommandInput extends ImportServerCatalogRequest {
}
/**
 * @public
 *
 * The output of {@link ImportServerCatalogCommand}.
 */
export interface ImportServerCatalogCommandOutput extends ImportServerCatalogResponse, __MetadataBearer {
}
declare const ImportServerCatalogCommand_base: {
    new (input: ImportServerCatalogCommandInput): import("@smithy/smithy-client").CommandImpl<ImportServerCatalogCommandInput, ImportServerCatalogCommandOutput, SMSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>Gathers a complete list of on-premises servers. Connectors must be installed and
 *             monitoring all servers to import.</p>
 *          <p>This call returns immediately, but might take additional time to retrieve all the
 *             servers.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { SMSClient, ImportServerCatalogCommand } from "@aws-sdk/client-sms"; // ES Modules import
 * // const { SMSClient, ImportServerCatalogCommand } = require("@aws-sdk/client-sms"); // CommonJS import
 * const client = new SMSClient(config);
 * const input = {};
 * const command = new ImportServerCatalogCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param ImportServerCatalogCommandInput - {@link ImportServerCatalogCommandInput}
 * @returns {@link ImportServerCatalogCommandOutput}
 * @see {@link ImportServerCatalogCommandInput} for command's `input` shape.
 * @see {@link ImportServerCatalogCommandOutput} for command's `response` shape.
 * @see {@link SMSClientResolvedConfig | config} for SMSClient's `config` shape.
 *
 * @throws {@link InvalidParameterException} (client fault)
 *  <p>A specified parameter is not valid.</p>
 *
 * @throws {@link MissingRequiredParameterException} (client fault)
 *  <p>A required parameter is missing.</p>
 *
 * @throws {@link NoConnectorsAvailableException} (client fault)
 *  <p>There are no connectors available.</p>
 *
 * @throws {@link OperationNotPermittedException} (client fault)
 *  <p>This operation is not allowed.</p>
 *
 * @throws {@link UnauthorizedOperationException} (client fault)
 *  <p>You lack permissions needed to perform this operation. Check your IAM policies,
 *             and ensure that you are using the correct access keys.</p>
 *
 * @throws {@link SMSServiceException}
 * <p>Base exception class for all service exceptions from SMS service.</p>
 *
 */
export declare class ImportServerCatalogCommand extends ImportServerCatalogCommand_base {
}
