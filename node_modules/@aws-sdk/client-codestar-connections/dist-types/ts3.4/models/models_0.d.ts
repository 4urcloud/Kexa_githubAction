import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { CodeStarConnectionsServiceException as __BaseException } from "./CodeStarConnectionsServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const BlockerStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly RESOLVED: "RESOLVED";
};
export type BlockerStatus = (typeof BlockerStatus)[keyof typeof BlockerStatus];
export declare const BlockerType: {
  readonly AUTOMATED: "AUTOMATED";
};
export type BlockerType = (typeof BlockerType)[keyof typeof BlockerType];
export declare const ProviderType: {
  readonly BITBUCKET: "Bitbucket";
  readonly GITHUB: "GitHub";
  readonly GITHUB_ENTERPRISE_SERVER: "GitHubEnterpriseServer";
  readonly GITLAB: "GitLab";
  readonly GITLAB_SELF_MANAGED: "GitLabSelfManaged";
};
export type ProviderType = (typeof ProviderType)[keyof typeof ProviderType];
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateConnectionInput {
  ProviderType?: ProviderType;
  ConnectionName: string | undefined;
  Tags?: Tag[];
  HostArn?: string;
}
export interface CreateConnectionOutput {
  ConnectionArn: string | undefined;
  Tags?: Tag[];
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ResourceUnavailableException extends __BaseException {
  readonly name: "ResourceUnavailableException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceUnavailableException, __BaseException>
  );
}
export interface VpcConfiguration {
  VpcId: string | undefined;
  SubnetIds: string[] | undefined;
  SecurityGroupIds: string[] | undefined;
  TlsCertificate?: string;
}
export interface CreateHostInput {
  Name: string | undefined;
  ProviderType: ProviderType | undefined;
  ProviderEndpoint: string | undefined;
  VpcConfiguration?: VpcConfiguration;
  Tags?: Tag[];
}
export interface CreateHostOutput {
  HostArn?: string;
  Tags?: Tag[];
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export interface CreateRepositoryLinkInput {
  ConnectionArn: string | undefined;
  OwnerId: string | undefined;
  RepositoryName: string | undefined;
  EncryptionKeyArn?: string;
  Tags?: Tag[];
}
export interface RepositoryLinkInfo {
  ConnectionArn: string | undefined;
  EncryptionKeyArn?: string;
  OwnerId: string | undefined;
  ProviderType: ProviderType | undefined;
  RepositoryLinkArn: string | undefined;
  RepositoryLinkId: string | undefined;
  RepositoryName: string | undefined;
}
export interface CreateRepositoryLinkOutput {
  RepositoryLinkInfo: RepositoryLinkInfo | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidInputException extends __BaseException {
  readonly name: "InvalidInputException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidInputException, __BaseException>
  );
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare const SyncConfigurationType: {
  readonly CFN_STACK_SYNC: "CFN_STACK_SYNC";
};
export type SyncConfigurationType =
  (typeof SyncConfigurationType)[keyof typeof SyncConfigurationType];
export interface CreateSyncConfigurationInput {
  Branch: string | undefined;
  ConfigFile: string | undefined;
  RepositoryLinkId: string | undefined;
  ResourceName: string | undefined;
  RoleArn: string | undefined;
  SyncType: SyncConfigurationType | undefined;
}
export interface SyncConfiguration {
  Branch: string | undefined;
  ConfigFile?: string;
  OwnerId: string | undefined;
  ProviderType: ProviderType | undefined;
  RepositoryLinkId: string | undefined;
  RepositoryName: string | undefined;
  ResourceName: string | undefined;
  RoleArn: string | undefined;
  SyncType: SyncConfigurationType | undefined;
}
export interface CreateSyncConfigurationOutput {
  SyncConfiguration: SyncConfiguration | undefined;
}
export interface DeleteConnectionInput {
  ConnectionArn: string | undefined;
}
export interface DeleteConnectionOutput {}
export interface DeleteHostInput {
  HostArn: string | undefined;
}
export interface DeleteHostOutput {}
export interface DeleteRepositoryLinkInput {
  RepositoryLinkId: string | undefined;
}
export interface DeleteRepositoryLinkOutput {}
export declare class SyncConfigurationStillExistsException extends __BaseException {
  readonly name: "SyncConfigurationStillExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      SyncConfigurationStillExistsException,
      __BaseException
    >
  );
}
export declare class UnsupportedProviderTypeException extends __BaseException {
  readonly name: "UnsupportedProviderTypeException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      UnsupportedProviderTypeException,
      __BaseException
    >
  );
}
export interface DeleteSyncConfigurationInput {
  SyncType: SyncConfigurationType | undefined;
  ResourceName: string | undefined;
}
export interface DeleteSyncConfigurationOutput {}
export interface GetConnectionInput {
  ConnectionArn: string | undefined;
}
export declare const ConnectionStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly ERROR: "ERROR";
  readonly PENDING: "PENDING";
};
export type ConnectionStatus =
  (typeof ConnectionStatus)[keyof typeof ConnectionStatus];
export interface Connection {
  ConnectionName?: string;
  ConnectionArn?: string;
  ProviderType?: ProviderType;
  OwnerAccountId?: string;
  ConnectionStatus?: ConnectionStatus;
  HostArn?: string;
}
export interface GetConnectionOutput {
  Connection?: Connection;
}
export interface GetHostInput {
  HostArn: string | undefined;
}
export interface GetHostOutput {
  Name?: string;
  Status?: string;
  ProviderType?: ProviderType;
  ProviderEndpoint?: string;
  VpcConfiguration?: VpcConfiguration;
}
export interface GetRepositoryLinkInput {
  RepositoryLinkId: string | undefined;
}
export interface GetRepositoryLinkOutput {
  RepositoryLinkInfo: RepositoryLinkInfo | undefined;
}
export interface GetRepositorySyncStatusInput {
  Branch: string | undefined;
  RepositoryLinkId: string | undefined;
  SyncType: SyncConfigurationType | undefined;
}
export interface RepositorySyncEvent {
  Event: string | undefined;
  ExternalId?: string;
  Time: Date | undefined;
  Type: string | undefined;
}
export declare const RepositorySyncStatus: {
  readonly FAILED: "FAILED";
  readonly INITIATED: "INITIATED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED: "QUEUED";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type RepositorySyncStatus =
  (typeof RepositorySyncStatus)[keyof typeof RepositorySyncStatus];
export interface RepositorySyncAttempt {
  StartedAt: Date | undefined;
  Status: RepositorySyncStatus | undefined;
  Events: RepositorySyncEvent[] | undefined;
}
export interface GetRepositorySyncStatusOutput {
  LatestSync: RepositorySyncAttempt | undefined;
}
export interface GetResourceSyncStatusInput {
  ResourceName: string | undefined;
  SyncType: SyncConfigurationType | undefined;
}
export interface Revision {
  Branch: string | undefined;
  Directory: string | undefined;
  OwnerId: string | undefined;
  RepositoryName: string | undefined;
  ProviderType: ProviderType | undefined;
  Sha: string | undefined;
}
export interface ResourceSyncEvent {
  Event: string | undefined;
  ExternalId?: string;
  Time: Date | undefined;
  Type: string | undefined;
}
export declare const ResourceSyncStatus: {
  readonly FAILED: "FAILED";
  readonly INITIATED: "INITIATED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type ResourceSyncStatus =
  (typeof ResourceSyncStatus)[keyof typeof ResourceSyncStatus];
export interface ResourceSyncAttempt {
  Events: ResourceSyncEvent[] | undefined;
  InitialRevision: Revision | undefined;
  StartedAt: Date | undefined;
  Status: ResourceSyncStatus | undefined;
  TargetRevision: Revision | undefined;
  Target: string | undefined;
}
export interface GetResourceSyncStatusOutput {
  DesiredState?: Revision;
  LatestSuccessfulSync?: ResourceSyncAttempt;
  LatestSync: ResourceSyncAttempt | undefined;
}
export interface GetSyncBlockerSummaryInput {
  SyncType: SyncConfigurationType | undefined;
  ResourceName: string | undefined;
}
export interface SyncBlockerContext {
  Key: string | undefined;
  Value: string | undefined;
}
export interface SyncBlocker {
  Id: string | undefined;
  Type: BlockerType | undefined;
  Status: BlockerStatus | undefined;
  CreatedReason: string | undefined;
  CreatedAt: Date | undefined;
  Contexts?: SyncBlockerContext[];
  ResolvedReason?: string;
  ResolvedAt?: Date;
}
export interface SyncBlockerSummary {
  ResourceName: string | undefined;
  ParentResourceName?: string;
  LatestBlockers?: SyncBlocker[];
}
export interface GetSyncBlockerSummaryOutput {
  SyncBlockerSummary: SyncBlockerSummary | undefined;
}
export interface GetSyncConfigurationInput {
  SyncType: SyncConfigurationType | undefined;
  ResourceName: string | undefined;
}
export interface GetSyncConfigurationOutput {
  SyncConfiguration: SyncConfiguration | undefined;
}
export interface ListConnectionsInput {
  ProviderTypeFilter?: ProviderType;
  HostArnFilter?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListConnectionsOutput {
  Connections?: Connection[];
  NextToken?: string;
}
export interface ListHostsInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface Host {
  Name?: string;
  HostArn?: string;
  ProviderType?: ProviderType;
  ProviderEndpoint?: string;
  VpcConfiguration?: VpcConfiguration;
  Status?: string;
  StatusMessage?: string;
}
export interface ListHostsOutput {
  Hosts?: Host[];
  NextToken?: string;
}
export interface ListRepositoryLinksInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListRepositoryLinksOutput {
  RepositoryLinks: RepositoryLinkInfo[] | undefined;
  NextToken?: string;
}
export interface ListRepositorySyncDefinitionsInput {
  RepositoryLinkId: string | undefined;
  SyncType: SyncConfigurationType | undefined;
}
export interface RepositorySyncDefinition {
  Branch: string | undefined;
  Directory: string | undefined;
  Parent: string | undefined;
  Target: string | undefined;
}
export interface ListRepositorySyncDefinitionsOutput {
  RepositorySyncDefinitions: RepositorySyncDefinition[] | undefined;
  NextToken?: string;
}
export interface ListSyncConfigurationsInput {
  MaxResults?: number;
  NextToken?: string;
  RepositoryLinkId: string | undefined;
  SyncType: SyncConfigurationType | undefined;
}
export interface ListSyncConfigurationsOutput {
  SyncConfigurations: SyncConfiguration[] | undefined;
  NextToken?: string;
}
export interface ListTagsForResourceInput {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceOutput {
  Tags?: Tag[];
}
export interface TagResourceInput {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceOutput {}
export interface UntagResourceInput {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceOutput {}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class UnsupportedOperationException extends __BaseException {
  readonly name: "UnsupportedOperationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UnsupportedOperationException, __BaseException>
  );
}
export interface UpdateHostInput {
  HostArn: string | undefined;
  ProviderEndpoint?: string;
  VpcConfiguration?: VpcConfiguration;
}
export interface UpdateHostOutput {}
export declare class ConditionalCheckFailedException extends __BaseException {
  readonly name: "ConditionalCheckFailedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      ConditionalCheckFailedException,
      __BaseException
    >
  );
}
export declare class UpdateOutOfSyncException extends __BaseException {
  readonly name: "UpdateOutOfSyncException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UpdateOutOfSyncException, __BaseException>
  );
}
export interface UpdateRepositoryLinkInput {
  ConnectionArn?: string;
  EncryptionKeyArn?: string;
  RepositoryLinkId: string | undefined;
}
export interface UpdateRepositoryLinkOutput {
  RepositoryLinkInfo: RepositoryLinkInfo | undefined;
}
export declare class RetryLatestCommitFailedException extends __BaseException {
  readonly name: "RetryLatestCommitFailedException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      RetryLatestCommitFailedException,
      __BaseException
    >
  );
}
export declare class SyncBlockerDoesNotExistException extends __BaseException {
  readonly name: "SyncBlockerDoesNotExistException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      SyncBlockerDoesNotExistException,
      __BaseException
    >
  );
}
export interface UpdateSyncBlockerInput {
  Id: string | undefined;
  SyncType: SyncConfigurationType | undefined;
  ResourceName: string | undefined;
  ResolvedReason: string | undefined;
}
export interface UpdateSyncBlockerOutput {
  ResourceName: string | undefined;
  ParentResourceName?: string;
  SyncBlocker: SyncBlocker | undefined;
}
export interface UpdateSyncConfigurationInput {
  Branch?: string;
  ConfigFile?: string;
  RepositoryLinkId?: string;
  ResourceName: string | undefined;
  RoleArn?: string;
  SyncType: SyncConfigurationType | undefined;
}
export interface UpdateSyncConfigurationOutput {
  SyncConfiguration: SyncConfiguration | undefined;
}
