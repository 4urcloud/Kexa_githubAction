import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CodeStarConnectionsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CodeStarConnectionsClient";
import { DeleteRepositoryLinkInput, DeleteRepositoryLinkOutput } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DeleteRepositoryLinkCommand}.
 */
export interface DeleteRepositoryLinkCommandInput extends DeleteRepositoryLinkInput {
}
/**
 * @public
 *
 * The output of {@link DeleteRepositoryLinkCommand}.
 */
export interface DeleteRepositoryLinkCommandOutput extends DeleteRepositoryLinkOutput, __MetadataBearer {
}
declare const DeleteRepositoryLinkCommand_base: {
    new (input: DeleteRepositoryLinkCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteRepositoryLinkCommandInput, DeleteRepositoryLinkCommandOutput, CodeStarConnectionsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>Deletes the association between your connection and a specified external Git repository.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { CodeStarConnectionsClient, DeleteRepositoryLinkCommand } from "@aws-sdk/client-codestar-connections"; // ES Modules import
 * // const { CodeStarConnectionsClient, DeleteRepositoryLinkCommand } = require("@aws-sdk/client-codestar-connections"); // CommonJS import
 * const client = new CodeStarConnectionsClient(config);
 * const input = { // DeleteRepositoryLinkInput
 *   RepositoryLinkId: "STRING_VALUE", // required
 * };
 * const command = new DeleteRepositoryLinkCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param DeleteRepositoryLinkCommandInput - {@link DeleteRepositoryLinkCommandInput}
 * @returns {@link DeleteRepositoryLinkCommandOutput}
 * @see {@link DeleteRepositoryLinkCommandInput} for command's `input` shape.
 * @see {@link DeleteRepositoryLinkCommandOutput} for command's `response` shape.
 * @see {@link CodeStarConnectionsClientResolvedConfig | config} for CodeStarConnectionsClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>You do not have sufficient access to perform this action.</p>
 *
 * @throws {@link ConcurrentModificationException} (client fault)
 *  <p>Exception thrown as a result of concurrent modification to an application. For example, two individuals attempting to edit the same application at the same time. </p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>Received an internal server exception. Try again later.</p>
 *
 * @throws {@link InvalidInputException} (client fault)
 *  <p>The input is not valid. Verify that the action is typed correctly.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>Resource not found. Verify the connection resource ARN and try again.</p>
 *
 * @throws {@link SyncConfigurationStillExistsException} (client fault)
 *  <p>Unable to continue. The sync blocker still exists.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>The request was denied due to request throttling.</p>
 *
 * @throws {@link UnsupportedProviderTypeException} (client fault)
 *  <p>The specified provider type is not supported for connections.</p>
 *
 * @throws {@link CodeStarConnectionsServiceException}
 * <p>Base exception class for all service exceptions from CodeStarConnections service.</p>
 *
 */
export declare class DeleteRepositoryLinkCommand extends DeleteRepositoryLinkCommand_base {
}
