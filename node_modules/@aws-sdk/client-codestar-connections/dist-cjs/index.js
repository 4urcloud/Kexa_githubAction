"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  BlockerStatus: () => BlockerStatus,
  BlockerType: () => BlockerType,
  CodeStarConnections: () => CodeStarConnections,
  CodeStarConnectionsClient: () => CodeStarConnectionsClient,
  CodeStarConnectionsServiceException: () => CodeStarConnectionsServiceException,
  ConcurrentModificationException: () => ConcurrentModificationException,
  ConditionalCheckFailedException: () => ConditionalCheckFailedException,
  ConflictException: () => ConflictException,
  ConnectionStatus: () => ConnectionStatus,
  CreateConnectionCommand: () => CreateConnectionCommand,
  CreateHostCommand: () => CreateHostCommand,
  CreateRepositoryLinkCommand: () => CreateRepositoryLinkCommand,
  CreateSyncConfigurationCommand: () => CreateSyncConfigurationCommand,
  DeleteConnectionCommand: () => DeleteConnectionCommand,
  DeleteHostCommand: () => DeleteHostCommand,
  DeleteRepositoryLinkCommand: () => DeleteRepositoryLinkCommand,
  DeleteSyncConfigurationCommand: () => DeleteSyncConfigurationCommand,
  GetConnectionCommand: () => GetConnectionCommand,
  GetHostCommand: () => GetHostCommand,
  GetRepositoryLinkCommand: () => GetRepositoryLinkCommand,
  GetRepositorySyncStatusCommand: () => GetRepositorySyncStatusCommand,
  GetResourceSyncStatusCommand: () => GetResourceSyncStatusCommand,
  GetSyncBlockerSummaryCommand: () => GetSyncBlockerSummaryCommand,
  GetSyncConfigurationCommand: () => GetSyncConfigurationCommand,
  InternalServerException: () => InternalServerException,
  InvalidInputException: () => InvalidInputException,
  LimitExceededException: () => LimitExceededException,
  ListConnectionsCommand: () => ListConnectionsCommand,
  ListHostsCommand: () => ListHostsCommand,
  ListRepositoryLinksCommand: () => ListRepositoryLinksCommand,
  ListRepositorySyncDefinitionsCommand: () => ListRepositorySyncDefinitionsCommand,
  ListSyncConfigurationsCommand: () => ListSyncConfigurationsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ProviderType: () => ProviderType,
  RepositorySyncStatus: () => RepositorySyncStatus,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResourceSyncStatus: () => ResourceSyncStatus,
  ResourceUnavailableException: () => ResourceUnavailableException,
  RetryLatestCommitFailedException: () => RetryLatestCommitFailedException,
  SyncBlockerDoesNotExistException: () => SyncBlockerDoesNotExistException,
  SyncConfigurationStillExistsException: () => SyncConfigurationStillExistsException,
  SyncConfigurationType: () => SyncConfigurationType,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UnsupportedOperationException: () => UnsupportedOperationException,
  UnsupportedProviderTypeException: () => UnsupportedProviderTypeException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateHostCommand: () => UpdateHostCommand,
  UpdateOutOfSyncException: () => UpdateOutOfSyncException,
  UpdateRepositoryLinkCommand: () => UpdateRepositoryLinkCommand,
  UpdateSyncBlockerCommand: () => UpdateSyncBlockerCommand,
  UpdateSyncConfigurationCommand: () => UpdateSyncConfigurationCommand,
  __Client: () => import_smithy_client.Client,
  paginateListConnections: () => paginateListConnections,
  paginateListHosts: () => paginateListHosts,
  paginateListRepositoryLinks: () => paginateListRepositoryLinks,
  paginateListSyncConfigurations: () => paginateListSyncConfigurations
});
module.exports = __toCommonJS(src_exports);

// src/CodeStarConnectionsClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "codestar-connections"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/CodeStarConnectionsClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/CodeStarConnectionsClient.ts
var _CodeStarConnectionsClient = class _CodeStarConnectionsClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultCodeStarConnectionsHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_CodeStarConnectionsClient, "CodeStarConnectionsClient");
var CodeStarConnectionsClient = _CodeStarConnectionsClient;

// src/CodeStarConnections.ts


// src/commands/CreateConnectionCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_0.ts



// src/models/CodeStarConnectionsServiceException.ts

var _CodeStarConnectionsServiceException = class _CodeStarConnectionsServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _CodeStarConnectionsServiceException.prototype);
  }
};
__name(_CodeStarConnectionsServiceException, "CodeStarConnectionsServiceException");
var CodeStarConnectionsServiceException = _CodeStarConnectionsServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var BlockerStatus = {
  ACTIVE: "ACTIVE",
  RESOLVED: "RESOLVED"
};
var BlockerType = {
  AUTOMATED: "AUTOMATED"
};
var ProviderType = {
  BITBUCKET: "Bitbucket",
  GITHUB: "GitHub",
  GITHUB_ENTERPRISE_SERVER: "GitHubEnterpriseServer",
  GITLAB: "GitLab",
  GITLAB_SELF_MANAGED: "GitLabSelfManaged"
};
var _LimitExceededException = class _LimitExceededException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ResourceUnavailableException = class _ResourceUnavailableException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceUnavailableException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceUnavailableException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceUnavailableException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceUnavailableException, "ResourceUnavailableException");
var ResourceUnavailableException = _ResourceUnavailableException;
var _ConcurrentModificationException = class _ConcurrentModificationException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentModificationException",
      $fault: "client",
      ...opts
    });
    this.name = "ConcurrentModificationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConcurrentModificationException, "ConcurrentModificationException");
var ConcurrentModificationException = _ConcurrentModificationException;
var _InternalServerException = class _InternalServerException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _InvalidInputException = class _InvalidInputException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidInputException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidInputException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidInputException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidInputException, "InvalidInputException");
var InvalidInputException = _InvalidInputException;
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var _ThrottlingException = class _ThrottlingException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var SyncConfigurationType = {
  CFN_STACK_SYNC: "CFN_STACK_SYNC"
};
var _SyncConfigurationStillExistsException = class _SyncConfigurationStillExistsException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SyncConfigurationStillExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "SyncConfigurationStillExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SyncConfigurationStillExistsException.prototype);
    this.Message = opts.Message;
  }
};
__name(_SyncConfigurationStillExistsException, "SyncConfigurationStillExistsException");
var SyncConfigurationStillExistsException = _SyncConfigurationStillExistsException;
var _UnsupportedProviderTypeException = class _UnsupportedProviderTypeException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedProviderTypeException",
      $fault: "client",
      ...opts
    });
    this.name = "UnsupportedProviderTypeException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnsupportedProviderTypeException.prototype);
    this.Message = opts.Message;
  }
};
__name(_UnsupportedProviderTypeException, "UnsupportedProviderTypeException");
var UnsupportedProviderTypeException = _UnsupportedProviderTypeException;
var ConnectionStatus = {
  AVAILABLE: "AVAILABLE",
  ERROR: "ERROR",
  PENDING: "PENDING"
};
var RepositorySyncStatus = {
  FAILED: "FAILED",
  INITIATED: "INITIATED",
  IN_PROGRESS: "IN_PROGRESS",
  QUEUED: "QUEUED",
  SUCCEEDED: "SUCCEEDED"
};
var ResourceSyncStatus = {
  FAILED: "FAILED",
  INITIATED: "INITIATED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCEEDED: "SUCCEEDED"
};
var _ConflictException = class _ConflictException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _UnsupportedOperationException = class _UnsupportedOperationException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedOperationException",
      $fault: "client",
      ...opts
    });
    this.name = "UnsupportedOperationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnsupportedOperationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_UnsupportedOperationException, "UnsupportedOperationException");
var UnsupportedOperationException = _UnsupportedOperationException;
var _ConditionalCheckFailedException = class _ConditionalCheckFailedException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConditionalCheckFailedException",
      $fault: "client",
      ...opts
    });
    this.name = "ConditionalCheckFailedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConditionalCheckFailedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConditionalCheckFailedException, "ConditionalCheckFailedException");
var ConditionalCheckFailedException = _ConditionalCheckFailedException;
var _UpdateOutOfSyncException = class _UpdateOutOfSyncException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UpdateOutOfSyncException",
      $fault: "client",
      ...opts
    });
    this.name = "UpdateOutOfSyncException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UpdateOutOfSyncException.prototype);
    this.Message = opts.Message;
  }
};
__name(_UpdateOutOfSyncException, "UpdateOutOfSyncException");
var UpdateOutOfSyncException = _UpdateOutOfSyncException;
var _RetryLatestCommitFailedException = class _RetryLatestCommitFailedException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RetryLatestCommitFailedException",
      $fault: "server",
      ...opts
    });
    this.name = "RetryLatestCommitFailedException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _RetryLatestCommitFailedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_RetryLatestCommitFailedException, "RetryLatestCommitFailedException");
var RetryLatestCommitFailedException = _RetryLatestCommitFailedException;
var _SyncBlockerDoesNotExistException = class _SyncBlockerDoesNotExistException extends CodeStarConnectionsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SyncBlockerDoesNotExistException",
      $fault: "client",
      ...opts
    });
    this.name = "SyncBlockerDoesNotExistException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SyncBlockerDoesNotExistException.prototype);
    this.Message = opts.Message;
  }
};
__name(_SyncBlockerDoesNotExistException, "SyncBlockerDoesNotExistException");
var SyncBlockerDoesNotExistException = _SyncBlockerDoesNotExistException;

// src/protocols/Aws_json1_0.ts
var se_CreateConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateConnection");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateConnectionCommand");
var se_CreateHostCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateHost");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateHostCommand");
var se_CreateRepositoryLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateRepositoryLink");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRepositoryLinkCommand");
var se_CreateSyncConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateSyncConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSyncConfigurationCommand");
var se_DeleteConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteConnection");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteConnectionCommand");
var se_DeleteHostCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteHost");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteHostCommand");
var se_DeleteRepositoryLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteRepositoryLink");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRepositoryLinkCommand");
var se_DeleteSyncConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteSyncConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSyncConfigurationCommand");
var se_GetConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetConnection");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetConnectionCommand");
var se_GetHostCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetHost");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetHostCommand");
var se_GetRepositoryLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRepositoryLink");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRepositoryLinkCommand");
var se_GetRepositorySyncStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRepositorySyncStatus");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRepositorySyncStatusCommand");
var se_GetResourceSyncStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetResourceSyncStatus");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetResourceSyncStatusCommand");
var se_GetSyncBlockerSummaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetSyncBlockerSummary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetSyncBlockerSummaryCommand");
var se_GetSyncConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetSyncConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetSyncConfigurationCommand");
var se_ListConnectionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListConnections");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListConnectionsCommand");
var se_ListHostsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListHosts");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListHostsCommand");
var se_ListRepositoryLinksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListRepositoryLinks");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRepositoryLinksCommand");
var se_ListRepositorySyncDefinitionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListRepositorySyncDefinitions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRepositorySyncDefinitionsCommand");
var se_ListSyncConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListSyncConfigurations");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSyncConfigurationsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateHostCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateHost");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateHostCommand");
var se_UpdateRepositoryLinkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateRepositoryLink");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRepositoryLinkCommand");
var se_UpdateSyncBlockerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateSyncBlocker");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSyncBlockerCommand");
var se_UpdateSyncConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateSyncConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSyncConfigurationCommand");
var de_CreateConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateConnectionCommand");
var de_CreateHostCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateHostCommand");
var de_CreateRepositoryLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRepositoryLinkCommand");
var de_CreateSyncConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSyncConfigurationCommand");
var de_DeleteConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteConnectionCommand");
var de_DeleteHostCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteHostCommand");
var de_DeleteRepositoryLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteRepositoryLinkCommand");
var de_DeleteSyncConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteSyncConfigurationCommand");
var de_GetConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetConnectionCommand");
var de_GetHostCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetHostCommand");
var de_GetRepositoryLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRepositoryLinkCommand");
var de_GetRepositorySyncStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRepositorySyncStatusOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRepositorySyncStatusCommand");
var de_GetResourceSyncStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetResourceSyncStatusOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetResourceSyncStatusCommand");
var de_GetSyncBlockerSummaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetSyncBlockerSummaryOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetSyncBlockerSummaryCommand");
var de_GetSyncConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetSyncConfigurationCommand");
var de_ListConnectionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListConnectionsCommand");
var de_ListHostsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListHostsCommand");
var de_ListRepositoryLinksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRepositoryLinksCommand");
var de_ListRepositorySyncDefinitionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRepositorySyncDefinitionsCommand");
var de_ListSyncConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSyncConfigurationsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateHostCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateHostCommand");
var de_UpdateRepositoryLinkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateRepositoryLinkCommand");
var de_UpdateSyncBlockerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateSyncBlockerOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateSyncBlockerCommand");
var de_UpdateSyncConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateSyncConfigurationCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "LimitExceededException":
    case "com.amazonaws.codestarconnections#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.codestarconnections#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ResourceUnavailableException":
    case "com.amazonaws.codestarconnections#ResourceUnavailableException":
      throw await de_ResourceUnavailableExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.codestarconnections#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConcurrentModificationException":
    case "com.amazonaws.codestarconnections#ConcurrentModificationException":
      throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.codestarconnections#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.codestarconnections#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.codestarconnections#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.codestarconnections#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "SyncConfigurationStillExistsException":
    case "com.amazonaws.codestarconnections#SyncConfigurationStillExistsException":
      throw await de_SyncConfigurationStillExistsExceptionRes(parsedOutput, context);
    case "UnsupportedProviderTypeException":
    case "com.amazonaws.codestarconnections#UnsupportedProviderTypeException":
      throw await de_UnsupportedProviderTypeExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.codestarconnections#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "UnsupportedOperationException":
    case "com.amazonaws.codestarconnections#UnsupportedOperationException":
      throw await de_UnsupportedOperationExceptionRes(parsedOutput, context);
    case "ConditionalCheckFailedException":
    case "com.amazonaws.codestarconnections#ConditionalCheckFailedException":
      throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);
    case "UpdateOutOfSyncException":
    case "com.amazonaws.codestarconnections#UpdateOutOfSyncException":
      throw await de_UpdateOutOfSyncExceptionRes(parsedOutput, context);
    case "RetryLatestCommitFailedException":
    case "com.amazonaws.codestarconnections#RetryLatestCommitFailedException":
      throw await de_RetryLatestCommitFailedExceptionRes(parsedOutput, context);
    case "SyncBlockerDoesNotExistException":
    case "com.amazonaws.codestarconnections#SyncBlockerDoesNotExistException":
      throw await de_SyncBlockerDoesNotExistExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConcurrentModificationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConcurrentModificationExceptionRes");
var de_ConditionalCheckFailedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConditionalCheckFailedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConditionalCheckFailedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_InvalidInputExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidInputException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidInputExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ResourceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceUnavailableExceptionRes");
var de_RetryLatestCommitFailedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new RetryLatestCommitFailedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_RetryLatestCommitFailedExceptionRes");
var de_SyncBlockerDoesNotExistExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SyncBlockerDoesNotExistException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SyncBlockerDoesNotExistExceptionRes");
var de_SyncConfigurationStillExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SyncConfigurationStillExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SyncConfigurationStillExistsExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ThrottlingExceptionRes");
var de_UnsupportedOperationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UnsupportedOperationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnsupportedOperationExceptionRes");
var de_UnsupportedProviderTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UnsupportedProviderTypeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnsupportedProviderTypeExceptionRes");
var de_UpdateOutOfSyncExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UpdateOutOfSyncException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UpdateOutOfSyncExceptionRes");
var de_GetRepositorySyncStatusOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LatestSync: (_) => de_RepositorySyncAttempt(_, context)
  });
}, "de_GetRepositorySyncStatusOutput");
var de_GetResourceSyncStatusOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DesiredState: import_smithy_client._json,
    LatestSuccessfulSync: (_) => de_ResourceSyncAttempt(_, context),
    LatestSync: (_) => de_ResourceSyncAttempt(_, context)
  });
}, "de_GetResourceSyncStatusOutput");
var de_GetSyncBlockerSummaryOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    SyncBlockerSummary: (_) => de_SyncBlockerSummary(_, context)
  });
}, "de_GetSyncBlockerSummaryOutput");
var de_LatestSyncBlockerList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SyncBlocker(entry, context);
  });
  return retVal;
}, "de_LatestSyncBlockerList");
var de_RepositorySyncAttempt = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Events: (_) => de_RepositorySyncEventList(_, context),
    StartedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString
  });
}, "de_RepositorySyncAttempt");
var de_RepositorySyncEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Event: import_smithy_client.expectString,
    ExternalId: import_smithy_client.expectString,
    Time: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Type: import_smithy_client.expectString
  });
}, "de_RepositorySyncEvent");
var de_RepositorySyncEventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RepositorySyncEvent(entry, context);
  });
  return retVal;
}, "de_RepositorySyncEventList");
var de_ResourceSyncAttempt = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Events: (_) => de_ResourceSyncEventList(_, context),
    InitialRevision: import_smithy_client._json,
    StartedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    Target: import_smithy_client.expectString,
    TargetRevision: import_smithy_client._json
  });
}, "de_ResourceSyncAttempt");
var de_ResourceSyncEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Event: import_smithy_client.expectString,
    ExternalId: import_smithy_client.expectString,
    Time: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Type: import_smithy_client.expectString
  });
}, "de_ResourceSyncEvent");
var de_ResourceSyncEventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ResourceSyncEvent(entry, context);
  });
  return retVal;
}, "de_ResourceSyncEventList");
var de_SyncBlocker = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Contexts: import_smithy_client._json,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    CreatedReason: import_smithy_client.expectString,
    Id: import_smithy_client.expectString,
    ResolvedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ResolvedReason: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_SyncBlocker");
var de_SyncBlockerSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LatestBlockers: (_) => de_LatestSyncBlockerList(_, context),
    ParentResourceName: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString
  });
}, "de_SyncBlockerSummary");
var de_UpdateSyncBlockerOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ParentResourceName: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString,
    SyncBlocker: (_) => de_SyncBlocker(_, context)
  });
}, "de_UpdateSyncBlockerOutput");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(CodeStarConnectionsServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.0",
    "x-amz-target": `CodeStar_connections_20191201.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateConnectionCommand.ts
var _CreateConnectionCommand = class _CreateConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "CreateConnection", {}).n("CodeStarConnectionsClient", "CreateConnectionCommand").f(void 0, void 0).ser(se_CreateConnectionCommand).de(de_CreateConnectionCommand).build() {
};
__name(_CreateConnectionCommand, "CreateConnectionCommand");
var CreateConnectionCommand = _CreateConnectionCommand;

// src/commands/CreateHostCommand.ts




var _CreateHostCommand = class _CreateHostCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "CreateHost", {}).n("CodeStarConnectionsClient", "CreateHostCommand").f(void 0, void 0).ser(se_CreateHostCommand).de(de_CreateHostCommand).build() {
};
__name(_CreateHostCommand, "CreateHostCommand");
var CreateHostCommand = _CreateHostCommand;

// src/commands/CreateRepositoryLinkCommand.ts




var _CreateRepositoryLinkCommand = class _CreateRepositoryLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "CreateRepositoryLink", {}).n("CodeStarConnectionsClient", "CreateRepositoryLinkCommand").f(void 0, void 0).ser(se_CreateRepositoryLinkCommand).de(de_CreateRepositoryLinkCommand).build() {
};
__name(_CreateRepositoryLinkCommand, "CreateRepositoryLinkCommand");
var CreateRepositoryLinkCommand = _CreateRepositoryLinkCommand;

// src/commands/CreateSyncConfigurationCommand.ts




var _CreateSyncConfigurationCommand = class _CreateSyncConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "CreateSyncConfiguration", {}).n("CodeStarConnectionsClient", "CreateSyncConfigurationCommand").f(void 0, void 0).ser(se_CreateSyncConfigurationCommand).de(de_CreateSyncConfigurationCommand).build() {
};
__name(_CreateSyncConfigurationCommand, "CreateSyncConfigurationCommand");
var CreateSyncConfigurationCommand = _CreateSyncConfigurationCommand;

// src/commands/DeleteConnectionCommand.ts




var _DeleteConnectionCommand = class _DeleteConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "DeleteConnection", {}).n("CodeStarConnectionsClient", "DeleteConnectionCommand").f(void 0, void 0).ser(se_DeleteConnectionCommand).de(de_DeleteConnectionCommand).build() {
};
__name(_DeleteConnectionCommand, "DeleteConnectionCommand");
var DeleteConnectionCommand = _DeleteConnectionCommand;

// src/commands/DeleteHostCommand.ts




var _DeleteHostCommand = class _DeleteHostCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "DeleteHost", {}).n("CodeStarConnectionsClient", "DeleteHostCommand").f(void 0, void 0).ser(se_DeleteHostCommand).de(de_DeleteHostCommand).build() {
};
__name(_DeleteHostCommand, "DeleteHostCommand");
var DeleteHostCommand = _DeleteHostCommand;

// src/commands/DeleteRepositoryLinkCommand.ts




var _DeleteRepositoryLinkCommand = class _DeleteRepositoryLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "DeleteRepositoryLink", {}).n("CodeStarConnectionsClient", "DeleteRepositoryLinkCommand").f(void 0, void 0).ser(se_DeleteRepositoryLinkCommand).de(de_DeleteRepositoryLinkCommand).build() {
};
__name(_DeleteRepositoryLinkCommand, "DeleteRepositoryLinkCommand");
var DeleteRepositoryLinkCommand = _DeleteRepositoryLinkCommand;

// src/commands/DeleteSyncConfigurationCommand.ts




var _DeleteSyncConfigurationCommand = class _DeleteSyncConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "DeleteSyncConfiguration", {}).n("CodeStarConnectionsClient", "DeleteSyncConfigurationCommand").f(void 0, void 0).ser(se_DeleteSyncConfigurationCommand).de(de_DeleteSyncConfigurationCommand).build() {
};
__name(_DeleteSyncConfigurationCommand, "DeleteSyncConfigurationCommand");
var DeleteSyncConfigurationCommand = _DeleteSyncConfigurationCommand;

// src/commands/GetConnectionCommand.ts




var _GetConnectionCommand = class _GetConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetConnection", {}).n("CodeStarConnectionsClient", "GetConnectionCommand").f(void 0, void 0).ser(se_GetConnectionCommand).de(de_GetConnectionCommand).build() {
};
__name(_GetConnectionCommand, "GetConnectionCommand");
var GetConnectionCommand = _GetConnectionCommand;

// src/commands/GetHostCommand.ts




var _GetHostCommand = class _GetHostCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetHost", {}).n("CodeStarConnectionsClient", "GetHostCommand").f(void 0, void 0).ser(se_GetHostCommand).de(de_GetHostCommand).build() {
};
__name(_GetHostCommand, "GetHostCommand");
var GetHostCommand = _GetHostCommand;

// src/commands/GetRepositoryLinkCommand.ts




var _GetRepositoryLinkCommand = class _GetRepositoryLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetRepositoryLink", {}).n("CodeStarConnectionsClient", "GetRepositoryLinkCommand").f(void 0, void 0).ser(se_GetRepositoryLinkCommand).de(de_GetRepositoryLinkCommand).build() {
};
__name(_GetRepositoryLinkCommand, "GetRepositoryLinkCommand");
var GetRepositoryLinkCommand = _GetRepositoryLinkCommand;

// src/commands/GetRepositorySyncStatusCommand.ts




var _GetRepositorySyncStatusCommand = class _GetRepositorySyncStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetRepositorySyncStatus", {}).n("CodeStarConnectionsClient", "GetRepositorySyncStatusCommand").f(void 0, void 0).ser(se_GetRepositorySyncStatusCommand).de(de_GetRepositorySyncStatusCommand).build() {
};
__name(_GetRepositorySyncStatusCommand, "GetRepositorySyncStatusCommand");
var GetRepositorySyncStatusCommand = _GetRepositorySyncStatusCommand;

// src/commands/GetResourceSyncStatusCommand.ts




var _GetResourceSyncStatusCommand = class _GetResourceSyncStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetResourceSyncStatus", {}).n("CodeStarConnectionsClient", "GetResourceSyncStatusCommand").f(void 0, void 0).ser(se_GetResourceSyncStatusCommand).de(de_GetResourceSyncStatusCommand).build() {
};
__name(_GetResourceSyncStatusCommand, "GetResourceSyncStatusCommand");
var GetResourceSyncStatusCommand = _GetResourceSyncStatusCommand;

// src/commands/GetSyncBlockerSummaryCommand.ts




var _GetSyncBlockerSummaryCommand = class _GetSyncBlockerSummaryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetSyncBlockerSummary", {}).n("CodeStarConnectionsClient", "GetSyncBlockerSummaryCommand").f(void 0, void 0).ser(se_GetSyncBlockerSummaryCommand).de(de_GetSyncBlockerSummaryCommand).build() {
};
__name(_GetSyncBlockerSummaryCommand, "GetSyncBlockerSummaryCommand");
var GetSyncBlockerSummaryCommand = _GetSyncBlockerSummaryCommand;

// src/commands/GetSyncConfigurationCommand.ts




var _GetSyncConfigurationCommand = class _GetSyncConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "GetSyncConfiguration", {}).n("CodeStarConnectionsClient", "GetSyncConfigurationCommand").f(void 0, void 0).ser(se_GetSyncConfigurationCommand).de(de_GetSyncConfigurationCommand).build() {
};
__name(_GetSyncConfigurationCommand, "GetSyncConfigurationCommand");
var GetSyncConfigurationCommand = _GetSyncConfigurationCommand;

// src/commands/ListConnectionsCommand.ts




var _ListConnectionsCommand = class _ListConnectionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "ListConnections", {}).n("CodeStarConnectionsClient", "ListConnectionsCommand").f(void 0, void 0).ser(se_ListConnectionsCommand).de(de_ListConnectionsCommand).build() {
};
__name(_ListConnectionsCommand, "ListConnectionsCommand");
var ListConnectionsCommand = _ListConnectionsCommand;

// src/commands/ListHostsCommand.ts




var _ListHostsCommand = class _ListHostsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "ListHosts", {}).n("CodeStarConnectionsClient", "ListHostsCommand").f(void 0, void 0).ser(se_ListHostsCommand).de(de_ListHostsCommand).build() {
};
__name(_ListHostsCommand, "ListHostsCommand");
var ListHostsCommand = _ListHostsCommand;

// src/commands/ListRepositoryLinksCommand.ts




var _ListRepositoryLinksCommand = class _ListRepositoryLinksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "ListRepositoryLinks", {}).n("CodeStarConnectionsClient", "ListRepositoryLinksCommand").f(void 0, void 0).ser(se_ListRepositoryLinksCommand).de(de_ListRepositoryLinksCommand).build() {
};
__name(_ListRepositoryLinksCommand, "ListRepositoryLinksCommand");
var ListRepositoryLinksCommand = _ListRepositoryLinksCommand;

// src/commands/ListRepositorySyncDefinitionsCommand.ts




var _ListRepositorySyncDefinitionsCommand = class _ListRepositorySyncDefinitionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "ListRepositorySyncDefinitions", {}).n("CodeStarConnectionsClient", "ListRepositorySyncDefinitionsCommand").f(void 0, void 0).ser(se_ListRepositorySyncDefinitionsCommand).de(de_ListRepositorySyncDefinitionsCommand).build() {
};
__name(_ListRepositorySyncDefinitionsCommand, "ListRepositorySyncDefinitionsCommand");
var ListRepositorySyncDefinitionsCommand = _ListRepositorySyncDefinitionsCommand;

// src/commands/ListSyncConfigurationsCommand.ts




var _ListSyncConfigurationsCommand = class _ListSyncConfigurationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "ListSyncConfigurations", {}).n("CodeStarConnectionsClient", "ListSyncConfigurationsCommand").f(void 0, void 0).ser(se_ListSyncConfigurationsCommand).de(de_ListSyncConfigurationsCommand).build() {
};
__name(_ListSyncConfigurationsCommand, "ListSyncConfigurationsCommand");
var ListSyncConfigurationsCommand = _ListSyncConfigurationsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "ListTagsForResource", {}).n("CodeStarConnectionsClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "TagResource", {}).n("CodeStarConnectionsClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "UntagResource", {}).n("CodeStarConnectionsClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateHostCommand.ts




var _UpdateHostCommand = class _UpdateHostCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "UpdateHost", {}).n("CodeStarConnectionsClient", "UpdateHostCommand").f(void 0, void 0).ser(se_UpdateHostCommand).de(de_UpdateHostCommand).build() {
};
__name(_UpdateHostCommand, "UpdateHostCommand");
var UpdateHostCommand = _UpdateHostCommand;

// src/commands/UpdateRepositoryLinkCommand.ts




var _UpdateRepositoryLinkCommand = class _UpdateRepositoryLinkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "UpdateRepositoryLink", {}).n("CodeStarConnectionsClient", "UpdateRepositoryLinkCommand").f(void 0, void 0).ser(se_UpdateRepositoryLinkCommand).de(de_UpdateRepositoryLinkCommand).build() {
};
__name(_UpdateRepositoryLinkCommand, "UpdateRepositoryLinkCommand");
var UpdateRepositoryLinkCommand = _UpdateRepositoryLinkCommand;

// src/commands/UpdateSyncBlockerCommand.ts




var _UpdateSyncBlockerCommand = class _UpdateSyncBlockerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "UpdateSyncBlocker", {}).n("CodeStarConnectionsClient", "UpdateSyncBlockerCommand").f(void 0, void 0).ser(se_UpdateSyncBlockerCommand).de(de_UpdateSyncBlockerCommand).build() {
};
__name(_UpdateSyncBlockerCommand, "UpdateSyncBlockerCommand");
var UpdateSyncBlockerCommand = _UpdateSyncBlockerCommand;

// src/commands/UpdateSyncConfigurationCommand.ts




var _UpdateSyncConfigurationCommand = class _UpdateSyncConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeStar_connections_20191201", "UpdateSyncConfiguration", {}).n("CodeStarConnectionsClient", "UpdateSyncConfigurationCommand").f(void 0, void 0).ser(se_UpdateSyncConfigurationCommand).de(de_UpdateSyncConfigurationCommand).build() {
};
__name(_UpdateSyncConfigurationCommand, "UpdateSyncConfigurationCommand");
var UpdateSyncConfigurationCommand = _UpdateSyncConfigurationCommand;

// src/CodeStarConnections.ts
var commands = {
  CreateConnectionCommand,
  CreateHostCommand,
  CreateRepositoryLinkCommand,
  CreateSyncConfigurationCommand,
  DeleteConnectionCommand,
  DeleteHostCommand,
  DeleteRepositoryLinkCommand,
  DeleteSyncConfigurationCommand,
  GetConnectionCommand,
  GetHostCommand,
  GetRepositoryLinkCommand,
  GetRepositorySyncStatusCommand,
  GetResourceSyncStatusCommand,
  GetSyncBlockerSummaryCommand,
  GetSyncConfigurationCommand,
  ListConnectionsCommand,
  ListHostsCommand,
  ListRepositoryLinksCommand,
  ListRepositorySyncDefinitionsCommand,
  ListSyncConfigurationsCommand,
  ListTagsForResourceCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateHostCommand,
  UpdateRepositoryLinkCommand,
  UpdateSyncBlockerCommand,
  UpdateSyncConfigurationCommand
};
var _CodeStarConnections = class _CodeStarConnections extends CodeStarConnectionsClient {
};
__name(_CodeStarConnections, "CodeStarConnections");
var CodeStarConnections = _CodeStarConnections;
(0, import_smithy_client.createAggregatedClient)(commands, CodeStarConnections);

// src/pagination/ListConnectionsPaginator.ts

var paginateListConnections = (0, import_core.createPaginator)(CodeStarConnectionsClient, ListConnectionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListHostsPaginator.ts

var paginateListHosts = (0, import_core.createPaginator)(CodeStarConnectionsClient, ListHostsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListRepositoryLinksPaginator.ts

var paginateListRepositoryLinks = (0, import_core.createPaginator)(CodeStarConnectionsClient, ListRepositoryLinksCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListSyncConfigurationsPaginator.ts

var paginateListSyncConfigurations = (0, import_core.createPaginator)(CodeStarConnectionsClient, ListSyncConfigurationsCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  CodeStarConnectionsServiceException,
  __Client,
  CodeStarConnectionsClient,
  CodeStarConnections,
  $Command,
  CreateConnectionCommand,
  CreateHostCommand,
  CreateRepositoryLinkCommand,
  CreateSyncConfigurationCommand,
  DeleteConnectionCommand,
  DeleteHostCommand,
  DeleteRepositoryLinkCommand,
  DeleteSyncConfigurationCommand,
  GetConnectionCommand,
  GetHostCommand,
  GetRepositoryLinkCommand,
  GetRepositorySyncStatusCommand,
  GetResourceSyncStatusCommand,
  GetSyncBlockerSummaryCommand,
  GetSyncConfigurationCommand,
  ListConnectionsCommand,
  ListHostsCommand,
  ListRepositoryLinksCommand,
  ListRepositorySyncDefinitionsCommand,
  ListSyncConfigurationsCommand,
  ListTagsForResourceCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateHostCommand,
  UpdateRepositoryLinkCommand,
  UpdateSyncBlockerCommand,
  UpdateSyncConfigurationCommand,
  paginateListConnections,
  paginateListHosts,
  paginateListRepositoryLinks,
  paginateListSyncConfigurations,
  AccessDeniedException,
  BlockerStatus,
  BlockerType,
  ProviderType,
  LimitExceededException,
  ResourceNotFoundException,
  ResourceUnavailableException,
  ConcurrentModificationException,
  InternalServerException,
  InvalidInputException,
  ResourceAlreadyExistsException,
  ThrottlingException,
  SyncConfigurationType,
  SyncConfigurationStillExistsException,
  UnsupportedProviderTypeException,
  ConnectionStatus,
  RepositorySyncStatus,
  ResourceSyncStatus,
  ConflictException,
  UnsupportedOperationException,
  ConditionalCheckFailedException,
  UpdateOutOfSyncException,
  RetryLatestCommitFailedException,
  SyncBlockerDoesNotExistException
});

