import { ComputeOptimizerServiceException as __BaseException } from "./ComputeOptimizerServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const Status = {
    ACTIVE: "Active",
    FAILED: "Failed",
    INACTIVE: "Inactive",
    PENDING: "Pending",
};
export const AutoScalingConfiguration = {
    TARGET_TRACKING_SCALING_CPU: "TargetTrackingScalingCpu",
    TARGET_TRACKING_SCALING_MEMORY: "TargetTrackingScalingMemory",
};
export const Currency = {
    CNY: "CNY",
    USD: "USD",
};
export const CurrentPerformanceRisk = {
    HIGH: "High",
    LOW: "Low",
    MEDIUM: "Medium",
    VERY_LOW: "VeryLow",
};
export const CpuVendorArchitecture = {
    AWS_ARM64: "AWS_ARM64",
    CURRENT: "CURRENT",
};
export const EnhancedInfrastructureMetrics = {
    ACTIVE: "Active",
    INACTIVE: "Inactive",
};
export const ExternalMetricsSource = {
    DATADOG: "Datadog",
    DYNATRACE: "Dynatrace",
    INSTANA: "Instana",
    NEWRELIC: "NewRelic",
};
export const InferredWorkloadTypesPreference = {
    ACTIVE: "Active",
    INACTIVE: "Inactive",
};
export const LookBackPeriodPreference = {
    DAYS_14: "DAYS_14",
    DAYS_32: "DAYS_32",
    DAYS_93: "DAYS_93",
};
export const PreferredResourceName = {
    EC2_INSTANCE_TYPES: "Ec2InstanceTypes",
};
export const InstanceSavingsEstimationModeSource = {
    COST_EXPLORER_RIGHTSIZING: "CostExplorerRightsizing",
    COST_OPTIMIZATION_HUB: "CostOptimizationHub",
    PUBLIC_PRICING: "PublicPricing",
};
export const CustomizableMetricName = {
    CPU_UTILIZATION: "CpuUtilization",
};
export const CustomizableMetricHeadroom = {
    PERCENT_0: "PERCENT_0",
    PERCENT_20: "PERCENT_20",
    PERCENT_30: "PERCENT_30",
};
export const CustomizableMetricThreshold = {
    P90: "P90",
    P95: "P95",
    P99_5: "P99_5",
};
export const Finding = {
    NOT_OPTIMIZED: "NotOptimized",
    OPTIMIZED: "Optimized",
    OVER_PROVISIONED: "Overprovisioned",
    UNDER_PROVISIONED: "Underprovisioned",
};
export const InferredWorkloadType = {
    AMAZON_EMR: "AmazonEmr",
    APACHE_CASSANDRA: "ApacheCassandra",
    APACHE_HADOOP: "ApacheHadoop",
    KAFKA: "Kafka",
    MEMCACHED: "Memcached",
    NGINX: "Nginx",
    POSTGRE_SQL: "PostgreSql",
    REDIS: "Redis",
    SQLSERVER: "SQLServer",
};
export const MigrationEffort = {
    HIGH: "High",
    LOW: "Low",
    MEDIUM: "Medium",
    VERY_LOW: "VeryLow",
};
export const MetricName = {
    CPU: "Cpu",
    DISK_READ_BYTES_PER_SECOND: "DISK_READ_BYTES_PER_SECOND",
    DISK_READ_OPS_PER_SECOND: "DISK_READ_OPS_PER_SECOND",
    DISK_WRITE_BYTES_PER_SECOND: "DISK_WRITE_BYTES_PER_SECOND",
    DISK_WRITE_OPS_PER_SECOND: "DISK_WRITE_OPS_PER_SECOND",
    EBS_READ_BYTES_PER_SECOND: "EBS_READ_BYTES_PER_SECOND",
    EBS_READ_OPS_PER_SECOND: "EBS_READ_OPS_PER_SECOND",
    EBS_WRITE_BYTES_PER_SECOND: "EBS_WRITE_BYTES_PER_SECOND",
    EBS_WRITE_OPS_PER_SECOND: "EBS_WRITE_OPS_PER_SECOND",
    GPU_MEMORY_PERCENTAGE: "GPU_MEMORY_PERCENTAGE",
    GPU_PERCENTAGE: "GPU_PERCENTAGE",
    MEMORY: "Memory",
    NETWORK_IN_BYTES_PER_SECOND: "NETWORK_IN_BYTES_PER_SECOND",
    NETWORK_OUT_BYTES_PER_SECOND: "NETWORK_OUT_BYTES_PER_SECOND",
    NETWORK_PACKETS_IN_PER_SECOND: "NETWORK_PACKETS_IN_PER_SECOND",
    NETWORK_PACKETS_OUT_PER_SECOND: "NETWORK_PACKETS_OUT_PER_SECOND",
};
export const MetricStatistic = {
    AVERAGE: "Average",
    MAXIMUM: "Maximum",
};
export const RecommendationPreferenceName = {
    ENHANCED_INFRASTRUCTURE_METRICS: "EnhancedInfrastructureMetrics",
    EXTERNAL_METRICS_PREFERENCE: "ExternalMetricsPreference",
    INFERRED_WORKLOAD_TYPES: "InferredWorkloadTypes",
    LOOKBACK_PERIOD_PREFERENCE: "LookBackPeriodPreference",
    PREFERRED_RESOURCES: "PreferredResources",
    UTILIZATION_PREFERENCES: "UtilizationPreferences",
};
export const ResourceType = {
    AUTO_SCALING_GROUP: "AutoScalingGroup",
    EBS_VOLUME: "EbsVolume",
    EC2_INSTANCE: "Ec2Instance",
    ECS_SERVICE: "EcsService",
    LAMBDA_FUNCTION: "LambdaFunction",
    LICENSE: "License",
    NOT_APPLICABLE: "NotApplicable",
};
export const ScopeName = {
    ACCOUNT_ID: "AccountId",
    ORGANIZATION: "Organization",
    RESOURCE_ARN: "ResourceArn",
};
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class InvalidParameterValueException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterValueException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);
    }
}
export class MissingAuthenticationToken extends __BaseException {
    constructor(opts) {
        super({
            name: "MissingAuthenticationToken",
            $fault: "client",
            ...opts,
        });
        this.name = "MissingAuthenticationToken";
        this.$fault = "client";
        Object.setPrototypeOf(this, MissingAuthenticationToken.prototype);
    }
}
export class OptInRequiredException extends __BaseException {
    constructor(opts) {
        super({
            name: "OptInRequiredException",
            $fault: "client",
            ...opts,
        });
        this.name = "OptInRequiredException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OptInRequiredException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export const JobFilterName = {
    JOB_STATUS: "JobStatus",
    RESOURCE_TYPE: "ResourceType",
};
export const JobStatus = {
    COMPLETE: "Complete",
    FAILED: "Failed",
    IN_PROGRESS: "InProgress",
    QUEUED: "Queued",
};
export const ExportableAutoScalingGroupField = {
    ACCOUNT_ID: "AccountId",
    AUTO_SCALING_GROUP_ARN: "AutoScalingGroupArn",
    AUTO_SCALING_GROUP_NAME: "AutoScalingGroupName",
    CURRENT_CONFIGURATION_DESIRED_CAPACITY: "CurrentConfigurationDesiredCapacity",
    CURRENT_CONFIGURATION_INSTANCE_TYPE: "CurrentConfigurationInstanceType",
    CURRENT_CONFIGURATION_MAX_SIZE: "CurrentConfigurationMaxSize",
    CURRENT_CONFIGURATION_MIN_SIZE: "CurrentConfigurationMinSize",
    CURRENT_INSTANCE_GPU_INFO: "CurrentInstanceGpuInfo",
    CURRENT_MEMORY: "CurrentMemory",
    CURRENT_NETWORK: "CurrentNetwork",
    CURRENT_ON_DEMAND_PRICE: "CurrentOnDemandPrice",
    CURRENT_PERFORMANCE_RISK: "CurrentPerformanceRisk",
    CURRENT_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE: "CurrentStandardOneYearNoUpfrontReservedPrice",
    CURRENT_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE: "CurrentStandardThreeYearNoUpfrontReservedPrice",
    CURRENT_STORAGE: "CurrentStorage",
    CURRENT_VCPUS: "CurrentVCpus",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_CPU_VENDOR_ARCHITECTURES: "EffectiveRecommendationPreferencesCpuVendorArchitectures",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_ENHANCED_INFRASTRUCTURE_METRICS: "EffectiveRecommendationPreferencesEnhancedInfrastructureMetrics",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_INFERRED_WORKLOAD_TYPES: "EffectiveRecommendationPreferencesInferredWorkloadTypes",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_LOOKBACK_PERIOD: "EffectiveRecommendationPreferencesLookBackPeriod",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_PREFERRED_RESOURCES: "EffectiveRecommendationPreferencesPreferredResources",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE: "EffectiveRecommendationPreferencesSavingsEstimationMode",
    FINDING: "Finding",
    INFERRED_WORKLOAD_TYPES: "InferredWorkloadTypes",
    LAST_REFRESH_TIMESTAMP: "LastRefreshTimestamp",
    LOOKBACK_PERIOD_IN_DAYS: "LookbackPeriodInDays",
    RECOMMENDATION_OPTIONS_CONFIGURATION_DESIRED_CAPACITY: "RecommendationOptionsConfigurationDesiredCapacity",
    RECOMMENDATION_OPTIONS_CONFIGURATION_INSTANCE_TYPE: "RecommendationOptionsConfigurationInstanceType",
    RECOMMENDATION_OPTIONS_CONFIGURATION_MAX_SIZE: "RecommendationOptionsConfigurationMaxSize",
    RECOMMENDATION_OPTIONS_CONFIGURATION_MIN_SIZE: "RecommendationOptionsConfigurationMinSize",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY: "RecommendationOptionsEstimatedMonthlySavingsCurrency",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsCurrencyAfterDiscounts",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE: "RecommendationOptionsEstimatedMonthlySavingsValue",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsValueAfterDiscounts",
    RECOMMENDATION_OPTIONS_INSTANCE_GPU_INFO: "RecommendationOptionsInstanceGpuInfo",
    RECOMMENDATION_OPTIONS_MEMORY: "RecommendationOptionsMemory",
    RECOMMENDATION_OPTIONS_MIGRATION_EFFORT: "RecommendationOptionsMigrationEffort",
    RECOMMENDATION_OPTIONS_NETWORK: "RecommendationOptionsNetwork",
    RECOMMENDATION_OPTIONS_ON_DEMAND_PRICE: "RecommendationOptionsOnDemandPrice",
    RECOMMENDATION_OPTIONS_PERFORMANCE_RISK: "RecommendationOptionsPerformanceRisk",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsCpuMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsGpuPercentageMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_MEMORY_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsGpuMemoryPercentageMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_MEMORY_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE: "RecommendationOptionsSavingsOpportunityAfterDiscountsPercentage",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE: "RecommendationOptionsSavingsOpportunityPercentage",
    RECOMMENDATION_OPTIONS_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE: "RecommendationOptionsStandardOneYearNoUpfrontReservedPrice",
    RECOMMENDATION_OPTIONS_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE: "RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice",
    RECOMMENDATION_OPTIONS_STORAGE: "RecommendationOptionsStorage",
    RECOMMENDATION_OPTIONS_VCPUS: "RecommendationOptionsVcpus",
    UTILIZATION_METRICS_CPU_MAXIMUM: "UtilizationMetricsCpuMaximum",
    UTILIZATION_METRICS_DISK_READ_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskReadBytesPerSecondMaximum",
    UTILIZATION_METRICS_DISK_READ_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskReadOpsPerSecondMaximum",
    UTILIZATION_METRICS_DISK_WRITE_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskWriteBytesPerSecondMaximum",
    UTILIZATION_METRICS_DISK_WRITE_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskWriteOpsPerSecondMaximum",
    UTILIZATION_METRICS_EBS_READ_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsReadBytesPerSecondMaximum",
    UTILIZATION_METRICS_EBS_READ_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsReadOpsPerSecondMaximum",
    UTILIZATION_METRICS_EBS_WRITE_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsWriteBytesPerSecondMaximum",
    UTILIZATION_METRICS_EBS_WRITE_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsWriteOpsPerSecondMaximum",
    UTILIZATION_METRICS_GPU_MEMORY_PERCENTAGE_MAXIMUM: "UtilizationMetricsGpuMemoryPercentageMaximum",
    UTILIZATION_METRICS_GPU_PERCENTAGE_MAXIMUM: "UtilizationMetricsGpuPercentageMaximum",
    UTILIZATION_METRICS_MEMORY_MAXIMUM: "UtilizationMetricsMemoryMaximum",
    UTILIZATION_METRICS_NETWORK_IN_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkInBytesPerSecondMaximum",
    UTILIZATION_METRICS_NETWORK_OUT_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkOutBytesPerSecondMaximum",
    UTILIZATION_METRICS_NETWORK_PACKETS_IN_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkPacketsInPerSecondMaximum",
    UTILIZATION_METRICS_NETWORK_PACKETS_OUT_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkPacketsOutPerSecondMaximum",
};
export const FileFormat = {
    CSV: "Csv",
};
export const FilterName = {
    FINDING: "Finding",
    FINDING_REASON_CODES: "FindingReasonCodes",
    INFERRED_WORKLOAD_TYPES: "InferredWorkloadTypes",
    RECOMMENDATION_SOURCE_TYPE: "RecommendationSourceType",
};
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export const ExportableVolumeField = {
    ACCOUNT_ID: "AccountId",
    CURRENT_CONFIGURATION_ROOT_VOLUME: "CurrentConfigurationRootVolume",
    CURRENT_CONFIGURATION_VOLUME_BASELINE_IOPS: "CurrentConfigurationVolumeBaselineIOPS",
    CURRENT_CONFIGURATION_VOLUME_BASELINE_THROUGHPUT: "CurrentConfigurationVolumeBaselineThroughput",
    CURRENT_CONFIGURATION_VOLUME_BURST_IOPS: "CurrentConfigurationVolumeBurstIOPS",
    CURRENT_CONFIGURATION_VOLUME_BURST_THROUGHPUT: "CurrentConfigurationVolumeBurstThroughput",
    CURRENT_CONFIGURATION_VOLUME_SIZE: "CurrentConfigurationVolumeSize",
    CURRENT_CONFIGURATION_VOLUME_TYPE: "CurrentConfigurationVolumeType",
    CURRENT_MONTHLY_PRICE: "CurrentMonthlyPrice",
    CURRENT_PERFORMANCE_RISK: "CurrentPerformanceRisk",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE: "EffectiveRecommendationPreferencesSavingsEstimationMode",
    FINDING: "Finding",
    LAST_REFRESH_TIMESTAMP: "LastRefreshTimestamp",
    LOOKBACK_PERIOD_IN_DAYS: "LookbackPeriodInDays",
    RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BASELINE_IOPS: "RecommendationOptionsConfigurationVolumeBaselineIOPS",
    RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BASELINE_THROUGHPUT: "RecommendationOptionsConfigurationVolumeBaselineThroughput",
    RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BURST_IOPS: "RecommendationOptionsConfigurationVolumeBurstIOPS",
    RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BURST_THROUGHPUT: "RecommendationOptionsConfigurationVolumeBurstThroughput",
    RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_SIZE: "RecommendationOptionsConfigurationVolumeSize",
    RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_TYPE: "RecommendationOptionsConfigurationVolumeType",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY: "RecommendationOptionsEstimatedMonthlySavingsCurrency",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsCurrencyAfterDiscounts",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE: "RecommendationOptionsEstimatedMonthlySavingsValue",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsValueAfterDiscounts",
    RECOMMENDATION_OPTIONS_MONTHLY_PRICE: "RecommendationOptionsMonthlyPrice",
    RECOMMENDATION_OPTIONS_PERFORMANCE_RISK: "RecommendationOptionsPerformanceRisk",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE: "RecommendationOptionsSavingsOpportunityAfterDiscountsPercentage",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE: "RecommendationOptionsSavingsOpportunityPercentage",
    ROOT_VOLUME: "RootVolume",
    TAGS: "Tags",
    UTILIZATION_METRICS_VOLUME_READ_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsVolumeReadBytesPerSecondMaximum",
    UTILIZATION_METRICS_VOLUME_READ_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsVolumeReadOpsPerSecondMaximum",
    UTILIZATION_METRICS_VOLUME_WRITE_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsVolumeWriteBytesPerSecondMaximum",
    UTILIZATION_METRICS_VOLUME_WRITE_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsVolumeWriteOpsPerSecondMaximum",
    VOLUME_ARN: "VolumeArn",
};
export const EBSFilterName = {
    FINDING: "Finding",
};
export const ExportableInstanceField = {
    ACCOUNT_ID: "AccountId",
    CURRENT_INSTANCE_GPU_INFO: "CurrentInstanceGpuInfo",
    CURRENT_INSTANCE_TYPE: "CurrentInstanceType",
    CURRENT_MEMORY: "CurrentMemory",
    CURRENT_NETWORK: "CurrentNetwork",
    CURRENT_ON_DEMAND_PRICE: "CurrentOnDemandPrice",
    CURRENT_PERFORMANCE_RISK: "CurrentPerformanceRisk",
    CURRENT_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE: "CurrentStandardOneYearNoUpfrontReservedPrice",
    CURRENT_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE: "CurrentStandardThreeYearNoUpfrontReservedPrice",
    CURRENT_STORAGE: "CurrentStorage",
    CURRENT_VCPUS: "CurrentVCpus",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_CPU_VENDOR_ARCHITECTURES: "EffectiveRecommendationPreferencesCpuVendorArchitectures",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_ENHANCED_INFRASTRUCTURE_METRICS: "EffectiveRecommendationPreferencesEnhancedInfrastructureMetrics",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_EXTERNAL_METRICS_SOURCE: "EffectiveRecommendationPreferencesExternalMetricsSource",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_INFERRED_WORKLOAD_TYPES: "EffectiveRecommendationPreferencesInferredWorkloadTypes",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_LOOKBACK_PERIOD: "EffectiveRecommendationPreferencesLookBackPeriod",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_PREFERRED_RESOURCES: "EffectiveRecommendationPreferencesPreferredResources",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE: "EffectiveRecommendationPreferencesSavingsEstimationMode",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_UTILIZATION_PREFERENCES: "EffectiveRecommendationPreferencesUtilizationPreferences",
    EXTERNAL_METRIC_STATUS_CODE: "ExternalMetricStatusCode",
    EXTERNAL_METRIC_STATUS_REASON: "ExternalMetricStatusReason",
    FINDING: "Finding",
    Finding_Reason_Codes: "FindingReasonCodes",
    IDLE: "Idle",
    INFERRED_WORKLOAD_TYPES: "InferredWorkloadTypes",
    INSTANCE_ARN: "InstanceArn",
    INSTANCE_NAME: "InstanceName",
    INSTANCE_STATE: "InstanceState",
    LAST_REFRESH_TIMESTAMP: "LastRefreshTimestamp",
    LOOKBACK_PERIOD_IN_DAYS: "LookbackPeriodInDays",
    RECOMMENDATIONS_SOURCES_RECOMMENDATION_SOURCE_ARN: "RecommendationsSourcesRecommendationSourceArn",
    RECOMMENDATIONS_SOURCES_RECOMMENDATION_SOURCE_TYPE: "RecommendationsSourcesRecommendationSourceType",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY: "RecommendationOptionsEstimatedMonthlySavingsCurrency",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsCurrencyAfterDiscounts",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE: "RecommendationOptionsEstimatedMonthlySavingsValue",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsValueAfterDiscounts",
    RECOMMENDATION_OPTIONS_INSTANCE_GPU_INFO: "RecommendationOptionsInstanceGpuInfo",
    RECOMMENDATION_OPTIONS_INSTANCE_TYPE: "RecommendationOptionsInstanceType",
    RECOMMENDATION_OPTIONS_MEMORY: "RecommendationOptionsMemory",
    RECOMMENDATION_OPTIONS_MIGRATION_EFFORT: "RecommendationOptionsMigrationEffort",
    RECOMMENDATION_OPTIONS_NETWORK: "RecommendationOptionsNetwork",
    RECOMMENDATION_OPTIONS_ON_DEMAND_PRICE: "RecommendationOptionsOnDemandPrice",
    RECOMMENDATION_OPTIONS_PERFORMANCE_RISK: "RecommendationOptionsPerformanceRisk",
    RECOMMENDATION_OPTIONS_PLATFORM_DIFFERENCES: "RecommendationOptionsPlatformDifferences",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsCpuMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_MEMORY_PERCENTAGE_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsGpuMemoryPercentageMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_PERCENTAGE_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsGpuPercentageMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_MEMORY_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE: "RecommendationOptionsSavingsOpportunityAfterDiscountsPercentage",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE: "RecommendationOptionsSavingsOpportunityPercentage",
    RECOMMENDATION_OPTIONS_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE: "RecommendationOptionsStandardOneYearNoUpfrontReservedPrice",
    RECOMMENDATION_OPTIONS_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE: "RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice",
    RECOMMENDATION_OPTIONS_STORAGE: "RecommendationOptionsStorage",
    RECOMMENDATION_OPTIONS_VCPUS: "RecommendationOptionsVcpus",
    TAGS: "Tags",
    UTILIZATION_METRICS_CPU_MAXIMUM: "UtilizationMetricsCpuMaximum",
    UTILIZATION_METRICS_DISK_READ_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskReadBytesPerSecondMaximum",
    UTILIZATION_METRICS_DISK_READ_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskReadOpsPerSecondMaximum",
    UTILIZATION_METRICS_DISK_WRITE_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskWriteBytesPerSecondMaximum",
    UTILIZATION_METRICS_DISK_WRITE_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsDiskWriteOpsPerSecondMaximum",
    UTILIZATION_METRICS_EBS_READ_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsReadBytesPerSecondMaximum",
    UTILIZATION_METRICS_EBS_READ_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsReadOpsPerSecondMaximum",
    UTILIZATION_METRICS_EBS_WRITE_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsWriteBytesPerSecondMaximum",
    UTILIZATION_METRICS_EBS_WRITE_OPS_PER_SECOND_MAXIMUM: "UtilizationMetricsEbsWriteOpsPerSecondMaximum",
    UTILIZATION_METRICS_GPU_MEMORY_PERCENTAGE_MAXIMUM: "UtilizationMetricsGpuMemoryPercentageMaximum",
    UTILIZATION_METRICS_GPU_PERCENTAGE_MAXIMUM: "UtilizationMetricsGpuPercentageMaximum",
    UTILIZATION_METRICS_MEMORY_MAXIMUM: "UtilizationMetricsMemoryMaximum",
    UTILIZATION_METRICS_NETWORK_IN_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkInBytesPerSecondMaximum",
    UTILIZATION_METRICS_NETWORK_OUT_BYTES_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkOutBytesPerSecondMaximum",
    UTILIZATION_METRICS_NETWORK_PACKETS_IN_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkPacketsInPerSecondMaximum",
    UTILIZATION_METRICS_NETWORK_PACKETS_OUT_PER_SECOND_MAXIMUM: "UtilizationMetricsNetworkPacketsOutPerSecondMaximum",
};
export const ExportableECSServiceField = {
    ACCOUNT_ID: "AccountId",
    CURRENT_PERFORMANCE_RISK: "CurrentPerformanceRisk",
    CURRENT_SERVICE_CONFIGURATION_AUTO_SCALING_CONFIGURATION: "CurrentServiceConfigurationAutoScalingConfiguration",
    CURRENT_SERVICE_CONFIGURATION_CPU: "CurrentServiceConfigurationCpu",
    CURRENT_SERVICE_CONFIGURATION_MEMORY: "CurrentServiceConfigurationMemory",
    CURRENT_SERVICE_CONFIGURATION_TASK_DEFINITION_ARN: "CurrentServiceConfigurationTaskDefinitionArn",
    CURRENT_SERVICE_CONTAINER_CONFIGURATIONS: "CurrentServiceContainerConfigurations",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE: "EffectiveRecommendationPreferencesSavingsEstimationMode",
    FINDING: "Finding",
    FINDING_REASON_CODES: "FindingReasonCodes",
    LAST_REFRESH_TIMESTAMP: "LastRefreshTimestamp",
    LAUNCH_TYPE: "LaunchType",
    LOOKBACK_PERIOD_IN_DAYS: "LookbackPeriodInDays",
    RECOMMENDATION_OPTIONS_CONTAINER_RECOMMENDATIONS: "RecommendationOptionsContainerRecommendations",
    RECOMMENDATION_OPTIONS_CPU: "RecommendationOptionsCpu",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY: "RecommendationOptionsEstimatedMonthlySavingsCurrency",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsCurrencyAfterDiscounts",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE: "RecommendationOptionsEstimatedMonthlySavingsValue",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsValueAfterDiscounts",
    RECOMMENDATION_OPTIONS_MEMORY: "RecommendationOptionsMemory",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsCpuMaximum",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_MEMORY_MAXIMUM: "RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE: "RecommendationOptionsSavingsOpportunityAfterDiscountsPercentage",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE: "RecommendationOptionsSavingsOpportunityPercentage",
    SERVICE_ARN: "ServiceArn",
    TAGS: "Tags",
    UTILIZATION_METRICS_CPU_MAXIMUM: "UtilizationMetricsCpuMaximum",
    UTILIZATION_METRICS_MEMORY_MAXIMUM: "UtilizationMetricsMemoryMaximum",
};
export const ECSServiceRecommendationFilterName = {
    FINDING: "Finding",
    FINDING_REASON_CODE: "FindingReasonCode",
};
export const ExportableLambdaFunctionField = {
    ACCOUNT_ID: "AccountId",
    CURRENT_CONFIGURATION_MEMORY_SIZE: "CurrentConfigurationMemorySize",
    CURRENT_CONFIGURATION_TIMEOUT: "CurrentConfigurationTimeout",
    CURRENT_COST_AVERAGE: "CurrentCostAverage",
    CURRENT_COST_TOTAL: "CurrentCostTotal",
    CURRENT_PERFORMANCE_RISK: "CurrentPerformanceRisk",
    EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE: "EffectiveRecommendationPreferencesSavingsEstimationMode",
    FINDING: "Finding",
    FINDING_REASON_CODES: "FindingReasonCodes",
    FUNCTION_ARN: "FunctionArn",
    FUNCTION_VERSION: "FunctionVersion",
    LAST_REFRESH_TIMESTAMP: "LastRefreshTimestamp",
    LOOKBACK_PERIOD_IN_DAYS: "LookbackPeriodInDays",
    NUMBER_OF_INVOCATIONS: "NumberOfInvocations",
    RECOMMENDATION_OPTIONS_CONFIGURATION_MEMORY_SIZE: "RecommendationOptionsConfigurationMemorySize",
    RECOMMENDATION_OPTIONS_COST_HIGH: "RecommendationOptionsCostHigh",
    RECOMMENDATION_OPTIONS_COST_LOW: "RecommendationOptionsCostLow",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY: "RecommendationOptionsEstimatedMonthlySavingsCurrency",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsCurrencyAfterDiscounts",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE: "RecommendationOptionsEstimatedMonthlySavingsValue",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS: "RecommendationOptionsEstimatedMonthlySavingsValueAfterDiscounts",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_DURATION_EXPECTED: "RecommendationOptionsProjectedUtilizationMetricsDurationExpected",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_DURATION_LOWER_BOUND: "RecommendationOptionsProjectedUtilizationMetricsDurationLowerBound",
    RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_DURATION_UPPER_BOUND: "RecommendationOptionsProjectedUtilizationMetricsDurationUpperBound",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE: "RecommendationOptionsSavingsOpportunityAfterDiscountsPercentage",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE: "RecommendationOptionsSavingsOpportunityPercentage",
    TAGS: "Tags",
    UTILIZATION_METRICS_DURATION_AVERAGE: "UtilizationMetricsDurationAverage",
    UTILIZATION_METRICS_DURATION_MAXIMUM: "UtilizationMetricsDurationMaximum",
    UTILIZATION_METRICS_MEMORY_AVERAGE: "UtilizationMetricsMemoryAverage",
    UTILIZATION_METRICS_MEMORY_MAXIMUM: "UtilizationMetricsMemoryMaximum",
};
export const LambdaFunctionRecommendationFilterName = {
    FINDING: "Finding",
    FINDING_REASON_CODE: "FindingReasonCode",
};
export const ExportableLicenseField = {
    ACCOUNT_ID: "AccountId",
    CURRENT_LICENSE_CONFIGURATION_INSTANCE_TYPE: "CurrentLicenseConfigurationInstanceType",
    CURRENT_LICENSE_CONFIGURATION_LICENSE_EDITION: "CurrentLicenseConfigurationLicenseEdition",
    CURRENT_LICENSE_CONFIGURATION_LICENSE_MODEL: "CurrentLicenseConfigurationLicenseModel",
    CURRENT_LICENSE_CONFIGURATION_LICENSE_NAME: "CurrentLicenseConfigurationLicenseName",
    CURRENT_LICENSE_CONFIGURATION_LICENSE_VERSION: "CurrentLicenseConfigurationLicenseVersion",
    CURRENT_LICENSE_CONFIGURATION_METRICS_SOURCE: "CurrentLicenseConfigurationMetricsSource",
    CURRENT_LICENSE_CONFIGURATION_NUMBER_OF_CORES: "CurrentLicenseConfigurationNumberOfCores",
    CURRENT_LICENSE_CONFIGURATION_OPERATING_SYSTEM: "CurrentLicenseConfigurationOperatingSystem",
    LAST_REFRESH_TIMESTAMP: "LastRefreshTimestamp",
    LICENSE_FINDING: "Finding",
    LICENSE_FINDING_REASON_CODES: "FindingReasonCodes",
    LOOKBACK_PERIOD_IN_DAYS: "LookbackPeriodInDays",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY: "RecommendationOptionsEstimatedMonthlySavingsCurrency",
    RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE: "RecommendationOptionsEstimatedMonthlySavingsValue",
    RECOMMENDATION_OPTIONS_LICENSE_EDITION: "RecommendationOptionsLicenseEdition",
    RECOMMENDATION_OPTIONS_LICENSE_MODEL: "RecommendationOptionsLicenseModel",
    RECOMMENDATION_OPTIONS_OPERATING_SYSTEM: "RecommendationOptionsOperatingSystem",
    RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE: "RecommendationOptionsSavingsOpportunityPercentage",
    RESOURCE_ARN: "ResourceArn",
    TAGS: "Tags",
};
export const LicenseRecommendationFilterName = {
    LICENSE_FINDING: "Finding",
    LICENSE_FINDING_REASON_CODE: "FindingReasonCode",
    LICENSE_NAME: "LicenseName",
};
export const EBSSavingsEstimationModeSource = {
    COST_EXPLORER_RIGHTSIZING: "CostExplorerRightsizing",
    COST_OPTIMIZATION_HUB: "CostOptimizationHub",
    PUBLIC_PRICING: "PublicPricing",
};
export const EBSFinding = {
    NOT_OPTIMIZED: "NotOptimized",
    OPTIMIZED: "Optimized",
};
export const EBSMetricName = {
    VOLUME_READ_BYTES_PER_SECOND: "VolumeReadBytesPerSecond",
    VOLUME_READ_OPS_PER_SECOND: "VolumeReadOpsPerSecond",
    VOLUME_WRITE_BYTES_PER_SECOND: "VolumeWriteBytesPerSecond",
    VOLUME_WRITE_OPS_PER_SECOND: "VolumeWriteOpsPerSecond",
};
export const ExternalMetricStatusCode = {
    DATADOG_INTEGRATION_ERROR: "DATADOG_INTEGRATION_ERROR",
    DYNATRACE_INTEGRATION_ERROR: "DYNATRACE_INTEGRATION_ERROR",
    INSTANA_INTEGRATION_ERROR: "INSTANA_INTEGRATION_ERROR",
    INSUFFICIENT_DATADOG_METRICS: "INSUFFICIENT_DATADOG_METRICS",
    INSUFFICIENT_DYNATRACE_METRICS: "INSUFFICIENT_DYNATRACE_METRICS",
    INSUFFICIENT_INSTANA_METRICS: "INSUFFICIENT_INSTANA_METRICS",
    INSUFFICIENT_NEWRELIC_METRICS: "INSUFFICIENT_NEWRELIC_METRICS",
    INTEGRATION_SUCCESS: "INTEGRATION_SUCCESS",
    NEWRELIC_INTEGRATION_ERROR: "NEWRELIC_INTEGRATION_ERROR",
    NO_EXTERNAL_METRIC_SET: "NO_EXTERNAL_METRIC_SET",
};
export const InstanceRecommendationFindingReasonCode = {
    CPU_OVER_PROVISIONED: "CPUOverprovisioned",
    CPU_UNDER_PROVISIONED: "CPUUnderprovisioned",
    DISK_IOPS_OVER_PROVISIONED: "DiskIOPSOverprovisioned",
    DISK_IOPS_UNDER_PROVISIONED: "DiskIOPSUnderprovisioned",
    DISK_THROUGHPUT_OVER_PROVISIONED: "DiskThroughputOverprovisioned",
    DISK_THROUGHPUT_UNDER_PROVISIONED: "DiskThroughputUnderprovisioned",
    EBS_IOPS_OVER_PROVISIONED: "EBSIOPSOverprovisioned",
    EBS_IOPS_UNDER_PROVISIONED: "EBSIOPSUnderprovisioned",
    EBS_THROUGHPUT_OVER_PROVISIONED: "EBSThroughputOverprovisioned",
    EBS_THROUGHPUT_UNDER_PROVISIONED: "EBSThroughputUnderprovisioned",
    GPU_MEMORY_OVER_PROVISIONED: "GPUMemoryOverprovisioned",
    GPU_MEMORY_UNDER_PROVISIONED: "GPUMemoryUnderprovisioned",
    GPU_OVER_PROVISIONED: "GPUOverprovisioned",
    GPU_UNDER_PROVISIONED: "GPUUnderprovisioned",
    MEMORY_OVER_PROVISIONED: "MemoryOverprovisioned",
    MEMORY_UNDER_PROVISIONED: "MemoryUnderprovisioned",
    NETWORK_BANDWIDTH_OVER_PROVISIONED: "NetworkBandwidthOverprovisioned",
    NETWORK_BANDWIDTH_UNDER_PROVISIONED: "NetworkBandwidthUnderprovisioned",
    NETWORK_PPS_OVER_PROVISIONED: "NetworkPPSOverprovisioned",
    NETWORK_PPS_UNDER_PROVISIONED: "NetworkPPSUnderprovisioned",
};
export const InstanceIdle = {
    FALSE: "False",
    TRUE: "True",
};
export const InstanceState = {
    PENDING: "pending",
    RUNNING: "running",
    SHUTTING_DOWN: "shutting-down",
    STOPPED: "stopped",
    STOPPING: "stopping",
    TERMINATED: "terminated",
};
export const PlatformDifference = {
    ARCHITECTURE: "Architecture",
    HYPERVISOR: "Hypervisor",
    INSTANCE_STORE_AVAILABILITY: "InstanceStoreAvailability",
    NETWORK_INTERFACE: "NetworkInterface",
    STORAGE_INTERFACE: "StorageInterface",
    VIRTUALIZATION_TYPE: "VirtualizationType",
};
export const RecommendationSourceType = {
    AUTO_SCALING_GROUP: "AutoScalingGroup",
    EBS_VOLUME: "EbsVolume",
    EC2_INSTANCE: "Ec2Instance",
    ECS_SERVICE: "EcsService",
    LAMBDA_FUNCTION: "LambdaFunction",
    LICENSE: "License",
};
export const ECSServiceMetricName = {
    CPU: "Cpu",
    MEMORY: "Memory",
};
export const ECSSavingsEstimationModeSource = {
    COST_EXPLORER_RIGHTSIZING: "CostExplorerRightsizing",
    COST_OPTIMIZATION_HUB: "CostOptimizationHub",
    PUBLIC_PRICING: "PublicPricing",
};
export const ECSServiceRecommendationFinding = {
    OPTIMIZED: "Optimized",
    OVER_PROVISIONED: "Overprovisioned",
    UNDER_PROVISIONED: "Underprovisioned",
};
export const ECSServiceRecommendationFindingReasonCode = {
    CPU_OVER_PROVISIONED: "CPUOverprovisioned",
    CPU_UNDER_PROVISIONED: "CPUUnderprovisioned",
    MEMORY_OVER_PROVISIONED: "MemoryOverprovisioned",
    MEMORY_UNDER_PROVISIONED: "MemoryUnderprovisioned",
};
export const ECSServiceLaunchType = {
    EC2: "EC2",
    FARGATE: "Fargate",
};
export const ECSServiceMetricStatistic = {
    AVERAGE: "Average",
    MAXIMUM: "Maximum",
};
export const EnrollmentFilterName = {
    STATUS: "Status",
};
export const LambdaSavingsEstimationModeSource = {
    COST_EXPLORER_RIGHTSIZING: "CostExplorerRightsizing",
    COST_OPTIMIZATION_HUB: "CostOptimizationHub",
    PUBLIC_PRICING: "PublicPricing",
};
export const LambdaFunctionRecommendationFinding = {
    NOT_OPTIMIZED: "NotOptimized",
    OPTIMIZED: "Optimized",
    UNAVAILABLE: "Unavailable",
};
export const LambdaFunctionRecommendationFindingReasonCode = {
    INCONCLUSIVE: "Inconclusive",
    INSUFFICIENT_DATA: "InsufficientData",
    MEMORY_OVER_PROVISIONED: "MemoryOverprovisioned",
    MEMORY_UNDER_PROVISIONED: "MemoryUnderprovisioned",
};
export const LambdaFunctionMemoryMetricName = {
    DURATION: "Duration",
};
export const LambdaFunctionMemoryMetricStatistic = {
    EXPECTED: "Expected",
    LOWER_BOUND: "LowerBound",
    UPPER_BOUND: "UpperBound",
};
export const LambdaFunctionMetricName = {
    DURATION: "Duration",
    MEMORY: "Memory",
};
export const LambdaFunctionMetricStatistic = {
    AVERAGE: "Average",
    MAXIMUM: "Maximum",
};
export const LicenseEdition = {
    ENTERPRISE: "Enterprise",
    FREE: "Free",
    NO_LICENSE_EDITION_FOUND: "NoLicenseEditionFound",
    STANDARD: "Standard",
};
export const LicenseModel = {
    BRING_YOUR_OWN_LICENSE: "BringYourOwnLicense",
    LICENSE_INCLUDED: "LicenseIncluded",
};
export const LicenseName = {
    SQLSERVER: "SQLServer",
};
export const MetricSourceProvider = {
    CloudWatchAppInsights: "CloudWatchApplicationInsights",
};
export const LicenseFinding = {
    INSUFFICIENT_METRICS: "InsufficientMetrics",
    NOT_OPTIMIZED: "NotOptimized",
    OPTIMIZED: "Optimized",
};
export const LicenseFindingReasonCode = {
    CW_APP_INSIGHTS_DISABLED: "InvalidCloudWatchApplicationInsightsSetup",
    CW_APP_INSIGHTS_ERROR: "CloudWatchApplicationInsightsError",
    LICENSE_OVER_PROVISIONED: "LicenseOverprovisioned",
    OPTIMIZED: "Optimized",
};
export const SavingsEstimationMode = {
    AFTER_DISCOUNTS: "AfterDiscounts",
    BEFORE_DISCOUNTS: "BeforeDiscounts",
};
export const FindingReasonCode = {
    MEMORY_OVER_PROVISIONED: "MemoryOverprovisioned",
    MEMORY_UNDER_PROVISIONED: "MemoryUnderprovisioned",
};
