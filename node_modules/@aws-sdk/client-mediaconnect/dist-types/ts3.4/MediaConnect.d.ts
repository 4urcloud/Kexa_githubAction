import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AddBridgeOutputsCommandInput,
  AddBridgeOutputsCommandOutput,
} from "./commands/AddBridgeOutputsCommand";
import {
  AddBridgeSourcesCommandInput,
  AddBridgeSourcesCommandOutput,
} from "./commands/AddBridgeSourcesCommand";
import {
  AddFlowMediaStreamsCommandInput,
  AddFlowMediaStreamsCommandOutput,
} from "./commands/AddFlowMediaStreamsCommand";
import {
  AddFlowOutputsCommandInput,
  AddFlowOutputsCommandOutput,
} from "./commands/AddFlowOutputsCommand";
import {
  AddFlowSourcesCommandInput,
  AddFlowSourcesCommandOutput,
} from "./commands/AddFlowSourcesCommand";
import {
  AddFlowVpcInterfacesCommandInput,
  AddFlowVpcInterfacesCommandOutput,
} from "./commands/AddFlowVpcInterfacesCommand";
import {
  CreateBridgeCommandInput,
  CreateBridgeCommandOutput,
} from "./commands/CreateBridgeCommand";
import {
  CreateFlowCommandInput,
  CreateFlowCommandOutput,
} from "./commands/CreateFlowCommand";
import {
  CreateGatewayCommandInput,
  CreateGatewayCommandOutput,
} from "./commands/CreateGatewayCommand";
import {
  DeleteBridgeCommandInput,
  DeleteBridgeCommandOutput,
} from "./commands/DeleteBridgeCommand";
import {
  DeleteFlowCommandInput,
  DeleteFlowCommandOutput,
} from "./commands/DeleteFlowCommand";
import {
  DeleteGatewayCommandInput,
  DeleteGatewayCommandOutput,
} from "./commands/DeleteGatewayCommand";
import {
  DeregisterGatewayInstanceCommandInput,
  DeregisterGatewayInstanceCommandOutput,
} from "./commands/DeregisterGatewayInstanceCommand";
import {
  DescribeBridgeCommandInput,
  DescribeBridgeCommandOutput,
} from "./commands/DescribeBridgeCommand";
import {
  DescribeFlowCommandInput,
  DescribeFlowCommandOutput,
} from "./commands/DescribeFlowCommand";
import {
  DescribeFlowSourceMetadataCommandInput,
  DescribeFlowSourceMetadataCommandOutput,
} from "./commands/DescribeFlowSourceMetadataCommand";
import {
  DescribeGatewayCommandInput,
  DescribeGatewayCommandOutput,
} from "./commands/DescribeGatewayCommand";
import {
  DescribeGatewayInstanceCommandInput,
  DescribeGatewayInstanceCommandOutput,
} from "./commands/DescribeGatewayInstanceCommand";
import {
  DescribeOfferingCommandInput,
  DescribeOfferingCommandOutput,
} from "./commands/DescribeOfferingCommand";
import {
  DescribeReservationCommandInput,
  DescribeReservationCommandOutput,
} from "./commands/DescribeReservationCommand";
import {
  GrantFlowEntitlementsCommandInput,
  GrantFlowEntitlementsCommandOutput,
} from "./commands/GrantFlowEntitlementsCommand";
import {
  ListBridgesCommandInput,
  ListBridgesCommandOutput,
} from "./commands/ListBridgesCommand";
import {
  ListEntitlementsCommandInput,
  ListEntitlementsCommandOutput,
} from "./commands/ListEntitlementsCommand";
import {
  ListFlowsCommandInput,
  ListFlowsCommandOutput,
} from "./commands/ListFlowsCommand";
import {
  ListGatewayInstancesCommandInput,
  ListGatewayInstancesCommandOutput,
} from "./commands/ListGatewayInstancesCommand";
import {
  ListGatewaysCommandInput,
  ListGatewaysCommandOutput,
} from "./commands/ListGatewaysCommand";
import {
  ListOfferingsCommandInput,
  ListOfferingsCommandOutput,
} from "./commands/ListOfferingsCommand";
import {
  ListReservationsCommandInput,
  ListReservationsCommandOutput,
} from "./commands/ListReservationsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PurchaseOfferingCommandInput,
  PurchaseOfferingCommandOutput,
} from "./commands/PurchaseOfferingCommand";
import {
  RemoveBridgeOutputCommandInput,
  RemoveBridgeOutputCommandOutput,
} from "./commands/RemoveBridgeOutputCommand";
import {
  RemoveBridgeSourceCommandInput,
  RemoveBridgeSourceCommandOutput,
} from "./commands/RemoveBridgeSourceCommand";
import {
  RemoveFlowMediaStreamCommandInput,
  RemoveFlowMediaStreamCommandOutput,
} from "./commands/RemoveFlowMediaStreamCommand";
import {
  RemoveFlowOutputCommandInput,
  RemoveFlowOutputCommandOutput,
} from "./commands/RemoveFlowOutputCommand";
import {
  RemoveFlowSourceCommandInput,
  RemoveFlowSourceCommandOutput,
} from "./commands/RemoveFlowSourceCommand";
import {
  RemoveFlowVpcInterfaceCommandInput,
  RemoveFlowVpcInterfaceCommandOutput,
} from "./commands/RemoveFlowVpcInterfaceCommand";
import {
  RevokeFlowEntitlementCommandInput,
  RevokeFlowEntitlementCommandOutput,
} from "./commands/RevokeFlowEntitlementCommand";
import {
  StartFlowCommandInput,
  StartFlowCommandOutput,
} from "./commands/StartFlowCommand";
import {
  StopFlowCommandInput,
  StopFlowCommandOutput,
} from "./commands/StopFlowCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateBridgeCommandInput,
  UpdateBridgeCommandOutput,
} from "./commands/UpdateBridgeCommand";
import {
  UpdateBridgeOutputCommandInput,
  UpdateBridgeOutputCommandOutput,
} from "./commands/UpdateBridgeOutputCommand";
import {
  UpdateBridgeSourceCommandInput,
  UpdateBridgeSourceCommandOutput,
} from "./commands/UpdateBridgeSourceCommand";
import {
  UpdateBridgeStateCommandInput,
  UpdateBridgeStateCommandOutput,
} from "./commands/UpdateBridgeStateCommand";
import {
  UpdateFlowCommandInput,
  UpdateFlowCommandOutput,
} from "./commands/UpdateFlowCommand";
import {
  UpdateFlowEntitlementCommandInput,
  UpdateFlowEntitlementCommandOutput,
} from "./commands/UpdateFlowEntitlementCommand";
import {
  UpdateFlowMediaStreamCommandInput,
  UpdateFlowMediaStreamCommandOutput,
} from "./commands/UpdateFlowMediaStreamCommand";
import {
  UpdateFlowOutputCommandInput,
  UpdateFlowOutputCommandOutput,
} from "./commands/UpdateFlowOutputCommand";
import {
  UpdateFlowSourceCommandInput,
  UpdateFlowSourceCommandOutput,
} from "./commands/UpdateFlowSourceCommand";
import {
  UpdateGatewayInstanceCommandInput,
  UpdateGatewayInstanceCommandOutput,
} from "./commands/UpdateGatewayInstanceCommand";
import { MediaConnectClient } from "./MediaConnectClient";
export interface MediaConnect {
  addBridgeOutputs(
    args: AddBridgeOutputsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddBridgeOutputsCommandOutput>;
  addBridgeOutputs(
    args: AddBridgeOutputsCommandInput,
    cb: (err: any, data?: AddBridgeOutputsCommandOutput) => void
  ): void;
  addBridgeOutputs(
    args: AddBridgeOutputsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddBridgeOutputsCommandOutput) => void
  ): void;
  addBridgeSources(
    args: AddBridgeSourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddBridgeSourcesCommandOutput>;
  addBridgeSources(
    args: AddBridgeSourcesCommandInput,
    cb: (err: any, data?: AddBridgeSourcesCommandOutput) => void
  ): void;
  addBridgeSources(
    args: AddBridgeSourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddBridgeSourcesCommandOutput) => void
  ): void;
  addFlowMediaStreams(
    args: AddFlowMediaStreamsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddFlowMediaStreamsCommandOutput>;
  addFlowMediaStreams(
    args: AddFlowMediaStreamsCommandInput,
    cb: (err: any, data?: AddFlowMediaStreamsCommandOutput) => void
  ): void;
  addFlowMediaStreams(
    args: AddFlowMediaStreamsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddFlowMediaStreamsCommandOutput) => void
  ): void;
  addFlowOutputs(
    args: AddFlowOutputsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddFlowOutputsCommandOutput>;
  addFlowOutputs(
    args: AddFlowOutputsCommandInput,
    cb: (err: any, data?: AddFlowOutputsCommandOutput) => void
  ): void;
  addFlowOutputs(
    args: AddFlowOutputsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddFlowOutputsCommandOutput) => void
  ): void;
  addFlowSources(
    args: AddFlowSourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddFlowSourcesCommandOutput>;
  addFlowSources(
    args: AddFlowSourcesCommandInput,
    cb: (err: any, data?: AddFlowSourcesCommandOutput) => void
  ): void;
  addFlowSources(
    args: AddFlowSourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddFlowSourcesCommandOutput) => void
  ): void;
  addFlowVpcInterfaces(
    args: AddFlowVpcInterfacesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddFlowVpcInterfacesCommandOutput>;
  addFlowVpcInterfaces(
    args: AddFlowVpcInterfacesCommandInput,
    cb: (err: any, data?: AddFlowVpcInterfacesCommandOutput) => void
  ): void;
  addFlowVpcInterfaces(
    args: AddFlowVpcInterfacesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddFlowVpcInterfacesCommandOutput) => void
  ): void;
  createBridge(
    args: CreateBridgeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBridgeCommandOutput>;
  createBridge(
    args: CreateBridgeCommandInput,
    cb: (err: any, data?: CreateBridgeCommandOutput) => void
  ): void;
  createBridge(
    args: CreateBridgeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBridgeCommandOutput) => void
  ): void;
  createFlow(
    args: CreateFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFlowCommandOutput>;
  createFlow(
    args: CreateFlowCommandInput,
    cb: (err: any, data?: CreateFlowCommandOutput) => void
  ): void;
  createFlow(
    args: CreateFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFlowCommandOutput) => void
  ): void;
  createGateway(
    args: CreateGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGatewayCommandOutput>;
  createGateway(
    args: CreateGatewayCommandInput,
    cb: (err: any, data?: CreateGatewayCommandOutput) => void
  ): void;
  createGateway(
    args: CreateGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGatewayCommandOutput) => void
  ): void;
  deleteBridge(
    args: DeleteBridgeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBridgeCommandOutput>;
  deleteBridge(
    args: DeleteBridgeCommandInput,
    cb: (err: any, data?: DeleteBridgeCommandOutput) => void
  ): void;
  deleteBridge(
    args: DeleteBridgeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBridgeCommandOutput) => void
  ): void;
  deleteFlow(
    args: DeleteFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFlowCommandOutput>;
  deleteFlow(
    args: DeleteFlowCommandInput,
    cb: (err: any, data?: DeleteFlowCommandOutput) => void
  ): void;
  deleteFlow(
    args: DeleteFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFlowCommandOutput) => void
  ): void;
  deleteGateway(
    args: DeleteGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGatewayCommandOutput>;
  deleteGateway(
    args: DeleteGatewayCommandInput,
    cb: (err: any, data?: DeleteGatewayCommandOutput) => void
  ): void;
  deleteGateway(
    args: DeleteGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGatewayCommandOutput) => void
  ): void;
  deregisterGatewayInstance(
    args: DeregisterGatewayInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterGatewayInstanceCommandOutput>;
  deregisterGatewayInstance(
    args: DeregisterGatewayInstanceCommandInput,
    cb: (err: any, data?: DeregisterGatewayInstanceCommandOutput) => void
  ): void;
  deregisterGatewayInstance(
    args: DeregisterGatewayInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterGatewayInstanceCommandOutput) => void
  ): void;
  describeBridge(
    args: DescribeBridgeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBridgeCommandOutput>;
  describeBridge(
    args: DescribeBridgeCommandInput,
    cb: (err: any, data?: DescribeBridgeCommandOutput) => void
  ): void;
  describeBridge(
    args: DescribeBridgeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBridgeCommandOutput) => void
  ): void;
  describeFlow(
    args: DescribeFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFlowCommandOutput>;
  describeFlow(
    args: DescribeFlowCommandInput,
    cb: (err: any, data?: DescribeFlowCommandOutput) => void
  ): void;
  describeFlow(
    args: DescribeFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFlowCommandOutput) => void
  ): void;
  describeFlowSourceMetadata(
    args: DescribeFlowSourceMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFlowSourceMetadataCommandOutput>;
  describeFlowSourceMetadata(
    args: DescribeFlowSourceMetadataCommandInput,
    cb: (err: any, data?: DescribeFlowSourceMetadataCommandOutput) => void
  ): void;
  describeFlowSourceMetadata(
    args: DescribeFlowSourceMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFlowSourceMetadataCommandOutput) => void
  ): void;
  describeGateway(
    args: DescribeGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeGatewayCommandOutput>;
  describeGateway(
    args: DescribeGatewayCommandInput,
    cb: (err: any, data?: DescribeGatewayCommandOutput) => void
  ): void;
  describeGateway(
    args: DescribeGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeGatewayCommandOutput) => void
  ): void;
  describeGatewayInstance(
    args: DescribeGatewayInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeGatewayInstanceCommandOutput>;
  describeGatewayInstance(
    args: DescribeGatewayInstanceCommandInput,
    cb: (err: any, data?: DescribeGatewayInstanceCommandOutput) => void
  ): void;
  describeGatewayInstance(
    args: DescribeGatewayInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeGatewayInstanceCommandOutput) => void
  ): void;
  describeOffering(
    args: DescribeOfferingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeOfferingCommandOutput>;
  describeOffering(
    args: DescribeOfferingCommandInput,
    cb: (err: any, data?: DescribeOfferingCommandOutput) => void
  ): void;
  describeOffering(
    args: DescribeOfferingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeOfferingCommandOutput) => void
  ): void;
  describeReservation(
    args: DescribeReservationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeReservationCommandOutput>;
  describeReservation(
    args: DescribeReservationCommandInput,
    cb: (err: any, data?: DescribeReservationCommandOutput) => void
  ): void;
  describeReservation(
    args: DescribeReservationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeReservationCommandOutput) => void
  ): void;
  grantFlowEntitlements(
    args: GrantFlowEntitlementsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GrantFlowEntitlementsCommandOutput>;
  grantFlowEntitlements(
    args: GrantFlowEntitlementsCommandInput,
    cb: (err: any, data?: GrantFlowEntitlementsCommandOutput) => void
  ): void;
  grantFlowEntitlements(
    args: GrantFlowEntitlementsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GrantFlowEntitlementsCommandOutput) => void
  ): void;
  listBridges(
    args: ListBridgesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListBridgesCommandOutput>;
  listBridges(
    args: ListBridgesCommandInput,
    cb: (err: any, data?: ListBridgesCommandOutput) => void
  ): void;
  listBridges(
    args: ListBridgesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListBridgesCommandOutput) => void
  ): void;
  listEntitlements(
    args: ListEntitlementsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListEntitlementsCommandOutput>;
  listEntitlements(
    args: ListEntitlementsCommandInput,
    cb: (err: any, data?: ListEntitlementsCommandOutput) => void
  ): void;
  listEntitlements(
    args: ListEntitlementsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListEntitlementsCommandOutput) => void
  ): void;
  listFlows(
    args: ListFlowsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFlowsCommandOutput>;
  listFlows(
    args: ListFlowsCommandInput,
    cb: (err: any, data?: ListFlowsCommandOutput) => void
  ): void;
  listFlows(
    args: ListFlowsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFlowsCommandOutput) => void
  ): void;
  listGatewayInstances(
    args: ListGatewayInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGatewayInstancesCommandOutput>;
  listGatewayInstances(
    args: ListGatewayInstancesCommandInput,
    cb: (err: any, data?: ListGatewayInstancesCommandOutput) => void
  ): void;
  listGatewayInstances(
    args: ListGatewayInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGatewayInstancesCommandOutput) => void
  ): void;
  listGateways(
    args: ListGatewaysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGatewaysCommandOutput>;
  listGateways(
    args: ListGatewaysCommandInput,
    cb: (err: any, data?: ListGatewaysCommandOutput) => void
  ): void;
  listGateways(
    args: ListGatewaysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGatewaysCommandOutput) => void
  ): void;
  listOfferings(
    args: ListOfferingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListOfferingsCommandOutput>;
  listOfferings(
    args: ListOfferingsCommandInput,
    cb: (err: any, data?: ListOfferingsCommandOutput) => void
  ): void;
  listOfferings(
    args: ListOfferingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListOfferingsCommandOutput) => void
  ): void;
  listReservations(
    args: ListReservationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListReservationsCommandOutput>;
  listReservations(
    args: ListReservationsCommandInput,
    cb: (err: any, data?: ListReservationsCommandOutput) => void
  ): void;
  listReservations(
    args: ListReservationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListReservationsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  purchaseOffering(
    args: PurchaseOfferingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PurchaseOfferingCommandOutput>;
  purchaseOffering(
    args: PurchaseOfferingCommandInput,
    cb: (err: any, data?: PurchaseOfferingCommandOutput) => void
  ): void;
  purchaseOffering(
    args: PurchaseOfferingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PurchaseOfferingCommandOutput) => void
  ): void;
  removeBridgeOutput(
    args: RemoveBridgeOutputCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveBridgeOutputCommandOutput>;
  removeBridgeOutput(
    args: RemoveBridgeOutputCommandInput,
    cb: (err: any, data?: RemoveBridgeOutputCommandOutput) => void
  ): void;
  removeBridgeOutput(
    args: RemoveBridgeOutputCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveBridgeOutputCommandOutput) => void
  ): void;
  removeBridgeSource(
    args: RemoveBridgeSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveBridgeSourceCommandOutput>;
  removeBridgeSource(
    args: RemoveBridgeSourceCommandInput,
    cb: (err: any, data?: RemoveBridgeSourceCommandOutput) => void
  ): void;
  removeBridgeSource(
    args: RemoveBridgeSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveBridgeSourceCommandOutput) => void
  ): void;
  removeFlowMediaStream(
    args: RemoveFlowMediaStreamCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveFlowMediaStreamCommandOutput>;
  removeFlowMediaStream(
    args: RemoveFlowMediaStreamCommandInput,
    cb: (err: any, data?: RemoveFlowMediaStreamCommandOutput) => void
  ): void;
  removeFlowMediaStream(
    args: RemoveFlowMediaStreamCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveFlowMediaStreamCommandOutput) => void
  ): void;
  removeFlowOutput(
    args: RemoveFlowOutputCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveFlowOutputCommandOutput>;
  removeFlowOutput(
    args: RemoveFlowOutputCommandInput,
    cb: (err: any, data?: RemoveFlowOutputCommandOutput) => void
  ): void;
  removeFlowOutput(
    args: RemoveFlowOutputCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveFlowOutputCommandOutput) => void
  ): void;
  removeFlowSource(
    args: RemoveFlowSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveFlowSourceCommandOutput>;
  removeFlowSource(
    args: RemoveFlowSourceCommandInput,
    cb: (err: any, data?: RemoveFlowSourceCommandOutput) => void
  ): void;
  removeFlowSource(
    args: RemoveFlowSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveFlowSourceCommandOutput) => void
  ): void;
  removeFlowVpcInterface(
    args: RemoveFlowVpcInterfaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveFlowVpcInterfaceCommandOutput>;
  removeFlowVpcInterface(
    args: RemoveFlowVpcInterfaceCommandInput,
    cb: (err: any, data?: RemoveFlowVpcInterfaceCommandOutput) => void
  ): void;
  removeFlowVpcInterface(
    args: RemoveFlowVpcInterfaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveFlowVpcInterfaceCommandOutput) => void
  ): void;
  revokeFlowEntitlement(
    args: RevokeFlowEntitlementCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RevokeFlowEntitlementCommandOutput>;
  revokeFlowEntitlement(
    args: RevokeFlowEntitlementCommandInput,
    cb: (err: any, data?: RevokeFlowEntitlementCommandOutput) => void
  ): void;
  revokeFlowEntitlement(
    args: RevokeFlowEntitlementCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RevokeFlowEntitlementCommandOutput) => void
  ): void;
  startFlow(
    args: StartFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartFlowCommandOutput>;
  startFlow(
    args: StartFlowCommandInput,
    cb: (err: any, data?: StartFlowCommandOutput) => void
  ): void;
  startFlow(
    args: StartFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartFlowCommandOutput) => void
  ): void;
  stopFlow(
    args: StopFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopFlowCommandOutput>;
  stopFlow(
    args: StopFlowCommandInput,
    cb: (err: any, data?: StopFlowCommandOutput) => void
  ): void;
  stopFlow(
    args: StopFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopFlowCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateBridge(
    args: UpdateBridgeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBridgeCommandOutput>;
  updateBridge(
    args: UpdateBridgeCommandInput,
    cb: (err: any, data?: UpdateBridgeCommandOutput) => void
  ): void;
  updateBridge(
    args: UpdateBridgeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBridgeCommandOutput) => void
  ): void;
  updateBridgeOutput(
    args: UpdateBridgeOutputCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBridgeOutputCommandOutput>;
  updateBridgeOutput(
    args: UpdateBridgeOutputCommandInput,
    cb: (err: any, data?: UpdateBridgeOutputCommandOutput) => void
  ): void;
  updateBridgeOutput(
    args: UpdateBridgeOutputCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBridgeOutputCommandOutput) => void
  ): void;
  updateBridgeSource(
    args: UpdateBridgeSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBridgeSourceCommandOutput>;
  updateBridgeSource(
    args: UpdateBridgeSourceCommandInput,
    cb: (err: any, data?: UpdateBridgeSourceCommandOutput) => void
  ): void;
  updateBridgeSource(
    args: UpdateBridgeSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBridgeSourceCommandOutput) => void
  ): void;
  updateBridgeState(
    args: UpdateBridgeStateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBridgeStateCommandOutput>;
  updateBridgeState(
    args: UpdateBridgeStateCommandInput,
    cb: (err: any, data?: UpdateBridgeStateCommandOutput) => void
  ): void;
  updateBridgeState(
    args: UpdateBridgeStateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBridgeStateCommandOutput) => void
  ): void;
  updateFlow(
    args: UpdateFlowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowCommandOutput>;
  updateFlow(
    args: UpdateFlowCommandInput,
    cb: (err: any, data?: UpdateFlowCommandOutput) => void
  ): void;
  updateFlow(
    args: UpdateFlowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowCommandOutput) => void
  ): void;
  updateFlowEntitlement(
    args: UpdateFlowEntitlementCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowEntitlementCommandOutput>;
  updateFlowEntitlement(
    args: UpdateFlowEntitlementCommandInput,
    cb: (err: any, data?: UpdateFlowEntitlementCommandOutput) => void
  ): void;
  updateFlowEntitlement(
    args: UpdateFlowEntitlementCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowEntitlementCommandOutput) => void
  ): void;
  updateFlowMediaStream(
    args: UpdateFlowMediaStreamCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowMediaStreamCommandOutput>;
  updateFlowMediaStream(
    args: UpdateFlowMediaStreamCommandInput,
    cb: (err: any, data?: UpdateFlowMediaStreamCommandOutput) => void
  ): void;
  updateFlowMediaStream(
    args: UpdateFlowMediaStreamCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowMediaStreamCommandOutput) => void
  ): void;
  updateFlowOutput(
    args: UpdateFlowOutputCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowOutputCommandOutput>;
  updateFlowOutput(
    args: UpdateFlowOutputCommandInput,
    cb: (err: any, data?: UpdateFlowOutputCommandOutput) => void
  ): void;
  updateFlowOutput(
    args: UpdateFlowOutputCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowOutputCommandOutput) => void
  ): void;
  updateFlowSource(
    args: UpdateFlowSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFlowSourceCommandOutput>;
  updateFlowSource(
    args: UpdateFlowSourceCommandInput,
    cb: (err: any, data?: UpdateFlowSourceCommandOutput) => void
  ): void;
  updateFlowSource(
    args: UpdateFlowSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFlowSourceCommandOutput) => void
  ): void;
  updateGatewayInstance(
    args: UpdateGatewayInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGatewayInstanceCommandOutput>;
  updateGatewayInstance(
    args: UpdateGatewayInstanceCommandInput,
    cb: (err: any, data?: UpdateGatewayInstanceCommandOutput) => void
  ): void;
  updateGatewayInstance(
    args: UpdateGatewayInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGatewayInstanceCommandOutput) => void
  ): void;
}
export declare class MediaConnect
  extends MediaConnectClient
  implements MediaConnect {}
