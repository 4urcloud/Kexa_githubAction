import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  BatchPutMessageCommandInput,
  BatchPutMessageCommandOutput,
} from "./commands/BatchPutMessageCommand";
import {
  CancelPipelineReprocessingCommandInput,
  CancelPipelineReprocessingCommandOutput,
} from "./commands/CancelPipelineReprocessingCommand";
import {
  CreateChannelCommandInput,
  CreateChannelCommandOutput,
} from "./commands/CreateChannelCommand";
import {
  CreateDatasetCommandInput,
  CreateDatasetCommandOutput,
} from "./commands/CreateDatasetCommand";
import {
  CreateDatasetContentCommandInput,
  CreateDatasetContentCommandOutput,
} from "./commands/CreateDatasetContentCommand";
import {
  CreateDatastoreCommandInput,
  CreateDatastoreCommandOutput,
} from "./commands/CreateDatastoreCommand";
import {
  CreatePipelineCommandInput,
  CreatePipelineCommandOutput,
} from "./commands/CreatePipelineCommand";
import {
  DeleteChannelCommandInput,
  DeleteChannelCommandOutput,
} from "./commands/DeleteChannelCommand";
import {
  DeleteDatasetCommandInput,
  DeleteDatasetCommandOutput,
} from "./commands/DeleteDatasetCommand";
import {
  DeleteDatasetContentCommandInput,
  DeleteDatasetContentCommandOutput,
} from "./commands/DeleteDatasetContentCommand";
import {
  DeleteDatastoreCommandInput,
  DeleteDatastoreCommandOutput,
} from "./commands/DeleteDatastoreCommand";
import {
  DeletePipelineCommandInput,
  DeletePipelineCommandOutput,
} from "./commands/DeletePipelineCommand";
import {
  DescribeChannelCommandInput,
  DescribeChannelCommandOutput,
} from "./commands/DescribeChannelCommand";
import {
  DescribeDatasetCommandInput,
  DescribeDatasetCommandOutput,
} from "./commands/DescribeDatasetCommand";
import {
  DescribeDatastoreCommandInput,
  DescribeDatastoreCommandOutput,
} from "./commands/DescribeDatastoreCommand";
import {
  DescribeLoggingOptionsCommandInput,
  DescribeLoggingOptionsCommandOutput,
} from "./commands/DescribeLoggingOptionsCommand";
import {
  DescribePipelineCommandInput,
  DescribePipelineCommandOutput,
} from "./commands/DescribePipelineCommand";
import {
  GetDatasetContentCommandInput,
  GetDatasetContentCommandOutput,
} from "./commands/GetDatasetContentCommand";
import {
  ListChannelsCommandInput,
  ListChannelsCommandOutput,
} from "./commands/ListChannelsCommand";
import {
  ListDatasetContentsCommandInput,
  ListDatasetContentsCommandOutput,
} from "./commands/ListDatasetContentsCommand";
import {
  ListDatasetsCommandInput,
  ListDatasetsCommandOutput,
} from "./commands/ListDatasetsCommand";
import {
  ListDatastoresCommandInput,
  ListDatastoresCommandOutput,
} from "./commands/ListDatastoresCommand";
import {
  ListPipelinesCommandInput,
  ListPipelinesCommandOutput,
} from "./commands/ListPipelinesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PutLoggingOptionsCommandInput,
  PutLoggingOptionsCommandOutput,
} from "./commands/PutLoggingOptionsCommand";
import {
  RunPipelineActivityCommandInput,
  RunPipelineActivityCommandOutput,
} from "./commands/RunPipelineActivityCommand";
import {
  SampleChannelDataCommandInput,
  SampleChannelDataCommandOutput,
} from "./commands/SampleChannelDataCommand";
import {
  StartPipelineReprocessingCommandInput,
  StartPipelineReprocessingCommandOutput,
} from "./commands/StartPipelineReprocessingCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateChannelCommandInput,
  UpdateChannelCommandOutput,
} from "./commands/UpdateChannelCommand";
import {
  UpdateDatasetCommandInput,
  UpdateDatasetCommandOutput,
} from "./commands/UpdateDatasetCommand";
import {
  UpdateDatastoreCommandInput,
  UpdateDatastoreCommandOutput,
} from "./commands/UpdateDatastoreCommand";
import {
  UpdatePipelineCommandInput,
  UpdatePipelineCommandOutput,
} from "./commands/UpdatePipelineCommand";
import { IoTAnalyticsClient } from "./IoTAnalyticsClient";
export interface IoTAnalytics {
  batchPutMessage(
    args: BatchPutMessageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchPutMessageCommandOutput>;
  batchPutMessage(
    args: BatchPutMessageCommandInput,
    cb: (err: any, data?: BatchPutMessageCommandOutput) => void
  ): void;
  batchPutMessage(
    args: BatchPutMessageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchPutMessageCommandOutput) => void
  ): void;
  cancelPipelineReprocessing(
    args: CancelPipelineReprocessingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelPipelineReprocessingCommandOutput>;
  cancelPipelineReprocessing(
    args: CancelPipelineReprocessingCommandInput,
    cb: (err: any, data?: CancelPipelineReprocessingCommandOutput) => void
  ): void;
  cancelPipelineReprocessing(
    args: CancelPipelineReprocessingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelPipelineReprocessingCommandOutput) => void
  ): void;
  createChannel(
    args: CreateChannelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateChannelCommandOutput>;
  createChannel(
    args: CreateChannelCommandInput,
    cb: (err: any, data?: CreateChannelCommandOutput) => void
  ): void;
  createChannel(
    args: CreateChannelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateChannelCommandOutput) => void
  ): void;
  createDataset(
    args: CreateDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetCommandOutput>;
  createDataset(
    args: CreateDatasetCommandInput,
    cb: (err: any, data?: CreateDatasetCommandOutput) => void
  ): void;
  createDataset(
    args: CreateDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetCommandOutput) => void
  ): void;
  createDatasetContent(
    args: CreateDatasetContentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetContentCommandOutput>;
  createDatasetContent(
    args: CreateDatasetContentCommandInput,
    cb: (err: any, data?: CreateDatasetContentCommandOutput) => void
  ): void;
  createDatasetContent(
    args: CreateDatasetContentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetContentCommandOutput) => void
  ): void;
  createDatastore(
    args: CreateDatastoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatastoreCommandOutput>;
  createDatastore(
    args: CreateDatastoreCommandInput,
    cb: (err: any, data?: CreateDatastoreCommandOutput) => void
  ): void;
  createDatastore(
    args: CreateDatastoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatastoreCommandOutput) => void
  ): void;
  createPipeline(
    args: CreatePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePipelineCommandOutput>;
  createPipeline(
    args: CreatePipelineCommandInput,
    cb: (err: any, data?: CreatePipelineCommandOutput) => void
  ): void;
  createPipeline(
    args: CreatePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePipelineCommandOutput) => void
  ): void;
  deleteChannel(
    args: DeleteChannelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteChannelCommandOutput>;
  deleteChannel(
    args: DeleteChannelCommandInput,
    cb: (err: any, data?: DeleteChannelCommandOutput) => void
  ): void;
  deleteChannel(
    args: DeleteChannelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteChannelCommandOutput) => void
  ): void;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDatasetCommandOutput>;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    cb: (err: any, data?: DeleteDatasetCommandOutput) => void
  ): void;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDatasetCommandOutput) => void
  ): void;
  deleteDatasetContent(
    args: DeleteDatasetContentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDatasetContentCommandOutput>;
  deleteDatasetContent(
    args: DeleteDatasetContentCommandInput,
    cb: (err: any, data?: DeleteDatasetContentCommandOutput) => void
  ): void;
  deleteDatasetContent(
    args: DeleteDatasetContentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDatasetContentCommandOutput) => void
  ): void;
  deleteDatastore(
    args: DeleteDatastoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDatastoreCommandOutput>;
  deleteDatastore(
    args: DeleteDatastoreCommandInput,
    cb: (err: any, data?: DeleteDatastoreCommandOutput) => void
  ): void;
  deleteDatastore(
    args: DeleteDatastoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDatastoreCommandOutput) => void
  ): void;
  deletePipeline(
    args: DeletePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePipelineCommandOutput>;
  deletePipeline(
    args: DeletePipelineCommandInput,
    cb: (err: any, data?: DeletePipelineCommandOutput) => void
  ): void;
  deletePipeline(
    args: DeletePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePipelineCommandOutput) => void
  ): void;
  describeChannel(
    args: DescribeChannelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeChannelCommandOutput>;
  describeChannel(
    args: DescribeChannelCommandInput,
    cb: (err: any, data?: DescribeChannelCommandOutput) => void
  ): void;
  describeChannel(
    args: DescribeChannelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeChannelCommandOutput) => void
  ): void;
  describeDataset(
    args: DescribeDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatasetCommandOutput>;
  describeDataset(
    args: DescribeDatasetCommandInput,
    cb: (err: any, data?: DescribeDatasetCommandOutput) => void
  ): void;
  describeDataset(
    args: DescribeDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatasetCommandOutput) => void
  ): void;
  describeDatastore(
    args: DescribeDatastoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatastoreCommandOutput>;
  describeDatastore(
    args: DescribeDatastoreCommandInput,
    cb: (err: any, data?: DescribeDatastoreCommandOutput) => void
  ): void;
  describeDatastore(
    args: DescribeDatastoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatastoreCommandOutput) => void
  ): void;
  describeLoggingOptions(
    args: DescribeLoggingOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLoggingOptionsCommandOutput>;
  describeLoggingOptions(
    args: DescribeLoggingOptionsCommandInput,
    cb: (err: any, data?: DescribeLoggingOptionsCommandOutput) => void
  ): void;
  describeLoggingOptions(
    args: DescribeLoggingOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLoggingOptionsCommandOutput) => void
  ): void;
  describePipeline(
    args: DescribePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribePipelineCommandOutput>;
  describePipeline(
    args: DescribePipelineCommandInput,
    cb: (err: any, data?: DescribePipelineCommandOutput) => void
  ): void;
  describePipeline(
    args: DescribePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribePipelineCommandOutput) => void
  ): void;
  getDatasetContent(
    args: GetDatasetContentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDatasetContentCommandOutput>;
  getDatasetContent(
    args: GetDatasetContentCommandInput,
    cb: (err: any, data?: GetDatasetContentCommandOutput) => void
  ): void;
  getDatasetContent(
    args: GetDatasetContentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDatasetContentCommandOutput) => void
  ): void;
  listChannels(
    args: ListChannelsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListChannelsCommandOutput>;
  listChannels(
    args: ListChannelsCommandInput,
    cb: (err: any, data?: ListChannelsCommandOutput) => void
  ): void;
  listChannels(
    args: ListChannelsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListChannelsCommandOutput) => void
  ): void;
  listDatasetContents(
    args: ListDatasetContentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetContentsCommandOutput>;
  listDatasetContents(
    args: ListDatasetContentsCommandInput,
    cb: (err: any, data?: ListDatasetContentsCommandOutput) => void
  ): void;
  listDatasetContents(
    args: ListDatasetContentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetContentsCommandOutput) => void
  ): void;
  listDatasets(
    args: ListDatasetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetsCommandOutput>;
  listDatasets(
    args: ListDatasetsCommandInput,
    cb: (err: any, data?: ListDatasetsCommandOutput) => void
  ): void;
  listDatasets(
    args: ListDatasetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetsCommandOutput) => void
  ): void;
  listDatastores(
    args: ListDatastoresCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatastoresCommandOutput>;
  listDatastores(
    args: ListDatastoresCommandInput,
    cb: (err: any, data?: ListDatastoresCommandOutput) => void
  ): void;
  listDatastores(
    args: ListDatastoresCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatastoresCommandOutput) => void
  ): void;
  listPipelines(
    args: ListPipelinesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPipelinesCommandOutput>;
  listPipelines(
    args: ListPipelinesCommandInput,
    cb: (err: any, data?: ListPipelinesCommandOutput) => void
  ): void;
  listPipelines(
    args: ListPipelinesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPipelinesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  putLoggingOptions(
    args: PutLoggingOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutLoggingOptionsCommandOutput>;
  putLoggingOptions(
    args: PutLoggingOptionsCommandInput,
    cb: (err: any, data?: PutLoggingOptionsCommandOutput) => void
  ): void;
  putLoggingOptions(
    args: PutLoggingOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutLoggingOptionsCommandOutput) => void
  ): void;
  runPipelineActivity(
    args: RunPipelineActivityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RunPipelineActivityCommandOutput>;
  runPipelineActivity(
    args: RunPipelineActivityCommandInput,
    cb: (err: any, data?: RunPipelineActivityCommandOutput) => void
  ): void;
  runPipelineActivity(
    args: RunPipelineActivityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RunPipelineActivityCommandOutput) => void
  ): void;
  sampleChannelData(
    args: SampleChannelDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SampleChannelDataCommandOutput>;
  sampleChannelData(
    args: SampleChannelDataCommandInput,
    cb: (err: any, data?: SampleChannelDataCommandOutput) => void
  ): void;
  sampleChannelData(
    args: SampleChannelDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SampleChannelDataCommandOutput) => void
  ): void;
  startPipelineReprocessing(
    args: StartPipelineReprocessingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartPipelineReprocessingCommandOutput>;
  startPipelineReprocessing(
    args: StartPipelineReprocessingCommandInput,
    cb: (err: any, data?: StartPipelineReprocessingCommandOutput) => void
  ): void;
  startPipelineReprocessing(
    args: StartPipelineReprocessingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartPipelineReprocessingCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateChannel(
    args: UpdateChannelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateChannelCommandOutput>;
  updateChannel(
    args: UpdateChannelCommandInput,
    cb: (err: any, data?: UpdateChannelCommandOutput) => void
  ): void;
  updateChannel(
    args: UpdateChannelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateChannelCommandOutput) => void
  ): void;
  updateDataset(
    args: UpdateDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDatasetCommandOutput>;
  updateDataset(
    args: UpdateDatasetCommandInput,
    cb: (err: any, data?: UpdateDatasetCommandOutput) => void
  ): void;
  updateDataset(
    args: UpdateDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDatasetCommandOutput) => void
  ): void;
  updateDatastore(
    args: UpdateDatastoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDatastoreCommandOutput>;
  updateDatastore(
    args: UpdateDatastoreCommandInput,
    cb: (err: any, data?: UpdateDatastoreCommandOutput) => void
  ): void;
  updateDatastore(
    args: UpdateDatastoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDatastoreCommandOutput) => void
  ): void;
  updatePipeline(
    args: UpdatePipelineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdatePipelineCommandOutput>;
  updatePipeline(
    args: UpdatePipelineCommandInput,
    cb: (err: any, data?: UpdatePipelineCommandOutput) => void
  ): void;
  updatePipeline(
    args: UpdatePipelineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdatePipelineCommandOutput) => void
  ): void;
}
export declare class IoTAnalytics
  extends IoTAnalyticsClient
  implements IoTAnalytics {}
