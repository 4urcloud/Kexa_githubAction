import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { PinpointServiceException as __BaseException } from "./PinpointServiceException";
export declare const __EndpointTypesElement: {
  readonly ADM: "ADM";
  readonly APNS: "APNS";
  readonly APNS_SANDBOX: "APNS_SANDBOX";
  readonly APNS_VOIP: "APNS_VOIP";
  readonly APNS_VOIP_SANDBOX: "APNS_VOIP_SANDBOX";
  readonly BAIDU: "BAIDU";
  readonly CUSTOM: "CUSTOM";
  readonly EMAIL: "EMAIL";
  readonly GCM: "GCM";
  readonly IN_APP: "IN_APP";
  readonly PUSH: "PUSH";
  readonly SMS: "SMS";
  readonly VOICE: "VOICE";
};
export type __EndpointTypesElement =
  (typeof __EndpointTypesElement)[keyof typeof __EndpointTypesElement];
export declare const __TimezoneEstimationMethodsElement: {
  readonly PHONE_NUMBER: "PHONE_NUMBER";
  readonly POSTAL_CODE: "POSTAL_CODE";
};
export type __TimezoneEstimationMethodsElement =
  (typeof __TimezoneEstimationMethodsElement)[keyof typeof __TimezoneEstimationMethodsElement];
export declare const Action: {
  readonly DEEP_LINK: "DEEP_LINK";
  readonly OPEN_APP: "OPEN_APP";
  readonly URL: "URL";
};
export type Action = (typeof Action)[keyof typeof Action];
export interface ActivityResponse {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
  End?: string;
  Id: string | undefined;
  Result?: string;
  ScheduledStart?: string;
  Start?: string;
  State?: string;
  SuccessfulEndpointCount?: number;
  TimezonesCompletedCount?: number;
  TimezonesTotalCount?: number;
  TotalEndpointCount?: number;
  TreatmentId?: string;
  ExecutionMetrics?: Record<string, string>;
}
export interface ActivitiesResponse {
  Item: ActivityResponse[] | undefined;
  NextToken?: string;
}
export declare const AttributeType: {
  readonly AFTER: "AFTER";
  readonly BEFORE: "BEFORE";
  readonly BETWEEN: "BETWEEN";
  readonly CONTAINS: "CONTAINS";
  readonly EXCLUSIVE: "EXCLUSIVE";
  readonly INCLUSIVE: "INCLUSIVE";
  readonly ON: "ON";
};
export type AttributeType = (typeof AttributeType)[keyof typeof AttributeType];
export interface AttributeDimension {
  AttributeType?: AttributeType;
  Values: string[] | undefined;
}
export declare const DimensionType: {
  readonly EXCLUSIVE: "EXCLUSIVE";
  readonly INCLUSIVE: "INCLUSIVE";
};
export type DimensionType = (typeof DimensionType)[keyof typeof DimensionType];
export interface SetDimension {
  DimensionType?: DimensionType;
  Values: string[] | undefined;
}
export interface MetricDimension {
  ComparisonOperator: string | undefined;
  Value: number | undefined;
}
export interface EventDimensions {
  Attributes?: Record<string, AttributeDimension>;
  EventType?: SetDimension;
  Metrics?: Record<string, MetricDimension>;
}
export interface EventCondition {
  Dimensions?: EventDimensions;
  MessageActivity?: string;
}
export interface SegmentCondition {
  SegmentId: string | undefined;
}
export declare const Duration: {
  readonly DAY_14: "DAY_14";
  readonly DAY_30: "DAY_30";
  readonly DAY_7: "DAY_7";
  readonly HR_24: "HR_24";
};
export type Duration = (typeof Duration)[keyof typeof Duration];
export declare const RecencyType: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
};
export type RecencyType = (typeof RecencyType)[keyof typeof RecencyType];
export interface RecencyDimension {
  Duration: Duration | undefined;
  RecencyType: RecencyType | undefined;
}
export interface SegmentBehaviors {
  Recency?: RecencyDimension;
}
export interface SegmentDemographics {
  AppVersion?: SetDimension;
  Channel?: SetDimension;
  DeviceType?: SetDimension;
  Make?: SetDimension;
  Model?: SetDimension;
  Platform?: SetDimension;
}
export interface GPSCoordinates {
  Latitude: number | undefined;
  Longitude: number | undefined;
}
export interface GPSPointDimension {
  Coordinates: GPSCoordinates | undefined;
  RangeInKilometers?: number;
}
export interface SegmentLocation {
  Country?: SetDimension;
  GPSPoint?: GPSPointDimension;
}
export interface SegmentDimensions {
  Attributes?: Record<string, AttributeDimension>;
  Behavior?: SegmentBehaviors;
  Demographic?: SegmentDemographics;
  Location?: SegmentLocation;
  Metrics?: Record<string, MetricDimension>;
  UserAttributes?: Record<string, AttributeDimension>;
}
export interface SimpleCondition {
  EventCondition?: EventCondition;
  SegmentCondition?: SegmentCondition;
  SegmentDimensions?: SegmentDimensions;
}
export declare const Operator: {
  readonly ALL: "ALL";
  readonly ANY: "ANY";
};
export type Operator = (typeof Operator)[keyof typeof Operator];
export interface Condition {
  Conditions?: SimpleCondition[];
  Operator?: Operator;
}
export interface WaitTime {
  WaitFor?: string;
  WaitUntil?: string;
}
export interface ConditionalSplitActivity {
  Condition?: Condition;
  EvaluationWaitTime?: WaitTime;
  FalseActivity?: string;
  TrueActivity?: string;
}
export interface ContactCenterActivity {
  NextActivity?: string;
}
export interface JourneyCustomMessage {
  Data?: string;
}
export interface CustomMessageActivity {
  DeliveryUri?: string;
  EndpointTypes?: __EndpointTypesElement[];
  MessageConfig?: JourneyCustomMessage;
  NextActivity?: string;
  TemplateName?: string;
  TemplateVersion?: string;
}
export interface JourneyEmailMessage {
  FromAddress?: string;
}
export interface EmailMessageActivity {
  MessageConfig?: JourneyEmailMessage;
  NextActivity?: string;
  TemplateName?: string;
  TemplateVersion?: string;
}
export interface HoldoutActivity {
  NextActivity?: string;
  Percentage: number | undefined;
}
export interface MultiConditionalBranch {
  Condition?: SimpleCondition;
  NextActivity?: string;
}
export interface MultiConditionalSplitActivity {
  Branches?: MultiConditionalBranch[];
  DefaultActivity?: string;
  EvaluationWaitTime?: WaitTime;
}
export interface JourneyPushMessage {
  TimeToLive?: string;
}
export interface PushMessageActivity {
  MessageConfig?: JourneyPushMessage;
  NextActivity?: string;
  TemplateName?: string;
  TemplateVersion?: string;
}
export interface RandomSplitEntry {
  NextActivity?: string;
  Percentage?: number;
}
export interface RandomSplitActivity {
  Branches?: RandomSplitEntry[];
}
export declare const MessageType: {
  readonly PROMOTIONAL: "PROMOTIONAL";
  readonly TRANSACTIONAL: "TRANSACTIONAL";
};
export type MessageType = (typeof MessageType)[keyof typeof MessageType];
export interface JourneySMSMessage {
  MessageType?: MessageType;
  OriginationNumber?: string;
  SenderId?: string;
  EntityId?: string;
  TemplateId?: string;
}
export interface SMSMessageActivity {
  MessageConfig?: JourneySMSMessage;
  NextActivity?: string;
  TemplateName?: string;
  TemplateVersion?: string;
}
export interface WaitActivity {
  NextActivity?: string;
  WaitTime?: WaitTime;
}
export interface Activity {
  CUSTOM?: CustomMessageActivity;
  ConditionalSplit?: ConditionalSplitActivity;
  Description?: string;
  EMAIL?: EmailMessageActivity;
  Holdout?: HoldoutActivity;
  MultiCondition?: MultiConditionalSplitActivity;
  PUSH?: PushMessageActivity;
  RandomSplit?: RandomSplitActivity;
  SMS?: SMSMessageActivity;
  Wait?: WaitActivity;
  ContactCenter?: ContactCenterActivity;
}
export declare const ChannelType: {
  readonly ADM: "ADM";
  readonly APNS: "APNS";
  readonly APNS_SANDBOX: "APNS_SANDBOX";
  readonly APNS_VOIP: "APNS_VOIP";
  readonly APNS_VOIP_SANDBOX: "APNS_VOIP_SANDBOX";
  readonly BAIDU: "BAIDU";
  readonly CUSTOM: "CUSTOM";
  readonly EMAIL: "EMAIL";
  readonly GCM: "GCM";
  readonly IN_APP: "IN_APP";
  readonly PUSH: "PUSH";
  readonly SMS: "SMS";
  readonly VOICE: "VOICE";
};
export type ChannelType = (typeof ChannelType)[keyof typeof ChannelType];
export interface AddressConfiguration {
  BodyOverride?: string;
  ChannelType?: ChannelType;
  Context?: Record<string, string>;
  RawContent?: string;
  Substitutions?: Record<string, string[]>;
  TitleOverride?: string;
}
export interface ADMChannelRequest {
  ClientId: string | undefined;
  ClientSecret: string | undefined;
  Enabled?: boolean;
}
export interface ADMChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface ADMMessage {
  Action?: Action;
  Body?: string;
  ConsolidationKey?: string;
  Data?: Record<string, string>;
  ExpiresAfter?: string;
  IconReference?: string;
  ImageIconUrl?: string;
  ImageUrl?: string;
  MD5?: string;
  RawContent?: string;
  SilentPush?: boolean;
  SmallImageIconUrl?: string;
  Sound?: string;
  Substitutions?: Record<string, string[]>;
  Title?: string;
  Url?: string;
}
export declare const Alignment: {
  readonly CENTER: "CENTER";
  readonly LEFT: "LEFT";
  readonly RIGHT: "RIGHT";
};
export type Alignment = (typeof Alignment)[keyof typeof Alignment];
export interface AndroidPushNotificationTemplate {
  Action?: Action;
  Body?: string;
  ImageIconUrl?: string;
  ImageUrl?: string;
  RawContent?: string;
  SmallImageIconUrl?: string;
  Sound?: string;
  Title?: string;
  Url?: string;
}
export interface APNSChannelRequest {
  BundleId?: string;
  Certificate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  PrivateKey?: string;
  TeamId?: string;
  TokenKey?: string;
  TokenKeyId?: string;
}
export interface APNSChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  HasTokenKey?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface APNSMessage {
  APNSPushType?: string;
  Action?: Action;
  Badge?: number;
  Body?: string;
  Category?: string;
  CollapseId?: string;
  Data?: Record<string, string>;
  MediaUrl?: string;
  PreferredAuthenticationMethod?: string;
  Priority?: string;
  RawContent?: string;
  SilentPush?: boolean;
  Sound?: string;
  Substitutions?: Record<string, string[]>;
  ThreadId?: string;
  TimeToLive?: number;
  Title?: string;
  Url?: string;
}
export interface APNSPushNotificationTemplate {
  Action?: Action;
  Body?: string;
  MediaUrl?: string;
  RawContent?: string;
  Sound?: string;
  Title?: string;
  Url?: string;
}
export interface APNSSandboxChannelRequest {
  BundleId?: string;
  Certificate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  PrivateKey?: string;
  TeamId?: string;
  TokenKey?: string;
  TokenKeyId?: string;
}
export interface APNSSandboxChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  HasTokenKey?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface APNSVoipChannelRequest {
  BundleId?: string;
  Certificate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  PrivateKey?: string;
  TeamId?: string;
  TokenKey?: string;
  TokenKeyId?: string;
}
export interface APNSVoipChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  HasTokenKey?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface APNSVoipSandboxChannelRequest {
  BundleId?: string;
  Certificate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  PrivateKey?: string;
  TeamId?: string;
  TokenKey?: string;
  TokenKeyId?: string;
}
export interface APNSVoipSandboxChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  HasTokenKey?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface ResultRowValue {
  Key: string | undefined;
  Type: string | undefined;
  Value: string | undefined;
}
export interface ResultRow {
  GroupedBys: ResultRowValue[] | undefined;
  Values: ResultRowValue[] | undefined;
}
export interface BaseKpiResult {
  Rows: ResultRow[] | undefined;
}
export interface ApplicationDateRangeKpiResponse {
  ApplicationId: string | undefined;
  EndTime: Date | undefined;
  KpiName: string | undefined;
  KpiResult: BaseKpiResult | undefined;
  NextToken?: string;
  StartTime: Date | undefined;
}
export interface ApplicationResponse {
  Arn: string | undefined;
  Id: string | undefined;
  Name: string | undefined;
  tags?: Record<string, string>;
  CreationDate?: string;
}
export interface JourneyTimeframeCap {
  Cap?: number;
  Days?: number;
}
export interface ApplicationSettingsJourneyLimits {
  DailyCap?: number;
  TimeframeCap?: JourneyTimeframeCap;
  TotalCap?: number;
}
export declare const Mode: {
  readonly DELIVERY: "DELIVERY";
  readonly FILTER: "FILTER";
};
export type Mode = (typeof Mode)[keyof typeof Mode];
export interface CampaignHook {
  LambdaFunctionName?: string;
  Mode?: Mode;
  WebUrl?: string;
}
export interface CampaignLimits {
  Daily?: number;
  MaximumDuration?: number;
  MessagesPerSecond?: number;
  Total?: number;
  Session?: number;
}
export interface QuietTime {
  End?: string;
  Start?: string;
}
export interface ApplicationSettingsResource {
  ApplicationId: string | undefined;
  CampaignHook?: CampaignHook;
  LastModifiedDate?: string;
  Limits?: CampaignLimits;
  QuietTime?: QuietTime;
  JourneyLimits?: ApplicationSettingsJourneyLimits;
}
export interface ApplicationsResponse {
  Item?: ApplicationResponse[];
  NextToken?: string;
}
export interface AttributesResource {
  ApplicationId: string | undefined;
  AttributeType: string | undefined;
  Attributes?: string[];
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export interface BaiduChannelRequest {
  ApiKey: string | undefined;
  Enabled?: boolean;
  SecretKey: string | undefined;
}
export interface BaiduChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  Credential: string | undefined;
  Enabled?: boolean;
  HasCredential?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface BaiduMessage {
  Action?: Action;
  Body?: string;
  Data?: Record<string, string>;
  IconReference?: string;
  ImageIconUrl?: string;
  ImageUrl?: string;
  RawContent?: string;
  SilentPush?: boolean;
  SmallImageIconUrl?: string;
  Sound?: string;
  Substitutions?: Record<string, string[]>;
  TimeToLive?: number;
  Title?: string;
  Url?: string;
}
export declare const ButtonAction: {
  readonly CLOSE: "CLOSE";
  readonly DEEP_LINK: "DEEP_LINK";
  readonly LINK: "LINK";
};
export type ButtonAction = (typeof ButtonAction)[keyof typeof ButtonAction];
export interface CampaignCustomMessage {
  Data?: string;
}
export interface CampaignDateRangeKpiResponse {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
  EndTime: Date | undefined;
  KpiName: string | undefined;
  KpiResult: BaseKpiResult | undefined;
  NextToken?: string;
  StartTime: Date | undefined;
}
export interface CampaignEmailMessage {
  Body?: string;
  FromAddress?: string;
  HtmlBody?: string;
  Title?: string;
}
export declare const FilterType: {
  readonly ENDPOINT: "ENDPOINT";
  readonly SYSTEM: "SYSTEM";
};
export type FilterType = (typeof FilterType)[keyof typeof FilterType];
export interface CampaignEventFilter {
  Dimensions: EventDimensions | undefined;
  FilterType: FilterType | undefined;
}
export interface InAppMessageBodyConfig {
  Alignment: Alignment | undefined;
  Body: string | undefined;
  TextColor: string | undefined;
}
export interface InAppMessageHeaderConfig {
  Alignment: Alignment | undefined;
  Header: string | undefined;
  TextColor: string | undefined;
}
export interface OverrideButtonConfiguration {
  ButtonAction: ButtonAction | undefined;
  Link?: string;
}
export interface DefaultButtonConfiguration {
  BackgroundColor?: string;
  BorderRadius?: number;
  ButtonAction: ButtonAction | undefined;
  Link?: string;
  Text: string | undefined;
  TextColor?: string;
}
export interface InAppMessageButton {
  Android?: OverrideButtonConfiguration;
  DefaultConfig?: DefaultButtonConfiguration;
  IOS?: OverrideButtonConfiguration;
  Web?: OverrideButtonConfiguration;
}
export interface InAppMessageContent {
  BackgroundColor?: string;
  BodyConfig?: InAppMessageBodyConfig;
  HeaderConfig?: InAppMessageHeaderConfig;
  ImageUrl?: string;
  PrimaryBtn?: InAppMessageButton;
  SecondaryBtn?: InAppMessageButton;
}
export declare const Layout: {
  readonly BOTTOM_BANNER: "BOTTOM_BANNER";
  readonly CAROUSEL: "CAROUSEL";
  readonly MIDDLE_BANNER: "MIDDLE_BANNER";
  readonly MOBILE_FEED: "MOBILE_FEED";
  readonly OVERLAYS: "OVERLAYS";
  readonly TOP_BANNER: "TOP_BANNER";
};
export type Layout = (typeof Layout)[keyof typeof Layout];
export interface CampaignInAppMessage {
  Body?: string;
  Content?: InAppMessageContent[];
  CustomConfig?: Record<string, string>;
  Layout?: Layout;
}
export interface CustomDeliveryConfiguration {
  DeliveryUri: string | undefined;
  EndpointTypes?: __EndpointTypesElement[];
}
export interface Message {
  Action?: Action;
  Body?: string;
  ImageIconUrl?: string;
  ImageSmallIconUrl?: string;
  ImageUrl?: string;
  JsonBody?: string;
  MediaUrl?: string;
  RawContent?: string;
  SilentPush?: boolean;
  TimeToLive?: number;
  Title?: string;
  Url?: string;
}
export interface CampaignSmsMessage {
  Body?: string;
  MessageType?: MessageType;
  OriginationNumber?: string;
  SenderId?: string;
  EntityId?: string;
  TemplateId?: string;
}
export interface MessageConfiguration {
  ADMMessage?: Message;
  APNSMessage?: Message;
  BaiduMessage?: Message;
  CustomMessage?: CampaignCustomMessage;
  DefaultMessage?: Message;
  EmailMessage?: CampaignEmailMessage;
  GCMMessage?: Message;
  SMSMessage?: CampaignSmsMessage;
  InAppMessage?: CampaignInAppMessage;
}
export declare const Frequency: {
  readonly DAILY: "DAILY";
  readonly EVENT: "EVENT";
  readonly HOURLY: "HOURLY";
  readonly IN_APP_EVENT: "IN_APP_EVENT";
  readonly MONTHLY: "MONTHLY";
  readonly ONCE: "ONCE";
  readonly WEEKLY: "WEEKLY";
};
export type Frequency = (typeof Frequency)[keyof typeof Frequency];
export interface Schedule {
  EndTime?: string;
  EventFilter?: CampaignEventFilter;
  Frequency?: Frequency;
  IsLocalTime?: boolean;
  QuietTime?: QuietTime;
  StartTime: string | undefined;
  Timezone?: string;
}
export declare const CampaignStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly DELETED: "DELETED";
  readonly EXECUTING: "EXECUTING";
  readonly INVALID: "INVALID";
  readonly PAUSED: "PAUSED";
  readonly PENDING_NEXT_RUN: "PENDING_NEXT_RUN";
  readonly SCHEDULED: "SCHEDULED";
};
export type CampaignStatus =
  (typeof CampaignStatus)[keyof typeof CampaignStatus];
export interface CampaignState {
  CampaignStatus?: CampaignStatus;
}
export interface Template {
  Name?: string;
  Version?: string;
}
export interface TemplateConfiguration {
  EmailTemplate?: Template;
  PushTemplate?: Template;
  SMSTemplate?: Template;
  VoiceTemplate?: Template;
  InAppTemplate?: Template;
}
export interface TreatmentResource {
  CustomDeliveryConfiguration?: CustomDeliveryConfiguration;
  Id: string | undefined;
  MessageConfiguration?: MessageConfiguration;
  Schedule?: Schedule;
  SizePercent: number | undefined;
  State?: CampaignState;
  TemplateConfiguration?: TemplateConfiguration;
  TreatmentDescription?: string;
  TreatmentName?: string;
}
export interface CampaignResponse {
  AdditionalTreatments?: TreatmentResource[];
  ApplicationId: string | undefined;
  Arn: string | undefined;
  CreationDate: string | undefined;
  CustomDeliveryConfiguration?: CustomDeliveryConfiguration;
  DefaultState?: CampaignState;
  Description?: string;
  HoldoutPercent?: number;
  Hook?: CampaignHook;
  Id: string | undefined;
  IsPaused?: boolean;
  LastModifiedDate: string | undefined;
  Limits?: CampaignLimits;
  MessageConfiguration?: MessageConfiguration;
  Name?: string;
  Schedule?: Schedule;
  SegmentId: string | undefined;
  SegmentVersion: number | undefined;
  State?: CampaignState;
  tags?: Record<string, string>;
  TemplateConfiguration?: TemplateConfiguration;
  TreatmentDescription?: string;
  TreatmentName?: string;
  Version?: number;
  Priority?: number;
}
export interface CampaignsResponse {
  Item: CampaignResponse[] | undefined;
  NextToken?: string;
}
export interface ChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Version?: number;
}
export interface ChannelsResponse {
  Channels: Record<string, ChannelResponse> | undefined;
}
export interface ClosedDaysRule {
  Name?: string;
  StartDateTime?: string;
  EndDateTime?: string;
}
export interface ClosedDays {
  EMAIL?: ClosedDaysRule[];
  SMS?: ClosedDaysRule[];
  PUSH?: ClosedDaysRule[];
  VOICE?: ClosedDaysRule[];
  CUSTOM?: ClosedDaysRule[];
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateApplicationRequest {
  Name: string | undefined;
  tags?: Record<string, string>;
}
export interface CreateAppRequest {
  CreateApplicationRequest: CreateApplicationRequest | undefined;
}
export interface CreateAppResponse {
  ApplicationResponse: ApplicationResponse | undefined;
}
export declare class ForbiddenException extends __BaseException {
  readonly name: "ForbiddenException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  Message?: string;
  RequestID?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export declare class MethodNotAllowedException extends __BaseException {
  readonly name: "MethodNotAllowedException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(
    opts: __ExceptionOptionType<MethodNotAllowedException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class PayloadTooLargeException extends __BaseException {
  readonly name: "PayloadTooLargeException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(
    opts: __ExceptionOptionType<PayloadTooLargeException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string;
  RequestID?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface WriteTreatmentResource {
  CustomDeliveryConfiguration?: CustomDeliveryConfiguration;
  MessageConfiguration?: MessageConfiguration;
  Schedule?: Schedule;
  SizePercent: number | undefined;
  TemplateConfiguration?: TemplateConfiguration;
  TreatmentDescription?: string;
  TreatmentName?: string;
}
export interface WriteCampaignRequest {
  AdditionalTreatments?: WriteTreatmentResource[];
  CustomDeliveryConfiguration?: CustomDeliveryConfiguration;
  Description?: string;
  HoldoutPercent?: number;
  Hook?: CampaignHook;
  IsPaused?: boolean;
  Limits?: CampaignLimits;
  MessageConfiguration?: MessageConfiguration;
  Name?: string;
  Schedule?: Schedule;
  SegmentId?: string;
  SegmentVersion?: number;
  tags?: Record<string, string>;
  TemplateConfiguration?: TemplateConfiguration;
  TreatmentDescription?: string;
  TreatmentName?: string;
  Priority?: number;
}
export interface CreateCampaignRequest {
  ApplicationId: string | undefined;
  WriteCampaignRequest: WriteCampaignRequest | undefined;
}
export interface CreateCampaignResponse {
  CampaignResponse: CampaignResponse | undefined;
}
export interface EmailTemplateRequest {
  DefaultSubstitutions?: string;
  HtmlPart?: string;
  RecommenderId?: string;
  Subject?: string;
  tags?: Record<string, string>;
  TemplateDescription?: string;
  TextPart?: string;
}
export interface CreateEmailTemplateRequest {
  EmailTemplateRequest: EmailTemplateRequest | undefined;
  TemplateName: string | undefined;
}
export interface CreateTemplateMessageBody {
  Arn?: string;
  Message?: string;
  RequestID?: string;
}
export interface CreateEmailTemplateResponse {
  CreateTemplateMessageBody: CreateTemplateMessageBody | undefined;
}
export interface ExportJobRequest {
  RoleArn: string | undefined;
  S3UrlPrefix: string | undefined;
  SegmentId?: string;
  SegmentVersion?: number;
}
export interface CreateExportJobRequest {
  ApplicationId: string | undefined;
  ExportJobRequest: ExportJobRequest | undefined;
}
export interface ExportJobResource {
  RoleArn: string | undefined;
  S3UrlPrefix: string | undefined;
  SegmentId?: string;
  SegmentVersion?: number;
}
export declare const JobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETING: "COMPLETING";
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly FAILING: "FAILING";
  readonly INITIALIZING: "INITIALIZING";
  readonly PENDING_JOB: "PENDING_JOB";
  readonly PREPARING_FOR_INITIALIZATION: "PREPARING_FOR_INITIALIZATION";
  readonly PROCESSING: "PROCESSING";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface ExportJobResponse {
  ApplicationId: string | undefined;
  CompletedPieces?: number;
  CompletionDate?: string;
  CreationDate: string | undefined;
  Definition: ExportJobResource | undefined;
  FailedPieces?: number;
  Failures?: string[];
  Id: string | undefined;
  JobStatus: JobStatus | undefined;
  TotalFailures?: number;
  TotalPieces?: number;
  TotalProcessed?: number;
  Type: string | undefined;
}
export interface CreateExportJobResponse {
  ExportJobResponse: ExportJobResponse | undefined;
}
export declare const Format: {
  readonly CSV: "CSV";
  readonly JSON: "JSON";
};
export type Format = (typeof Format)[keyof typeof Format];
export interface ImportJobRequest {
  DefineSegment?: boolean;
  ExternalId?: string;
  Format: Format | undefined;
  RegisterEndpoints?: boolean;
  RoleArn: string | undefined;
  S3Url: string | undefined;
  SegmentId?: string;
  SegmentName?: string;
}
export interface CreateImportJobRequest {
  ApplicationId: string | undefined;
  ImportJobRequest: ImportJobRequest | undefined;
}
export interface ImportJobResource {
  DefineSegment?: boolean;
  ExternalId?: string;
  Format: Format | undefined;
  RegisterEndpoints?: boolean;
  RoleArn: string | undefined;
  S3Url: string | undefined;
  SegmentId?: string;
  SegmentName?: string;
}
export interface ImportJobResponse {
  ApplicationId: string | undefined;
  CompletedPieces?: number;
  CompletionDate?: string;
  CreationDate: string | undefined;
  Definition: ImportJobResource | undefined;
  FailedPieces?: number;
  Failures?: string[];
  Id: string | undefined;
  JobStatus: JobStatus | undefined;
  TotalFailures?: number;
  TotalPieces?: number;
  TotalProcessed?: number;
  Type: string | undefined;
}
export interface CreateImportJobResponse {
  ImportJobResponse: ImportJobResponse | undefined;
}
export interface InAppTemplateRequest {
  Content?: InAppMessageContent[];
  CustomConfig?: Record<string, string>;
  Layout?: Layout;
  tags?: Record<string, string>;
  TemplateDescription?: string;
}
export interface CreateInAppTemplateRequest {
  InAppTemplateRequest: InAppTemplateRequest | undefined;
  TemplateName: string | undefined;
}
export interface TemplateCreateMessageBody {
  Arn?: string;
  Message?: string;
  RequestID?: string;
}
export interface CreateInAppTemplateResponse {
  TemplateCreateMessageBody: TemplateCreateMessageBody | undefined;
}
export interface JourneyChannelSettings {
  ConnectCampaignArn?: string;
  ConnectCampaignExecutionRoleArn?: string;
}
export interface JourneyLimits {
  DailyCap?: number;
  EndpointReentryCap?: number;
  MessagesPerSecond?: number;
  EndpointReentryInterval?: string;
  TimeframeCap?: JourneyTimeframeCap;
  TotalCap?: number;
}
export declare const DayOfWeek: {
  readonly FRIDAY: "FRIDAY";
  readonly MONDAY: "MONDAY";
  readonly SATURDAY: "SATURDAY";
  readonly SUNDAY: "SUNDAY";
  readonly THURSDAY: "THURSDAY";
  readonly TUESDAY: "TUESDAY";
  readonly WEDNESDAY: "WEDNESDAY";
};
export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export interface OpenHoursRule {
  StartTime?: string;
  EndTime?: string;
}
export interface OpenHours {
  EMAIL?: Partial<Record<DayOfWeek, OpenHoursRule[]>>;
  SMS?: Partial<Record<DayOfWeek, OpenHoursRule[]>>;
  PUSH?: Partial<Record<DayOfWeek, OpenHoursRule[]>>;
  VOICE?: Partial<Record<DayOfWeek, OpenHoursRule[]>>;
  CUSTOM?: Partial<Record<DayOfWeek, OpenHoursRule[]>>;
}
export interface JourneySchedule {
  EndTime?: Date;
  StartTime?: Date;
  Timezone?: string;
}
export interface EventFilter {
  Dimensions: EventDimensions | undefined;
  FilterType: FilterType | undefined;
}
export interface EventStartCondition {
  EventFilter?: EventFilter;
  SegmentId?: string;
}
export interface StartCondition {
  Description?: string;
  EventStartCondition?: EventStartCondition;
  SegmentStartCondition?: SegmentCondition;
}
export declare const State: {
  readonly ACTIVE: "ACTIVE";
  readonly CANCELLED: "CANCELLED";
  readonly CLOSED: "CLOSED";
  readonly COMPLETED: "COMPLETED";
  readonly DRAFT: "DRAFT";
  readonly PAUSED: "PAUSED";
};
export type State = (typeof State)[keyof typeof State];
export interface WriteJourneyRequest {
  Activities?: Record<string, Activity>;
  CreationDate?: string;
  LastModifiedDate?: string;
  Limits?: JourneyLimits;
  LocalTime?: boolean;
  Name: string | undefined;
  QuietTime?: QuietTime;
  RefreshFrequency?: string;
  Schedule?: JourneySchedule;
  StartActivity?: string;
  StartCondition?: StartCondition;
  State?: State;
  WaitForQuietTime?: boolean;
  RefreshOnSegmentUpdate?: boolean;
  JourneyChannelSettings?: JourneyChannelSettings;
  SendingSchedule?: boolean;
  OpenHours?: OpenHours;
  ClosedDays?: ClosedDays;
  TimezoneEstimationMethods?: __TimezoneEstimationMethodsElement[];
}
export interface CreateJourneyRequest {
  ApplicationId: string | undefined;
  WriteJourneyRequest: WriteJourneyRequest | undefined;
}
export interface JourneyResponse {
  Activities?: Record<string, Activity>;
  ApplicationId: string | undefined;
  CreationDate?: string;
  Id: string | undefined;
  LastModifiedDate?: string;
  Limits?: JourneyLimits;
  LocalTime?: boolean;
  Name: string | undefined;
  QuietTime?: QuietTime;
  RefreshFrequency?: string;
  Schedule?: JourneySchedule;
  StartActivity?: string;
  StartCondition?: StartCondition;
  State?: State;
  tags?: Record<string, string>;
  WaitForQuietTime?: boolean;
  RefreshOnSegmentUpdate?: boolean;
  JourneyChannelSettings?: JourneyChannelSettings;
  SendingSchedule?: boolean;
  OpenHours?: OpenHours;
  ClosedDays?: ClosedDays;
  TimezoneEstimationMethods?: __TimezoneEstimationMethodsElement[];
}
export interface CreateJourneyResponse {
  JourneyResponse: JourneyResponse | undefined;
}
export interface DefaultPushNotificationTemplate {
  Action?: Action;
  Body?: string;
  Sound?: string;
  Title?: string;
  Url?: string;
}
export interface PushNotificationTemplateRequest {
  ADM?: AndroidPushNotificationTemplate;
  APNS?: APNSPushNotificationTemplate;
  Baidu?: AndroidPushNotificationTemplate;
  Default?: DefaultPushNotificationTemplate;
  DefaultSubstitutions?: string;
  GCM?: AndroidPushNotificationTemplate;
  RecommenderId?: string;
  tags?: Record<string, string>;
  TemplateDescription?: string;
}
export interface CreatePushTemplateRequest {
  PushNotificationTemplateRequest: PushNotificationTemplateRequest | undefined;
  TemplateName: string | undefined;
}
export interface CreatePushTemplateResponse {
  CreateTemplateMessageBody: CreateTemplateMessageBody | undefined;
}
export interface CreateRecommenderConfigurationShape {
  Attributes?: Record<string, string>;
  Description?: string;
  Name?: string;
  RecommendationProviderIdType?: string;
  RecommendationProviderRoleArn: string | undefined;
  RecommendationProviderUri: string | undefined;
  RecommendationTransformerUri?: string;
  RecommendationsDisplayName?: string;
  RecommendationsPerMessage?: number;
}
export interface CreateRecommenderConfigurationRequest {
  CreateRecommenderConfiguration:
    | CreateRecommenderConfigurationShape
    | undefined;
}
export interface RecommenderConfigurationResponse {
  Attributes?: Record<string, string>;
  CreationDate: string | undefined;
  Description?: string;
  Id: string | undefined;
  LastModifiedDate: string | undefined;
  Name?: string;
  RecommendationProviderIdType?: string;
  RecommendationProviderRoleArn: string | undefined;
  RecommendationProviderUri: string | undefined;
  RecommendationTransformerUri?: string;
  RecommendationsDisplayName?: string;
  RecommendationsPerMessage?: number;
}
export interface CreateRecommenderConfigurationResponse {
  RecommenderConfigurationResponse:
    | RecommenderConfigurationResponse
    | undefined;
}
export interface SegmentReference {
  Id: string | undefined;
  Version?: number;
}
export declare const SourceType: {
  readonly ALL: "ALL";
  readonly ANY: "ANY";
  readonly NONE: "NONE";
};
export type SourceType = (typeof SourceType)[keyof typeof SourceType];
export declare const Type: {
  readonly ALL: "ALL";
  readonly ANY: "ANY";
  readonly NONE: "NONE";
};
export type Type = (typeof Type)[keyof typeof Type];
export interface SegmentGroup {
  Dimensions?: SegmentDimensions[];
  SourceSegments?: SegmentReference[];
  SourceType?: SourceType;
  Type?: Type;
}
export declare const Include: {
  readonly ALL: "ALL";
  readonly ANY: "ANY";
  readonly NONE: "NONE";
};
export type Include = (typeof Include)[keyof typeof Include];
export interface SegmentGroupList {
  Groups?: SegmentGroup[];
  Include?: Include;
}
export interface WriteSegmentRequest {
  Dimensions?: SegmentDimensions;
  Name?: string;
  SegmentGroups?: SegmentGroupList;
  tags?: Record<string, string>;
}
export interface CreateSegmentRequest {
  ApplicationId: string | undefined;
  WriteSegmentRequest: WriteSegmentRequest | undefined;
}
export interface SegmentImportResource {
  ChannelCounts?: Record<string, number>;
  ExternalId: string | undefined;
  Format: Format | undefined;
  RoleArn: string | undefined;
  S3Url: string | undefined;
  Size: number | undefined;
}
export declare const SegmentType: {
  readonly DIMENSIONAL: "DIMENSIONAL";
  readonly IMPORT: "IMPORT";
};
export type SegmentType = (typeof SegmentType)[keyof typeof SegmentType];
export interface SegmentResponse {
  ApplicationId: string | undefined;
  Arn: string | undefined;
  CreationDate: string | undefined;
  Dimensions?: SegmentDimensions;
  Id: string | undefined;
  ImportDefinition?: SegmentImportResource;
  LastModifiedDate?: string;
  Name?: string;
  SegmentGroups?: SegmentGroupList;
  SegmentType: SegmentType | undefined;
  tags?: Record<string, string>;
  Version?: number;
}
export interface CreateSegmentResponse {
  SegmentResponse: SegmentResponse | undefined;
}
export interface SMSTemplateRequest {
  Body?: string;
  DefaultSubstitutions?: string;
  RecommenderId?: string;
  tags?: Record<string, string>;
  TemplateDescription?: string;
}
export interface CreateSmsTemplateRequest {
  SMSTemplateRequest: SMSTemplateRequest | undefined;
  TemplateName: string | undefined;
}
export interface CreateSmsTemplateResponse {
  CreateTemplateMessageBody: CreateTemplateMessageBody | undefined;
}
export interface VoiceTemplateRequest {
  Body?: string;
  DefaultSubstitutions?: string;
  LanguageCode?: string;
  tags?: Record<string, string>;
  TemplateDescription?: string;
  VoiceId?: string;
}
export interface CreateVoiceTemplateRequest {
  TemplateName: string | undefined;
  VoiceTemplateRequest: VoiceTemplateRequest | undefined;
}
export interface CreateVoiceTemplateResponse {
  CreateTemplateMessageBody: CreateTemplateMessageBody | undefined;
}
export interface DefaultMessage {
  Body?: string;
  Substitutions?: Record<string, string[]>;
}
export interface DefaultPushNotificationMessage {
  Action?: Action;
  Body?: string;
  Data?: Record<string, string>;
  SilentPush?: boolean;
  Substitutions?: Record<string, string[]>;
  Title?: string;
  Url?: string;
}
export interface DeleteAdmChannelRequest {
  ApplicationId: string | undefined;
}
export interface DeleteAdmChannelResponse {
  ADMChannelResponse: ADMChannelResponse | undefined;
}
export interface DeleteApnsChannelRequest {
  ApplicationId: string | undefined;
}
export interface DeleteApnsChannelResponse {
  APNSChannelResponse: APNSChannelResponse | undefined;
}
export interface DeleteApnsSandboxChannelRequest {
  ApplicationId: string | undefined;
}
export interface DeleteApnsSandboxChannelResponse {
  APNSSandboxChannelResponse: APNSSandboxChannelResponse | undefined;
}
export interface DeleteApnsVoipChannelRequest {
  ApplicationId: string | undefined;
}
export interface DeleteApnsVoipChannelResponse {
  APNSVoipChannelResponse: APNSVoipChannelResponse | undefined;
}
export interface DeleteApnsVoipSandboxChannelRequest {
  ApplicationId: string | undefined;
}
export interface DeleteApnsVoipSandboxChannelResponse {
  APNSVoipSandboxChannelResponse: APNSVoipSandboxChannelResponse | undefined;
}
export interface DeleteAppRequest {
  ApplicationId: string | undefined;
}
export interface DeleteAppResponse {
  ApplicationResponse: ApplicationResponse | undefined;
}
export interface DeleteBaiduChannelRequest {
  ApplicationId: string | undefined;
}
export interface DeleteBaiduChannelResponse {
  BaiduChannelResponse: BaiduChannelResponse | undefined;
}
export interface DeleteCampaignRequest {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
}
export interface DeleteCampaignResponse {
  CampaignResponse: CampaignResponse | undefined;
}
export interface DeleteEmailChannelRequest {
  ApplicationId: string | undefined;
}
export interface EmailChannelResponse {
  ApplicationId?: string;
  ConfigurationSet?: string;
  CreationDate?: string;
  Enabled?: boolean;
  FromAddress?: string;
  HasCredential?: boolean;
  Id?: string;
  Identity?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  MessagesPerSecond?: number;
  Platform: string | undefined;
  RoleArn?: string;
  OrchestrationSendingRoleArn?: string;
  Version?: number;
}
export interface DeleteEmailChannelResponse {
  EmailChannelResponse: EmailChannelResponse | undefined;
}
export interface DeleteEmailTemplateRequest {
  TemplateName: string | undefined;
  Version?: string;
}
export interface MessageBody {
  Message?: string;
  RequestID?: string;
}
export interface DeleteEmailTemplateResponse {
  MessageBody: MessageBody | undefined;
}
export interface DeleteEndpointRequest {
  ApplicationId: string | undefined;
  EndpointId: string | undefined;
}
export interface EndpointDemographic {
  AppVersion?: string;
  Locale?: string;
  Make?: string;
  Model?: string;
  ModelVersion?: string;
  Platform?: string;
  PlatformVersion?: string;
  Timezone?: string;
}
export interface EndpointLocation {
  City?: string;
  Country?: string;
  Latitude?: number;
  Longitude?: number;
  PostalCode?: string;
  Region?: string;
}
export interface EndpointUser {
  UserAttributes?: Record<string, string[]>;
  UserId?: string;
}
export interface EndpointResponse {
  Address?: string;
  ApplicationId?: string;
  Attributes?: Record<string, string[]>;
  ChannelType?: ChannelType;
  CohortId?: string;
  CreationDate?: string;
  Demographic?: EndpointDemographic;
  EffectiveDate?: string;
  EndpointStatus?: string;
  Id?: string;
  Location?: EndpointLocation;
  Metrics?: Record<string, number>;
  OptOut?: string;
  RequestId?: string;
  User?: EndpointUser;
}
export interface DeleteEndpointResponse {
  EndpointResponse: EndpointResponse | undefined;
}
export interface DeleteEventStreamRequest {
  ApplicationId: string | undefined;
}
export interface EventStream {
  ApplicationId: string | undefined;
  DestinationStreamArn: string | undefined;
  ExternalId?: string;
  LastModifiedDate?: string;
  LastUpdatedBy?: string;
  RoleArn: string | undefined;
}
export interface DeleteEventStreamResponse {
  EventStream: EventStream | undefined;
}
export interface DeleteGcmChannelRequest {
  ApplicationId: string | undefined;
}
export interface GCMChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  Credential?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  HasFcmServiceCredentials?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface DeleteGcmChannelResponse {
  GCMChannelResponse: GCMChannelResponse | undefined;
}
export interface DeleteInAppTemplateRequest {
  TemplateName: string | undefined;
  Version?: string;
}
export interface DeleteInAppTemplateResponse {
  MessageBody: MessageBody | undefined;
}
export interface DeleteJourneyRequest {
  ApplicationId: string | undefined;
  JourneyId: string | undefined;
}
export interface DeleteJourneyResponse {
  JourneyResponse: JourneyResponse | undefined;
}
export interface DeletePushTemplateRequest {
  TemplateName: string | undefined;
  Version?: string;
}
export interface DeletePushTemplateResponse {
  MessageBody: MessageBody | undefined;
}
export interface DeleteRecommenderConfigurationRequest {
  RecommenderId: string | undefined;
}
export interface DeleteRecommenderConfigurationResponse {
  RecommenderConfigurationResponse:
    | RecommenderConfigurationResponse
    | undefined;
}
export interface DeleteSegmentRequest {
  ApplicationId: string | undefined;
  SegmentId: string | undefined;
}
export interface DeleteSegmentResponse {
  SegmentResponse: SegmentResponse | undefined;
}
export interface DeleteSmsChannelRequest {
  ApplicationId: string | undefined;
}
export interface SMSChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  PromotionalMessagesPerSecond?: number;
  SenderId?: string;
  ShortCode?: string;
  TransactionalMessagesPerSecond?: number;
  Version?: number;
}
export interface DeleteSmsChannelResponse {
  SMSChannelResponse: SMSChannelResponse | undefined;
}
export interface DeleteSmsTemplateRequest {
  TemplateName: string | undefined;
  Version?: string;
}
export interface DeleteSmsTemplateResponse {
  MessageBody: MessageBody | undefined;
}
export interface DeleteUserEndpointsRequest {
  ApplicationId: string | undefined;
  UserId: string | undefined;
}
export interface EndpointsResponse {
  Item: EndpointResponse[] | undefined;
}
export interface DeleteUserEndpointsResponse {
  EndpointsResponse: EndpointsResponse | undefined;
}
export interface DeleteVoiceChannelRequest {
  ApplicationId: string | undefined;
}
export interface VoiceChannelResponse {
  ApplicationId?: string;
  CreationDate?: string;
  Enabled?: boolean;
  HasCredential?: boolean;
  Id?: string;
  IsArchived?: boolean;
  LastModifiedBy?: string;
  LastModifiedDate?: string;
  Platform: string | undefined;
  Version?: number;
}
export interface DeleteVoiceChannelResponse {
  VoiceChannelResponse: VoiceChannelResponse | undefined;
}
export interface DeleteVoiceTemplateRequest {
  TemplateName: string | undefined;
  Version?: string;
}
export interface DeleteVoiceTemplateResponse {
  MessageBody: MessageBody | undefined;
}
export declare const DeliveryStatus: {
  readonly DUPLICATE: "DUPLICATE";
  readonly OPT_OUT: "OPT_OUT";
  readonly PERMANENT_FAILURE: "PERMANENT_FAILURE";
  readonly SUCCESSFUL: "SUCCESSFUL";
  readonly TEMPORARY_FAILURE: "TEMPORARY_FAILURE";
  readonly THROTTLED: "THROTTLED";
  readonly UNKNOWN_FAILURE: "UNKNOWN_FAILURE";
};
export type DeliveryStatus =
  (typeof DeliveryStatus)[keyof typeof DeliveryStatus];
export interface RawEmail {
  Data?: Uint8Array;
}
export interface SimpleEmailPart {
  Charset?: string;
  Data?: string;
}
export interface SimpleEmail {
  HtmlPart?: SimpleEmailPart;
  Subject?: SimpleEmailPart;
  TextPart?: SimpleEmailPart;
}
export interface EmailMessage {
  Body?: string;
  FeedbackForwardingAddress?: string;
  FromAddress?: string;
  RawEmail?: RawEmail;
  ReplyToAddresses?: string[];
  SimpleEmail?: SimpleEmail;
  Substitutions?: Record<string, string[]>;
}
export interface GCMMessage {
  Action?: Action;
  Body?: string;
  CollapseKey?: string;
  Data?: Record<string, string>;
  IconReference?: string;
  ImageIconUrl?: string;
  ImageUrl?: string;
  PreferredAuthenticationMethod?: string;
  Priority?: string;
  RawContent?: string;
  RestrictedPackageName?: string;
  SilentPush?: boolean;
  SmallImageIconUrl?: string;
  Sound?: string;
  Substitutions?: Record<string, string[]>;
  TimeToLive?: number;
  Title?: string;
  Url?: string;
}
export interface SMSMessage {
  Body?: string;
  Keyword?: string;
  MediaUrl?: string;
  MessageType?: MessageType;
  OriginationNumber?: string;
  SenderId?: string;
  Substitutions?: Record<string, string[]>;
  EntityId?: string;
  TemplateId?: string;
}
export interface VoiceMessage {
  Body?: string;
  LanguageCode?: string;
  OriginationNumber?: string;
  Substitutions?: Record<string, string[]>;
  VoiceId?: string;
}
export interface DirectMessageConfiguration {
  ADMMessage?: ADMMessage;
  APNSMessage?: APNSMessage;
  BaiduMessage?: BaiduMessage;
  DefaultMessage?: DefaultMessage;
  DefaultPushNotificationMessage?: DefaultPushNotificationMessage;
  EmailMessage?: EmailMessage;
  GCMMessage?: GCMMessage;
  SMSMessage?: SMSMessage;
  VoiceMessage?: VoiceMessage;
}
export interface EmailChannelRequest {
  ConfigurationSet?: string;
  Enabled?: boolean;
  FromAddress: string | undefined;
  Identity: string | undefined;
  RoleArn?: string;
  OrchestrationSendingRoleArn?: string;
}
export declare const TemplateType: {
  readonly EMAIL: "EMAIL";
  readonly INAPP: "INAPP";
  readonly PUSH: "PUSH";
  readonly SMS: "SMS";
  readonly VOICE: "VOICE";
};
export type TemplateType = (typeof TemplateType)[keyof typeof TemplateType];
export interface EmailTemplateResponse {
  Arn?: string;
  CreationDate: string | undefined;
  DefaultSubstitutions?: string;
  HtmlPart?: string;
  LastModifiedDate: string | undefined;
  RecommenderId?: string;
  Subject?: string;
  tags?: Record<string, string>;
  TemplateDescription?: string;
  TemplateName: string | undefined;
  TemplateType: TemplateType | undefined;
  TextPart?: string;
  Version?: string;
}
export interface EndpointBatchItem {
  Address?: string;
  Attributes?: Record<string, string[]>;
  ChannelType?: ChannelType;
  Demographic?: EndpointDemographic;
  EffectiveDate?: string;
  EndpointStatus?: string;
  Id?: string;
  Location?: EndpointLocation;
  Metrics?: Record<string, number>;
  OptOut?: string;
  RequestId?: string;
  User?: EndpointUser;
}
export interface EndpointBatchRequest {
  Item: EndpointBatchItem[] | undefined;
}
export interface EndpointItemResponse {
  Message?: string;
  StatusCode?: number;
}
export interface EndpointMessageResult {
  Address?: string;
  DeliveryStatus: DeliveryStatus | undefined;
  MessageId?: string;
  StatusCode: number | undefined;
  StatusMessage?: string;
  UpdatedToken?: string;
}
export interface EndpointRequest {
  Address?: string;
  Attributes?: Record<string, string[]>;
  ChannelType?: ChannelType;
  Demographic?: EndpointDemographic;
  EffectiveDate?: string;
  EndpointStatus?: string;
  Location?: EndpointLocation;
  Metrics?: Record<string, number>;
  OptOut?: string;
  RequestId?: string;
  User?: EndpointUser;
}
export interface EndpointSendConfiguration {
  BodyOverride?: string;
  Context?: Record<string, string>;
  RawContent?: string;
  Substitutions?: Record<string, string[]>;
  TitleOverride?: string;
}
export interface Session {
  Duration?: number;
  Id: string | undefined;
  StartTimestamp: string | undefined;
  StopTimestamp?: string;
}
export interface Event {
  AppPackageName?: string;
  AppTitle?: string;
  AppVersionCode?: string;
  Attributes?: Record<string, string>;
  ClientSdkVersion?: string;
  EventType: string | undefined;
  Metrics?: Record<string, number>;
  SdkName?: string;
  Session?: Session;
  Timestamp: string | undefined;
}
export interface EventItemResponse {
  Message?: string;
  StatusCode?: number;
}
export interface PublicEndpoint {
  Address?: string;
  Attributes?: Record<string, string[]>;
  ChannelType?: ChannelType;
  Demographic?: EndpointDemographic;
  EffectiveDate?: string;
  EndpointStatus?: string;
  Location?: EndpointLocation;
  Metrics?: Record<string, number>;
  OptOut?: string;
  RequestId?: string;
  User?: EndpointUser;
}
export interface EventsBatch {
  Endpoint: PublicEndpoint | undefined;
  Events: Record<string, Event> | undefined;
}
export interface EventsRequest {
  BatchItem: Record<string, EventsBatch> | undefined;
}
export interface ItemResponse {
  EndpointItemResponse?: EndpointItemResponse;
  EventsItemResponse?: Record<string, EventItemResponse>;
}
export interface EventsResponse {
  Results?: Record<string, ItemResponse>;
}
export interface ExportJobsResponse {
  Item: ExportJobResponse[] | undefined;
  NextToken?: string;
}
export interface GCMChannelRequest {
  ApiKey?: string;
  DefaultAuthenticationMethod?: string;
  Enabled?: boolean;
  ServiceJson?: string;
}
export interface GetAdmChannelRequest {
  ApplicationId: string | undefined;
}
export interface GetAdmChannelResponse {
  ADMChannelResponse: ADMChannelResponse | undefined;
}
export interface GetApnsChannelRequest {
  ApplicationId: string | undefined;
}
export interface GetApnsChannelResponse {
  APNSChannelResponse: APNSChannelResponse | undefined;
}
export interface GetApnsSandboxChannelRequest {
  ApplicationId: string | undefined;
}
export interface GetApnsSandboxChannelResponse {
  APNSSandboxChannelResponse: APNSSandboxChannelResponse | undefined;
}
export interface GetApnsVoipChannelRequest {
  ApplicationId: string | undefined;
}
export interface GetApnsVoipChannelResponse {
  APNSVoipChannelResponse: APNSVoipChannelResponse | undefined;
}
export interface GetApnsVoipSandboxChannelRequest {
  ApplicationId: string | undefined;
}
export interface GetApnsVoipSandboxChannelResponse {
  APNSVoipSandboxChannelResponse: APNSVoipSandboxChannelResponse | undefined;
}
export interface GetAppRequest {
  ApplicationId: string | undefined;
}
export interface GetAppResponse {
  ApplicationResponse: ApplicationResponse | undefined;
}
export interface GetApplicationDateRangeKpiRequest {
  ApplicationId: string | undefined;
  EndTime?: Date;
  KpiName: string | undefined;
  NextToken?: string;
  PageSize?: string;
  StartTime?: Date;
}
export interface GetApplicationDateRangeKpiResponse {
  ApplicationDateRangeKpiResponse: ApplicationDateRangeKpiResponse | undefined;
}
export interface GetApplicationSettingsRequest {
  ApplicationId: string | undefined;
}
export interface GetApplicationSettingsResponse {
  ApplicationSettingsResource: ApplicationSettingsResource | undefined;
}
export interface GetAppsRequest {
  PageSize?: string;
  Token?: string;
}
export interface GetAppsResponse {
  ApplicationsResponse: ApplicationsResponse | undefined;
}
export interface GetBaiduChannelRequest {
  ApplicationId: string | undefined;
}
export interface GetBaiduChannelResponse {
  BaiduChannelResponse: BaiduChannelResponse | undefined;
}
export interface GetCampaignRequest {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
}
export interface GetCampaignResponse {
  CampaignResponse: CampaignResponse | undefined;
}
export interface GetCampaignActivitiesRequest {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
  PageSize?: string;
  Token?: string;
}
export interface GetCampaignActivitiesResponse {
  ActivitiesResponse: ActivitiesResponse | undefined;
}
export interface GetCampaignDateRangeKpiRequest {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
  EndTime?: Date;
  KpiName: string | undefined;
  NextToken?: string;
  PageSize?: string;
  StartTime?: Date;
}
export interface GetCampaignDateRangeKpiResponse {
  CampaignDateRangeKpiResponse: CampaignDateRangeKpiResponse | undefined;
}
export interface GetCampaignsRequest {
  ApplicationId: string | undefined;
  PageSize?: string;
  Token?: string;
}
export interface GetCampaignsResponse {
  CampaignsResponse: CampaignsResponse | undefined;
}
export interface GetCampaignVersionRequest {
  ApplicationId: string | undefined;
  CampaignId: string | undefined;
  Version: string | undefined;
}
