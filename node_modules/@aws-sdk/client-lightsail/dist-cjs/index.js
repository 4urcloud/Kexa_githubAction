"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AccessDirection: () => AccessDirection,
  AccessKeyFilterSensitiveLog: () => AccessKeyFilterSensitiveLog,
  AccessType: () => AccessType,
  AccountLevelBpaSyncStatus: () => AccountLevelBpaSyncStatus,
  AccountSetupInProgressException: () => AccountSetupInProgressException,
  AddOnType: () => AddOnType,
  AlarmState: () => AlarmState,
  AllocateStaticIpCommand: () => AllocateStaticIpCommand,
  AppCategory: () => AppCategory,
  AttachCertificateToDistributionCommand: () => AttachCertificateToDistributionCommand,
  AttachDiskCommand: () => AttachDiskCommand,
  AttachInstancesToLoadBalancerCommand: () => AttachInstancesToLoadBalancerCommand,
  AttachLoadBalancerTlsCertificateCommand: () => AttachLoadBalancerTlsCertificateCommand,
  AttachStaticIpCommand: () => AttachStaticIpCommand,
  AutoMountStatus: () => AutoMountStatus,
  AutoSnapshotStatus: () => AutoSnapshotStatus,
  BPAStatusMessage: () => BPAStatusMessage,
  BehaviorEnum: () => BehaviorEnum,
  BlueprintType: () => BlueprintType,
  BucketMetricName: () => BucketMetricName,
  CertificateDomainValidationStatus: () => CertificateDomainValidationStatus,
  CertificateProvider: () => CertificateProvider,
  CertificateStatus: () => CertificateStatus,
  CloseInstancePublicPortsCommand: () => CloseInstancePublicPortsCommand,
  CloudFormationStackRecordSourceType: () => CloudFormationStackRecordSourceType,
  ComparisonOperator: () => ComparisonOperator,
  ContactMethodStatus: () => ContactMethodStatus,
  ContactMethodVerificationProtocol: () => ContactMethodVerificationProtocol,
  ContactProtocol: () => ContactProtocol,
  ContainerServiceDeploymentState: () => ContainerServiceDeploymentState,
  ContainerServiceMetricName: () => ContainerServiceMetricName,
  ContainerServicePowerName: () => ContainerServicePowerName,
  ContainerServiceProtocol: () => ContainerServiceProtocol,
  ContainerServiceState: () => ContainerServiceState,
  ContainerServiceStateDetailCode: () => ContainerServiceStateDetailCode,
  CopySnapshotCommand: () => CopySnapshotCommand,
  CreateBucketAccessKeyCommand: () => CreateBucketAccessKeyCommand,
  CreateBucketAccessKeyResultFilterSensitiveLog: () => CreateBucketAccessKeyResultFilterSensitiveLog,
  CreateBucketCommand: () => CreateBucketCommand,
  CreateCertificateCommand: () => CreateCertificateCommand,
  CreateCloudFormationStackCommand: () => CreateCloudFormationStackCommand,
  CreateContactMethodCommand: () => CreateContactMethodCommand,
  CreateContainerServiceCommand: () => CreateContainerServiceCommand,
  CreateContainerServiceDeploymentCommand: () => CreateContainerServiceDeploymentCommand,
  CreateContainerServiceRegistryLoginCommand: () => CreateContainerServiceRegistryLoginCommand,
  CreateDiskCommand: () => CreateDiskCommand,
  CreateDiskFromSnapshotCommand: () => CreateDiskFromSnapshotCommand,
  CreateDiskSnapshotCommand: () => CreateDiskSnapshotCommand,
  CreateDistributionCommand: () => CreateDistributionCommand,
  CreateDomainCommand: () => CreateDomainCommand,
  CreateDomainEntryCommand: () => CreateDomainEntryCommand,
  CreateGUISessionAccessDetailsCommand: () => CreateGUISessionAccessDetailsCommand,
  CreateGUISessionAccessDetailsResultFilterSensitiveLog: () => CreateGUISessionAccessDetailsResultFilterSensitiveLog,
  CreateInstanceSnapshotCommand: () => CreateInstanceSnapshotCommand,
  CreateInstancesCommand: () => CreateInstancesCommand,
  CreateInstancesFromSnapshotCommand: () => CreateInstancesFromSnapshotCommand,
  CreateKeyPairCommand: () => CreateKeyPairCommand,
  CreateLoadBalancerCommand: () => CreateLoadBalancerCommand,
  CreateLoadBalancerTlsCertificateCommand: () => CreateLoadBalancerTlsCertificateCommand,
  CreateRelationalDatabaseCommand: () => CreateRelationalDatabaseCommand,
  CreateRelationalDatabaseFromSnapshotCommand: () => CreateRelationalDatabaseFromSnapshotCommand,
  CreateRelationalDatabaseRequestFilterSensitiveLog: () => CreateRelationalDatabaseRequestFilterSensitiveLog,
  CreateRelationalDatabaseSnapshotCommand: () => CreateRelationalDatabaseSnapshotCommand,
  Currency: () => Currency,
  DeleteAlarmCommand: () => DeleteAlarmCommand,
  DeleteAutoSnapshotCommand: () => DeleteAutoSnapshotCommand,
  DeleteBucketAccessKeyCommand: () => DeleteBucketAccessKeyCommand,
  DeleteBucketCommand: () => DeleteBucketCommand,
  DeleteCertificateCommand: () => DeleteCertificateCommand,
  DeleteContactMethodCommand: () => DeleteContactMethodCommand,
  DeleteContainerImageCommand: () => DeleteContainerImageCommand,
  DeleteContainerServiceCommand: () => DeleteContainerServiceCommand,
  DeleteDiskCommand: () => DeleteDiskCommand,
  DeleteDiskSnapshotCommand: () => DeleteDiskSnapshotCommand,
  DeleteDistributionCommand: () => DeleteDistributionCommand,
  DeleteDomainCommand: () => DeleteDomainCommand,
  DeleteDomainEntryCommand: () => DeleteDomainEntryCommand,
  DeleteInstanceCommand: () => DeleteInstanceCommand,
  DeleteInstanceSnapshotCommand: () => DeleteInstanceSnapshotCommand,
  DeleteKeyPairCommand: () => DeleteKeyPairCommand,
  DeleteKnownHostKeysCommand: () => DeleteKnownHostKeysCommand,
  DeleteLoadBalancerCommand: () => DeleteLoadBalancerCommand,
  DeleteLoadBalancerTlsCertificateCommand: () => DeleteLoadBalancerTlsCertificateCommand,
  DeleteRelationalDatabaseCommand: () => DeleteRelationalDatabaseCommand,
  DeleteRelationalDatabaseSnapshotCommand: () => DeleteRelationalDatabaseSnapshotCommand,
  DetachCertificateFromDistributionCommand: () => DetachCertificateFromDistributionCommand,
  DetachDiskCommand: () => DetachDiskCommand,
  DetachInstancesFromLoadBalancerCommand: () => DetachInstancesFromLoadBalancerCommand,
  DetachStaticIpCommand: () => DetachStaticIpCommand,
  DisableAddOnCommand: () => DisableAddOnCommand,
  DiskSnapshotState: () => DiskSnapshotState,
  DiskState: () => DiskState,
  DistributionMetricName: () => DistributionMetricName,
  DnsRecordCreationStateCode: () => DnsRecordCreationStateCode,
  DownloadDefaultKeyPairCommand: () => DownloadDefaultKeyPairCommand,
  EnableAddOnCommand: () => EnableAddOnCommand,
  ExportSnapshotCommand: () => ExportSnapshotCommand,
  ExportSnapshotRecordSourceType: () => ExportSnapshotRecordSourceType,
  ForwardValues: () => ForwardValues,
  GetActiveNamesCommand: () => GetActiveNamesCommand,
  GetAlarmsCommand: () => GetAlarmsCommand,
  GetAutoSnapshotsCommand: () => GetAutoSnapshotsCommand,
  GetBlueprintsCommand: () => GetBlueprintsCommand,
  GetBucketAccessKeysCommand: () => GetBucketAccessKeysCommand,
  GetBucketAccessKeysResultFilterSensitiveLog: () => GetBucketAccessKeysResultFilterSensitiveLog,
  GetBucketBundlesCommand: () => GetBucketBundlesCommand,
  GetBucketMetricDataCommand: () => GetBucketMetricDataCommand,
  GetBucketsCommand: () => GetBucketsCommand,
  GetBundlesCommand: () => GetBundlesCommand,
  GetCertificatesCommand: () => GetCertificatesCommand,
  GetCloudFormationStackRecordsCommand: () => GetCloudFormationStackRecordsCommand,
  GetContactMethodsCommand: () => GetContactMethodsCommand,
  GetContainerAPIMetadataCommand: () => GetContainerAPIMetadataCommand,
  GetContainerImagesCommand: () => GetContainerImagesCommand,
  GetContainerLogCommand: () => GetContainerLogCommand,
  GetContainerServiceDeploymentsCommand: () => GetContainerServiceDeploymentsCommand,
  GetContainerServiceMetricDataCommand: () => GetContainerServiceMetricDataCommand,
  GetContainerServicePowersCommand: () => GetContainerServicePowersCommand,
  GetContainerServicesCommand: () => GetContainerServicesCommand,
  GetCostEstimateCommand: () => GetCostEstimateCommand,
  GetDiskCommand: () => GetDiskCommand,
  GetDiskSnapshotCommand: () => GetDiskSnapshotCommand,
  GetDiskSnapshotsCommand: () => GetDiskSnapshotsCommand,
  GetDisksCommand: () => GetDisksCommand,
  GetDistributionBundlesCommand: () => GetDistributionBundlesCommand,
  GetDistributionLatestCacheResetCommand: () => GetDistributionLatestCacheResetCommand,
  GetDistributionMetricDataCommand: () => GetDistributionMetricDataCommand,
  GetDistributionsCommand: () => GetDistributionsCommand,
  GetDomainCommand: () => GetDomainCommand,
  GetDomainsCommand: () => GetDomainsCommand,
  GetExportSnapshotRecordsCommand: () => GetExportSnapshotRecordsCommand,
  GetInstanceAccessDetailsCommand: () => GetInstanceAccessDetailsCommand,
  GetInstanceCommand: () => GetInstanceCommand,
  GetInstanceMetricDataCommand: () => GetInstanceMetricDataCommand,
  GetInstancePortStatesCommand: () => GetInstancePortStatesCommand,
  GetInstanceSnapshotCommand: () => GetInstanceSnapshotCommand,
  GetInstanceSnapshotsCommand: () => GetInstanceSnapshotsCommand,
  GetInstanceStateCommand: () => GetInstanceStateCommand,
  GetInstancesCommand: () => GetInstancesCommand,
  GetKeyPairCommand: () => GetKeyPairCommand,
  GetKeyPairsCommand: () => GetKeyPairsCommand,
  GetLoadBalancerCommand: () => GetLoadBalancerCommand,
  GetLoadBalancerMetricDataCommand: () => GetLoadBalancerMetricDataCommand,
  GetLoadBalancerTlsCertificatesCommand: () => GetLoadBalancerTlsCertificatesCommand,
  GetLoadBalancerTlsPoliciesCommand: () => GetLoadBalancerTlsPoliciesCommand,
  GetLoadBalancersCommand: () => GetLoadBalancersCommand,
  GetOperationCommand: () => GetOperationCommand,
  GetOperationsCommand: () => GetOperationsCommand,
  GetOperationsForResourceCommand: () => GetOperationsForResourceCommand,
  GetRegionsCommand: () => GetRegionsCommand,
  GetRelationalDatabaseBlueprintsCommand: () => GetRelationalDatabaseBlueprintsCommand,
  GetRelationalDatabaseBundlesCommand: () => GetRelationalDatabaseBundlesCommand,
  GetRelationalDatabaseCommand: () => GetRelationalDatabaseCommand,
  GetRelationalDatabaseEventsCommand: () => GetRelationalDatabaseEventsCommand,
  GetRelationalDatabaseLogEventsCommand: () => GetRelationalDatabaseLogEventsCommand,
  GetRelationalDatabaseLogStreamsCommand: () => GetRelationalDatabaseLogStreamsCommand,
  GetRelationalDatabaseMasterUserPasswordCommand: () => GetRelationalDatabaseMasterUserPasswordCommand,
  GetRelationalDatabaseMasterUserPasswordResultFilterSensitiveLog: () => GetRelationalDatabaseMasterUserPasswordResultFilterSensitiveLog,
  GetRelationalDatabaseMetricDataCommand: () => GetRelationalDatabaseMetricDataCommand,
  GetRelationalDatabaseParametersCommand: () => GetRelationalDatabaseParametersCommand,
  GetRelationalDatabaseSnapshotCommand: () => GetRelationalDatabaseSnapshotCommand,
  GetRelationalDatabaseSnapshotsCommand: () => GetRelationalDatabaseSnapshotsCommand,
  GetRelationalDatabasesCommand: () => GetRelationalDatabasesCommand,
  GetSetupHistoryCommand: () => GetSetupHistoryCommand,
  GetStaticIpCommand: () => GetStaticIpCommand,
  GetStaticIpsCommand: () => GetStaticIpsCommand,
  HeaderEnum: () => HeaderEnum,
  HttpEndpoint: () => HttpEndpoint,
  HttpProtocolIpv6: () => HttpProtocolIpv6,
  HttpTokens: () => HttpTokens,
  ImportKeyPairCommand: () => ImportKeyPairCommand,
  InstanceAccessProtocol: () => InstanceAccessProtocol,
  InstanceHealthReason: () => InstanceHealthReason,
  InstanceHealthState: () => InstanceHealthState,
  InstanceMetadataState: () => InstanceMetadataState,
  InstanceMetricName: () => InstanceMetricName,
  InstancePlatform: () => InstancePlatform,
  InstanceSnapshotState: () => InstanceSnapshotState,
  InvalidInputException: () => InvalidInputException,
  IpAddressType: () => IpAddressType,
  IsVpcPeeredCommand: () => IsVpcPeeredCommand,
  Lightsail: () => Lightsail,
  LightsailClient: () => LightsailClient,
  LightsailServiceException: () => LightsailServiceException,
  LoadBalancerAttributeName: () => LoadBalancerAttributeName,
  LoadBalancerMetricName: () => LoadBalancerMetricName,
  LoadBalancerProtocol: () => LoadBalancerProtocol,
  LoadBalancerState: () => LoadBalancerState,
  LoadBalancerTlsCertificateDnsRecordCreationStateCode: () => LoadBalancerTlsCertificateDnsRecordCreationStateCode,
  LoadBalancerTlsCertificateDomainStatus: () => LoadBalancerTlsCertificateDomainStatus,
  LoadBalancerTlsCertificateFailureReason: () => LoadBalancerTlsCertificateFailureReason,
  LoadBalancerTlsCertificateRenewalStatus: () => LoadBalancerTlsCertificateRenewalStatus,
  LoadBalancerTlsCertificateRevocationReason: () => LoadBalancerTlsCertificateRevocationReason,
  LoadBalancerTlsCertificateStatus: () => LoadBalancerTlsCertificateStatus,
  MetricName: () => MetricName,
  MetricStatistic: () => MetricStatistic,
  MetricUnit: () => MetricUnit,
  NameServersUpdateStateCode: () => NameServersUpdateStateCode,
  NetworkProtocol: () => NetworkProtocol,
  NotFoundException: () => NotFoundException,
  OpenInstancePublicPortsCommand: () => OpenInstancePublicPortsCommand,
  OperationFailureException: () => OperationFailureException,
  OperationStatus: () => OperationStatus,
  OperationType: () => OperationType,
  OriginProtocolPolicyEnum: () => OriginProtocolPolicyEnum,
  PeerVpcCommand: () => PeerVpcCommand,
  PortAccessType: () => PortAccessType,
  PortInfoSourceType: () => PortInfoSourceType,
  PortState: () => PortState,
  PricingUnit: () => PricingUnit,
  PutAlarmCommand: () => PutAlarmCommand,
  PutInstancePublicPortsCommand: () => PutInstancePublicPortsCommand,
  R53HostedZoneDeletionStateCode: () => R53HostedZoneDeletionStateCode,
  RebootInstanceCommand: () => RebootInstanceCommand,
  RebootRelationalDatabaseCommand: () => RebootRelationalDatabaseCommand,
  RecordState: () => RecordState,
  RegionName: () => RegionName,
  RegisterContainerImageCommand: () => RegisterContainerImageCommand,
  RelationalDatabaseEngine: () => RelationalDatabaseEngine,
  RelationalDatabaseMetricName: () => RelationalDatabaseMetricName,
  RelationalDatabasePasswordVersion: () => RelationalDatabasePasswordVersion,
  ReleaseStaticIpCommand: () => ReleaseStaticIpCommand,
  RenewalStatus: () => RenewalStatus,
  ResetDistributionCacheCommand: () => ResetDistributionCacheCommand,
  ResourceBucketAccess: () => ResourceBucketAccess,
  ResourceType: () => ResourceType,
  SendContactMethodVerificationCommand: () => SendContactMethodVerificationCommand,
  ServiceException: () => ServiceException,
  SessionFilterSensitiveLog: () => SessionFilterSensitiveLog,
  SetIpAddressTypeCommand: () => SetIpAddressTypeCommand,
  SetResourceAccessForBucketCommand: () => SetResourceAccessForBucketCommand,
  SetupInstanceHttpsCommand: () => SetupInstanceHttpsCommand,
  SetupInstanceHttpsRequestFilterSensitiveLog: () => SetupInstanceHttpsRequestFilterSensitiveLog,
  SetupStatus: () => SetupStatus,
  StartGUISessionCommand: () => StartGUISessionCommand,
  StartInstanceCommand: () => StartInstanceCommand,
  StartRelationalDatabaseCommand: () => StartRelationalDatabaseCommand,
  Status: () => Status,
  StatusType: () => StatusType,
  StopGUISessionCommand: () => StopGUISessionCommand,
  StopInstanceCommand: () => StopInstanceCommand,
  StopRelationalDatabaseCommand: () => StopRelationalDatabaseCommand,
  TagResourceCommand: () => TagResourceCommand,
  TestAlarmCommand: () => TestAlarmCommand,
  TreatMissingData: () => TreatMissingData,
  UnauthenticatedException: () => UnauthenticatedException,
  UnpeerVpcCommand: () => UnpeerVpcCommand,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateBucketBundleCommand: () => UpdateBucketBundleCommand,
  UpdateBucketCommand: () => UpdateBucketCommand,
  UpdateContainerServiceCommand: () => UpdateContainerServiceCommand,
  UpdateDistributionBundleCommand: () => UpdateDistributionBundleCommand,
  UpdateDistributionCommand: () => UpdateDistributionCommand,
  UpdateDomainEntryCommand: () => UpdateDomainEntryCommand,
  UpdateInstanceMetadataOptionsCommand: () => UpdateInstanceMetadataOptionsCommand,
  UpdateLoadBalancerAttributeCommand: () => UpdateLoadBalancerAttributeCommand,
  UpdateRelationalDatabaseCommand: () => UpdateRelationalDatabaseCommand,
  UpdateRelationalDatabaseParametersCommand: () => UpdateRelationalDatabaseParametersCommand,
  UpdateRelationalDatabaseRequestFilterSensitiveLog: () => UpdateRelationalDatabaseRequestFilterSensitiveLog,
  __Client: () => import_smithy_client.Client
});
module.exports = __toCommonJS(src_exports);

// src/LightsailClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "lightsail"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/LightsailClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/LightsailClient.ts
var _LightsailClient = class _LightsailClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultLightsailHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_LightsailClient, "LightsailClient");
var LightsailClient = _LightsailClient;

// src/Lightsail.ts


// src/commands/AllocateStaticIpCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts



// src/models/LightsailServiceException.ts

var _LightsailServiceException = class _LightsailServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _LightsailServiceException.prototype);
  }
};
__name(_LightsailServiceException, "LightsailServiceException");
var LightsailServiceException = _LightsailServiceException;

// src/models/models_0.ts

var _AccessDeniedException = class _AccessDeniedException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AccessDirection = {
  inbound: "inbound",
  outbound: "outbound"
};
var StatusType = {
  Active: "Active",
  Inactive: "Inactive"
};
var AccessType = {
  Private: "private",
  Public: "public"
};
var BPAStatusMessage = {
  DEFAULTED_FOR_SLR_MISSING: "DEFAULTED_FOR_SLR_MISSING",
  DEFAULTED_FOR_SLR_MISSING_ON_HOLD: "DEFAULTED_FOR_SLR_MISSING_ON_HOLD",
  SYNC_ON_HOLD: "SYNC_ON_HOLD",
  Unknown: "Unknown"
};
var AccountLevelBpaSyncStatus = {
  Defaulted: "Defaulted",
  Failed: "Failed",
  InSync: "InSync",
  NeverSynced: "NeverSynced"
};
var _AccountSetupInProgressException = class _AccountSetupInProgressException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccountSetupInProgressException",
      $fault: "client",
      ...opts
    });
    this.name = "AccountSetupInProgressException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccountSetupInProgressException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_AccountSetupInProgressException, "AccountSetupInProgressException");
var AccountSetupInProgressException = _AccountSetupInProgressException;
var AddOnType = {
  AutoSnapshot: "AutoSnapshot",
  StopInstanceOnIdle: "StopInstanceOnIdle"
};
var ComparisonOperator = {
  GreaterThanOrEqualToThreshold: "GreaterThanOrEqualToThreshold",
  GreaterThanThreshold: "GreaterThanThreshold",
  LessThanOrEqualToThreshold: "LessThanOrEqualToThreshold",
  LessThanThreshold: "LessThanThreshold"
};
var ContactProtocol = {
  Email: "Email",
  SMS: "SMS"
};
var RegionName = {
  AP_NORTHEAST_1: "ap-northeast-1",
  AP_NORTHEAST_2: "ap-northeast-2",
  AP_SOUTHEAST_1: "ap-southeast-1",
  AP_SOUTHEAST_2: "ap-southeast-2",
  AP_SOUTH_1: "ap-south-1",
  CA_CENTRAL_1: "ca-central-1",
  EU_CENTRAL_1: "eu-central-1",
  EU_NORTH_1: "eu-north-1",
  EU_WEST_1: "eu-west-1",
  EU_WEST_2: "eu-west-2",
  EU_WEST_3: "eu-west-3",
  US_EAST_1: "us-east-1",
  US_EAST_2: "us-east-2",
  US_WEST_1: "us-west-1",
  US_WEST_2: "us-west-2"
};
var MetricName = {
  BurstCapacityPercentage: "BurstCapacityPercentage",
  BurstCapacityTime: "BurstCapacityTime",
  CPUUtilization: "CPUUtilization",
  ClientTLSNegotiationErrorCount: "ClientTLSNegotiationErrorCount",
  DatabaseConnections: "DatabaseConnections",
  DiskQueueDepth: "DiskQueueDepth",
  FreeStorageSpace: "FreeStorageSpace",
  HTTPCode_Instance_2XX_Count: "HTTPCode_Instance_2XX_Count",
  HTTPCode_Instance_3XX_Count: "HTTPCode_Instance_3XX_Count",
  HTTPCode_Instance_4XX_Count: "HTTPCode_Instance_4XX_Count",
  HTTPCode_Instance_5XX_Count: "HTTPCode_Instance_5XX_Count",
  HTTPCode_LB_4XX_Count: "HTTPCode_LB_4XX_Count",
  HTTPCode_LB_5XX_Count: "HTTPCode_LB_5XX_Count",
  HealthyHostCount: "HealthyHostCount",
  InstanceResponseTime: "InstanceResponseTime",
  NetworkIn: "NetworkIn",
  NetworkOut: "NetworkOut",
  NetworkReceiveThroughput: "NetworkReceiveThroughput",
  NetworkTransmitThroughput: "NetworkTransmitThroughput",
  RejectedConnectionCount: "RejectedConnectionCount",
  RequestCount: "RequestCount",
  StatusCheckFailed: "StatusCheckFailed",
  StatusCheckFailed_Instance: "StatusCheckFailed_Instance",
  StatusCheckFailed_System: "StatusCheckFailed_System",
  UnhealthyHostCount: "UnhealthyHostCount"
};
var ResourceType = {
  Alarm: "Alarm",
  Bucket: "Bucket",
  Certificate: "Certificate",
  CloudFormationStackRecord: "CloudFormationStackRecord",
  ContactMethod: "ContactMethod",
  ContainerService: "ContainerService",
  Disk: "Disk",
  DiskSnapshot: "DiskSnapshot",
  Distribution: "Distribution",
  Domain: "Domain",
  ExportSnapshotRecord: "ExportSnapshotRecord",
  Instance: "Instance",
  InstanceSnapshot: "InstanceSnapshot",
  KeyPair: "KeyPair",
  LoadBalancer: "LoadBalancer",
  LoadBalancerTlsCertificate: "LoadBalancerTlsCertificate",
  PeeredVpc: "PeeredVpc",
  RelationalDatabase: "RelationalDatabase",
  RelationalDatabaseSnapshot: "RelationalDatabaseSnapshot",
  StaticIp: "StaticIp"
};
var AlarmState = {
  ALARM: "ALARM",
  INSUFFICIENT_DATA: "INSUFFICIENT_DATA",
  OK: "OK"
};
var MetricStatistic = {
  Average: "Average",
  Maximum: "Maximum",
  Minimum: "Minimum",
  SampleCount: "SampleCount",
  Sum: "Sum"
};
var TreatMissingData = {
  Breaching: "breaching",
  Ignore: "ignore",
  Missing: "missing",
  NotBreaching: "notBreaching"
};
var MetricUnit = {
  Bits: "Bits",
  BitsSecond: "Bits/Second",
  Bytes: "Bytes",
  BytesSecond: "Bytes/Second",
  Count: "Count",
  CountSecond: "Count/Second",
  Gigabits: "Gigabits",
  GigabitsSecond: "Gigabits/Second",
  Gigabytes: "Gigabytes",
  GigabytesSecond: "Gigabytes/Second",
  Kilobits: "Kilobits",
  KilobitsSecond: "Kilobits/Second",
  Kilobytes: "Kilobytes",
  KilobytesSecond: "Kilobytes/Second",
  Megabits: "Megabits",
  MegabitsSecond: "Megabits/Second",
  Megabytes: "Megabytes",
  MegabytesSecond: "Megabytes/Second",
  Microseconds: "Microseconds",
  Milliseconds: "Milliseconds",
  None: "None",
  Percent: "Percent",
  Seconds: "Seconds",
  Terabits: "Terabits",
  TerabitsSecond: "Terabits/Second",
  Terabytes: "Terabytes",
  TerabytesSecond: "Terabytes/Second"
};
var OperationType = {
  AllocateStaticIp: "AllocateStaticIp",
  AttachCertificateToDistribution: "AttachCertificateToDistribution",
  AttachDisk: "AttachDisk",
  AttachInstancesToLoadBalancer: "AttachInstancesToLoadBalancer",
  AttachLoadBalancerTlsCertificate: "AttachLoadBalancerTlsCertificate",
  AttachStaticIp: "AttachStaticIp",
  CloseInstancePublicPorts: "CloseInstancePublicPorts",
  CreateBucket: "CreateBucket",
  CreateBucketAccessKey: "CreateBucketAccessKey",
  CreateCertificate: "CreateCertificate",
  CreateContactMethod: "CreateContactMethod",
  CreateContainerService: "CreateContainerService",
  CreateContainerServiceDeployment: "CreateContainerServiceDeployment",
  CreateContainerServiceRegistryLogin: "CreateContainerServiceRegistryLogin",
  CreateDisk: "CreateDisk",
  CreateDiskFromSnapshot: "CreateDiskFromSnapshot",
  CreateDiskSnapshot: "CreateDiskSnapshot",
  CreateDistribution: "CreateDistribution",
  CreateDomain: "CreateDomain",
  CreateInstance: "CreateInstance",
  CreateInstanceSnapshot: "CreateInstanceSnapshot",
  CreateInstancesFromSnapshot: "CreateInstancesFromSnapshot",
  CreateLoadBalancer: "CreateLoadBalancer",
  CreateLoadBalancerTlsCertificate: "CreateLoadBalancerTlsCertificate",
  CreateRelationalDatabase: "CreateRelationalDatabase",
  CreateRelationalDatabaseFromSnapshot: "CreateRelationalDatabaseFromSnapshot",
  CreateRelationalDatabaseSnapshot: "CreateRelationalDatabaseSnapshot",
  DeleteAlarm: "DeleteAlarm",
  DeleteBucket: "DeleteBucket",
  DeleteBucketAccessKey: "DeleteBucketAccessKey",
  DeleteCertificate: "DeleteCertificate",
  DeleteContactMethod: "DeleteContactMethod",
  DeleteContainerImage: "DeleteContainerImage",
  DeleteContainerService: "DeleteContainerService",
  DeleteDisk: "DeleteDisk",
  DeleteDiskSnapshot: "DeleteDiskSnapshot",
  DeleteDistribution: "DeleteDistribution",
  DeleteDomain: "DeleteDomain",
  DeleteDomainEntry: "DeleteDomainEntry",
  DeleteInstance: "DeleteInstance",
  DeleteInstanceSnapshot: "DeleteInstanceSnapshot",
  DeleteKnownHostKeys: "DeleteKnownHostKeys",
  DeleteLoadBalancer: "DeleteLoadBalancer",
  DeleteLoadBalancerTlsCertificate: "DeleteLoadBalancerTlsCertificate",
  DeleteRelationalDatabase: "DeleteRelationalDatabase",
  DeleteRelationalDatabaseSnapshot: "DeleteRelationalDatabaseSnapshot",
  DetachCertificateFromDistribution: "DetachCertificateFromDistribution",
  DetachDisk: "DetachDisk",
  DetachInstancesFromLoadBalancer: "DetachInstancesFromLoadBalancer",
  DetachStaticIp: "DetachStaticIp",
  DisableAddOn: "DisableAddOn",
  EnableAddOn: "EnableAddOn",
  GetAlarms: "GetAlarms",
  GetContactMethods: "GetContactMethods",
  OpenInstancePublicPorts: "OpenInstancePublicPorts",
  PutAlarm: "PutAlarm",
  PutInstancePublicPorts: "PutInstancePublicPorts",
  RebootInstance: "RebootInstance",
  RebootRelationalDatabase: "RebootRelationalDatabase",
  RegisterContainerImage: "RegisterContainerImage",
  ReleaseStaticIp: "ReleaseStaticIp",
  ResetDistributionCache: "ResetDistributionCache",
  SendContactMethodVerification: "SendContactMethodVerification",
  SetIpAddressType: "SetIpAddressType",
  SetResourceAccessForBucket: "SetResourceAccessForBucket",
  SetupInstanceHttps: "SetupInstanceHttps",
  StartGUISession: "StartGUISession",
  StartInstance: "StartInstance",
  StartRelationalDatabase: "StartRelationalDatabase",
  StopGUISession: "StopGUISession",
  StopInstance: "StopInstance",
  StopRelationalDatabase: "StopRelationalDatabase",
  TestAlarm: "TestAlarm",
  UpdateBucket: "UpdateBucket",
  UpdateBucketBundle: "UpdateBucketBundle",
  UpdateContainerService: "UpdateContainerService",
  UpdateDistribution: "UpdateDistribution",
  UpdateDistributionBundle: "UpdateDistributionBundle",
  UpdateDomainEntry: "UpdateDomainEntry",
  UpdateInstanceMetadataOptions: "UpdateInstanceMetadataOptions",
  UpdateLoadBalancerAttribute: "UpdateLoadBalancerAttribute",
  UpdateRelationalDatabase: "UpdateRelationalDatabase",
  UpdateRelationalDatabaseParameters: "UpdateRelationalDatabaseParameters"
};
var OperationStatus = {
  Completed: "Completed",
  Failed: "Failed",
  NotStarted: "NotStarted",
  Started: "Started",
  Succeeded: "Succeeded"
};
var _InvalidInputException = class _InvalidInputException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidInputException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidInputException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidInputException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_InvalidInputException, "InvalidInputException");
var InvalidInputException = _InvalidInputException;
var _NotFoundException = class _NotFoundException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var _OperationFailureException = class _OperationFailureException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "OperationFailureException",
      $fault: "client",
      ...opts
    });
    this.name = "OperationFailureException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _OperationFailureException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_OperationFailureException, "OperationFailureException");
var OperationFailureException = _OperationFailureException;
var _ServiceException = class _ServiceException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_ServiceException, "ServiceException");
var ServiceException = _ServiceException;
var _UnauthenticatedException = class _UnauthenticatedException extends LightsailServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthenticatedException",
      $fault: "client",
      ...opts
    });
    this.name = "UnauthenticatedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnauthenticatedException.prototype);
    this.code = opts.code;
    this.docs = opts.docs;
    this.tip = opts.tip;
  }
};
__name(_UnauthenticatedException, "UnauthenticatedException");
var UnauthenticatedException = _UnauthenticatedException;
var AppCategory = {
  LfR: "LfR"
};
var AutoMountStatus = {
  Failed: "Failed",
  Mounted: "Mounted",
  NotMounted: "NotMounted",
  Pending: "Pending"
};
var AutoSnapshotStatus = {
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  NOT_FOUND: "NotFound",
  SUCCESS: "Success"
};
var BehaviorEnum = {
  CacheSetting: "cache",
  DontCacheSetting: "dont-cache"
};
var InstancePlatform = {
  LinuxUnix: "LINUX_UNIX",
  Windows: "WINDOWS"
};
var BlueprintType = {
  app: "app",
  os: "os"
};
var BucketMetricName = {
  BucketSizeBytes: "BucketSizeBytes",
  NumberOfObjects: "NumberOfObjects"
};
var ForwardValues = {
  all: "all",
  allowList: "allow-list",
  none: "none"
};
var HeaderEnum = {
  accept: "Accept",
  acceptCharset: "Accept-Charset",
  acceptDatetime: "Accept-Datetime",
  acceptEncoding: "Accept-Encoding",
  acceptLanguage: "Accept-Language",
  authorization: "Authorization",
  cloudFrontForwardedProto: "CloudFront-Forwarded-Proto",
  cloudFrontIsDesktopViewer: "CloudFront-Is-Desktop-Viewer",
  cloudFrontIsMobileViewer: "CloudFront-Is-Mobile-Viewer",
  cloudFrontIsSmartTVViewer: "CloudFront-Is-SmartTV-Viewer",
  cloudFrontIsTabletViewer: "CloudFront-Is-Tablet-Viewer",
  cloudFrontViewerCountry: "CloudFront-Viewer-Country",
  host: "Host",
  origin: "Origin",
  referer: "Referer"
};
var DnsRecordCreationStateCode = {
  Failed: "FAILED",
  Started: "STARTED",
  Succeeded: "SUCCEEDED"
};
var CertificateDomainValidationStatus = {
  Failed: "FAILED",
  PendingValidation: "PENDING_VALIDATION",
  Success: "SUCCESS"
};
var RenewalStatus = {
  Failed: "Failed",
  PendingAutoRenewal: "PendingAutoRenewal",
  PendingValidation: "PendingValidation",
  Success: "Success"
};
var CertificateStatus = {
  Expired: "EXPIRED",
  Failed: "FAILED",
  Inactive: "INACTIVE",
  Issued: "ISSUED",
  PendingValidation: "PENDING_VALIDATION",
  Revoked: "REVOKED",
  ValidationTimedOut: "VALIDATION_TIMED_OUT"
};
var CertificateProvider = {
  LetsEncrypt: "LetsEncrypt"
};
var NetworkProtocol = {
  ALL: "all",
  ICMP: "icmp",
  TCP: "tcp",
  UDP: "udp"
};
var CloudFormationStackRecordSourceType = {
  ExportSnapshotRecord: "ExportSnapshotRecord"
};
var RecordState = {
  Failed: "Failed",
  Started: "Started",
  Succeeded: "Succeeded"
};
var ContactMethodStatus = {
  Invalid: "Invalid",
  PendingVerification: "PendingVerification",
  Valid: "Valid"
};
var ContactMethodVerificationProtocol = {
  Email: "Email"
};
var ContainerServiceProtocol = {
  HTTP: "HTTP",
  HTTPS: "HTTPS",
  TCP: "TCP",
  UDP: "UDP"
};
var ContainerServiceDeploymentState = {
  ACTIVATING: "ACTIVATING",
  ACTIVE: "ACTIVE",
  FAILED: "FAILED",
  INACTIVE: "INACTIVE"
};
var ContainerServicePowerName = {
  large: "large",
  medium: "medium",
  micro: "micro",
  nano: "nano",
  small: "small",
  xlarge: "xlarge"
};
var ContainerServiceState = {
  DELETING: "DELETING",
  DEPLOYING: "DEPLOYING",
  DISABLED: "DISABLED",
  PENDING: "PENDING",
  READY: "READY",
  RUNNING: "RUNNING",
  UPDATING: "UPDATING"
};
var ContainerServiceStateDetailCode = {
  ACTIVATING_DEPLOYMENT: "ACTIVATING_DEPLOYMENT",
  CERTIFICATE_LIMIT_EXCEEDED: "CERTIFICATE_LIMIT_EXCEEDED",
  CREATING_DEPLOYMENT: "CREATING_DEPLOYMENT",
  CREATING_NETWORK_INFRASTRUCTURE: "CREATING_NETWORK_INFRASTRUCTURE",
  CREATING_SYSTEM_RESOURCES: "CREATING_SYSTEM_RESOURCES",
  EVALUATING_HEALTH_CHECK: "EVALUATING_HEALTH_CHECK",
  PROVISIONING_CERTIFICATE: "PROVISIONING_CERTIFICATE",
  PROVISIONING_SERVICE: "PROVISIONING_SERVICE",
  UNKNOWN_ERROR: "UNKNOWN_ERROR"
};
var ContainerServiceMetricName = {
  CPUUtilization: "CPUUtilization",
  MemoryUtilization: "MemoryUtilization"
};
var Currency = {
  USD: "USD"
};
var PricingUnit = {
  Bundles: "Bundles",
  GB: "GB",
  GBMo: "GB-Mo",
  Hrs: "Hrs",
  Queries: "Queries"
};
var PortInfoSourceType = {
  Closed: "CLOSED",
  Default: "DEFAULT",
  Instance: "INSTANCE",
  None: "NONE"
};
var IpAddressType = {
  DUALSTACK: "dualstack",
  IPV4: "ipv4"
};
var OriginProtocolPolicyEnum = {
  HTTPOnly: "http-only",
  HTTPSOnly: "https-only"
};
var Status = {
  FailedInstanceCreation: "failedInstanceCreation",
  FailedStartingGUISession: "failedStartingGUISession",
  FailedStoppingGUISession: "failedStoppingGUISession",
  NotStarted: "notStarted",
  SettingUpInstance: "settingUpInstance",
  StartExpired: "startExpired",
  Started: "started",
  Starting: "starting",
  Stopped: "stopped",
  Stopping: "stopping"
};
var DiskState = {
  Available: "available",
  Error: "error",
  InUse: "in-use",
  Pending: "pending",
  Unknown: "unknown"
};
var DiskSnapshotState = {
  Completed: "completed",
  Error: "error",
  Pending: "pending",
  Unknown: "unknown"
};
var DistributionMetricName = {
  BytesDownloaded: "BytesDownloaded",
  BytesUploaded: "BytesUploaded",
  Http4xxErrorRate: "Http4xxErrorRate",
  Http5xxErrorRate: "Http5xxErrorRate",
  Requests: "Requests",
  TotalErrorRate: "TotalErrorRate"
};
var NameServersUpdateStateCode = {
  Failed: "FAILED",
  Pending: "PENDING",
  Started: "STARTED",
  Succeeded: "SUCCEEDED"
};
var R53HostedZoneDeletionStateCode = {
  Failed: "FAILED",
  Pending: "PENDING",
  Started: "STARTED",
  Succeeded: "SUCCEEDED"
};
var ExportSnapshotRecordSourceType = {
  DiskSnapshot: "DiskSnapshot",
  InstanceSnapshot: "InstanceSnapshot"
};
var AccessKeyFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessKeyId && { accessKeyId: import_smithy_client.SENSITIVE_STRING }
}), "AccessKeyFilterSensitiveLog");
var CreateBucketAccessKeyResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessKey && { accessKey: AccessKeyFilterSensitiveLog(obj.accessKey) }
}), "CreateBucketAccessKeyResultFilterSensitiveLog");
var SessionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.url && { url: import_smithy_client.SENSITIVE_STRING }
}), "SessionFilterSensitiveLog");
var CreateGUISessionAccessDetailsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.sessions && { sessions: obj.sessions.map((item) => SessionFilterSensitiveLog(item)) }
}), "CreateGUISessionAccessDetailsResultFilterSensitiveLog");
var CreateRelationalDatabaseRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.masterUserPassword && { masterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "CreateRelationalDatabaseRequestFilterSensitiveLog");
var GetBucketAccessKeysResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessKeys && { accessKeys: obj.accessKeys.map((item) => AccessKeyFilterSensitiveLog(item)) }
}), "GetBucketAccessKeysResultFilterSensitiveLog");

// src/protocols/Aws_json1_1.ts
var se_AllocateStaticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AllocateStaticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AllocateStaticIpCommand");
var se_AttachCertificateToDistributionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AttachCertificateToDistribution");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachCertificateToDistributionCommand");
var se_AttachDiskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AttachDisk");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachDiskCommand");
var se_AttachInstancesToLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AttachInstancesToLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachInstancesToLoadBalancerCommand");
var se_AttachLoadBalancerTlsCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AttachLoadBalancerTlsCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachLoadBalancerTlsCertificateCommand");
var se_AttachStaticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AttachStaticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachStaticIpCommand");
var se_CloseInstancePublicPortsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CloseInstancePublicPorts");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CloseInstancePublicPortsCommand");
var se_CopySnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CopySnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CopySnapshotCommand");
var se_CreateBucketCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateBucket");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateBucketCommand");
var se_CreateBucketAccessKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateBucketAccessKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateBucketAccessKeyCommand");
var se_CreateCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateCertificateCommand");
var se_CreateCloudFormationStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateCloudFormationStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateCloudFormationStackCommand");
var se_CreateContactMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateContactMethod");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateContactMethodCommand");
var se_CreateContainerServiceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateContainerService");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateContainerServiceCommand");
var se_CreateContainerServiceDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateContainerServiceDeployment");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateContainerServiceDeploymentCommand");
var se_CreateContainerServiceRegistryLoginCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateContainerServiceRegistryLogin");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateContainerServiceRegistryLoginCommand");
var se_CreateDiskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDisk");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDiskCommand");
var se_CreateDiskFromSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDiskFromSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDiskFromSnapshotCommand");
var se_CreateDiskSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDiskSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDiskSnapshotCommand");
var se_CreateDistributionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDistribution");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDistributionCommand");
var se_CreateDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDomain");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDomainCommand");
var se_CreateDomainEntryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDomainEntry");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDomainEntryCommand");
var se_CreateGUISessionAccessDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateGUISessionAccessDetails");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateGUISessionAccessDetailsCommand");
var se_CreateInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateInstances");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateInstancesCommand");
var se_CreateInstancesFromSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateInstancesFromSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateInstancesFromSnapshotCommand");
var se_CreateInstanceSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateInstanceSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateInstanceSnapshotCommand");
var se_CreateKeyPairCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateKeyPair");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateKeyPairCommand");
var se_CreateLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLoadBalancerCommand");
var se_CreateLoadBalancerTlsCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateLoadBalancerTlsCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLoadBalancerTlsCertificateCommand");
var se_CreateRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRelationalDatabaseCommand");
var se_CreateRelationalDatabaseFromSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateRelationalDatabaseFromSnapshot");
  let body;
  body = JSON.stringify(se_CreateRelationalDatabaseFromSnapshotRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRelationalDatabaseFromSnapshotCommand");
var se_CreateRelationalDatabaseSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateRelationalDatabaseSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateRelationalDatabaseSnapshotCommand");
var se_DeleteAlarmCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteAlarm");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAlarmCommand");
var se_DeleteAutoSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteAutoSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAutoSnapshotCommand");
var se_DeleteBucketCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteBucket");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteBucketCommand");
var se_DeleteBucketAccessKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteBucketAccessKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteBucketAccessKeyCommand");
var se_DeleteCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteCertificateCommand");
var se_DeleteContactMethodCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteContactMethod");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteContactMethodCommand");
var se_DeleteContainerImageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteContainerImage");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteContainerImageCommand");
var se_DeleteContainerServiceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteContainerService");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteContainerServiceCommand");
var se_DeleteDiskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDisk");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDiskCommand");
var se_DeleteDiskSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDiskSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDiskSnapshotCommand");
var se_DeleteDistributionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDistribution");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDistributionCommand");
var se_DeleteDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDomain");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDomainCommand");
var se_DeleteDomainEntryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDomainEntry");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDomainEntryCommand");
var se_DeleteInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteInstanceCommand");
var se_DeleteInstanceSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteInstanceSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteInstanceSnapshotCommand");
var se_DeleteKeyPairCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteKeyPair");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteKeyPairCommand");
var se_DeleteKnownHostKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteKnownHostKeys");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteKnownHostKeysCommand");
var se_DeleteLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLoadBalancerCommand");
var se_DeleteLoadBalancerTlsCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteLoadBalancerTlsCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLoadBalancerTlsCertificateCommand");
var se_DeleteRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRelationalDatabaseCommand");
var se_DeleteRelationalDatabaseSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteRelationalDatabaseSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteRelationalDatabaseSnapshotCommand");
var se_DetachCertificateFromDistributionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetachCertificateFromDistribution");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachCertificateFromDistributionCommand");
var se_DetachDiskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetachDisk");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachDiskCommand");
var se_DetachInstancesFromLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetachInstancesFromLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachInstancesFromLoadBalancerCommand");
var se_DetachStaticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetachStaticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachStaticIpCommand");
var se_DisableAddOnCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DisableAddOn");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisableAddOnCommand");
var se_DownloadDefaultKeyPairCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DownloadDefaultKeyPair");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DownloadDefaultKeyPairCommand");
var se_EnableAddOnCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("EnableAddOn");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_EnableAddOnCommand");
var se_ExportSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ExportSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ExportSnapshotCommand");
var se_GetActiveNamesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetActiveNames");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetActiveNamesCommand");
var se_GetAlarmsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetAlarms");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetAlarmsCommand");
var se_GetAutoSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetAutoSnapshots");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetAutoSnapshotsCommand");
var se_GetBlueprintsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBlueprints");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBlueprintsCommand");
var se_GetBucketAccessKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBucketAccessKeys");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBucketAccessKeysCommand");
var se_GetBucketBundlesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBucketBundles");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBucketBundlesCommand");
var se_GetBucketMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBucketMetricData");
  let body;
  body = JSON.stringify(se_GetBucketMetricDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBucketMetricDataCommand");
var se_GetBucketsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBuckets");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBucketsCommand");
var se_GetBundlesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBundles");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBundlesCommand");
var se_GetCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetCertificates");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetCertificatesCommand");
var se_GetCloudFormationStackRecordsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetCloudFormationStackRecords");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetCloudFormationStackRecordsCommand");
var se_GetContactMethodsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContactMethods");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContactMethodsCommand");
var se_GetContainerAPIMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerAPIMetadata");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerAPIMetadataCommand");
var se_GetContainerImagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerImages");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerImagesCommand");
var se_GetContainerLogCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerLog");
  let body;
  body = JSON.stringify(se_GetContainerLogRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerLogCommand");
var se_GetContainerServiceDeploymentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerServiceDeployments");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerServiceDeploymentsCommand");
var se_GetContainerServiceMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerServiceMetricData");
  let body;
  body = JSON.stringify(se_GetContainerServiceMetricDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerServiceMetricDataCommand");
var se_GetContainerServicePowersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerServicePowers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerServicePowersCommand");
var se_GetContainerServicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetContainerServices");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetContainerServicesCommand");
var se_GetCostEstimateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetCostEstimate");
  let body;
  body = JSON.stringify(se_GetCostEstimateRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetCostEstimateCommand");
var se_GetDiskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDisk");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDiskCommand");
var se_GetDisksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDisks");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDisksCommand");
var se_GetDiskSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDiskSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDiskSnapshotCommand");
var se_GetDiskSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDiskSnapshots");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDiskSnapshotsCommand");
var se_GetDistributionBundlesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDistributionBundles");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDistributionBundlesCommand");
var se_GetDistributionLatestCacheResetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDistributionLatestCacheReset");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDistributionLatestCacheResetCommand");
var se_GetDistributionMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDistributionMetricData");
  let body;
  body = JSON.stringify(se_GetDistributionMetricDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDistributionMetricDataCommand");
var se_GetDistributionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDistributions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDistributionsCommand");
var se_GetDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDomain");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDomainCommand");
var se_GetDomainsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetDomains");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetDomainsCommand");
var se_GetExportSnapshotRecordsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetExportSnapshotRecords");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetExportSnapshotRecordsCommand");
var se_GetInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceCommand");
var se_GetInstanceAccessDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstanceAccessDetails");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceAccessDetailsCommand");
var se_GetInstanceMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstanceMetricData");
  let body;
  body = JSON.stringify(se_GetInstanceMetricDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceMetricDataCommand");
var se_GetInstancePortStatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstancePortStates");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstancePortStatesCommand");
var se_GetInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstances");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstancesCommand");
var se_GetInstanceSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstanceSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceSnapshotCommand");
var se_GetInstanceSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstanceSnapshots");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceSnapshotsCommand");
var se_GetInstanceStateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetInstanceState");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetInstanceStateCommand");
var se_GetKeyPairCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetKeyPair");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetKeyPairCommand");
var se_GetKeyPairsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetKeyPairs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetKeyPairsCommand");
var se_GetLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetLoadBalancerCommand");
var se_GetLoadBalancerMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetLoadBalancerMetricData");
  let body;
  body = JSON.stringify(se_GetLoadBalancerMetricDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetLoadBalancerMetricDataCommand");
var se_GetLoadBalancersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetLoadBalancers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetLoadBalancersCommand");
var se_GetLoadBalancerTlsCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetLoadBalancerTlsCertificates");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetLoadBalancerTlsCertificatesCommand");
var se_GetLoadBalancerTlsPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetLoadBalancerTlsPolicies");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetLoadBalancerTlsPoliciesCommand");
var se_GetOperationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetOperation");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetOperationCommand");
var se_GetOperationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetOperations");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetOperationsCommand");
var se_GetOperationsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetOperationsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetOperationsForResourceCommand");
var se_GetRegionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRegions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRegionsCommand");
var se_GetRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseCommand");
var se_GetRelationalDatabaseBlueprintsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseBlueprints");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseBlueprintsCommand");
var se_GetRelationalDatabaseBundlesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseBundles");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseBundlesCommand");
var se_GetRelationalDatabaseEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseEvents");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseEventsCommand");
var se_GetRelationalDatabaseLogEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseLogEvents");
  let body;
  body = JSON.stringify(se_GetRelationalDatabaseLogEventsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseLogEventsCommand");
var se_GetRelationalDatabaseLogStreamsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseLogStreams");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseLogStreamsCommand");
var se_GetRelationalDatabaseMasterUserPasswordCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseMasterUserPassword");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseMasterUserPasswordCommand");
var se_GetRelationalDatabaseMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseMetricData");
  let body;
  body = JSON.stringify(se_GetRelationalDatabaseMetricDataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseMetricDataCommand");
var se_GetRelationalDatabaseParametersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseParameters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseParametersCommand");
var se_GetRelationalDatabasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabases");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabasesCommand");
var se_GetRelationalDatabaseSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseSnapshotCommand");
var se_GetRelationalDatabaseSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetRelationalDatabaseSnapshots");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetRelationalDatabaseSnapshotsCommand");
var se_GetSetupHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetSetupHistory");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetSetupHistoryCommand");
var se_GetStaticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetStaticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetStaticIpCommand");
var se_GetStaticIpsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetStaticIps");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetStaticIpsCommand");
var se_ImportKeyPairCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportKeyPair");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportKeyPairCommand");
var se_IsVpcPeeredCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("IsVpcPeered");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_IsVpcPeeredCommand");
var se_OpenInstancePublicPortsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("OpenInstancePublicPorts");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_OpenInstancePublicPortsCommand");
var se_PeerVpcCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PeerVpc");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PeerVpcCommand");
var se_PutAlarmCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PutAlarm");
  let body;
  body = JSON.stringify(se_PutAlarmRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutAlarmCommand");
var se_PutInstancePublicPortsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PutInstancePublicPorts");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutInstancePublicPortsCommand");
var se_RebootInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RebootInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RebootInstanceCommand");
var se_RebootRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RebootRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RebootRelationalDatabaseCommand");
var se_RegisterContainerImageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RegisterContainerImage");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RegisterContainerImageCommand");
var se_ReleaseStaticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ReleaseStaticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ReleaseStaticIpCommand");
var se_ResetDistributionCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ResetDistributionCache");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResetDistributionCacheCommand");
var se_SendContactMethodVerificationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SendContactMethodVerification");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SendContactMethodVerificationCommand");
var se_SetIpAddressTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SetIpAddressType");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetIpAddressTypeCommand");
var se_SetResourceAccessForBucketCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SetResourceAccessForBucket");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetResourceAccessForBucketCommand");
var se_SetupInstanceHttpsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SetupInstanceHttps");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetupInstanceHttpsCommand");
var se_StartGUISessionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartGUISession");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartGUISessionCommand");
var se_StartInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartInstanceCommand");
var se_StartRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartRelationalDatabaseCommand");
var se_StopGUISessionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopGUISession");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopGUISessionCommand");
var se_StopInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopInstanceCommand");
var se_StopRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopRelationalDatabaseCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_TestAlarmCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TestAlarm");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TestAlarmCommand");
var se_UnpeerVpcCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UnpeerVpc");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UnpeerVpcCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateBucketCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateBucket");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateBucketCommand");
var se_UpdateBucketBundleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateBucketBundle");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateBucketBundleCommand");
var se_UpdateContainerServiceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateContainerService");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateContainerServiceCommand");
var se_UpdateDistributionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateDistribution");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateDistributionCommand");
var se_UpdateDistributionBundleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateDistributionBundle");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateDistributionBundleCommand");
var se_UpdateDomainEntryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateDomainEntry");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateDomainEntryCommand");
var se_UpdateInstanceMetadataOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateInstanceMetadataOptions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateInstanceMetadataOptionsCommand");
var se_UpdateLoadBalancerAttributeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateLoadBalancerAttribute");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateLoadBalancerAttributeCommand");
var se_UpdateRelationalDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateRelationalDatabase");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRelationalDatabaseCommand");
var se_UpdateRelationalDatabaseParametersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateRelationalDatabaseParameters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRelationalDatabaseParametersCommand");
var de_AllocateStaticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_AllocateStaticIpResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AllocateStaticIpCommand");
var de_AttachCertificateToDistributionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_AttachCertificateToDistributionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AttachCertificateToDistributionCommand");
var de_AttachDiskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_AttachDiskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AttachDiskCommand");
var de_AttachInstancesToLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_AttachInstancesToLoadBalancerResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AttachInstancesToLoadBalancerCommand");
var de_AttachLoadBalancerTlsCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_AttachLoadBalancerTlsCertificateResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AttachLoadBalancerTlsCertificateCommand");
var de_AttachStaticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_AttachStaticIpResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AttachStaticIpCommand");
var de_CloseInstancePublicPortsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CloseInstancePublicPortsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CloseInstancePublicPortsCommand");
var de_CopySnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CopySnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CopySnapshotCommand");
var de_CreateBucketCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateBucketResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateBucketCommand");
var de_CreateBucketAccessKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateBucketAccessKeyResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateBucketAccessKeyCommand");
var de_CreateCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateCertificateResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateCertificateCommand");
var de_CreateCloudFormationStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateCloudFormationStackResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateCloudFormationStackCommand");
var de_CreateContactMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateContactMethodResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateContactMethodCommand");
var de_CreateContainerServiceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateContainerServiceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateContainerServiceCommand");
var de_CreateContainerServiceDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateContainerServiceDeploymentResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateContainerServiceDeploymentCommand");
var de_CreateContainerServiceRegistryLoginCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateContainerServiceRegistryLoginResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateContainerServiceRegistryLoginCommand");
var de_CreateDiskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDiskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDiskCommand");
var de_CreateDiskFromSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDiskFromSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDiskFromSnapshotCommand");
var de_CreateDiskSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDiskSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDiskSnapshotCommand");
var de_CreateDistributionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDistributionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDistributionCommand");
var de_CreateDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDomainResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDomainCommand");
var de_CreateDomainEntryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDomainEntryResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDomainEntryCommand");
var de_CreateGUISessionAccessDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateGUISessionAccessDetailsCommand");
var de_CreateInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateInstancesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateInstancesCommand");
var de_CreateInstancesFromSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateInstancesFromSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateInstancesFromSnapshotCommand");
var de_CreateInstanceSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateInstanceSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateInstanceSnapshotCommand");
var de_CreateKeyPairCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateKeyPairResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateKeyPairCommand");
var de_CreateLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateLoadBalancerResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLoadBalancerCommand");
var de_CreateLoadBalancerTlsCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateLoadBalancerTlsCertificateResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLoadBalancerTlsCertificateCommand");
var de_CreateRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRelationalDatabaseCommand");
var de_CreateRelationalDatabaseFromSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateRelationalDatabaseFromSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRelationalDatabaseFromSnapshotCommand");
var de_CreateRelationalDatabaseSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateRelationalDatabaseSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateRelationalDatabaseSnapshotCommand");
var de_DeleteAlarmCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteAlarmResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteAlarmCommand");
var de_DeleteAutoSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteAutoSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteAutoSnapshotCommand");
var de_DeleteBucketCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteBucketResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteBucketCommand");
var de_DeleteBucketAccessKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteBucketAccessKeyResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteBucketAccessKeyCommand");
var de_DeleteCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteCertificateResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteCertificateCommand");
var de_DeleteContactMethodCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteContactMethodResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteContactMethodCommand");
var de_DeleteContainerImageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteContainerImageCommand");
var de_DeleteContainerServiceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteContainerServiceCommand");
var de_DeleteDiskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteDiskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteDiskCommand");
var de_DeleteDiskSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteDiskSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteDiskSnapshotCommand");
var de_DeleteDistributionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteDistributionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteDistributionCommand");
var de_DeleteDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteDomainResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteDomainCommand");
var de_DeleteDomainEntryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteDomainEntryResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteDomainEntryCommand");
var de_DeleteInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteInstanceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteInstanceCommand");
var de_DeleteInstanceSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteInstanceSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteInstanceSnapshotCommand");
var de_DeleteKeyPairCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteKeyPairResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteKeyPairCommand");
var de_DeleteKnownHostKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteKnownHostKeysResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteKnownHostKeysCommand");
var de_DeleteLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteLoadBalancerResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteLoadBalancerCommand");
var de_DeleteLoadBalancerTlsCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteLoadBalancerTlsCertificateResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteLoadBalancerTlsCertificateCommand");
var de_DeleteRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteRelationalDatabaseCommand");
var de_DeleteRelationalDatabaseSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteRelationalDatabaseSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteRelationalDatabaseSnapshotCommand");
var de_DetachCertificateFromDistributionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetachCertificateFromDistributionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetachCertificateFromDistributionCommand");
var de_DetachDiskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetachDiskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetachDiskCommand");
var de_DetachInstancesFromLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetachInstancesFromLoadBalancerResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetachInstancesFromLoadBalancerCommand");
var de_DetachStaticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetachStaticIpResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetachStaticIpCommand");
var de_DisableAddOnCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DisableAddOnResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisableAddOnCommand");
var de_DownloadDefaultKeyPairCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DownloadDefaultKeyPairResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DownloadDefaultKeyPairCommand");
var de_EnableAddOnCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_EnableAddOnResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_EnableAddOnCommand");
var de_ExportSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ExportSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ExportSnapshotCommand");
var de_GetActiveNamesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetActiveNamesCommand");
var de_GetAlarmsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetAlarmsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetAlarmsCommand");
var de_GetAutoSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetAutoSnapshotsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetAutoSnapshotsCommand");
var de_GetBlueprintsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBlueprintsCommand");
var de_GetBucketAccessKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetBucketAccessKeysResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBucketAccessKeysCommand");
var de_GetBucketBundlesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetBucketBundlesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBucketBundlesCommand");
var de_GetBucketMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetBucketMetricDataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBucketMetricDataCommand");
var de_GetBucketsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetBucketsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBucketsCommand");
var de_GetBundlesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetBundlesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBundlesCommand");
var de_GetCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetCertificatesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetCertificatesCommand");
var de_GetCloudFormationStackRecordsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetCloudFormationStackRecordsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetCloudFormationStackRecordsCommand");
var de_GetContactMethodsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetContactMethodsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContactMethodsCommand");
var de_GetContainerAPIMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerAPIMetadataCommand");
var de_GetContainerImagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetContainerImagesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerImagesCommand");
var de_GetContainerLogCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetContainerLogResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerLogCommand");
var de_GetContainerServiceDeploymentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetContainerServiceDeploymentsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerServiceDeploymentsCommand");
var de_GetContainerServiceMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetContainerServiceMetricDataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerServiceMetricDataCommand");
var de_GetContainerServicePowersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetContainerServicePowersResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerServicePowersCommand");
var de_GetContainerServicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ContainerServicesListResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetContainerServicesCommand");
var de_GetCostEstimateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetCostEstimateResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetCostEstimateCommand");
var de_GetDiskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDiskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDiskCommand");
var de_GetDisksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDisksResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDisksCommand");
var de_GetDiskSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDiskSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDiskSnapshotCommand");
var de_GetDiskSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDiskSnapshotsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDiskSnapshotsCommand");
var de_GetDistributionBundlesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDistributionBundlesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDistributionBundlesCommand");
var de_GetDistributionLatestCacheResetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDistributionLatestCacheResetResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDistributionLatestCacheResetCommand");
var de_GetDistributionMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDistributionMetricDataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDistributionMetricDataCommand");
var de_GetDistributionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDistributionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDistributionsCommand");
var de_GetDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDomainResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDomainCommand");
var de_GetDomainsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetDomainsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetDomainsCommand");
var de_GetExportSnapshotRecordsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetExportSnapshotRecordsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetExportSnapshotRecordsCommand");
var de_GetInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetInstanceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceCommand");
var de_GetInstanceAccessDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetInstanceAccessDetailsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceAccessDetailsCommand");
var de_GetInstanceMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetInstanceMetricDataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceMetricDataCommand");
var de_GetInstancePortStatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstancePortStatesCommand");
var de_GetInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetInstancesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstancesCommand");
var de_GetInstanceSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetInstanceSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceSnapshotCommand");
var de_GetInstanceSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetInstanceSnapshotsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceSnapshotsCommand");
var de_GetInstanceStateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetInstanceStateCommand");
var de_GetKeyPairCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetKeyPairResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetKeyPairCommand");
var de_GetKeyPairsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetKeyPairsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetKeyPairsCommand");
var de_GetLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetLoadBalancerResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetLoadBalancerCommand");
var de_GetLoadBalancerMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetLoadBalancerMetricDataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetLoadBalancerMetricDataCommand");
var de_GetLoadBalancersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetLoadBalancersResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetLoadBalancersCommand");
var de_GetLoadBalancerTlsCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetLoadBalancerTlsCertificatesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetLoadBalancerTlsCertificatesCommand");
var de_GetLoadBalancerTlsPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetLoadBalancerTlsPoliciesCommand");
var de_GetOperationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetOperationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetOperationCommand");
var de_GetOperationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetOperationsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetOperationsCommand");
var de_GetOperationsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetOperationsForResourceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetOperationsForResourceCommand");
var de_GetRegionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRegionsCommand");
var de_GetRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseCommand");
var de_GetRelationalDatabaseBlueprintsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseBlueprintsCommand");
var de_GetRelationalDatabaseBundlesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseBundlesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseBundlesCommand");
var de_GetRelationalDatabaseEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseEventsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseEventsCommand");
var de_GetRelationalDatabaseLogEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseLogEventsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseLogEventsCommand");
var de_GetRelationalDatabaseLogStreamsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseLogStreamsCommand");
var de_GetRelationalDatabaseMasterUserPasswordCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseMasterUserPasswordResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseMasterUserPasswordCommand");
var de_GetRelationalDatabaseMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseMetricDataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseMetricDataCommand");
var de_GetRelationalDatabaseParametersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseParametersCommand");
var de_GetRelationalDatabasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabasesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabasesCommand");
var de_GetRelationalDatabaseSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseSnapshotResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseSnapshotCommand");
var de_GetRelationalDatabaseSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetRelationalDatabaseSnapshotsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetRelationalDatabaseSnapshotsCommand");
var de_GetSetupHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetSetupHistoryResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetSetupHistoryCommand");
var de_GetStaticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetStaticIpResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetStaticIpCommand");
var de_GetStaticIpsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_GetStaticIpsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetStaticIpsCommand");
var de_ImportKeyPairCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ImportKeyPairResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportKeyPairCommand");
var de_IsVpcPeeredCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_IsVpcPeeredCommand");
var de_OpenInstancePublicPortsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_OpenInstancePublicPortsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_OpenInstancePublicPortsCommand");
var de_PeerVpcCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_PeerVpcResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PeerVpcCommand");
var de_PutAlarmCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_PutAlarmResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutAlarmCommand");
var de_PutInstancePublicPortsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_PutInstancePublicPortsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutInstancePublicPortsCommand");
var de_RebootInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_RebootInstanceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RebootInstanceCommand");
var de_RebootRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_RebootRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RebootRelationalDatabaseCommand");
var de_RegisterContainerImageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_RegisterContainerImageResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RegisterContainerImageCommand");
var de_ReleaseStaticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ReleaseStaticIpResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ReleaseStaticIpCommand");
var de_ResetDistributionCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ResetDistributionCacheResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResetDistributionCacheCommand");
var de_SendContactMethodVerificationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_SendContactMethodVerificationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SendContactMethodVerificationCommand");
var de_SetIpAddressTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_SetIpAddressTypeResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SetIpAddressTypeCommand");
var de_SetResourceAccessForBucketCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_SetResourceAccessForBucketResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SetResourceAccessForBucketCommand");
var de_SetupInstanceHttpsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_SetupInstanceHttpsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SetupInstanceHttpsCommand");
var de_StartGUISessionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StartGUISessionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartGUISessionCommand");
var de_StartInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StartInstanceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartInstanceCommand");
var de_StartRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StartRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartRelationalDatabaseCommand");
var de_StopGUISessionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StopGUISessionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopGUISessionCommand");
var de_StopInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StopInstanceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopInstanceCommand");
var de_StopRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StopRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopRelationalDatabaseCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_TagResourceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_TestAlarmCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_TestAlarmResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TestAlarmCommand");
var de_UnpeerVpcCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UnpeerVpcResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UnpeerVpcCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UntagResourceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateBucketCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateBucketResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateBucketCommand");
var de_UpdateBucketBundleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateBucketBundleResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateBucketBundleCommand");
var de_UpdateContainerServiceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateContainerServiceResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateContainerServiceCommand");
var de_UpdateDistributionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateDistributionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateDistributionCommand");
var de_UpdateDistributionBundleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateDistributionBundleResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateDistributionBundleCommand");
var de_UpdateDomainEntryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateDomainEntryResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateDomainEntryCommand");
var de_UpdateInstanceMetadataOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateInstanceMetadataOptionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateInstanceMetadataOptionsCommand");
var de_UpdateLoadBalancerAttributeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateLoadBalancerAttributeResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateLoadBalancerAttributeCommand");
var de_UpdateRelationalDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateRelationalDatabaseResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateRelationalDatabaseCommand");
var de_UpdateRelationalDatabaseParametersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateRelationalDatabaseParametersResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateRelationalDatabaseParametersCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.lightsail#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "AccountSetupInProgressException":
    case "com.amazonaws.lightsail#AccountSetupInProgressException":
      throw await de_AccountSetupInProgressExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.lightsail#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.lightsail#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "OperationFailureException":
    case "com.amazonaws.lightsail#OperationFailureException":
      throw await de_OperationFailureExceptionRes(parsedOutput, context);
    case "ServiceException":
    case "com.amazonaws.lightsail#ServiceException":
      throw await de_ServiceExceptionRes(parsedOutput, context);
    case "UnauthenticatedException":
    case "com.amazonaws.lightsail#UnauthenticatedException":
      throw await de_UnauthenticatedExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_AccountSetupInProgressExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccountSetupInProgressException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccountSetupInProgressExceptionRes");
var de_InvalidInputExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidInputException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidInputExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NotFoundExceptionRes");
var de_OperationFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new OperationFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_OperationFailureExceptionRes");
var de_ServiceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceExceptionRes");
var de_UnauthenticatedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UnauthenticatedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnauthenticatedExceptionRes");
var se_CreateRelationalDatabaseFromSnapshotRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    availabilityZone: [],
    publiclyAccessible: [],
    relationalDatabaseBundleId: [],
    relationalDatabaseName: [],
    relationalDatabaseSnapshotName: [],
    restoreTime: (_) => Math.round(_.getTime() / 1e3),
    sourceRelationalDatabaseName: [],
    tags: import_smithy_client._json,
    useLatestRestorableTime: []
  });
}, "se_CreateRelationalDatabaseFromSnapshotRequest");
var se_GetBucketMetricDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    bucketName: [],
    endTime: (_) => Math.round(_.getTime() / 1e3),
    metricName: [],
    period: [],
    startTime: (_) => Math.round(_.getTime() / 1e3),
    statistics: import_smithy_client._json,
    unit: []
  });
}, "se_GetBucketMetricDataRequest");
var se_GetContainerLogRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    containerName: [],
    endTime: (_) => Math.round(_.getTime() / 1e3),
    filterPattern: [],
    pageToken: [],
    serviceName: [],
    startTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_GetContainerLogRequest");
var se_GetContainerServiceMetricDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    endTime: (_) => Math.round(_.getTime() / 1e3),
    metricName: [],
    period: [],
    serviceName: [],
    startTime: (_) => Math.round(_.getTime() / 1e3),
    statistics: import_smithy_client._json
  });
}, "se_GetContainerServiceMetricDataRequest");
var se_GetCostEstimateRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    endTime: (_) => Math.round(_.getTime() / 1e3),
    resourceName: [],
    startTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_GetCostEstimateRequest");
var se_GetDistributionMetricDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    distributionName: [],
    endTime: (_) => Math.round(_.getTime() / 1e3),
    metricName: [],
    period: [],
    startTime: (_) => Math.round(_.getTime() / 1e3),
    statistics: import_smithy_client._json,
    unit: []
  });
}, "se_GetDistributionMetricDataRequest");
var se_GetInstanceMetricDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    endTime: (_) => Math.round(_.getTime() / 1e3),
    instanceName: [],
    metricName: [],
    period: [],
    startTime: (_) => Math.round(_.getTime() / 1e3),
    statistics: import_smithy_client._json,
    unit: []
  });
}, "se_GetInstanceMetricDataRequest");
var se_GetLoadBalancerMetricDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    endTime: (_) => Math.round(_.getTime() / 1e3),
    loadBalancerName: [],
    metricName: [],
    period: [],
    startTime: (_) => Math.round(_.getTime() / 1e3),
    statistics: import_smithy_client._json,
    unit: []
  });
}, "se_GetLoadBalancerMetricDataRequest");
var se_GetRelationalDatabaseLogEventsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    endTime: (_) => Math.round(_.getTime() / 1e3),
    logStreamName: [],
    pageToken: [],
    relationalDatabaseName: [],
    startFromHead: [],
    startTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_GetRelationalDatabaseLogEventsRequest");
var se_GetRelationalDatabaseMetricDataRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    endTime: (_) => Math.round(_.getTime() / 1e3),
    metricName: [],
    period: [],
    relationalDatabaseName: [],
    startTime: (_) => Math.round(_.getTime() / 1e3),
    statistics: import_smithy_client._json,
    unit: []
  });
}, "se_GetRelationalDatabaseMetricDataRequest");
var se_PutAlarmRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    alarmName: [],
    comparisonOperator: [],
    contactProtocols: import_smithy_client._json,
    datapointsToAlarm: [],
    evaluationPeriods: [],
    metricName: [],
    monitoredResourceName: [],
    notificationEnabled: [],
    notificationTriggers: import_smithy_client._json,
    threshold: import_smithy_client.serializeFloat,
    treatMissingData: []
  });
}, "se_PutAlarmRequest");
var de_AccessKey = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    accessKeyId: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUsed: (_) => de_AccessKeyLastUsed(_, context),
    secretAccessKey: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_AccessKey");
var de_AccessKeyLastUsed = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    lastUsedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    region: import_smithy_client.expectString,
    serviceName: import_smithy_client.expectString
  });
}, "de_AccessKeyLastUsed");
var de_AccessKeyList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AccessKey(entry, context);
  });
  return retVal;
}, "de_AccessKeyList");
var de_AccountLevelBpaSync = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bpaImpactsLightsail: import_smithy_client.expectBoolean,
    lastSyncedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    message: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_AccountLevelBpaSync");
var de_Alarm = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    comparisonOperator: import_smithy_client.expectString,
    contactProtocols: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    datapointsToAlarm: import_smithy_client.expectInt32,
    evaluationPeriods: import_smithy_client.expectInt32,
    location: import_smithy_client._json,
    metricName: import_smithy_client.expectString,
    monitoredResourceInfo: import_smithy_client._json,
    name: import_smithy_client.expectString,
    notificationEnabled: import_smithy_client.expectBoolean,
    notificationTriggers: import_smithy_client._json,
    period: import_smithy_client.expectInt32,
    resourceType: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    statistic: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    threshold: import_smithy_client.limitedParseDouble,
    treatMissingData: import_smithy_client.expectString,
    unit: import_smithy_client.expectString
  });
}, "de_Alarm");
var de_AlarmsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Alarm(entry, context);
  });
  return retVal;
}, "de_AlarmsList");
var de_AllocateStaticIpResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_AllocateStaticIpResult");
var de_AttachCertificateToDistributionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_AttachCertificateToDistributionResult");
var de_AttachDiskResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_AttachDiskResult");
var de_AttachInstancesToLoadBalancerResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_AttachInstancesToLoadBalancerResult");
var de_AttachLoadBalancerTlsCertificateResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_AttachLoadBalancerTlsCertificateResult");
var de_AttachStaticIpResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_AttachStaticIpResult");
var de_AutoSnapshotDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    date: import_smithy_client.expectString,
    fromAttachedDisks: import_smithy_client._json,
    status: import_smithy_client.expectString
  });
}, "de_AutoSnapshotDetails");
var de_AutoSnapshotDetailsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AutoSnapshotDetails(entry, context);
  });
  return retVal;
}, "de_AutoSnapshotDetailsList");
var de_Bucket = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ableToUpdateBundle: import_smithy_client.expectBoolean,
    accessLogConfig: import_smithy_client._json,
    accessRules: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    bundleId: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    objectVersioning: import_smithy_client.expectString,
    readonlyAccessAccounts: import_smithy_client._json,
    resourceType: import_smithy_client.expectString,
    resourcesReceivingAccess: import_smithy_client._json,
    state: import_smithy_client._json,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    url: import_smithy_client.expectString
  });
}, "de_Bucket");
var de_BucketBundle = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundleId: import_smithy_client.expectString,
    isActive: import_smithy_client.expectBoolean,
    name: import_smithy_client.expectString,
    price: import_smithy_client.limitedParseFloat32,
    storagePerMonthInGb: import_smithy_client.expectInt32,
    transferPerMonthInGb: import_smithy_client.expectInt32
  });
}, "de_BucketBundle");
var de_BucketBundleList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_BucketBundle(entry, context);
  });
  return retVal;
}, "de_BucketBundleList");
var de_BucketList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Bucket(entry, context);
  });
  return retVal;
}, "de_BucketList");
var de_Bundle = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundleId: import_smithy_client.expectString,
    cpuCount: import_smithy_client.expectInt32,
    diskSizeInGb: import_smithy_client.expectInt32,
    instanceType: import_smithy_client.expectString,
    isActive: import_smithy_client.expectBoolean,
    name: import_smithy_client.expectString,
    power: import_smithy_client.expectInt32,
    price: import_smithy_client.limitedParseFloat32,
    publicIpv4AddressCount: import_smithy_client.expectInt32,
    ramSizeInGb: import_smithy_client.limitedParseFloat32,
    supportedAppCategories: import_smithy_client._json,
    supportedPlatforms: import_smithy_client._json,
    transferPerMonthInGb: import_smithy_client.expectInt32
  });
}, "de_Bundle");
var de_BundleList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Bundle(entry, context);
  });
  return retVal;
}, "de_BundleList");
var de_Certificate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    domainName: import_smithy_client.expectString,
    domainValidationRecords: import_smithy_client._json,
    eligibleToRenew: import_smithy_client.expectString,
    inUseResourceCount: import_smithy_client.expectInt32,
    issuedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    issuerCA: import_smithy_client.expectString,
    keyAlgorithm: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    notAfter: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    notBefore: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    renewalSummary: (_) => de_RenewalSummary(_, context),
    requestFailureReason: import_smithy_client.expectString,
    revocationReason: import_smithy_client.expectString,
    revokedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    serialNumber: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    subjectAlternativeNames: import_smithy_client._json,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_Certificate");
var de_CertificateSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    certificateArn: import_smithy_client.expectString,
    certificateDetail: (_) => de_Certificate(_, context),
    certificateName: import_smithy_client.expectString,
    domainName: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_CertificateSummary");
var de_CertificateSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CertificateSummary(entry, context);
  });
  return retVal;
}, "de_CertificateSummaryList");
var de_CloseInstancePublicPortsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_CloseInstancePublicPortsResult");
var de_CloudFormationStackRecord = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    destinationInfo: import_smithy_client._json,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sourceInfo: import_smithy_client._json,
    state: import_smithy_client.expectString
  });
}, "de_CloudFormationStackRecord");
var de_CloudFormationStackRecordList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CloudFormationStackRecord(entry, context);
  });
  return retVal;
}, "de_CloudFormationStackRecordList");
var de_ContactMethod = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    contactEndpoint: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    protocol: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString
  });
}, "de_ContactMethod");
var de_ContactMethodsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ContactMethod(entry, context);
  });
  return retVal;
}, "de_ContactMethodsList");
var de_ContainerImage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    digest: import_smithy_client.expectString,
    image: import_smithy_client.expectString
  });
}, "de_ContainerImage");
var de_ContainerImageList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ContainerImage(entry, context);
  });
  return retVal;
}, "de_ContainerImageList");
var de_ContainerService = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    containerServiceName: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    currentDeployment: (_) => de_ContainerServiceDeployment(_, context),
    isDisabled: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    nextDeployment: (_) => de_ContainerServiceDeployment(_, context),
    power: import_smithy_client.expectString,
    powerId: import_smithy_client.expectString,
    principalArn: import_smithy_client.expectString,
    privateDomainName: import_smithy_client.expectString,
    privateRegistryAccess: import_smithy_client._json,
    publicDomainNames: import_smithy_client._json,
    resourceType: import_smithy_client.expectString,
    scale: import_smithy_client.expectInt32,
    state: import_smithy_client.expectString,
    stateDetail: import_smithy_client._json,
    tags: import_smithy_client._json,
    url: import_smithy_client.expectString
  });
}, "de_ContainerService");
var de_ContainerServiceDeployment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containers: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    publicEndpoint: import_smithy_client._json,
    state: import_smithy_client.expectString,
    version: import_smithy_client.expectInt32
  });
}, "de_ContainerServiceDeployment");
var de_ContainerServiceDeploymentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ContainerServiceDeployment(entry, context);
  });
  return retVal;
}, "de_ContainerServiceDeploymentList");
var de_ContainerServiceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ContainerService(entry, context);
  });
  return retVal;
}, "de_ContainerServiceList");
var de_ContainerServiceLogEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    message: import_smithy_client.expectString
  });
}, "de_ContainerServiceLogEvent");
var de_ContainerServiceLogEventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ContainerServiceLogEvent(entry, context);
  });
  return retVal;
}, "de_ContainerServiceLogEventList");
var de_ContainerServicePower = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cpuCount: import_smithy_client.limitedParseFloat32,
    isActive: import_smithy_client.expectBoolean,
    name: import_smithy_client.expectString,
    powerId: import_smithy_client.expectString,
    price: import_smithy_client.limitedParseFloat32,
    ramSizeInGb: import_smithy_client.limitedParseFloat32
  });
}, "de_ContainerServicePower");
var de_ContainerServicePowerList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ContainerServicePower(entry, context);
  });
  return retVal;
}, "de_ContainerServicePowerList");
var de_ContainerServiceRegistryLogin = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    expiresAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    password: import_smithy_client.expectString,
    registry: import_smithy_client.expectString,
    username: import_smithy_client.expectString
  });
}, "de_ContainerServiceRegistryLogin");
var de_ContainerServicesListResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containerServices: (_) => de_ContainerServiceList(_, context)
  });
}, "de_ContainerServicesListResult");
var de_CopySnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CopySnapshotResult");
var de_CostEstimate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    resultsByTime: (_) => de_EstimatesByTime(_, context),
    usageType: import_smithy_client.expectString
  });
}, "de_CostEstimate");
var de_CostEstimates = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CostEstimate(entry, context);
  });
  return retVal;
}, "de_CostEstimates");
var de_CreateBucketAccessKeyResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    accessKey: (_) => de_AccessKey(_, context),
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateBucketAccessKeyResult");
var de_CreateBucketResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bucket: (_) => de_Bucket(_, context),
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateBucketResult");
var de_CreateCertificateResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    certificate: (_) => de_CertificateSummary(_, context),
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateCertificateResult");
var de_CreateCloudFormationStackResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateCloudFormationStackResult");
var de_CreateContactMethodResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateContactMethodResult");
var de_CreateContainerServiceDeploymentResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containerService: (_) => de_ContainerService(_, context)
  });
}, "de_CreateContainerServiceDeploymentResult");
var de_CreateContainerServiceRegistryLoginResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    registryLogin: (_) => de_ContainerServiceRegistryLogin(_, context)
  });
}, "de_CreateContainerServiceRegistryLoginResult");
var de_CreateContainerServiceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containerService: (_) => de_ContainerService(_, context)
  });
}, "de_CreateContainerServiceResult");
var de_CreateDiskFromSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateDiskFromSnapshotResult");
var de_CreateDiskResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateDiskResult");
var de_CreateDiskSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateDiskSnapshotResult");
var de_CreateDistributionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    distribution: (_) => de_LightsailDistribution(_, context),
    operation: (_) => de_Operation(_, context)
  });
}, "de_CreateDistributionResult");
var de_CreateDomainEntryResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_CreateDomainEntryResult");
var de_CreateDomainResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_CreateDomainResult");
var de_CreateInstancesFromSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateInstancesFromSnapshotResult");
var de_CreateInstanceSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateInstanceSnapshotResult");
var de_CreateInstancesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateInstancesResult");
var de_CreateKeyPairResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    keyPair: (_) => de_KeyPair(_, context),
    operation: (_) => de_Operation(_, context),
    privateKeyBase64: import_smithy_client.expectString,
    publicKeyBase64: import_smithy_client.expectString
  });
}, "de_CreateKeyPairResult");
var de_CreateLoadBalancerResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateLoadBalancerResult");
var de_CreateLoadBalancerTlsCertificateResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateLoadBalancerTlsCertificateResult");
var de_CreateRelationalDatabaseFromSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateRelationalDatabaseFromSnapshotResult");
var de_CreateRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateRelationalDatabaseResult");
var de_CreateRelationalDatabaseSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_CreateRelationalDatabaseSnapshotResult");
var de_DeleteAlarmResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteAlarmResult");
var de_DeleteAutoSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteAutoSnapshotResult");
var de_DeleteBucketAccessKeyResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteBucketAccessKeyResult");
var de_DeleteBucketResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteBucketResult");
var de_DeleteCertificateResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteCertificateResult");
var de_DeleteContactMethodResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteContactMethodResult");
var de_DeleteDiskResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteDiskResult");
var de_DeleteDiskSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteDiskSnapshotResult");
var de_DeleteDistributionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_DeleteDistributionResult");
var de_DeleteDomainEntryResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_DeleteDomainEntryResult");
var de_DeleteDomainResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_DeleteDomainResult");
var de_DeleteInstanceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteInstanceResult");
var de_DeleteInstanceSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteInstanceSnapshotResult");
var de_DeleteKeyPairResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_DeleteKeyPairResult");
var de_DeleteKnownHostKeysResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteKnownHostKeysResult");
var de_DeleteLoadBalancerResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteLoadBalancerResult");
var de_DeleteLoadBalancerTlsCertificateResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteLoadBalancerTlsCertificateResult");
var de_DeleteRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteRelationalDatabaseResult");
var de_DeleteRelationalDatabaseSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DeleteRelationalDatabaseSnapshotResult");
var de_DetachCertificateFromDistributionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_DetachCertificateFromDistributionResult");
var de_DetachDiskResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DetachDiskResult");
var de_DetachInstancesFromLoadBalancerResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DetachInstancesFromLoadBalancerResult");
var de_DetachStaticIpResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DetachStaticIpResult");
var de_DisableAddOnResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_DisableAddOnResult");
var de_Disk = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    addOns: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    attachedTo: import_smithy_client.expectString,
    attachmentState: import_smithy_client.expectString,
    autoMountStatus: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    gbInUse: import_smithy_client.expectInt32,
    iops: import_smithy_client.expectInt32,
    isAttached: import_smithy_client.expectBoolean,
    isSystemDisk: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    path: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sizeInGb: import_smithy_client.expectInt32,
    state: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_Disk");
var de_DiskList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Disk(entry, context);
  });
  return retVal;
}, "de_DiskList");
var de_DiskSnapshot = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    fromDiskArn: import_smithy_client.expectString,
    fromDiskName: import_smithy_client.expectString,
    fromInstanceArn: import_smithy_client.expectString,
    fromInstanceName: import_smithy_client.expectString,
    isFromAutoSnapshot: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    progress: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sizeInGb: import_smithy_client.expectInt32,
    state: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_DiskSnapshot");
var de_DiskSnapshotList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DiskSnapshot(entry, context);
  });
  return retVal;
}, "de_DiskSnapshotList");
var de_DistributionBundle = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundleId: import_smithy_client.expectString,
    isActive: import_smithy_client.expectBoolean,
    name: import_smithy_client.expectString,
    price: import_smithy_client.limitedParseFloat32,
    transferPerMonthInGb: import_smithy_client.expectInt32
  });
}, "de_DistributionBundle");
var de_DistributionBundleList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DistributionBundle(entry, context);
  });
  return retVal;
}, "de_DistributionBundleList");
var de_DistributionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LightsailDistribution(entry, context);
  });
  return retVal;
}, "de_DistributionList");
var de_Domain = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    domainEntries: import_smithy_client._json,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    registeredDomainDelegationInfo: import_smithy_client._json,
    resourceType: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_Domain");
var de_DomainList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Domain(entry, context);
  });
  return retVal;
}, "de_DomainList");
var de_DownloadDefaultKeyPairResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    privateKeyBase64: import_smithy_client.expectString,
    publicKeyBase64: import_smithy_client.expectString
  });
}, "de_DownloadDefaultKeyPairResult");
var de_EnableAddOnResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_EnableAddOnResult");
var de_EstimateByTime = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    currency: import_smithy_client.expectString,
    pricingUnit: import_smithy_client.expectString,
    timePeriod: (_) => de_TimePeriod(_, context),
    unit: import_smithy_client.limitedParseDouble,
    usageCost: import_smithy_client.limitedParseDouble
  });
}, "de_EstimateByTime");
var de_EstimatesByTime = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_EstimateByTime(entry, context);
  });
  return retVal;
}, "de_EstimatesByTime");
var de_ExportSnapshotRecord = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    destinationInfo: import_smithy_client._json,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sourceInfo: (_) => de_ExportSnapshotRecordSourceInfo(_, context),
    state: import_smithy_client.expectString
  });
}, "de_ExportSnapshotRecord");
var de_ExportSnapshotRecordList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ExportSnapshotRecord(entry, context);
  });
  return retVal;
}, "de_ExportSnapshotRecordList");
var de_ExportSnapshotRecordSourceInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    diskSnapshotInfo: import_smithy_client._json,
    fromResourceArn: import_smithy_client.expectString,
    fromResourceName: import_smithy_client.expectString,
    instanceSnapshotInfo: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
}, "de_ExportSnapshotRecordSourceInfo");
var de_ExportSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_ExportSnapshotResult");
var de_GetAlarmsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alarms: (_) => de_AlarmsList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetAlarmsResult");
var de_GetAutoSnapshotsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    autoSnapshots: (_) => de_AutoSnapshotDetailsList(_, context),
    resourceName: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
}, "de_GetAutoSnapshotsResult");
var de_GetBucketAccessKeysResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    accessKeys: (_) => de_AccessKeyList(_, context)
  });
}, "de_GetBucketAccessKeysResult");
var de_GetBucketBundlesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundles: (_) => de_BucketBundleList(_, context)
  });
}, "de_GetBucketBundlesResult");
var de_GetBucketMetricDataResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricData: (_) => de_MetricDatapointList(_, context),
    metricName: import_smithy_client.expectString
  });
}, "de_GetBucketMetricDataResult");
var de_GetBucketsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    accountLevelBpaSync: (_) => de_AccountLevelBpaSync(_, context),
    buckets: (_) => de_BucketList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetBucketsResult");
var de_GetBundlesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundles: (_) => de_BundleList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetBundlesResult");
var de_GetCertificatesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    certificates: (_) => de_CertificateSummaryList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetCertificatesResult");
var de_GetCloudFormationStackRecordsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cloudFormationStackRecords: (_) => de_CloudFormationStackRecordList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetCloudFormationStackRecordsResult");
var de_GetContactMethodsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    contactMethods: (_) => de_ContactMethodsList(_, context)
  });
}, "de_GetContactMethodsResult");
var de_GetContainerImagesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containerImages: (_) => de_ContainerImageList(_, context)
  });
}, "de_GetContainerImagesResult");
var de_GetContainerLogResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    logEvents: (_) => de_ContainerServiceLogEventList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetContainerLogResult");
var de_GetContainerServiceDeploymentsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    deployments: (_) => de_ContainerServiceDeploymentList(_, context)
  });
}, "de_GetContainerServiceDeploymentsResult");
var de_GetContainerServiceMetricDataResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricData: (_) => de_MetricDatapointList(_, context),
    metricName: import_smithy_client.expectString
  });
}, "de_GetContainerServiceMetricDataResult");
var de_GetContainerServicePowersResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    powers: (_) => de_ContainerServicePowerList(_, context)
  });
}, "de_GetContainerServicePowersResult");
var de_GetCostEstimateResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    resourcesBudgetEstimate: (_) => de_ResourcesBudgetEstimate(_, context)
  });
}, "de_GetCostEstimateResult");
var de_GetDiskResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    disk: (_) => de_Disk(_, context)
  });
}, "de_GetDiskResult");
var de_GetDiskSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    diskSnapshot: (_) => de_DiskSnapshot(_, context)
  });
}, "de_GetDiskSnapshotResult");
var de_GetDiskSnapshotsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    diskSnapshots: (_) => de_DiskSnapshotList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetDiskSnapshotsResult");
var de_GetDisksResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    disks: (_) => de_DiskList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetDisksResult");
var de_GetDistributionBundlesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundles: (_) => de_DistributionBundleList(_, context)
  });
}, "de_GetDistributionBundlesResult");
var de_GetDistributionLatestCacheResetResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
}, "de_GetDistributionLatestCacheResetResult");
var de_GetDistributionMetricDataResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricData: (_) => de_MetricDatapointList(_, context),
    metricName: import_smithy_client.expectString
  });
}, "de_GetDistributionMetricDataResult");
var de_GetDistributionsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    distributions: (_) => de_DistributionList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetDistributionsResult");
var de_GetDomainResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    domain: (_) => de_Domain(_, context)
  });
}, "de_GetDomainResult");
var de_GetDomainsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    domains: (_) => de_DomainList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetDomainsResult");
var de_GetExportSnapshotRecordsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    exportSnapshotRecords: (_) => de_ExportSnapshotRecordList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetExportSnapshotRecordsResult");
var de_GetInstanceAccessDetailsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    accessDetails: (_) => de_InstanceAccessDetails(_, context)
  });
}, "de_GetInstanceAccessDetailsResult");
var de_GetInstanceMetricDataResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricData: (_) => de_MetricDatapointList(_, context),
    metricName: import_smithy_client.expectString
  });
}, "de_GetInstanceMetricDataResult");
var de_GetInstanceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    instance: (_) => de_Instance(_, context)
  });
}, "de_GetInstanceResult");
var de_GetInstanceSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    instanceSnapshot: (_) => de_InstanceSnapshot(_, context)
  });
}, "de_GetInstanceSnapshotResult");
var de_GetInstanceSnapshotsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    instanceSnapshots: (_) => de_InstanceSnapshotList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetInstanceSnapshotsResult");
var de_GetInstancesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    instances: (_) => de_InstanceList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetInstancesResult");
var de_GetKeyPairResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    keyPair: (_) => de_KeyPair(_, context)
  });
}, "de_GetKeyPairResult");
var de_GetKeyPairsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    keyPairs: (_) => de_KeyPairList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetKeyPairsResult");
var de_GetLoadBalancerMetricDataResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricData: (_) => de_MetricDatapointList(_, context),
    metricName: import_smithy_client.expectString
  });
}, "de_GetLoadBalancerMetricDataResult");
var de_GetLoadBalancerResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    loadBalancer: (_) => de_LoadBalancer(_, context)
  });
}, "de_GetLoadBalancerResult");
var de_GetLoadBalancersResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    loadBalancers: (_) => de_LoadBalancerList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetLoadBalancersResult");
var de_GetLoadBalancerTlsCertificatesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    tlsCertificates: (_) => de_LoadBalancerTlsCertificateList(_, context)
  });
}, "de_GetLoadBalancerTlsCertificatesResult");
var de_GetOperationResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_GetOperationResult");
var de_GetOperationsForResourceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageCount: import_smithy_client.expectString,
    nextPageToken: import_smithy_client.expectString,
    operations: (_) => de_OperationList(_, context)
  });
}, "de_GetOperationsForResourceResult");
var de_GetOperationsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageToken: import_smithy_client.expectString,
    operations: (_) => de_OperationList(_, context)
  });
}, "de_GetOperationsResult");
var de_GetRelationalDatabaseBundlesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundles: (_) => de_RelationalDatabaseBundleList(_, context),
    nextPageToken: import_smithy_client.expectString
  });
}, "de_GetRelationalDatabaseBundlesResult");
var de_GetRelationalDatabaseEventsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageToken: import_smithy_client.expectString,
    relationalDatabaseEvents: (_) => de_RelationalDatabaseEventList(_, context)
  });
}, "de_GetRelationalDatabaseEventsResult");
var de_GetRelationalDatabaseLogEventsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextBackwardToken: import_smithy_client.expectString,
    nextForwardToken: import_smithy_client.expectString,
    resourceLogEvents: (_) => de_LogEventList(_, context)
  });
}, "de_GetRelationalDatabaseLogEventsResult");
var de_GetRelationalDatabaseMasterUserPasswordResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    masterUserPassword: import_smithy_client.expectString
  });
}, "de_GetRelationalDatabaseMasterUserPasswordResult");
var de_GetRelationalDatabaseMetricDataResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricData: (_) => de_MetricDatapointList(_, context),
    metricName: import_smithy_client.expectString
  });
}, "de_GetRelationalDatabaseMetricDataResult");
var de_GetRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    relationalDatabase: (_) => de_RelationalDatabase(_, context)
  });
}, "de_GetRelationalDatabaseResult");
var de_GetRelationalDatabaseSnapshotResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    relationalDatabaseSnapshot: (_) => de_RelationalDatabaseSnapshot(_, context)
  });
}, "de_GetRelationalDatabaseSnapshotResult");
var de_GetRelationalDatabaseSnapshotsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageToken: import_smithy_client.expectString,
    relationalDatabaseSnapshots: (_) => de_RelationalDatabaseSnapshotList(_, context)
  });
}, "de_GetRelationalDatabaseSnapshotsResult");
var de_GetRelationalDatabasesResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageToken: import_smithy_client.expectString,
    relationalDatabases: (_) => de_RelationalDatabaseList(_, context)
  });
}, "de_GetRelationalDatabasesResult");
var de_GetSetupHistoryResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageToken: import_smithy_client.expectString,
    setupHistory: (_) => de_setupHistoryList(_, context)
  });
}, "de_GetSetupHistoryResult");
var de_GetStaticIpResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    staticIp: (_) => de_StaticIp(_, context)
  });
}, "de_GetStaticIpResult");
var de_GetStaticIpsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    nextPageToken: import_smithy_client.expectString,
    staticIps: (_) => de_StaticIpList(_, context)
  });
}, "de_GetStaticIpsResult");
var de_HostKeyAttributes = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    algorithm: import_smithy_client.expectString,
    fingerprintSHA1: import_smithy_client.expectString,
    fingerprintSHA256: import_smithy_client.expectString,
    notValidAfter: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    notValidBefore: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    publicKey: import_smithy_client.expectString,
    witnessedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_HostKeyAttributes");
var de_HostKeysList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_HostKeyAttributes(entry, context);
  });
  return retVal;
}, "de_HostKeysList");
var de_ImportKeyPairResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_ImportKeyPairResult");
var de_Instance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    addOns: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    blueprintId: import_smithy_client.expectString,
    blueprintName: import_smithy_client.expectString,
    bundleId: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    hardware: (_) => de_InstanceHardware(_, context),
    ipAddressType: import_smithy_client.expectString,
    ipv6Addresses: import_smithy_client._json,
    isStaticIp: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    metadataOptions: import_smithy_client._json,
    name: import_smithy_client.expectString,
    networking: import_smithy_client._json,
    privateIpAddress: import_smithy_client.expectString,
    publicIpAddress: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sshKeyName: import_smithy_client.expectString,
    state: import_smithy_client._json,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    username: import_smithy_client.expectString
  });
}, "de_Instance");
var de_InstanceAccessDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    certKey: import_smithy_client.expectString,
    expiresAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    hostKeys: (_) => de_HostKeysList(_, context),
    instanceName: import_smithy_client.expectString,
    ipAddress: import_smithy_client.expectString,
    ipv6Addresses: import_smithy_client._json,
    password: import_smithy_client.expectString,
    passwordData: import_smithy_client._json,
    privateKey: import_smithy_client.expectString,
    protocol: import_smithy_client.expectString,
    username: import_smithy_client.expectString
  });
}, "de_InstanceAccessDetails");
var de_InstanceHardware = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cpuCount: import_smithy_client.expectInt32,
    disks: (_) => de_DiskList(_, context),
    ramSizeInGb: import_smithy_client.limitedParseFloat32
  });
}, "de_InstanceHardware");
var de_InstanceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Instance(entry, context);
  });
  return retVal;
}, "de_InstanceList");
var de_InstanceSnapshot = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    fromAttachedDisks: (_) => de_DiskList(_, context),
    fromBlueprintId: import_smithy_client.expectString,
    fromBundleId: import_smithy_client.expectString,
    fromInstanceArn: import_smithy_client.expectString,
    fromInstanceName: import_smithy_client.expectString,
    isFromAutoSnapshot: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    progress: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sizeInGb: import_smithy_client.expectInt32,
    state: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_InstanceSnapshot");
var de_InstanceSnapshotList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InstanceSnapshot(entry, context);
  });
  return retVal;
}, "de_InstanceSnapshotList");
var de_KeyPair = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    fingerprint: import_smithy_client.expectString,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_KeyPair");
var de_KeyPairList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KeyPair(entry, context);
  });
  return retVal;
}, "de_KeyPairList");
var de_LightsailDistribution = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ableToUpdateBundle: import_smithy_client.expectBoolean,
    alternativeDomainNames: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    bundleId: import_smithy_client.expectString,
    cacheBehaviorSettings: import_smithy_client._json,
    cacheBehaviors: import_smithy_client._json,
    certificateName: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    defaultCacheBehavior: import_smithy_client._json,
    domainName: import_smithy_client.expectString,
    ipAddressType: import_smithy_client.expectString,
    isEnabled: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    origin: import_smithy_client._json,
    originPublicDNS: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_LightsailDistribution");
var de_LoadBalancer = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    configurationOptions: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    dnsName: import_smithy_client.expectString,
    healthCheckPath: import_smithy_client.expectString,
    httpsRedirectionEnabled: import_smithy_client.expectBoolean,
    instanceHealthSummary: import_smithy_client._json,
    instancePort: import_smithy_client.expectInt32,
    ipAddressType: import_smithy_client.expectString,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    protocol: import_smithy_client.expectString,
    publicPorts: import_smithy_client._json,
    resourceType: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    tlsCertificateSummaries: import_smithy_client._json,
    tlsPolicyName: import_smithy_client.expectString
  });
}, "de_LoadBalancer");
var de_LoadBalancerList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LoadBalancer(entry, context);
  });
  return retVal;
}, "de_LoadBalancerList");
var de_LoadBalancerTlsCertificate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    domainName: import_smithy_client.expectString,
    domainValidationRecords: import_smithy_client._json,
    failureReason: import_smithy_client.expectString,
    isAttached: import_smithy_client.expectBoolean,
    issuedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    issuer: import_smithy_client.expectString,
    keyAlgorithm: import_smithy_client.expectString,
    loadBalancerName: import_smithy_client.expectString,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    notAfter: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    notBefore: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    renewalSummary: import_smithy_client._json,
    resourceType: import_smithy_client.expectString,
    revocationReason: import_smithy_client.expectString,
    revokedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    serial: import_smithy_client.expectString,
    signatureAlgorithm: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    subject: import_smithy_client.expectString,
    subjectAlternativeNames: import_smithy_client._json,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_LoadBalancerTlsCertificate");
var de_LoadBalancerTlsCertificateList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LoadBalancerTlsCertificate(entry, context);
  });
  return retVal;
}, "de_LoadBalancerTlsCertificateList");
var de_LogEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    message: import_smithy_client.expectString
  });
}, "de_LogEvent");
var de_LogEventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LogEvent(entry, context);
  });
  return retVal;
}, "de_LogEventList");
var de_MetricDatapoint = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    average: import_smithy_client.limitedParseDouble,
    maximum: import_smithy_client.limitedParseDouble,
    minimum: import_smithy_client.limitedParseDouble,
    sampleCount: import_smithy_client.limitedParseDouble,
    sum: import_smithy_client.limitedParseDouble,
    timestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    unit: import_smithy_client.expectString
  });
}, "de_MetricDatapoint");
var de_MetricDatapointList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_MetricDatapoint(entry, context);
  });
  return retVal;
}, "de_MetricDatapointList");
var de_OpenInstancePublicPortsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_OpenInstancePublicPortsResult");
var de_Operation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    errorCode: import_smithy_client.expectString,
    errorDetails: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    isTerminal: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    operationDetails: import_smithy_client.expectString,
    operationType: import_smithy_client.expectString,
    resourceName: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusChangedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_Operation");
var de_OperationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Operation(entry, context);
  });
  return retVal;
}, "de_OperationList");
var de_PeerVpcResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_PeerVpcResult");
var de_PendingMaintenanceAction = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    action: import_smithy_client.expectString,
    currentApplyDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString
  });
}, "de_PendingMaintenanceAction");
var de_PendingMaintenanceActionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PendingMaintenanceAction(entry, context);
  });
  return retVal;
}, "de_PendingMaintenanceActionList");
var de_PutAlarmResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_PutAlarmResult");
var de_PutInstancePublicPortsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_PutInstancePublicPortsResult");
var de_RebootInstanceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_RebootInstanceResult");
var de_RebootRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_RebootRelationalDatabaseResult");
var de_RegisterContainerImageResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containerImage: (_) => de_ContainerImage(_, context)
  });
}, "de_RegisterContainerImageResult");
var de_RelationalDatabase = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    backupRetentionEnabled: import_smithy_client.expectBoolean,
    caCertificateIdentifier: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    engine: import_smithy_client.expectString,
    engineVersion: import_smithy_client.expectString,
    hardware: (_) => de_RelationalDatabaseHardware(_, context),
    latestRestorableTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    location: import_smithy_client._json,
    masterDatabaseName: import_smithy_client.expectString,
    masterEndpoint: import_smithy_client._json,
    masterUsername: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    parameterApplyStatus: import_smithy_client.expectString,
    pendingMaintenanceActions: (_) => de_PendingMaintenanceActionList(_, context),
    pendingModifiedValues: import_smithy_client._json,
    preferredBackupWindow: import_smithy_client.expectString,
    preferredMaintenanceWindow: import_smithy_client.expectString,
    publiclyAccessible: import_smithy_client.expectBoolean,
    relationalDatabaseBlueprintId: import_smithy_client.expectString,
    relationalDatabaseBundleId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    secondaryAvailabilityZone: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_RelationalDatabase");
var de_RelationalDatabaseBundle = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bundleId: import_smithy_client.expectString,
    cpuCount: import_smithy_client.expectInt32,
    diskSizeInGb: import_smithy_client.expectInt32,
    isActive: import_smithy_client.expectBoolean,
    isEncrypted: import_smithy_client.expectBoolean,
    name: import_smithy_client.expectString,
    price: import_smithy_client.limitedParseFloat32,
    ramSizeInGb: import_smithy_client.limitedParseFloat32,
    transferPerMonthInGb: import_smithy_client.expectInt32
  });
}, "de_RelationalDatabaseBundle");
var de_RelationalDatabaseBundleList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RelationalDatabaseBundle(entry, context);
  });
  return retVal;
}, "de_RelationalDatabaseBundleList");
var de_RelationalDatabaseEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    eventCategories: import_smithy_client._json,
    message: import_smithy_client.expectString,
    resource: import_smithy_client.expectString
  });
}, "de_RelationalDatabaseEvent");
var de_RelationalDatabaseEventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RelationalDatabaseEvent(entry, context);
  });
  return retVal;
}, "de_RelationalDatabaseEventList");
var de_RelationalDatabaseHardware = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cpuCount: import_smithy_client.expectInt32,
    diskSizeInGb: import_smithy_client.expectInt32,
    ramSizeInGb: import_smithy_client.limitedParseFloat32
  });
}, "de_RelationalDatabaseHardware");
var de_RelationalDatabaseList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RelationalDatabase(entry, context);
  });
  return retVal;
}, "de_RelationalDatabaseList");
var de_RelationalDatabaseSnapshot = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    engine: import_smithy_client.expectString,
    engineVersion: import_smithy_client.expectString,
    fromRelationalDatabaseArn: import_smithy_client.expectString,
    fromRelationalDatabaseBlueprintId: import_smithy_client.expectString,
    fromRelationalDatabaseBundleId: import_smithy_client.expectString,
    fromRelationalDatabaseName: import_smithy_client.expectString,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    sizeInGb: import_smithy_client.expectInt32,
    state: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_RelationalDatabaseSnapshot");
var de_RelationalDatabaseSnapshotList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RelationalDatabaseSnapshot(entry, context);
  });
  return retVal;
}, "de_RelationalDatabaseSnapshotList");
var de_ReleaseStaticIpResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_ReleaseStaticIpResult");
var de_RenewalSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    domainValidationRecords: import_smithy_client._json,
    renewalStatus: import_smithy_client.expectString,
    renewalStatusReason: import_smithy_client.expectString,
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_RenewalSummary");
var de_ResetDistributionCacheResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    operation: (_) => de_Operation(_, context),
    status: import_smithy_client.expectString
  });
}, "de_ResetDistributionCacheResult");
var de_ResourceBudgetEstimate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    costEstimates: (_) => de_CostEstimates(_, context),
    endTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    resourceName: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    startTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ResourceBudgetEstimate");
var de_ResourcesBudgetEstimate = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ResourceBudgetEstimate(entry, context);
  });
  return retVal;
}, "de_ResourcesBudgetEstimate");
var de_SendContactMethodVerificationResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_SendContactMethodVerificationResult");
var de_SetIpAddressTypeResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_SetIpAddressTypeResult");
var de_SetResourceAccessForBucketResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_SetResourceAccessForBucketResult");
var de_SetupExecutionDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    command: import_smithy_client.expectString,
    dateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    standardError: import_smithy_client.expectString,
    standardOutput: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
}, "de_SetupExecutionDetails");
var de_SetupExecutionDetailsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SetupExecutionDetails(entry, context);
  });
  return retVal;
}, "de_SetupExecutionDetailsList");
var de_SetupHistory = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    executionDetails: (_) => de_SetupExecutionDetailsList(_, context),
    operationId: import_smithy_client.expectString,
    request: import_smithy_client._json,
    resource: (_) => de_SetupHistoryResource(_, context),
    status: import_smithy_client.expectString
  });
}, "de_SetupHistory");
var de_setupHistoryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SetupHistory(entry, context);
  });
  return retVal;
}, "de_setupHistoryList");
var de_SetupHistoryResource = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
}, "de_SetupHistoryResource");
var de_SetupInstanceHttpsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_SetupInstanceHttpsResult");
var de_StartGUISessionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_StartGUISessionResult");
var de_StartInstanceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_StartInstanceResult");
var de_StartRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_StartRelationalDatabaseResult");
var de_StaticIp = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    attachedTo: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ipAddress: import_smithy_client.expectString,
    isAttached: import_smithy_client.expectBoolean,
    location: import_smithy_client._json,
    name: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    supportCode: import_smithy_client.expectString
  });
}, "de_StaticIp");
var de_StaticIpList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_StaticIp(entry, context);
  });
  return retVal;
}, "de_StaticIpList");
var de_StopGUISessionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_StopGUISessionResult");
var de_StopInstanceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_StopInstanceResult");
var de_StopRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_StopRelationalDatabaseResult");
var de_TagResourceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_TagResourceResult");
var de_TestAlarmResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_TestAlarmResult");
var de_TimePeriod = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    end: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    start: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_TimePeriod");
var de_UnpeerVpcResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_UnpeerVpcResult");
var de_UntagResourceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UntagResourceResult");
var de_UpdateBucketBundleResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UpdateBucketBundleResult");
var de_UpdateBucketResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bucket: (_) => de_Bucket(_, context),
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UpdateBucketResult");
var de_UpdateContainerServiceResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    containerService: (_) => de_ContainerService(_, context)
  });
}, "de_UpdateContainerServiceResult");
var de_UpdateDistributionBundleResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_UpdateDistributionBundleResult");
var de_UpdateDistributionResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_UpdateDistributionResult");
var de_UpdateDomainEntryResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UpdateDomainEntryResult");
var de_UpdateInstanceMetadataOptionsResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operation: (_) => de_Operation(_, context)
  });
}, "de_UpdateInstanceMetadataOptionsResult");
var de_UpdateLoadBalancerAttributeResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UpdateLoadBalancerAttributeResult");
var de_UpdateRelationalDatabaseParametersResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UpdateRelationalDatabaseParametersResult");
var de_UpdateRelationalDatabaseResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    operations: (_) => de_OperationList(_, context)
  });
}, "de_UpdateRelationalDatabaseResult");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(LightsailServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `Lightsail_20161128.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/AllocateStaticIpCommand.ts
var _AllocateStaticIpCommand = class _AllocateStaticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "AllocateStaticIp", {}).n("LightsailClient", "AllocateStaticIpCommand").f(void 0, void 0).ser(se_AllocateStaticIpCommand).de(de_AllocateStaticIpCommand).build() {
};
__name(_AllocateStaticIpCommand, "AllocateStaticIpCommand");
var AllocateStaticIpCommand = _AllocateStaticIpCommand;

// src/commands/AttachCertificateToDistributionCommand.ts




var _AttachCertificateToDistributionCommand = class _AttachCertificateToDistributionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "AttachCertificateToDistribution", {}).n("LightsailClient", "AttachCertificateToDistributionCommand").f(void 0, void 0).ser(se_AttachCertificateToDistributionCommand).de(de_AttachCertificateToDistributionCommand).build() {
};
__name(_AttachCertificateToDistributionCommand, "AttachCertificateToDistributionCommand");
var AttachCertificateToDistributionCommand = _AttachCertificateToDistributionCommand;

// src/commands/AttachDiskCommand.ts




var _AttachDiskCommand = class _AttachDiskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "AttachDisk", {}).n("LightsailClient", "AttachDiskCommand").f(void 0, void 0).ser(se_AttachDiskCommand).de(de_AttachDiskCommand).build() {
};
__name(_AttachDiskCommand, "AttachDiskCommand");
var AttachDiskCommand = _AttachDiskCommand;

// src/commands/AttachInstancesToLoadBalancerCommand.ts




var _AttachInstancesToLoadBalancerCommand = class _AttachInstancesToLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "AttachInstancesToLoadBalancer", {}).n("LightsailClient", "AttachInstancesToLoadBalancerCommand").f(void 0, void 0).ser(se_AttachInstancesToLoadBalancerCommand).de(de_AttachInstancesToLoadBalancerCommand).build() {
};
__name(_AttachInstancesToLoadBalancerCommand, "AttachInstancesToLoadBalancerCommand");
var AttachInstancesToLoadBalancerCommand = _AttachInstancesToLoadBalancerCommand;

// src/commands/AttachLoadBalancerTlsCertificateCommand.ts




var _AttachLoadBalancerTlsCertificateCommand = class _AttachLoadBalancerTlsCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "AttachLoadBalancerTlsCertificate", {}).n("LightsailClient", "AttachLoadBalancerTlsCertificateCommand").f(void 0, void 0).ser(se_AttachLoadBalancerTlsCertificateCommand).de(de_AttachLoadBalancerTlsCertificateCommand).build() {
};
__name(_AttachLoadBalancerTlsCertificateCommand, "AttachLoadBalancerTlsCertificateCommand");
var AttachLoadBalancerTlsCertificateCommand = _AttachLoadBalancerTlsCertificateCommand;

// src/commands/AttachStaticIpCommand.ts




var _AttachStaticIpCommand = class _AttachStaticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "AttachStaticIp", {}).n("LightsailClient", "AttachStaticIpCommand").f(void 0, void 0).ser(se_AttachStaticIpCommand).de(de_AttachStaticIpCommand).build() {
};
__name(_AttachStaticIpCommand, "AttachStaticIpCommand");
var AttachStaticIpCommand = _AttachStaticIpCommand;

// src/commands/CloseInstancePublicPortsCommand.ts




var _CloseInstancePublicPortsCommand = class _CloseInstancePublicPortsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CloseInstancePublicPorts", {}).n("LightsailClient", "CloseInstancePublicPortsCommand").f(void 0, void 0).ser(se_CloseInstancePublicPortsCommand).de(de_CloseInstancePublicPortsCommand).build() {
};
__name(_CloseInstancePublicPortsCommand, "CloseInstancePublicPortsCommand");
var CloseInstancePublicPortsCommand = _CloseInstancePublicPortsCommand;

// src/commands/CopySnapshotCommand.ts




var _CopySnapshotCommand = class _CopySnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CopySnapshot", {}).n("LightsailClient", "CopySnapshotCommand").f(void 0, void 0).ser(se_CopySnapshotCommand).de(de_CopySnapshotCommand).build() {
};
__name(_CopySnapshotCommand, "CopySnapshotCommand");
var CopySnapshotCommand = _CopySnapshotCommand;

// src/commands/CreateBucketAccessKeyCommand.ts




var _CreateBucketAccessKeyCommand = class _CreateBucketAccessKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateBucketAccessKey", {}).n("LightsailClient", "CreateBucketAccessKeyCommand").f(void 0, CreateBucketAccessKeyResultFilterSensitiveLog).ser(se_CreateBucketAccessKeyCommand).de(de_CreateBucketAccessKeyCommand).build() {
};
__name(_CreateBucketAccessKeyCommand, "CreateBucketAccessKeyCommand");
var CreateBucketAccessKeyCommand = _CreateBucketAccessKeyCommand;

// src/commands/CreateBucketCommand.ts




var _CreateBucketCommand = class _CreateBucketCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateBucket", {}).n("LightsailClient", "CreateBucketCommand").f(void 0, void 0).ser(se_CreateBucketCommand).de(de_CreateBucketCommand).build() {
};
__name(_CreateBucketCommand, "CreateBucketCommand");
var CreateBucketCommand = _CreateBucketCommand;

// src/commands/CreateCertificateCommand.ts




var _CreateCertificateCommand = class _CreateCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateCertificate", {}).n("LightsailClient", "CreateCertificateCommand").f(void 0, void 0).ser(se_CreateCertificateCommand).de(de_CreateCertificateCommand).build() {
};
__name(_CreateCertificateCommand, "CreateCertificateCommand");
var CreateCertificateCommand = _CreateCertificateCommand;

// src/commands/CreateCloudFormationStackCommand.ts




var _CreateCloudFormationStackCommand = class _CreateCloudFormationStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateCloudFormationStack", {}).n("LightsailClient", "CreateCloudFormationStackCommand").f(void 0, void 0).ser(se_CreateCloudFormationStackCommand).de(de_CreateCloudFormationStackCommand).build() {
};
__name(_CreateCloudFormationStackCommand, "CreateCloudFormationStackCommand");
var CreateCloudFormationStackCommand = _CreateCloudFormationStackCommand;

// src/commands/CreateContactMethodCommand.ts




var _CreateContactMethodCommand = class _CreateContactMethodCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateContactMethod", {}).n("LightsailClient", "CreateContactMethodCommand").f(void 0, void 0).ser(se_CreateContactMethodCommand).de(de_CreateContactMethodCommand).build() {
};
__name(_CreateContactMethodCommand, "CreateContactMethodCommand");
var CreateContactMethodCommand = _CreateContactMethodCommand;

// src/commands/CreateContainerServiceCommand.ts




var _CreateContainerServiceCommand = class _CreateContainerServiceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateContainerService", {}).n("LightsailClient", "CreateContainerServiceCommand").f(void 0, void 0).ser(se_CreateContainerServiceCommand).de(de_CreateContainerServiceCommand).build() {
};
__name(_CreateContainerServiceCommand, "CreateContainerServiceCommand");
var CreateContainerServiceCommand = _CreateContainerServiceCommand;

// src/commands/CreateContainerServiceDeploymentCommand.ts




var _CreateContainerServiceDeploymentCommand = class _CreateContainerServiceDeploymentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateContainerServiceDeployment", {}).n("LightsailClient", "CreateContainerServiceDeploymentCommand").f(void 0, void 0).ser(se_CreateContainerServiceDeploymentCommand).de(de_CreateContainerServiceDeploymentCommand).build() {
};
__name(_CreateContainerServiceDeploymentCommand, "CreateContainerServiceDeploymentCommand");
var CreateContainerServiceDeploymentCommand = _CreateContainerServiceDeploymentCommand;

// src/commands/CreateContainerServiceRegistryLoginCommand.ts




var _CreateContainerServiceRegistryLoginCommand = class _CreateContainerServiceRegistryLoginCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateContainerServiceRegistryLogin", {}).n("LightsailClient", "CreateContainerServiceRegistryLoginCommand").f(void 0, void 0).ser(se_CreateContainerServiceRegistryLoginCommand).de(de_CreateContainerServiceRegistryLoginCommand).build() {
};
__name(_CreateContainerServiceRegistryLoginCommand, "CreateContainerServiceRegistryLoginCommand");
var CreateContainerServiceRegistryLoginCommand = _CreateContainerServiceRegistryLoginCommand;

// src/commands/CreateDiskCommand.ts




var _CreateDiskCommand = class _CreateDiskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateDisk", {}).n("LightsailClient", "CreateDiskCommand").f(void 0, void 0).ser(se_CreateDiskCommand).de(de_CreateDiskCommand).build() {
};
__name(_CreateDiskCommand, "CreateDiskCommand");
var CreateDiskCommand = _CreateDiskCommand;

// src/commands/CreateDiskFromSnapshotCommand.ts




var _CreateDiskFromSnapshotCommand = class _CreateDiskFromSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateDiskFromSnapshot", {}).n("LightsailClient", "CreateDiskFromSnapshotCommand").f(void 0, void 0).ser(se_CreateDiskFromSnapshotCommand).de(de_CreateDiskFromSnapshotCommand).build() {
};
__name(_CreateDiskFromSnapshotCommand, "CreateDiskFromSnapshotCommand");
var CreateDiskFromSnapshotCommand = _CreateDiskFromSnapshotCommand;

// src/commands/CreateDiskSnapshotCommand.ts




var _CreateDiskSnapshotCommand = class _CreateDiskSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateDiskSnapshot", {}).n("LightsailClient", "CreateDiskSnapshotCommand").f(void 0, void 0).ser(se_CreateDiskSnapshotCommand).de(de_CreateDiskSnapshotCommand).build() {
};
__name(_CreateDiskSnapshotCommand, "CreateDiskSnapshotCommand");
var CreateDiskSnapshotCommand = _CreateDiskSnapshotCommand;

// src/commands/CreateDistributionCommand.ts




var _CreateDistributionCommand = class _CreateDistributionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateDistribution", {}).n("LightsailClient", "CreateDistributionCommand").f(void 0, void 0).ser(se_CreateDistributionCommand).de(de_CreateDistributionCommand).build() {
};
__name(_CreateDistributionCommand, "CreateDistributionCommand");
var CreateDistributionCommand = _CreateDistributionCommand;

// src/commands/CreateDomainCommand.ts




var _CreateDomainCommand = class _CreateDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateDomain", {}).n("LightsailClient", "CreateDomainCommand").f(void 0, void 0).ser(se_CreateDomainCommand).de(de_CreateDomainCommand).build() {
};
__name(_CreateDomainCommand, "CreateDomainCommand");
var CreateDomainCommand = _CreateDomainCommand;

// src/commands/CreateDomainEntryCommand.ts




var _CreateDomainEntryCommand = class _CreateDomainEntryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateDomainEntry", {}).n("LightsailClient", "CreateDomainEntryCommand").f(void 0, void 0).ser(se_CreateDomainEntryCommand).de(de_CreateDomainEntryCommand).build() {
};
__name(_CreateDomainEntryCommand, "CreateDomainEntryCommand");
var CreateDomainEntryCommand = _CreateDomainEntryCommand;

// src/commands/CreateGUISessionAccessDetailsCommand.ts




var _CreateGUISessionAccessDetailsCommand = class _CreateGUISessionAccessDetailsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateGUISessionAccessDetails", {}).n("LightsailClient", "CreateGUISessionAccessDetailsCommand").f(void 0, CreateGUISessionAccessDetailsResultFilterSensitiveLog).ser(se_CreateGUISessionAccessDetailsCommand).de(de_CreateGUISessionAccessDetailsCommand).build() {
};
__name(_CreateGUISessionAccessDetailsCommand, "CreateGUISessionAccessDetailsCommand");
var CreateGUISessionAccessDetailsCommand = _CreateGUISessionAccessDetailsCommand;

// src/commands/CreateInstancesCommand.ts




var _CreateInstancesCommand = class _CreateInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateInstances", {}).n("LightsailClient", "CreateInstancesCommand").f(void 0, void 0).ser(se_CreateInstancesCommand).de(de_CreateInstancesCommand).build() {
};
__name(_CreateInstancesCommand, "CreateInstancesCommand");
var CreateInstancesCommand = _CreateInstancesCommand;

// src/commands/CreateInstancesFromSnapshotCommand.ts




var _CreateInstancesFromSnapshotCommand = class _CreateInstancesFromSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateInstancesFromSnapshot", {}).n("LightsailClient", "CreateInstancesFromSnapshotCommand").f(void 0, void 0).ser(se_CreateInstancesFromSnapshotCommand).de(de_CreateInstancesFromSnapshotCommand).build() {
};
__name(_CreateInstancesFromSnapshotCommand, "CreateInstancesFromSnapshotCommand");
var CreateInstancesFromSnapshotCommand = _CreateInstancesFromSnapshotCommand;

// src/commands/CreateInstanceSnapshotCommand.ts




var _CreateInstanceSnapshotCommand = class _CreateInstanceSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateInstanceSnapshot", {}).n("LightsailClient", "CreateInstanceSnapshotCommand").f(void 0, void 0).ser(se_CreateInstanceSnapshotCommand).de(de_CreateInstanceSnapshotCommand).build() {
};
__name(_CreateInstanceSnapshotCommand, "CreateInstanceSnapshotCommand");
var CreateInstanceSnapshotCommand = _CreateInstanceSnapshotCommand;

// src/commands/CreateKeyPairCommand.ts




var _CreateKeyPairCommand = class _CreateKeyPairCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateKeyPair", {}).n("LightsailClient", "CreateKeyPairCommand").f(void 0, void 0).ser(se_CreateKeyPairCommand).de(de_CreateKeyPairCommand).build() {
};
__name(_CreateKeyPairCommand, "CreateKeyPairCommand");
var CreateKeyPairCommand = _CreateKeyPairCommand;

// src/commands/CreateLoadBalancerCommand.ts




var _CreateLoadBalancerCommand = class _CreateLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateLoadBalancer", {}).n("LightsailClient", "CreateLoadBalancerCommand").f(void 0, void 0).ser(se_CreateLoadBalancerCommand).de(de_CreateLoadBalancerCommand).build() {
};
__name(_CreateLoadBalancerCommand, "CreateLoadBalancerCommand");
var CreateLoadBalancerCommand = _CreateLoadBalancerCommand;

// src/commands/CreateLoadBalancerTlsCertificateCommand.ts




var _CreateLoadBalancerTlsCertificateCommand = class _CreateLoadBalancerTlsCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateLoadBalancerTlsCertificate", {}).n("LightsailClient", "CreateLoadBalancerTlsCertificateCommand").f(void 0, void 0).ser(se_CreateLoadBalancerTlsCertificateCommand).de(de_CreateLoadBalancerTlsCertificateCommand).build() {
};
__name(_CreateLoadBalancerTlsCertificateCommand, "CreateLoadBalancerTlsCertificateCommand");
var CreateLoadBalancerTlsCertificateCommand = _CreateLoadBalancerTlsCertificateCommand;

// src/commands/CreateRelationalDatabaseCommand.ts




var _CreateRelationalDatabaseCommand = class _CreateRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateRelationalDatabase", {}).n("LightsailClient", "CreateRelationalDatabaseCommand").f(CreateRelationalDatabaseRequestFilterSensitiveLog, void 0).ser(se_CreateRelationalDatabaseCommand).de(de_CreateRelationalDatabaseCommand).build() {
};
__name(_CreateRelationalDatabaseCommand, "CreateRelationalDatabaseCommand");
var CreateRelationalDatabaseCommand = _CreateRelationalDatabaseCommand;

// src/commands/CreateRelationalDatabaseFromSnapshotCommand.ts




var _CreateRelationalDatabaseFromSnapshotCommand = class _CreateRelationalDatabaseFromSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateRelationalDatabaseFromSnapshot", {}).n("LightsailClient", "CreateRelationalDatabaseFromSnapshotCommand").f(void 0, void 0).ser(se_CreateRelationalDatabaseFromSnapshotCommand).de(de_CreateRelationalDatabaseFromSnapshotCommand).build() {
};
__name(_CreateRelationalDatabaseFromSnapshotCommand, "CreateRelationalDatabaseFromSnapshotCommand");
var CreateRelationalDatabaseFromSnapshotCommand = _CreateRelationalDatabaseFromSnapshotCommand;

// src/commands/CreateRelationalDatabaseSnapshotCommand.ts




var _CreateRelationalDatabaseSnapshotCommand = class _CreateRelationalDatabaseSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "CreateRelationalDatabaseSnapshot", {}).n("LightsailClient", "CreateRelationalDatabaseSnapshotCommand").f(void 0, void 0).ser(se_CreateRelationalDatabaseSnapshotCommand).de(de_CreateRelationalDatabaseSnapshotCommand).build() {
};
__name(_CreateRelationalDatabaseSnapshotCommand, "CreateRelationalDatabaseSnapshotCommand");
var CreateRelationalDatabaseSnapshotCommand = _CreateRelationalDatabaseSnapshotCommand;

// src/commands/DeleteAlarmCommand.ts




var _DeleteAlarmCommand = class _DeleteAlarmCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteAlarm", {}).n("LightsailClient", "DeleteAlarmCommand").f(void 0, void 0).ser(se_DeleteAlarmCommand).de(de_DeleteAlarmCommand).build() {
};
__name(_DeleteAlarmCommand, "DeleteAlarmCommand");
var DeleteAlarmCommand = _DeleteAlarmCommand;

// src/commands/DeleteAutoSnapshotCommand.ts




var _DeleteAutoSnapshotCommand = class _DeleteAutoSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteAutoSnapshot", {}).n("LightsailClient", "DeleteAutoSnapshotCommand").f(void 0, void 0).ser(se_DeleteAutoSnapshotCommand).de(de_DeleteAutoSnapshotCommand).build() {
};
__name(_DeleteAutoSnapshotCommand, "DeleteAutoSnapshotCommand");
var DeleteAutoSnapshotCommand = _DeleteAutoSnapshotCommand;

// src/commands/DeleteBucketAccessKeyCommand.ts




var _DeleteBucketAccessKeyCommand = class _DeleteBucketAccessKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteBucketAccessKey", {}).n("LightsailClient", "DeleteBucketAccessKeyCommand").f(void 0, void 0).ser(se_DeleteBucketAccessKeyCommand).de(de_DeleteBucketAccessKeyCommand).build() {
};
__name(_DeleteBucketAccessKeyCommand, "DeleteBucketAccessKeyCommand");
var DeleteBucketAccessKeyCommand = _DeleteBucketAccessKeyCommand;

// src/commands/DeleteBucketCommand.ts




var _DeleteBucketCommand = class _DeleteBucketCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteBucket", {}).n("LightsailClient", "DeleteBucketCommand").f(void 0, void 0).ser(se_DeleteBucketCommand).de(de_DeleteBucketCommand).build() {
};
__name(_DeleteBucketCommand, "DeleteBucketCommand");
var DeleteBucketCommand = _DeleteBucketCommand;

// src/commands/DeleteCertificateCommand.ts




var _DeleteCertificateCommand = class _DeleteCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteCertificate", {}).n("LightsailClient", "DeleteCertificateCommand").f(void 0, void 0).ser(se_DeleteCertificateCommand).de(de_DeleteCertificateCommand).build() {
};
__name(_DeleteCertificateCommand, "DeleteCertificateCommand");
var DeleteCertificateCommand = _DeleteCertificateCommand;

// src/commands/DeleteContactMethodCommand.ts




var _DeleteContactMethodCommand = class _DeleteContactMethodCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteContactMethod", {}).n("LightsailClient", "DeleteContactMethodCommand").f(void 0, void 0).ser(se_DeleteContactMethodCommand).de(de_DeleteContactMethodCommand).build() {
};
__name(_DeleteContactMethodCommand, "DeleteContactMethodCommand");
var DeleteContactMethodCommand = _DeleteContactMethodCommand;

// src/commands/DeleteContainerImageCommand.ts




var _DeleteContainerImageCommand = class _DeleteContainerImageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteContainerImage", {}).n("LightsailClient", "DeleteContainerImageCommand").f(void 0, void 0).ser(se_DeleteContainerImageCommand).de(de_DeleteContainerImageCommand).build() {
};
__name(_DeleteContainerImageCommand, "DeleteContainerImageCommand");
var DeleteContainerImageCommand = _DeleteContainerImageCommand;

// src/commands/DeleteContainerServiceCommand.ts




var _DeleteContainerServiceCommand = class _DeleteContainerServiceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteContainerService", {}).n("LightsailClient", "DeleteContainerServiceCommand").f(void 0, void 0).ser(se_DeleteContainerServiceCommand).de(de_DeleteContainerServiceCommand).build() {
};
__name(_DeleteContainerServiceCommand, "DeleteContainerServiceCommand");
var DeleteContainerServiceCommand = _DeleteContainerServiceCommand;

// src/commands/DeleteDiskCommand.ts




var _DeleteDiskCommand = class _DeleteDiskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteDisk", {}).n("LightsailClient", "DeleteDiskCommand").f(void 0, void 0).ser(se_DeleteDiskCommand).de(de_DeleteDiskCommand).build() {
};
__name(_DeleteDiskCommand, "DeleteDiskCommand");
var DeleteDiskCommand = _DeleteDiskCommand;

// src/commands/DeleteDiskSnapshotCommand.ts




var _DeleteDiskSnapshotCommand = class _DeleteDiskSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteDiskSnapshot", {}).n("LightsailClient", "DeleteDiskSnapshotCommand").f(void 0, void 0).ser(se_DeleteDiskSnapshotCommand).de(de_DeleteDiskSnapshotCommand).build() {
};
__name(_DeleteDiskSnapshotCommand, "DeleteDiskSnapshotCommand");
var DeleteDiskSnapshotCommand = _DeleteDiskSnapshotCommand;

// src/commands/DeleteDistributionCommand.ts




var _DeleteDistributionCommand = class _DeleteDistributionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteDistribution", {}).n("LightsailClient", "DeleteDistributionCommand").f(void 0, void 0).ser(se_DeleteDistributionCommand).de(de_DeleteDistributionCommand).build() {
};
__name(_DeleteDistributionCommand, "DeleteDistributionCommand");
var DeleteDistributionCommand = _DeleteDistributionCommand;

// src/commands/DeleteDomainCommand.ts




var _DeleteDomainCommand = class _DeleteDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteDomain", {}).n("LightsailClient", "DeleteDomainCommand").f(void 0, void 0).ser(se_DeleteDomainCommand).de(de_DeleteDomainCommand).build() {
};
__name(_DeleteDomainCommand, "DeleteDomainCommand");
var DeleteDomainCommand = _DeleteDomainCommand;

// src/commands/DeleteDomainEntryCommand.ts




var _DeleteDomainEntryCommand = class _DeleteDomainEntryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteDomainEntry", {}).n("LightsailClient", "DeleteDomainEntryCommand").f(void 0, void 0).ser(se_DeleteDomainEntryCommand).de(de_DeleteDomainEntryCommand).build() {
};
__name(_DeleteDomainEntryCommand, "DeleteDomainEntryCommand");
var DeleteDomainEntryCommand = _DeleteDomainEntryCommand;

// src/commands/DeleteInstanceCommand.ts




var _DeleteInstanceCommand = class _DeleteInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteInstance", {}).n("LightsailClient", "DeleteInstanceCommand").f(void 0, void 0).ser(se_DeleteInstanceCommand).de(de_DeleteInstanceCommand).build() {
};
__name(_DeleteInstanceCommand, "DeleteInstanceCommand");
var DeleteInstanceCommand = _DeleteInstanceCommand;

// src/commands/DeleteInstanceSnapshotCommand.ts




var _DeleteInstanceSnapshotCommand = class _DeleteInstanceSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteInstanceSnapshot", {}).n("LightsailClient", "DeleteInstanceSnapshotCommand").f(void 0, void 0).ser(se_DeleteInstanceSnapshotCommand).de(de_DeleteInstanceSnapshotCommand).build() {
};
__name(_DeleteInstanceSnapshotCommand, "DeleteInstanceSnapshotCommand");
var DeleteInstanceSnapshotCommand = _DeleteInstanceSnapshotCommand;

// src/commands/DeleteKeyPairCommand.ts




var _DeleteKeyPairCommand = class _DeleteKeyPairCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteKeyPair", {}).n("LightsailClient", "DeleteKeyPairCommand").f(void 0, void 0).ser(se_DeleteKeyPairCommand).de(de_DeleteKeyPairCommand).build() {
};
__name(_DeleteKeyPairCommand, "DeleteKeyPairCommand");
var DeleteKeyPairCommand = _DeleteKeyPairCommand;

// src/commands/DeleteKnownHostKeysCommand.ts




var _DeleteKnownHostKeysCommand = class _DeleteKnownHostKeysCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteKnownHostKeys", {}).n("LightsailClient", "DeleteKnownHostKeysCommand").f(void 0, void 0).ser(se_DeleteKnownHostKeysCommand).de(de_DeleteKnownHostKeysCommand).build() {
};
__name(_DeleteKnownHostKeysCommand, "DeleteKnownHostKeysCommand");
var DeleteKnownHostKeysCommand = _DeleteKnownHostKeysCommand;

// src/commands/DeleteLoadBalancerCommand.ts




var _DeleteLoadBalancerCommand = class _DeleteLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteLoadBalancer", {}).n("LightsailClient", "DeleteLoadBalancerCommand").f(void 0, void 0).ser(se_DeleteLoadBalancerCommand).de(de_DeleteLoadBalancerCommand).build() {
};
__name(_DeleteLoadBalancerCommand, "DeleteLoadBalancerCommand");
var DeleteLoadBalancerCommand = _DeleteLoadBalancerCommand;

// src/commands/DeleteLoadBalancerTlsCertificateCommand.ts




var _DeleteLoadBalancerTlsCertificateCommand = class _DeleteLoadBalancerTlsCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteLoadBalancerTlsCertificate", {}).n("LightsailClient", "DeleteLoadBalancerTlsCertificateCommand").f(void 0, void 0).ser(se_DeleteLoadBalancerTlsCertificateCommand).de(de_DeleteLoadBalancerTlsCertificateCommand).build() {
};
__name(_DeleteLoadBalancerTlsCertificateCommand, "DeleteLoadBalancerTlsCertificateCommand");
var DeleteLoadBalancerTlsCertificateCommand = _DeleteLoadBalancerTlsCertificateCommand;

// src/commands/DeleteRelationalDatabaseCommand.ts




var _DeleteRelationalDatabaseCommand = class _DeleteRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteRelationalDatabase", {}).n("LightsailClient", "DeleteRelationalDatabaseCommand").f(void 0, void 0).ser(se_DeleteRelationalDatabaseCommand).de(de_DeleteRelationalDatabaseCommand).build() {
};
__name(_DeleteRelationalDatabaseCommand, "DeleteRelationalDatabaseCommand");
var DeleteRelationalDatabaseCommand = _DeleteRelationalDatabaseCommand;

// src/commands/DeleteRelationalDatabaseSnapshotCommand.ts




var _DeleteRelationalDatabaseSnapshotCommand = class _DeleteRelationalDatabaseSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DeleteRelationalDatabaseSnapshot", {}).n("LightsailClient", "DeleteRelationalDatabaseSnapshotCommand").f(void 0, void 0).ser(se_DeleteRelationalDatabaseSnapshotCommand).de(de_DeleteRelationalDatabaseSnapshotCommand).build() {
};
__name(_DeleteRelationalDatabaseSnapshotCommand, "DeleteRelationalDatabaseSnapshotCommand");
var DeleteRelationalDatabaseSnapshotCommand = _DeleteRelationalDatabaseSnapshotCommand;

// src/commands/DetachCertificateFromDistributionCommand.ts




var _DetachCertificateFromDistributionCommand = class _DetachCertificateFromDistributionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DetachCertificateFromDistribution", {}).n("LightsailClient", "DetachCertificateFromDistributionCommand").f(void 0, void 0).ser(se_DetachCertificateFromDistributionCommand).de(de_DetachCertificateFromDistributionCommand).build() {
};
__name(_DetachCertificateFromDistributionCommand, "DetachCertificateFromDistributionCommand");
var DetachCertificateFromDistributionCommand = _DetachCertificateFromDistributionCommand;

// src/commands/DetachDiskCommand.ts




var _DetachDiskCommand = class _DetachDiskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DetachDisk", {}).n("LightsailClient", "DetachDiskCommand").f(void 0, void 0).ser(se_DetachDiskCommand).de(de_DetachDiskCommand).build() {
};
__name(_DetachDiskCommand, "DetachDiskCommand");
var DetachDiskCommand = _DetachDiskCommand;

// src/commands/DetachInstancesFromLoadBalancerCommand.ts




var _DetachInstancesFromLoadBalancerCommand = class _DetachInstancesFromLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DetachInstancesFromLoadBalancer", {}).n("LightsailClient", "DetachInstancesFromLoadBalancerCommand").f(void 0, void 0).ser(se_DetachInstancesFromLoadBalancerCommand).de(de_DetachInstancesFromLoadBalancerCommand).build() {
};
__name(_DetachInstancesFromLoadBalancerCommand, "DetachInstancesFromLoadBalancerCommand");
var DetachInstancesFromLoadBalancerCommand = _DetachInstancesFromLoadBalancerCommand;

// src/commands/DetachStaticIpCommand.ts




var _DetachStaticIpCommand = class _DetachStaticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DetachStaticIp", {}).n("LightsailClient", "DetachStaticIpCommand").f(void 0, void 0).ser(se_DetachStaticIpCommand).de(de_DetachStaticIpCommand).build() {
};
__name(_DetachStaticIpCommand, "DetachStaticIpCommand");
var DetachStaticIpCommand = _DetachStaticIpCommand;

// src/commands/DisableAddOnCommand.ts




var _DisableAddOnCommand = class _DisableAddOnCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DisableAddOn", {}).n("LightsailClient", "DisableAddOnCommand").f(void 0, void 0).ser(se_DisableAddOnCommand).de(de_DisableAddOnCommand).build() {
};
__name(_DisableAddOnCommand, "DisableAddOnCommand");
var DisableAddOnCommand = _DisableAddOnCommand;

// src/commands/DownloadDefaultKeyPairCommand.ts




var _DownloadDefaultKeyPairCommand = class _DownloadDefaultKeyPairCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "DownloadDefaultKeyPair", {}).n("LightsailClient", "DownloadDefaultKeyPairCommand").f(void 0, void 0).ser(se_DownloadDefaultKeyPairCommand).de(de_DownloadDefaultKeyPairCommand).build() {
};
__name(_DownloadDefaultKeyPairCommand, "DownloadDefaultKeyPairCommand");
var DownloadDefaultKeyPairCommand = _DownloadDefaultKeyPairCommand;

// src/commands/EnableAddOnCommand.ts




var _EnableAddOnCommand = class _EnableAddOnCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "EnableAddOn", {}).n("LightsailClient", "EnableAddOnCommand").f(void 0, void 0).ser(se_EnableAddOnCommand).de(de_EnableAddOnCommand).build() {
};
__name(_EnableAddOnCommand, "EnableAddOnCommand");
var EnableAddOnCommand = _EnableAddOnCommand;

// src/commands/ExportSnapshotCommand.ts




var _ExportSnapshotCommand = class _ExportSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "ExportSnapshot", {}).n("LightsailClient", "ExportSnapshotCommand").f(void 0, void 0).ser(se_ExportSnapshotCommand).de(de_ExportSnapshotCommand).build() {
};
__name(_ExportSnapshotCommand, "ExportSnapshotCommand");
var ExportSnapshotCommand = _ExportSnapshotCommand;

// src/commands/GetActiveNamesCommand.ts




var _GetActiveNamesCommand = class _GetActiveNamesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetActiveNames", {}).n("LightsailClient", "GetActiveNamesCommand").f(void 0, void 0).ser(se_GetActiveNamesCommand).de(de_GetActiveNamesCommand).build() {
};
__name(_GetActiveNamesCommand, "GetActiveNamesCommand");
var GetActiveNamesCommand = _GetActiveNamesCommand;

// src/commands/GetAlarmsCommand.ts




var _GetAlarmsCommand = class _GetAlarmsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetAlarms", {}).n("LightsailClient", "GetAlarmsCommand").f(void 0, void 0).ser(se_GetAlarmsCommand).de(de_GetAlarmsCommand).build() {
};
__name(_GetAlarmsCommand, "GetAlarmsCommand");
var GetAlarmsCommand = _GetAlarmsCommand;

// src/commands/GetAutoSnapshotsCommand.ts




var _GetAutoSnapshotsCommand = class _GetAutoSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetAutoSnapshots", {}).n("LightsailClient", "GetAutoSnapshotsCommand").f(void 0, void 0).ser(se_GetAutoSnapshotsCommand).de(de_GetAutoSnapshotsCommand).build() {
};
__name(_GetAutoSnapshotsCommand, "GetAutoSnapshotsCommand");
var GetAutoSnapshotsCommand = _GetAutoSnapshotsCommand;

// src/commands/GetBlueprintsCommand.ts




var _GetBlueprintsCommand = class _GetBlueprintsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetBlueprints", {}).n("LightsailClient", "GetBlueprintsCommand").f(void 0, void 0).ser(se_GetBlueprintsCommand).de(de_GetBlueprintsCommand).build() {
};
__name(_GetBlueprintsCommand, "GetBlueprintsCommand");
var GetBlueprintsCommand = _GetBlueprintsCommand;

// src/commands/GetBucketAccessKeysCommand.ts




var _GetBucketAccessKeysCommand = class _GetBucketAccessKeysCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetBucketAccessKeys", {}).n("LightsailClient", "GetBucketAccessKeysCommand").f(void 0, GetBucketAccessKeysResultFilterSensitiveLog).ser(se_GetBucketAccessKeysCommand).de(de_GetBucketAccessKeysCommand).build() {
};
__name(_GetBucketAccessKeysCommand, "GetBucketAccessKeysCommand");
var GetBucketAccessKeysCommand = _GetBucketAccessKeysCommand;

// src/commands/GetBucketBundlesCommand.ts




var _GetBucketBundlesCommand = class _GetBucketBundlesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetBucketBundles", {}).n("LightsailClient", "GetBucketBundlesCommand").f(void 0, void 0).ser(se_GetBucketBundlesCommand).de(de_GetBucketBundlesCommand).build() {
};
__name(_GetBucketBundlesCommand, "GetBucketBundlesCommand");
var GetBucketBundlesCommand = _GetBucketBundlesCommand;

// src/commands/GetBucketMetricDataCommand.ts




var _GetBucketMetricDataCommand = class _GetBucketMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetBucketMetricData", {}).n("LightsailClient", "GetBucketMetricDataCommand").f(void 0, void 0).ser(se_GetBucketMetricDataCommand).de(de_GetBucketMetricDataCommand).build() {
};
__name(_GetBucketMetricDataCommand, "GetBucketMetricDataCommand");
var GetBucketMetricDataCommand = _GetBucketMetricDataCommand;

// src/commands/GetBucketsCommand.ts




var _GetBucketsCommand = class _GetBucketsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetBuckets", {}).n("LightsailClient", "GetBucketsCommand").f(void 0, void 0).ser(se_GetBucketsCommand).de(de_GetBucketsCommand).build() {
};
__name(_GetBucketsCommand, "GetBucketsCommand");
var GetBucketsCommand = _GetBucketsCommand;

// src/commands/GetBundlesCommand.ts




var _GetBundlesCommand = class _GetBundlesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetBundles", {}).n("LightsailClient", "GetBundlesCommand").f(void 0, void 0).ser(se_GetBundlesCommand).de(de_GetBundlesCommand).build() {
};
__name(_GetBundlesCommand, "GetBundlesCommand");
var GetBundlesCommand = _GetBundlesCommand;

// src/commands/GetCertificatesCommand.ts




var _GetCertificatesCommand = class _GetCertificatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetCertificates", {}).n("LightsailClient", "GetCertificatesCommand").f(void 0, void 0).ser(se_GetCertificatesCommand).de(de_GetCertificatesCommand).build() {
};
__name(_GetCertificatesCommand, "GetCertificatesCommand");
var GetCertificatesCommand = _GetCertificatesCommand;

// src/commands/GetCloudFormationStackRecordsCommand.ts




var _GetCloudFormationStackRecordsCommand = class _GetCloudFormationStackRecordsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetCloudFormationStackRecords", {}).n("LightsailClient", "GetCloudFormationStackRecordsCommand").f(void 0, void 0).ser(se_GetCloudFormationStackRecordsCommand).de(de_GetCloudFormationStackRecordsCommand).build() {
};
__name(_GetCloudFormationStackRecordsCommand, "GetCloudFormationStackRecordsCommand");
var GetCloudFormationStackRecordsCommand = _GetCloudFormationStackRecordsCommand;

// src/commands/GetContactMethodsCommand.ts




var _GetContactMethodsCommand = class _GetContactMethodsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContactMethods", {}).n("LightsailClient", "GetContactMethodsCommand").f(void 0, void 0).ser(se_GetContactMethodsCommand).de(de_GetContactMethodsCommand).build() {
};
__name(_GetContactMethodsCommand, "GetContactMethodsCommand");
var GetContactMethodsCommand = _GetContactMethodsCommand;

// src/commands/GetContainerAPIMetadataCommand.ts




var _GetContainerAPIMetadataCommand = class _GetContainerAPIMetadataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerAPIMetadata", {}).n("LightsailClient", "GetContainerAPIMetadataCommand").f(void 0, void 0).ser(se_GetContainerAPIMetadataCommand).de(de_GetContainerAPIMetadataCommand).build() {
};
__name(_GetContainerAPIMetadataCommand, "GetContainerAPIMetadataCommand");
var GetContainerAPIMetadataCommand = _GetContainerAPIMetadataCommand;

// src/commands/GetContainerImagesCommand.ts




var _GetContainerImagesCommand = class _GetContainerImagesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerImages", {}).n("LightsailClient", "GetContainerImagesCommand").f(void 0, void 0).ser(se_GetContainerImagesCommand).de(de_GetContainerImagesCommand).build() {
};
__name(_GetContainerImagesCommand, "GetContainerImagesCommand");
var GetContainerImagesCommand = _GetContainerImagesCommand;

// src/commands/GetContainerLogCommand.ts




var _GetContainerLogCommand = class _GetContainerLogCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerLog", {}).n("LightsailClient", "GetContainerLogCommand").f(void 0, void 0).ser(se_GetContainerLogCommand).de(de_GetContainerLogCommand).build() {
};
__name(_GetContainerLogCommand, "GetContainerLogCommand");
var GetContainerLogCommand = _GetContainerLogCommand;

// src/commands/GetContainerServiceDeploymentsCommand.ts




var _GetContainerServiceDeploymentsCommand = class _GetContainerServiceDeploymentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerServiceDeployments", {}).n("LightsailClient", "GetContainerServiceDeploymentsCommand").f(void 0, void 0).ser(se_GetContainerServiceDeploymentsCommand).de(de_GetContainerServiceDeploymentsCommand).build() {
};
__name(_GetContainerServiceDeploymentsCommand, "GetContainerServiceDeploymentsCommand");
var GetContainerServiceDeploymentsCommand = _GetContainerServiceDeploymentsCommand;

// src/commands/GetContainerServiceMetricDataCommand.ts




var _GetContainerServiceMetricDataCommand = class _GetContainerServiceMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerServiceMetricData", {}).n("LightsailClient", "GetContainerServiceMetricDataCommand").f(void 0, void 0).ser(se_GetContainerServiceMetricDataCommand).de(de_GetContainerServiceMetricDataCommand).build() {
};
__name(_GetContainerServiceMetricDataCommand, "GetContainerServiceMetricDataCommand");
var GetContainerServiceMetricDataCommand = _GetContainerServiceMetricDataCommand;

// src/commands/GetContainerServicePowersCommand.ts




var _GetContainerServicePowersCommand = class _GetContainerServicePowersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerServicePowers", {}).n("LightsailClient", "GetContainerServicePowersCommand").f(void 0, void 0).ser(se_GetContainerServicePowersCommand).de(de_GetContainerServicePowersCommand).build() {
};
__name(_GetContainerServicePowersCommand, "GetContainerServicePowersCommand");
var GetContainerServicePowersCommand = _GetContainerServicePowersCommand;

// src/commands/GetContainerServicesCommand.ts




var _GetContainerServicesCommand = class _GetContainerServicesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetContainerServices", {}).n("LightsailClient", "GetContainerServicesCommand").f(void 0, void 0).ser(se_GetContainerServicesCommand).de(de_GetContainerServicesCommand).build() {
};
__name(_GetContainerServicesCommand, "GetContainerServicesCommand");
var GetContainerServicesCommand = _GetContainerServicesCommand;

// src/commands/GetCostEstimateCommand.ts




var _GetCostEstimateCommand = class _GetCostEstimateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetCostEstimate", {}).n("LightsailClient", "GetCostEstimateCommand").f(void 0, void 0).ser(se_GetCostEstimateCommand).de(de_GetCostEstimateCommand).build() {
};
__name(_GetCostEstimateCommand, "GetCostEstimateCommand");
var GetCostEstimateCommand = _GetCostEstimateCommand;

// src/commands/GetDiskCommand.ts




var _GetDiskCommand = class _GetDiskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDisk", {}).n("LightsailClient", "GetDiskCommand").f(void 0, void 0).ser(se_GetDiskCommand).de(de_GetDiskCommand).build() {
};
__name(_GetDiskCommand, "GetDiskCommand");
var GetDiskCommand = _GetDiskCommand;

// src/commands/GetDisksCommand.ts




var _GetDisksCommand = class _GetDisksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDisks", {}).n("LightsailClient", "GetDisksCommand").f(void 0, void 0).ser(se_GetDisksCommand).de(de_GetDisksCommand).build() {
};
__name(_GetDisksCommand, "GetDisksCommand");
var GetDisksCommand = _GetDisksCommand;

// src/commands/GetDiskSnapshotCommand.ts




var _GetDiskSnapshotCommand = class _GetDiskSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDiskSnapshot", {}).n("LightsailClient", "GetDiskSnapshotCommand").f(void 0, void 0).ser(se_GetDiskSnapshotCommand).de(de_GetDiskSnapshotCommand).build() {
};
__name(_GetDiskSnapshotCommand, "GetDiskSnapshotCommand");
var GetDiskSnapshotCommand = _GetDiskSnapshotCommand;

// src/commands/GetDiskSnapshotsCommand.ts




var _GetDiskSnapshotsCommand = class _GetDiskSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDiskSnapshots", {}).n("LightsailClient", "GetDiskSnapshotsCommand").f(void 0, void 0).ser(se_GetDiskSnapshotsCommand).de(de_GetDiskSnapshotsCommand).build() {
};
__name(_GetDiskSnapshotsCommand, "GetDiskSnapshotsCommand");
var GetDiskSnapshotsCommand = _GetDiskSnapshotsCommand;

// src/commands/GetDistributionBundlesCommand.ts




var _GetDistributionBundlesCommand = class _GetDistributionBundlesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDistributionBundles", {}).n("LightsailClient", "GetDistributionBundlesCommand").f(void 0, void 0).ser(se_GetDistributionBundlesCommand).de(de_GetDistributionBundlesCommand).build() {
};
__name(_GetDistributionBundlesCommand, "GetDistributionBundlesCommand");
var GetDistributionBundlesCommand = _GetDistributionBundlesCommand;

// src/commands/GetDistributionLatestCacheResetCommand.ts




var _GetDistributionLatestCacheResetCommand = class _GetDistributionLatestCacheResetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDistributionLatestCacheReset", {}).n("LightsailClient", "GetDistributionLatestCacheResetCommand").f(void 0, void 0).ser(se_GetDistributionLatestCacheResetCommand).de(de_GetDistributionLatestCacheResetCommand).build() {
};
__name(_GetDistributionLatestCacheResetCommand, "GetDistributionLatestCacheResetCommand");
var GetDistributionLatestCacheResetCommand = _GetDistributionLatestCacheResetCommand;

// src/commands/GetDistributionMetricDataCommand.ts




var _GetDistributionMetricDataCommand = class _GetDistributionMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDistributionMetricData", {}).n("LightsailClient", "GetDistributionMetricDataCommand").f(void 0, void 0).ser(se_GetDistributionMetricDataCommand).de(de_GetDistributionMetricDataCommand).build() {
};
__name(_GetDistributionMetricDataCommand, "GetDistributionMetricDataCommand");
var GetDistributionMetricDataCommand = _GetDistributionMetricDataCommand;

// src/commands/GetDistributionsCommand.ts




var _GetDistributionsCommand = class _GetDistributionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDistributions", {}).n("LightsailClient", "GetDistributionsCommand").f(void 0, void 0).ser(se_GetDistributionsCommand).de(de_GetDistributionsCommand).build() {
};
__name(_GetDistributionsCommand, "GetDistributionsCommand");
var GetDistributionsCommand = _GetDistributionsCommand;

// src/commands/GetDomainCommand.ts




var _GetDomainCommand = class _GetDomainCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDomain", {}).n("LightsailClient", "GetDomainCommand").f(void 0, void 0).ser(se_GetDomainCommand).de(de_GetDomainCommand).build() {
};
__name(_GetDomainCommand, "GetDomainCommand");
var GetDomainCommand = _GetDomainCommand;

// src/commands/GetDomainsCommand.ts




var _GetDomainsCommand = class _GetDomainsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetDomains", {}).n("LightsailClient", "GetDomainsCommand").f(void 0, void 0).ser(se_GetDomainsCommand).de(de_GetDomainsCommand).build() {
};
__name(_GetDomainsCommand, "GetDomainsCommand");
var GetDomainsCommand = _GetDomainsCommand;

// src/commands/GetExportSnapshotRecordsCommand.ts




var _GetExportSnapshotRecordsCommand = class _GetExportSnapshotRecordsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetExportSnapshotRecords", {}).n("LightsailClient", "GetExportSnapshotRecordsCommand").f(void 0, void 0).ser(se_GetExportSnapshotRecordsCommand).de(de_GetExportSnapshotRecordsCommand).build() {
};
__name(_GetExportSnapshotRecordsCommand, "GetExportSnapshotRecordsCommand");
var GetExportSnapshotRecordsCommand = _GetExportSnapshotRecordsCommand;

// src/commands/GetInstanceAccessDetailsCommand.ts




var _GetInstanceAccessDetailsCommand = class _GetInstanceAccessDetailsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstanceAccessDetails", {}).n("LightsailClient", "GetInstanceAccessDetailsCommand").f(void 0, void 0).ser(se_GetInstanceAccessDetailsCommand).de(de_GetInstanceAccessDetailsCommand).build() {
};
__name(_GetInstanceAccessDetailsCommand, "GetInstanceAccessDetailsCommand");
var GetInstanceAccessDetailsCommand = _GetInstanceAccessDetailsCommand;

// src/commands/GetInstanceCommand.ts




var _GetInstanceCommand = class _GetInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstance", {}).n("LightsailClient", "GetInstanceCommand").f(void 0, void 0).ser(se_GetInstanceCommand).de(de_GetInstanceCommand).build() {
};
__name(_GetInstanceCommand, "GetInstanceCommand");
var GetInstanceCommand = _GetInstanceCommand;

// src/commands/GetInstanceMetricDataCommand.ts




var _GetInstanceMetricDataCommand = class _GetInstanceMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstanceMetricData", {}).n("LightsailClient", "GetInstanceMetricDataCommand").f(void 0, void 0).ser(se_GetInstanceMetricDataCommand).de(de_GetInstanceMetricDataCommand).build() {
};
__name(_GetInstanceMetricDataCommand, "GetInstanceMetricDataCommand");
var GetInstanceMetricDataCommand = _GetInstanceMetricDataCommand;

// src/commands/GetInstancePortStatesCommand.ts




var _GetInstancePortStatesCommand = class _GetInstancePortStatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstancePortStates", {}).n("LightsailClient", "GetInstancePortStatesCommand").f(void 0, void 0).ser(se_GetInstancePortStatesCommand).de(de_GetInstancePortStatesCommand).build() {
};
__name(_GetInstancePortStatesCommand, "GetInstancePortStatesCommand");
var GetInstancePortStatesCommand = _GetInstancePortStatesCommand;

// src/commands/GetInstancesCommand.ts




var _GetInstancesCommand = class _GetInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstances", {}).n("LightsailClient", "GetInstancesCommand").f(void 0, void 0).ser(se_GetInstancesCommand).de(de_GetInstancesCommand).build() {
};
__name(_GetInstancesCommand, "GetInstancesCommand");
var GetInstancesCommand = _GetInstancesCommand;

// src/commands/GetInstanceSnapshotCommand.ts




var _GetInstanceSnapshotCommand = class _GetInstanceSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstanceSnapshot", {}).n("LightsailClient", "GetInstanceSnapshotCommand").f(void 0, void 0).ser(se_GetInstanceSnapshotCommand).de(de_GetInstanceSnapshotCommand).build() {
};
__name(_GetInstanceSnapshotCommand, "GetInstanceSnapshotCommand");
var GetInstanceSnapshotCommand = _GetInstanceSnapshotCommand;

// src/commands/GetInstanceSnapshotsCommand.ts




var _GetInstanceSnapshotsCommand = class _GetInstanceSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstanceSnapshots", {}).n("LightsailClient", "GetInstanceSnapshotsCommand").f(void 0, void 0).ser(se_GetInstanceSnapshotsCommand).de(de_GetInstanceSnapshotsCommand).build() {
};
__name(_GetInstanceSnapshotsCommand, "GetInstanceSnapshotsCommand");
var GetInstanceSnapshotsCommand = _GetInstanceSnapshotsCommand;

// src/commands/GetInstanceStateCommand.ts




var _GetInstanceStateCommand = class _GetInstanceStateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetInstanceState", {}).n("LightsailClient", "GetInstanceStateCommand").f(void 0, void 0).ser(se_GetInstanceStateCommand).de(de_GetInstanceStateCommand).build() {
};
__name(_GetInstanceStateCommand, "GetInstanceStateCommand");
var GetInstanceStateCommand = _GetInstanceStateCommand;

// src/commands/GetKeyPairCommand.ts




var _GetKeyPairCommand = class _GetKeyPairCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetKeyPair", {}).n("LightsailClient", "GetKeyPairCommand").f(void 0, void 0).ser(se_GetKeyPairCommand).de(de_GetKeyPairCommand).build() {
};
__name(_GetKeyPairCommand, "GetKeyPairCommand");
var GetKeyPairCommand = _GetKeyPairCommand;

// src/commands/GetKeyPairsCommand.ts




var _GetKeyPairsCommand = class _GetKeyPairsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetKeyPairs", {}).n("LightsailClient", "GetKeyPairsCommand").f(void 0, void 0).ser(se_GetKeyPairsCommand).de(de_GetKeyPairsCommand).build() {
};
__name(_GetKeyPairsCommand, "GetKeyPairsCommand");
var GetKeyPairsCommand = _GetKeyPairsCommand;

// src/commands/GetLoadBalancerCommand.ts




var _GetLoadBalancerCommand = class _GetLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetLoadBalancer", {}).n("LightsailClient", "GetLoadBalancerCommand").f(void 0, void 0).ser(se_GetLoadBalancerCommand).de(de_GetLoadBalancerCommand).build() {
};
__name(_GetLoadBalancerCommand, "GetLoadBalancerCommand");
var GetLoadBalancerCommand = _GetLoadBalancerCommand;

// src/commands/GetLoadBalancerMetricDataCommand.ts




var _GetLoadBalancerMetricDataCommand = class _GetLoadBalancerMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetLoadBalancerMetricData", {}).n("LightsailClient", "GetLoadBalancerMetricDataCommand").f(void 0, void 0).ser(se_GetLoadBalancerMetricDataCommand).de(de_GetLoadBalancerMetricDataCommand).build() {
};
__name(_GetLoadBalancerMetricDataCommand, "GetLoadBalancerMetricDataCommand");
var GetLoadBalancerMetricDataCommand = _GetLoadBalancerMetricDataCommand;

// src/commands/GetLoadBalancersCommand.ts




var _GetLoadBalancersCommand = class _GetLoadBalancersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetLoadBalancers", {}).n("LightsailClient", "GetLoadBalancersCommand").f(void 0, void 0).ser(se_GetLoadBalancersCommand).de(de_GetLoadBalancersCommand).build() {
};
__name(_GetLoadBalancersCommand, "GetLoadBalancersCommand");
var GetLoadBalancersCommand = _GetLoadBalancersCommand;

// src/commands/GetLoadBalancerTlsCertificatesCommand.ts




var _GetLoadBalancerTlsCertificatesCommand = class _GetLoadBalancerTlsCertificatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetLoadBalancerTlsCertificates", {}).n("LightsailClient", "GetLoadBalancerTlsCertificatesCommand").f(void 0, void 0).ser(se_GetLoadBalancerTlsCertificatesCommand).de(de_GetLoadBalancerTlsCertificatesCommand).build() {
};
__name(_GetLoadBalancerTlsCertificatesCommand, "GetLoadBalancerTlsCertificatesCommand");
var GetLoadBalancerTlsCertificatesCommand = _GetLoadBalancerTlsCertificatesCommand;

// src/commands/GetLoadBalancerTlsPoliciesCommand.ts




var _GetLoadBalancerTlsPoliciesCommand = class _GetLoadBalancerTlsPoliciesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetLoadBalancerTlsPolicies", {}).n("LightsailClient", "GetLoadBalancerTlsPoliciesCommand").f(void 0, void 0).ser(se_GetLoadBalancerTlsPoliciesCommand).de(de_GetLoadBalancerTlsPoliciesCommand).build() {
};
__name(_GetLoadBalancerTlsPoliciesCommand, "GetLoadBalancerTlsPoliciesCommand");
var GetLoadBalancerTlsPoliciesCommand = _GetLoadBalancerTlsPoliciesCommand;

// src/commands/GetOperationCommand.ts




var _GetOperationCommand = class _GetOperationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetOperation", {}).n("LightsailClient", "GetOperationCommand").f(void 0, void 0).ser(se_GetOperationCommand).de(de_GetOperationCommand).build() {
};
__name(_GetOperationCommand, "GetOperationCommand");
var GetOperationCommand = _GetOperationCommand;

// src/commands/GetOperationsCommand.ts




var _GetOperationsCommand = class _GetOperationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetOperations", {}).n("LightsailClient", "GetOperationsCommand").f(void 0, void 0).ser(se_GetOperationsCommand).de(de_GetOperationsCommand).build() {
};
__name(_GetOperationsCommand, "GetOperationsCommand");
var GetOperationsCommand = _GetOperationsCommand;

// src/commands/GetOperationsForResourceCommand.ts




var _GetOperationsForResourceCommand = class _GetOperationsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetOperationsForResource", {}).n("LightsailClient", "GetOperationsForResourceCommand").f(void 0, void 0).ser(se_GetOperationsForResourceCommand).de(de_GetOperationsForResourceCommand).build() {
};
__name(_GetOperationsForResourceCommand, "GetOperationsForResourceCommand");
var GetOperationsForResourceCommand = _GetOperationsForResourceCommand;

// src/commands/GetRegionsCommand.ts




var _GetRegionsCommand = class _GetRegionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRegions", {}).n("LightsailClient", "GetRegionsCommand").f(void 0, void 0).ser(se_GetRegionsCommand).de(de_GetRegionsCommand).build() {
};
__name(_GetRegionsCommand, "GetRegionsCommand");
var GetRegionsCommand = _GetRegionsCommand;

// src/commands/GetRelationalDatabaseBlueprintsCommand.ts




var _GetRelationalDatabaseBlueprintsCommand = class _GetRelationalDatabaseBlueprintsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseBlueprints", {}).n("LightsailClient", "GetRelationalDatabaseBlueprintsCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseBlueprintsCommand).de(de_GetRelationalDatabaseBlueprintsCommand).build() {
};
__name(_GetRelationalDatabaseBlueprintsCommand, "GetRelationalDatabaseBlueprintsCommand");
var GetRelationalDatabaseBlueprintsCommand = _GetRelationalDatabaseBlueprintsCommand;

// src/commands/GetRelationalDatabaseBundlesCommand.ts




var _GetRelationalDatabaseBundlesCommand = class _GetRelationalDatabaseBundlesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseBundles", {}).n("LightsailClient", "GetRelationalDatabaseBundlesCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseBundlesCommand).de(de_GetRelationalDatabaseBundlesCommand).build() {
};
__name(_GetRelationalDatabaseBundlesCommand, "GetRelationalDatabaseBundlesCommand");
var GetRelationalDatabaseBundlesCommand = _GetRelationalDatabaseBundlesCommand;

// src/commands/GetRelationalDatabaseCommand.ts




var _GetRelationalDatabaseCommand = class _GetRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabase", {}).n("LightsailClient", "GetRelationalDatabaseCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseCommand).de(de_GetRelationalDatabaseCommand).build() {
};
__name(_GetRelationalDatabaseCommand, "GetRelationalDatabaseCommand");
var GetRelationalDatabaseCommand = _GetRelationalDatabaseCommand;

// src/commands/GetRelationalDatabaseEventsCommand.ts




var _GetRelationalDatabaseEventsCommand = class _GetRelationalDatabaseEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseEvents", {}).n("LightsailClient", "GetRelationalDatabaseEventsCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseEventsCommand).de(de_GetRelationalDatabaseEventsCommand).build() {
};
__name(_GetRelationalDatabaseEventsCommand, "GetRelationalDatabaseEventsCommand");
var GetRelationalDatabaseEventsCommand = _GetRelationalDatabaseEventsCommand;

// src/commands/GetRelationalDatabaseLogEventsCommand.ts




var _GetRelationalDatabaseLogEventsCommand = class _GetRelationalDatabaseLogEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseLogEvents", {}).n("LightsailClient", "GetRelationalDatabaseLogEventsCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseLogEventsCommand).de(de_GetRelationalDatabaseLogEventsCommand).build() {
};
__name(_GetRelationalDatabaseLogEventsCommand, "GetRelationalDatabaseLogEventsCommand");
var GetRelationalDatabaseLogEventsCommand = _GetRelationalDatabaseLogEventsCommand;

// src/commands/GetRelationalDatabaseLogStreamsCommand.ts




var _GetRelationalDatabaseLogStreamsCommand = class _GetRelationalDatabaseLogStreamsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseLogStreams", {}).n("LightsailClient", "GetRelationalDatabaseLogStreamsCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseLogStreamsCommand).de(de_GetRelationalDatabaseLogStreamsCommand).build() {
};
__name(_GetRelationalDatabaseLogStreamsCommand, "GetRelationalDatabaseLogStreamsCommand");
var GetRelationalDatabaseLogStreamsCommand = _GetRelationalDatabaseLogStreamsCommand;

// src/commands/GetRelationalDatabaseMasterUserPasswordCommand.ts





// src/models/models_1.ts

var HttpEndpoint = {
  disabled: "disabled",
  enabled: "enabled"
};
var HttpProtocolIpv6 = {
  disabled: "disabled",
  enabled: "enabled"
};
var HttpTokens = {
  optional: "optional",
  required: "required"
};
var InstanceMetadataState = {
  applied: "applied",
  pending: "pending"
};
var PortAccessType = {
  Private: "Private",
  Public: "Public"
};
var InstanceAccessProtocol = {
  rdp: "rdp",
  ssh: "ssh"
};
var InstanceMetricName = {
  BurstCapacityPercentage: "BurstCapacityPercentage",
  BurstCapacityTime: "BurstCapacityTime",
  CPUUtilization: "CPUUtilization",
  MetadataNoToken: "MetadataNoToken",
  NetworkIn: "NetworkIn",
  NetworkOut: "NetworkOut",
  StatusCheckFailed: "StatusCheckFailed",
  StatusCheckFailed_Instance: "StatusCheckFailed_Instance",
  StatusCheckFailed_System: "StatusCheckFailed_System"
};
var PortState = {
  Closed: "closed",
  Open: "open"
};
var InstanceSnapshotState = {
  Available: "available",
  Error: "error",
  Pending: "pending"
};
var LoadBalancerAttributeName = {
  HealthCheckPath: "HealthCheckPath",
  HttpsRedirectionEnabled: "HttpsRedirectionEnabled",
  SessionStickinessEnabled: "SessionStickinessEnabled",
  SessionStickiness_LB_CookieDurationSeconds: "SessionStickiness_LB_CookieDurationSeconds",
  TlsPolicyName: "TlsPolicyName"
};
var InstanceHealthState = {
  Draining: "draining",
  Healthy: "healthy",
  Initial: "initial",
  Unavailable: "unavailable",
  Unhealthy: "unhealthy",
  Unused: "unused"
};
var InstanceHealthReason = {
  InstanceDeregistrationInProgress: "Instance.DeregistrationInProgress",
  InstanceFailedHealthChecks: "Instance.FailedHealthChecks",
  InstanceInvalidState: "Instance.InvalidState",
  InstanceIpUnusable: "Instance.IpUnusable",
  InstanceNotInUse: "Instance.NotInUse",
  InstanceNotRegistered: "Instance.NotRegistered",
  InstanceResponseCodeMismatch: "Instance.ResponseCodeMismatch",
  InstanceTimeout: "Instance.Timeout",
  LbInitialHealthChecking: "Lb.InitialHealthChecking",
  LbInternalError: "Lb.InternalError",
  LbRegistrationInProgress: "Lb.RegistrationInProgress"
};
var LoadBalancerProtocol = {
  HTTP: "HTTP",
  HTTP_HTTPS: "HTTP_HTTPS"
};
var LoadBalancerState = {
  Active: "active",
  ActiveImpaired: "active_impaired",
  Failed: "failed",
  Provisioning: "provisioning",
  Unknown: "unknown"
};
var LoadBalancerMetricName = {
  ClientTLSNegotiationErrorCount: "ClientTLSNegotiationErrorCount",
  HTTPCode_Instance_2XX_Count: "HTTPCode_Instance_2XX_Count",
  HTTPCode_Instance_3XX_Count: "HTTPCode_Instance_3XX_Count",
  HTTPCode_Instance_4XX_Count: "HTTPCode_Instance_4XX_Count",
  HTTPCode_Instance_5XX_Count: "HTTPCode_Instance_5XX_Count",
  HTTPCode_LB_4XX_Count: "HTTPCode_LB_4XX_Count",
  HTTPCode_LB_5XX_Count: "HTTPCode_LB_5XX_Count",
  HealthyHostCount: "HealthyHostCount",
  InstanceResponseTime: "InstanceResponseTime",
  RejectedConnectionCount: "RejectedConnectionCount",
  RequestCount: "RequestCount",
  UnhealthyHostCount: "UnhealthyHostCount"
};
var LoadBalancerTlsCertificateDnsRecordCreationStateCode = {
  Failed: "FAILED",
  Started: "STARTED",
  Succeeded: "SUCCEEDED"
};
var LoadBalancerTlsCertificateDomainStatus = {
  Failed: "FAILED",
  PendingValidation: "PENDING_VALIDATION",
  Success: "SUCCESS"
};
var LoadBalancerTlsCertificateFailureReason = {
  AdditionalVerificationRequired: "ADDITIONAL_VERIFICATION_REQUIRED",
  DomainNotAllowed: "DOMAIN_NOT_ALLOWED",
  InvalidPublicDomain: "INVALID_PUBLIC_DOMAIN",
  NoAvailableContacts: "NO_AVAILABLE_CONTACTS",
  Other: "OTHER"
};
var LoadBalancerTlsCertificateRenewalStatus = {
  Failed: "FAILED",
  PendingAutoRenewal: "PENDING_AUTO_RENEWAL",
  PendingValidation: "PENDING_VALIDATION",
  Success: "SUCCESS"
};
var LoadBalancerTlsCertificateRevocationReason = {
  AACompromise: "A_A_COMPROMISE",
  AffiliationChanged: "AFFILIATION_CHANGED",
  CaCompromise: "CA_COMPROMISE",
  CertificateHold: "CERTIFICATE_HOLD",
  CessationOfOperation: "CESSATION_OF_OPERATION",
  KeyCompromise: "KEY_COMPROMISE",
  PrivilegeWithdrawn: "PRIVILEGE_WITHDRAWN",
  RemoveFromCrl: "REMOVE_FROM_CRL",
  Superceded: "SUPERCEDED",
  Unspecified: "UNSPECIFIED"
};
var LoadBalancerTlsCertificateStatus = {
  Expired: "EXPIRED",
  Failed: "FAILED",
  Inactive: "INACTIVE",
  Issued: "ISSUED",
  PendingValidation: "PENDING_VALIDATION",
  Revoked: "REVOKED",
  Unknown: "UNKNOWN",
  ValidationTimedOut: "VALIDATION_TIMED_OUT"
};
var RelationalDatabaseEngine = {
  MYSQL: "mysql"
};
var RelationalDatabasePasswordVersion = {
  CURRENT: "CURRENT",
  PENDING: "PENDING",
  PREVIOUS: "PREVIOUS"
};
var RelationalDatabaseMetricName = {
  CPUUtilization: "CPUUtilization",
  DatabaseConnections: "DatabaseConnections",
  DiskQueueDepth: "DiskQueueDepth",
  FreeStorageSpace: "FreeStorageSpace",
  NetworkReceiveThroughput: "NetworkReceiveThroughput",
  NetworkTransmitThroughput: "NetworkTransmitThroughput"
};
var SetupStatus = {
  Failed: "failed",
  InProgress: "inProgress",
  Succeeded: "succeeded"
};
var ResourceBucketAccess = {
  Allow: "allow",
  Deny: "deny"
};
var GetRelationalDatabaseMasterUserPasswordResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.masterUserPassword && { masterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "GetRelationalDatabaseMasterUserPasswordResultFilterSensitiveLog");
var SetupInstanceHttpsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.emailAddress && { emailAddress: import_smithy_client.SENSITIVE_STRING }
}), "SetupInstanceHttpsRequestFilterSensitiveLog");
var UpdateRelationalDatabaseRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.masterUserPassword && { masterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "UpdateRelationalDatabaseRequestFilterSensitiveLog");

// src/commands/GetRelationalDatabaseMasterUserPasswordCommand.ts
var _GetRelationalDatabaseMasterUserPasswordCommand = class _GetRelationalDatabaseMasterUserPasswordCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseMasterUserPassword", {}).n("LightsailClient", "GetRelationalDatabaseMasterUserPasswordCommand").f(void 0, GetRelationalDatabaseMasterUserPasswordResultFilterSensitiveLog).ser(se_GetRelationalDatabaseMasterUserPasswordCommand).de(de_GetRelationalDatabaseMasterUserPasswordCommand).build() {
};
__name(_GetRelationalDatabaseMasterUserPasswordCommand, "GetRelationalDatabaseMasterUserPasswordCommand");
var GetRelationalDatabaseMasterUserPasswordCommand = _GetRelationalDatabaseMasterUserPasswordCommand;

// src/commands/GetRelationalDatabaseMetricDataCommand.ts




var _GetRelationalDatabaseMetricDataCommand = class _GetRelationalDatabaseMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseMetricData", {}).n("LightsailClient", "GetRelationalDatabaseMetricDataCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseMetricDataCommand).de(de_GetRelationalDatabaseMetricDataCommand).build() {
};
__name(_GetRelationalDatabaseMetricDataCommand, "GetRelationalDatabaseMetricDataCommand");
var GetRelationalDatabaseMetricDataCommand = _GetRelationalDatabaseMetricDataCommand;

// src/commands/GetRelationalDatabaseParametersCommand.ts




var _GetRelationalDatabaseParametersCommand = class _GetRelationalDatabaseParametersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseParameters", {}).n("LightsailClient", "GetRelationalDatabaseParametersCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseParametersCommand).de(de_GetRelationalDatabaseParametersCommand).build() {
};
__name(_GetRelationalDatabaseParametersCommand, "GetRelationalDatabaseParametersCommand");
var GetRelationalDatabaseParametersCommand = _GetRelationalDatabaseParametersCommand;

// src/commands/GetRelationalDatabasesCommand.ts




var _GetRelationalDatabasesCommand = class _GetRelationalDatabasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabases", {}).n("LightsailClient", "GetRelationalDatabasesCommand").f(void 0, void 0).ser(se_GetRelationalDatabasesCommand).de(de_GetRelationalDatabasesCommand).build() {
};
__name(_GetRelationalDatabasesCommand, "GetRelationalDatabasesCommand");
var GetRelationalDatabasesCommand = _GetRelationalDatabasesCommand;

// src/commands/GetRelationalDatabaseSnapshotCommand.ts




var _GetRelationalDatabaseSnapshotCommand = class _GetRelationalDatabaseSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseSnapshot", {}).n("LightsailClient", "GetRelationalDatabaseSnapshotCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseSnapshotCommand).de(de_GetRelationalDatabaseSnapshotCommand).build() {
};
__name(_GetRelationalDatabaseSnapshotCommand, "GetRelationalDatabaseSnapshotCommand");
var GetRelationalDatabaseSnapshotCommand = _GetRelationalDatabaseSnapshotCommand;

// src/commands/GetRelationalDatabaseSnapshotsCommand.ts




var _GetRelationalDatabaseSnapshotsCommand = class _GetRelationalDatabaseSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetRelationalDatabaseSnapshots", {}).n("LightsailClient", "GetRelationalDatabaseSnapshotsCommand").f(void 0, void 0).ser(se_GetRelationalDatabaseSnapshotsCommand).de(de_GetRelationalDatabaseSnapshotsCommand).build() {
};
__name(_GetRelationalDatabaseSnapshotsCommand, "GetRelationalDatabaseSnapshotsCommand");
var GetRelationalDatabaseSnapshotsCommand = _GetRelationalDatabaseSnapshotsCommand;

// src/commands/GetSetupHistoryCommand.ts




var _GetSetupHistoryCommand = class _GetSetupHistoryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetSetupHistory", {}).n("LightsailClient", "GetSetupHistoryCommand").f(void 0, void 0).ser(se_GetSetupHistoryCommand).de(de_GetSetupHistoryCommand).build() {
};
__name(_GetSetupHistoryCommand, "GetSetupHistoryCommand");
var GetSetupHistoryCommand = _GetSetupHistoryCommand;

// src/commands/GetStaticIpCommand.ts




var _GetStaticIpCommand = class _GetStaticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetStaticIp", {}).n("LightsailClient", "GetStaticIpCommand").f(void 0, void 0).ser(se_GetStaticIpCommand).de(de_GetStaticIpCommand).build() {
};
__name(_GetStaticIpCommand, "GetStaticIpCommand");
var GetStaticIpCommand = _GetStaticIpCommand;

// src/commands/GetStaticIpsCommand.ts




var _GetStaticIpsCommand = class _GetStaticIpsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "GetStaticIps", {}).n("LightsailClient", "GetStaticIpsCommand").f(void 0, void 0).ser(se_GetStaticIpsCommand).de(de_GetStaticIpsCommand).build() {
};
__name(_GetStaticIpsCommand, "GetStaticIpsCommand");
var GetStaticIpsCommand = _GetStaticIpsCommand;

// src/commands/ImportKeyPairCommand.ts




var _ImportKeyPairCommand = class _ImportKeyPairCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "ImportKeyPair", {}).n("LightsailClient", "ImportKeyPairCommand").f(void 0, void 0).ser(se_ImportKeyPairCommand).de(de_ImportKeyPairCommand).build() {
};
__name(_ImportKeyPairCommand, "ImportKeyPairCommand");
var ImportKeyPairCommand = _ImportKeyPairCommand;

// src/commands/IsVpcPeeredCommand.ts




var _IsVpcPeeredCommand = class _IsVpcPeeredCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "IsVpcPeered", {}).n("LightsailClient", "IsVpcPeeredCommand").f(void 0, void 0).ser(se_IsVpcPeeredCommand).de(de_IsVpcPeeredCommand).build() {
};
__name(_IsVpcPeeredCommand, "IsVpcPeeredCommand");
var IsVpcPeeredCommand = _IsVpcPeeredCommand;

// src/commands/OpenInstancePublicPortsCommand.ts




var _OpenInstancePublicPortsCommand = class _OpenInstancePublicPortsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "OpenInstancePublicPorts", {}).n("LightsailClient", "OpenInstancePublicPortsCommand").f(void 0, void 0).ser(se_OpenInstancePublicPortsCommand).de(de_OpenInstancePublicPortsCommand).build() {
};
__name(_OpenInstancePublicPortsCommand, "OpenInstancePublicPortsCommand");
var OpenInstancePublicPortsCommand = _OpenInstancePublicPortsCommand;

// src/commands/PeerVpcCommand.ts




var _PeerVpcCommand = class _PeerVpcCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "PeerVpc", {}).n("LightsailClient", "PeerVpcCommand").f(void 0, void 0).ser(se_PeerVpcCommand).de(de_PeerVpcCommand).build() {
};
__name(_PeerVpcCommand, "PeerVpcCommand");
var PeerVpcCommand = _PeerVpcCommand;

// src/commands/PutAlarmCommand.ts




var _PutAlarmCommand = class _PutAlarmCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "PutAlarm", {}).n("LightsailClient", "PutAlarmCommand").f(void 0, void 0).ser(se_PutAlarmCommand).de(de_PutAlarmCommand).build() {
};
__name(_PutAlarmCommand, "PutAlarmCommand");
var PutAlarmCommand = _PutAlarmCommand;

// src/commands/PutInstancePublicPortsCommand.ts




var _PutInstancePublicPortsCommand = class _PutInstancePublicPortsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "PutInstancePublicPorts", {}).n("LightsailClient", "PutInstancePublicPortsCommand").f(void 0, void 0).ser(se_PutInstancePublicPortsCommand).de(de_PutInstancePublicPortsCommand).build() {
};
__name(_PutInstancePublicPortsCommand, "PutInstancePublicPortsCommand");
var PutInstancePublicPortsCommand = _PutInstancePublicPortsCommand;

// src/commands/RebootInstanceCommand.ts




var _RebootInstanceCommand = class _RebootInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "RebootInstance", {}).n("LightsailClient", "RebootInstanceCommand").f(void 0, void 0).ser(se_RebootInstanceCommand).de(de_RebootInstanceCommand).build() {
};
__name(_RebootInstanceCommand, "RebootInstanceCommand");
var RebootInstanceCommand = _RebootInstanceCommand;

// src/commands/RebootRelationalDatabaseCommand.ts




var _RebootRelationalDatabaseCommand = class _RebootRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "RebootRelationalDatabase", {}).n("LightsailClient", "RebootRelationalDatabaseCommand").f(void 0, void 0).ser(se_RebootRelationalDatabaseCommand).de(de_RebootRelationalDatabaseCommand).build() {
};
__name(_RebootRelationalDatabaseCommand, "RebootRelationalDatabaseCommand");
var RebootRelationalDatabaseCommand = _RebootRelationalDatabaseCommand;

// src/commands/RegisterContainerImageCommand.ts




var _RegisterContainerImageCommand = class _RegisterContainerImageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "RegisterContainerImage", {}).n("LightsailClient", "RegisterContainerImageCommand").f(void 0, void 0).ser(se_RegisterContainerImageCommand).de(de_RegisterContainerImageCommand).build() {
};
__name(_RegisterContainerImageCommand, "RegisterContainerImageCommand");
var RegisterContainerImageCommand = _RegisterContainerImageCommand;

// src/commands/ReleaseStaticIpCommand.ts




var _ReleaseStaticIpCommand = class _ReleaseStaticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "ReleaseStaticIp", {}).n("LightsailClient", "ReleaseStaticIpCommand").f(void 0, void 0).ser(se_ReleaseStaticIpCommand).de(de_ReleaseStaticIpCommand).build() {
};
__name(_ReleaseStaticIpCommand, "ReleaseStaticIpCommand");
var ReleaseStaticIpCommand = _ReleaseStaticIpCommand;

// src/commands/ResetDistributionCacheCommand.ts




var _ResetDistributionCacheCommand = class _ResetDistributionCacheCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "ResetDistributionCache", {}).n("LightsailClient", "ResetDistributionCacheCommand").f(void 0, void 0).ser(se_ResetDistributionCacheCommand).de(de_ResetDistributionCacheCommand).build() {
};
__name(_ResetDistributionCacheCommand, "ResetDistributionCacheCommand");
var ResetDistributionCacheCommand = _ResetDistributionCacheCommand;

// src/commands/SendContactMethodVerificationCommand.ts




var _SendContactMethodVerificationCommand = class _SendContactMethodVerificationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "SendContactMethodVerification", {}).n("LightsailClient", "SendContactMethodVerificationCommand").f(void 0, void 0).ser(se_SendContactMethodVerificationCommand).de(de_SendContactMethodVerificationCommand).build() {
};
__name(_SendContactMethodVerificationCommand, "SendContactMethodVerificationCommand");
var SendContactMethodVerificationCommand = _SendContactMethodVerificationCommand;

// src/commands/SetIpAddressTypeCommand.ts




var _SetIpAddressTypeCommand = class _SetIpAddressTypeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "SetIpAddressType", {}).n("LightsailClient", "SetIpAddressTypeCommand").f(void 0, void 0).ser(se_SetIpAddressTypeCommand).de(de_SetIpAddressTypeCommand).build() {
};
__name(_SetIpAddressTypeCommand, "SetIpAddressTypeCommand");
var SetIpAddressTypeCommand = _SetIpAddressTypeCommand;

// src/commands/SetResourceAccessForBucketCommand.ts




var _SetResourceAccessForBucketCommand = class _SetResourceAccessForBucketCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "SetResourceAccessForBucket", {}).n("LightsailClient", "SetResourceAccessForBucketCommand").f(void 0, void 0).ser(se_SetResourceAccessForBucketCommand).de(de_SetResourceAccessForBucketCommand).build() {
};
__name(_SetResourceAccessForBucketCommand, "SetResourceAccessForBucketCommand");
var SetResourceAccessForBucketCommand = _SetResourceAccessForBucketCommand;

// src/commands/SetupInstanceHttpsCommand.ts




var _SetupInstanceHttpsCommand = class _SetupInstanceHttpsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "SetupInstanceHttps", {}).n("LightsailClient", "SetupInstanceHttpsCommand").f(SetupInstanceHttpsRequestFilterSensitiveLog, void 0).ser(se_SetupInstanceHttpsCommand).de(de_SetupInstanceHttpsCommand).build() {
};
__name(_SetupInstanceHttpsCommand, "SetupInstanceHttpsCommand");
var SetupInstanceHttpsCommand = _SetupInstanceHttpsCommand;

// src/commands/StartGUISessionCommand.ts




var _StartGUISessionCommand = class _StartGUISessionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "StartGUISession", {}).n("LightsailClient", "StartGUISessionCommand").f(void 0, void 0).ser(se_StartGUISessionCommand).de(de_StartGUISessionCommand).build() {
};
__name(_StartGUISessionCommand, "StartGUISessionCommand");
var StartGUISessionCommand = _StartGUISessionCommand;

// src/commands/StartInstanceCommand.ts




var _StartInstanceCommand = class _StartInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "StartInstance", {}).n("LightsailClient", "StartInstanceCommand").f(void 0, void 0).ser(se_StartInstanceCommand).de(de_StartInstanceCommand).build() {
};
__name(_StartInstanceCommand, "StartInstanceCommand");
var StartInstanceCommand = _StartInstanceCommand;

// src/commands/StartRelationalDatabaseCommand.ts




var _StartRelationalDatabaseCommand = class _StartRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "StartRelationalDatabase", {}).n("LightsailClient", "StartRelationalDatabaseCommand").f(void 0, void 0).ser(se_StartRelationalDatabaseCommand).de(de_StartRelationalDatabaseCommand).build() {
};
__name(_StartRelationalDatabaseCommand, "StartRelationalDatabaseCommand");
var StartRelationalDatabaseCommand = _StartRelationalDatabaseCommand;

// src/commands/StopGUISessionCommand.ts




var _StopGUISessionCommand = class _StopGUISessionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "StopGUISession", {}).n("LightsailClient", "StopGUISessionCommand").f(void 0, void 0).ser(se_StopGUISessionCommand).de(de_StopGUISessionCommand).build() {
};
__name(_StopGUISessionCommand, "StopGUISessionCommand");
var StopGUISessionCommand = _StopGUISessionCommand;

// src/commands/StopInstanceCommand.ts




var _StopInstanceCommand = class _StopInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "StopInstance", {}).n("LightsailClient", "StopInstanceCommand").f(void 0, void 0).ser(se_StopInstanceCommand).de(de_StopInstanceCommand).build() {
};
__name(_StopInstanceCommand, "StopInstanceCommand");
var StopInstanceCommand = _StopInstanceCommand;

// src/commands/StopRelationalDatabaseCommand.ts




var _StopRelationalDatabaseCommand = class _StopRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "StopRelationalDatabase", {}).n("LightsailClient", "StopRelationalDatabaseCommand").f(void 0, void 0).ser(se_StopRelationalDatabaseCommand).de(de_StopRelationalDatabaseCommand).build() {
};
__name(_StopRelationalDatabaseCommand, "StopRelationalDatabaseCommand");
var StopRelationalDatabaseCommand = _StopRelationalDatabaseCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "TagResource", {}).n("LightsailClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/TestAlarmCommand.ts




var _TestAlarmCommand = class _TestAlarmCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "TestAlarm", {}).n("LightsailClient", "TestAlarmCommand").f(void 0, void 0).ser(se_TestAlarmCommand).de(de_TestAlarmCommand).build() {
};
__name(_TestAlarmCommand, "TestAlarmCommand");
var TestAlarmCommand = _TestAlarmCommand;

// src/commands/UnpeerVpcCommand.ts




var _UnpeerVpcCommand = class _UnpeerVpcCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UnpeerVpc", {}).n("LightsailClient", "UnpeerVpcCommand").f(void 0, void 0).ser(se_UnpeerVpcCommand).de(de_UnpeerVpcCommand).build() {
};
__name(_UnpeerVpcCommand, "UnpeerVpcCommand");
var UnpeerVpcCommand = _UnpeerVpcCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UntagResource", {}).n("LightsailClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateBucketBundleCommand.ts




var _UpdateBucketBundleCommand = class _UpdateBucketBundleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateBucketBundle", {}).n("LightsailClient", "UpdateBucketBundleCommand").f(void 0, void 0).ser(se_UpdateBucketBundleCommand).de(de_UpdateBucketBundleCommand).build() {
};
__name(_UpdateBucketBundleCommand, "UpdateBucketBundleCommand");
var UpdateBucketBundleCommand = _UpdateBucketBundleCommand;

// src/commands/UpdateBucketCommand.ts




var _UpdateBucketCommand = class _UpdateBucketCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateBucket", {}).n("LightsailClient", "UpdateBucketCommand").f(void 0, void 0).ser(se_UpdateBucketCommand).de(de_UpdateBucketCommand).build() {
};
__name(_UpdateBucketCommand, "UpdateBucketCommand");
var UpdateBucketCommand = _UpdateBucketCommand;

// src/commands/UpdateContainerServiceCommand.ts




var _UpdateContainerServiceCommand = class _UpdateContainerServiceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateContainerService", {}).n("LightsailClient", "UpdateContainerServiceCommand").f(void 0, void 0).ser(se_UpdateContainerServiceCommand).de(de_UpdateContainerServiceCommand).build() {
};
__name(_UpdateContainerServiceCommand, "UpdateContainerServiceCommand");
var UpdateContainerServiceCommand = _UpdateContainerServiceCommand;

// src/commands/UpdateDistributionBundleCommand.ts




var _UpdateDistributionBundleCommand = class _UpdateDistributionBundleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateDistributionBundle", {}).n("LightsailClient", "UpdateDistributionBundleCommand").f(void 0, void 0).ser(se_UpdateDistributionBundleCommand).de(de_UpdateDistributionBundleCommand).build() {
};
__name(_UpdateDistributionBundleCommand, "UpdateDistributionBundleCommand");
var UpdateDistributionBundleCommand = _UpdateDistributionBundleCommand;

// src/commands/UpdateDistributionCommand.ts




var _UpdateDistributionCommand = class _UpdateDistributionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateDistribution", {}).n("LightsailClient", "UpdateDistributionCommand").f(void 0, void 0).ser(se_UpdateDistributionCommand).de(de_UpdateDistributionCommand).build() {
};
__name(_UpdateDistributionCommand, "UpdateDistributionCommand");
var UpdateDistributionCommand = _UpdateDistributionCommand;

// src/commands/UpdateDomainEntryCommand.ts




var _UpdateDomainEntryCommand = class _UpdateDomainEntryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateDomainEntry", {}).n("LightsailClient", "UpdateDomainEntryCommand").f(void 0, void 0).ser(se_UpdateDomainEntryCommand).de(de_UpdateDomainEntryCommand).build() {
};
__name(_UpdateDomainEntryCommand, "UpdateDomainEntryCommand");
var UpdateDomainEntryCommand = _UpdateDomainEntryCommand;

// src/commands/UpdateInstanceMetadataOptionsCommand.ts




var _UpdateInstanceMetadataOptionsCommand = class _UpdateInstanceMetadataOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateInstanceMetadataOptions", {}).n("LightsailClient", "UpdateInstanceMetadataOptionsCommand").f(void 0, void 0).ser(se_UpdateInstanceMetadataOptionsCommand).de(de_UpdateInstanceMetadataOptionsCommand).build() {
};
__name(_UpdateInstanceMetadataOptionsCommand, "UpdateInstanceMetadataOptionsCommand");
var UpdateInstanceMetadataOptionsCommand = _UpdateInstanceMetadataOptionsCommand;

// src/commands/UpdateLoadBalancerAttributeCommand.ts




var _UpdateLoadBalancerAttributeCommand = class _UpdateLoadBalancerAttributeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateLoadBalancerAttribute", {}).n("LightsailClient", "UpdateLoadBalancerAttributeCommand").f(void 0, void 0).ser(se_UpdateLoadBalancerAttributeCommand).de(de_UpdateLoadBalancerAttributeCommand).build() {
};
__name(_UpdateLoadBalancerAttributeCommand, "UpdateLoadBalancerAttributeCommand");
var UpdateLoadBalancerAttributeCommand = _UpdateLoadBalancerAttributeCommand;

// src/commands/UpdateRelationalDatabaseCommand.ts




var _UpdateRelationalDatabaseCommand = class _UpdateRelationalDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateRelationalDatabase", {}).n("LightsailClient", "UpdateRelationalDatabaseCommand").f(UpdateRelationalDatabaseRequestFilterSensitiveLog, void 0).ser(se_UpdateRelationalDatabaseCommand).de(de_UpdateRelationalDatabaseCommand).build() {
};
__name(_UpdateRelationalDatabaseCommand, "UpdateRelationalDatabaseCommand");
var UpdateRelationalDatabaseCommand = _UpdateRelationalDatabaseCommand;

// src/commands/UpdateRelationalDatabaseParametersCommand.ts




var _UpdateRelationalDatabaseParametersCommand = class _UpdateRelationalDatabaseParametersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Lightsail_20161128", "UpdateRelationalDatabaseParameters", {}).n("LightsailClient", "UpdateRelationalDatabaseParametersCommand").f(void 0, void 0).ser(se_UpdateRelationalDatabaseParametersCommand).de(de_UpdateRelationalDatabaseParametersCommand).build() {
};
__name(_UpdateRelationalDatabaseParametersCommand, "UpdateRelationalDatabaseParametersCommand");
var UpdateRelationalDatabaseParametersCommand = _UpdateRelationalDatabaseParametersCommand;

// src/Lightsail.ts
var commands = {
  AllocateStaticIpCommand,
  AttachCertificateToDistributionCommand,
  AttachDiskCommand,
  AttachInstancesToLoadBalancerCommand,
  AttachLoadBalancerTlsCertificateCommand,
  AttachStaticIpCommand,
  CloseInstancePublicPortsCommand,
  CopySnapshotCommand,
  CreateBucketCommand,
  CreateBucketAccessKeyCommand,
  CreateCertificateCommand,
  CreateCloudFormationStackCommand,
  CreateContactMethodCommand,
  CreateContainerServiceCommand,
  CreateContainerServiceDeploymentCommand,
  CreateContainerServiceRegistryLoginCommand,
  CreateDiskCommand,
  CreateDiskFromSnapshotCommand,
  CreateDiskSnapshotCommand,
  CreateDistributionCommand,
  CreateDomainCommand,
  CreateDomainEntryCommand,
  CreateGUISessionAccessDetailsCommand,
  CreateInstancesCommand,
  CreateInstancesFromSnapshotCommand,
  CreateInstanceSnapshotCommand,
  CreateKeyPairCommand,
  CreateLoadBalancerCommand,
  CreateLoadBalancerTlsCertificateCommand,
  CreateRelationalDatabaseCommand,
  CreateRelationalDatabaseFromSnapshotCommand,
  CreateRelationalDatabaseSnapshotCommand,
  DeleteAlarmCommand,
  DeleteAutoSnapshotCommand,
  DeleteBucketCommand,
  DeleteBucketAccessKeyCommand,
  DeleteCertificateCommand,
  DeleteContactMethodCommand,
  DeleteContainerImageCommand,
  DeleteContainerServiceCommand,
  DeleteDiskCommand,
  DeleteDiskSnapshotCommand,
  DeleteDistributionCommand,
  DeleteDomainCommand,
  DeleteDomainEntryCommand,
  DeleteInstanceCommand,
  DeleteInstanceSnapshotCommand,
  DeleteKeyPairCommand,
  DeleteKnownHostKeysCommand,
  DeleteLoadBalancerCommand,
  DeleteLoadBalancerTlsCertificateCommand,
  DeleteRelationalDatabaseCommand,
  DeleteRelationalDatabaseSnapshotCommand,
  DetachCertificateFromDistributionCommand,
  DetachDiskCommand,
  DetachInstancesFromLoadBalancerCommand,
  DetachStaticIpCommand,
  DisableAddOnCommand,
  DownloadDefaultKeyPairCommand,
  EnableAddOnCommand,
  ExportSnapshotCommand,
  GetActiveNamesCommand,
  GetAlarmsCommand,
  GetAutoSnapshotsCommand,
  GetBlueprintsCommand,
  GetBucketAccessKeysCommand,
  GetBucketBundlesCommand,
  GetBucketMetricDataCommand,
  GetBucketsCommand,
  GetBundlesCommand,
  GetCertificatesCommand,
  GetCloudFormationStackRecordsCommand,
  GetContactMethodsCommand,
  GetContainerAPIMetadataCommand,
  GetContainerImagesCommand,
  GetContainerLogCommand,
  GetContainerServiceDeploymentsCommand,
  GetContainerServiceMetricDataCommand,
  GetContainerServicePowersCommand,
  GetContainerServicesCommand,
  GetCostEstimateCommand,
  GetDiskCommand,
  GetDisksCommand,
  GetDiskSnapshotCommand,
  GetDiskSnapshotsCommand,
  GetDistributionBundlesCommand,
  GetDistributionLatestCacheResetCommand,
  GetDistributionMetricDataCommand,
  GetDistributionsCommand,
  GetDomainCommand,
  GetDomainsCommand,
  GetExportSnapshotRecordsCommand,
  GetInstanceCommand,
  GetInstanceAccessDetailsCommand,
  GetInstanceMetricDataCommand,
  GetInstancePortStatesCommand,
  GetInstancesCommand,
  GetInstanceSnapshotCommand,
  GetInstanceSnapshotsCommand,
  GetInstanceStateCommand,
  GetKeyPairCommand,
  GetKeyPairsCommand,
  GetLoadBalancerCommand,
  GetLoadBalancerMetricDataCommand,
  GetLoadBalancersCommand,
  GetLoadBalancerTlsCertificatesCommand,
  GetLoadBalancerTlsPoliciesCommand,
  GetOperationCommand,
  GetOperationsCommand,
  GetOperationsForResourceCommand,
  GetRegionsCommand,
  GetRelationalDatabaseCommand,
  GetRelationalDatabaseBlueprintsCommand,
  GetRelationalDatabaseBundlesCommand,
  GetRelationalDatabaseEventsCommand,
  GetRelationalDatabaseLogEventsCommand,
  GetRelationalDatabaseLogStreamsCommand,
  GetRelationalDatabaseMasterUserPasswordCommand,
  GetRelationalDatabaseMetricDataCommand,
  GetRelationalDatabaseParametersCommand,
  GetRelationalDatabasesCommand,
  GetRelationalDatabaseSnapshotCommand,
  GetRelationalDatabaseSnapshotsCommand,
  GetSetupHistoryCommand,
  GetStaticIpCommand,
  GetStaticIpsCommand,
  ImportKeyPairCommand,
  IsVpcPeeredCommand,
  OpenInstancePublicPortsCommand,
  PeerVpcCommand,
  PutAlarmCommand,
  PutInstancePublicPortsCommand,
  RebootInstanceCommand,
  RebootRelationalDatabaseCommand,
  RegisterContainerImageCommand,
  ReleaseStaticIpCommand,
  ResetDistributionCacheCommand,
  SendContactMethodVerificationCommand,
  SetIpAddressTypeCommand,
  SetResourceAccessForBucketCommand,
  SetupInstanceHttpsCommand,
  StartGUISessionCommand,
  StartInstanceCommand,
  StartRelationalDatabaseCommand,
  StopGUISessionCommand,
  StopInstanceCommand,
  StopRelationalDatabaseCommand,
  TagResourceCommand,
  TestAlarmCommand,
  UnpeerVpcCommand,
  UntagResourceCommand,
  UpdateBucketCommand,
  UpdateBucketBundleCommand,
  UpdateContainerServiceCommand,
  UpdateDistributionCommand,
  UpdateDistributionBundleCommand,
  UpdateDomainEntryCommand,
  UpdateInstanceMetadataOptionsCommand,
  UpdateLoadBalancerAttributeCommand,
  UpdateRelationalDatabaseCommand,
  UpdateRelationalDatabaseParametersCommand
};
var _Lightsail = class _Lightsail extends LightsailClient {
};
__name(_Lightsail, "Lightsail");
var Lightsail = _Lightsail;
(0, import_smithy_client.createAggregatedClient)(commands, Lightsail);

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  LightsailServiceException,
  __Client,
  LightsailClient,
  Lightsail,
  $Command,
  AllocateStaticIpCommand,
  AttachCertificateToDistributionCommand,
  AttachDiskCommand,
  AttachInstancesToLoadBalancerCommand,
  AttachLoadBalancerTlsCertificateCommand,
  AttachStaticIpCommand,
  CloseInstancePublicPortsCommand,
  CopySnapshotCommand,
  CreateBucketAccessKeyCommand,
  CreateBucketCommand,
  CreateCertificateCommand,
  CreateCloudFormationStackCommand,
  CreateContactMethodCommand,
  CreateContainerServiceCommand,
  CreateContainerServiceDeploymentCommand,
  CreateContainerServiceRegistryLoginCommand,
  CreateDiskCommand,
  CreateDiskFromSnapshotCommand,
  CreateDiskSnapshotCommand,
  CreateDistributionCommand,
  CreateDomainCommand,
  CreateDomainEntryCommand,
  CreateGUISessionAccessDetailsCommand,
  CreateInstanceSnapshotCommand,
  CreateInstancesCommand,
  CreateInstancesFromSnapshotCommand,
  CreateKeyPairCommand,
  CreateLoadBalancerCommand,
  CreateLoadBalancerTlsCertificateCommand,
  CreateRelationalDatabaseCommand,
  CreateRelationalDatabaseFromSnapshotCommand,
  CreateRelationalDatabaseSnapshotCommand,
  DeleteAlarmCommand,
  DeleteAutoSnapshotCommand,
  DeleteBucketAccessKeyCommand,
  DeleteBucketCommand,
  DeleteCertificateCommand,
  DeleteContactMethodCommand,
  DeleteContainerImageCommand,
  DeleteContainerServiceCommand,
  DeleteDiskCommand,
  DeleteDiskSnapshotCommand,
  DeleteDistributionCommand,
  DeleteDomainCommand,
  DeleteDomainEntryCommand,
  DeleteInstanceCommand,
  DeleteInstanceSnapshotCommand,
  DeleteKeyPairCommand,
  DeleteKnownHostKeysCommand,
  DeleteLoadBalancerCommand,
  DeleteLoadBalancerTlsCertificateCommand,
  DeleteRelationalDatabaseCommand,
  DeleteRelationalDatabaseSnapshotCommand,
  DetachCertificateFromDistributionCommand,
  DetachDiskCommand,
  DetachInstancesFromLoadBalancerCommand,
  DetachStaticIpCommand,
  DisableAddOnCommand,
  DownloadDefaultKeyPairCommand,
  EnableAddOnCommand,
  ExportSnapshotCommand,
  GetActiveNamesCommand,
  GetAlarmsCommand,
  GetAutoSnapshotsCommand,
  GetBlueprintsCommand,
  GetBucketAccessKeysCommand,
  GetBucketBundlesCommand,
  GetBucketMetricDataCommand,
  GetBucketsCommand,
  GetBundlesCommand,
  GetCertificatesCommand,
  GetCloudFormationStackRecordsCommand,
  GetContactMethodsCommand,
  GetContainerAPIMetadataCommand,
  GetContainerImagesCommand,
  GetContainerLogCommand,
  GetContainerServiceDeploymentsCommand,
  GetContainerServiceMetricDataCommand,
  GetContainerServicePowersCommand,
  GetContainerServicesCommand,
  GetCostEstimateCommand,
  GetDiskCommand,
  GetDiskSnapshotCommand,
  GetDiskSnapshotsCommand,
  GetDisksCommand,
  GetDistributionBundlesCommand,
  GetDistributionLatestCacheResetCommand,
  GetDistributionMetricDataCommand,
  GetDistributionsCommand,
  GetDomainCommand,
  GetDomainsCommand,
  GetExportSnapshotRecordsCommand,
  GetInstanceAccessDetailsCommand,
  GetInstanceCommand,
  GetInstanceMetricDataCommand,
  GetInstancePortStatesCommand,
  GetInstanceSnapshotCommand,
  GetInstanceSnapshotsCommand,
  GetInstanceStateCommand,
  GetInstancesCommand,
  GetKeyPairCommand,
  GetKeyPairsCommand,
  GetLoadBalancerCommand,
  GetLoadBalancerMetricDataCommand,
  GetLoadBalancerTlsCertificatesCommand,
  GetLoadBalancerTlsPoliciesCommand,
  GetLoadBalancersCommand,
  GetOperationCommand,
  GetOperationsCommand,
  GetOperationsForResourceCommand,
  GetRegionsCommand,
  GetRelationalDatabaseBlueprintsCommand,
  GetRelationalDatabaseBundlesCommand,
  GetRelationalDatabaseCommand,
  GetRelationalDatabaseEventsCommand,
  GetRelationalDatabaseLogEventsCommand,
  GetRelationalDatabaseLogStreamsCommand,
  GetRelationalDatabaseMasterUserPasswordCommand,
  GetRelationalDatabaseMetricDataCommand,
  GetRelationalDatabaseParametersCommand,
  GetRelationalDatabaseSnapshotCommand,
  GetRelationalDatabaseSnapshotsCommand,
  GetRelationalDatabasesCommand,
  GetSetupHistoryCommand,
  GetStaticIpCommand,
  GetStaticIpsCommand,
  ImportKeyPairCommand,
  IsVpcPeeredCommand,
  OpenInstancePublicPortsCommand,
  PeerVpcCommand,
  PutAlarmCommand,
  PutInstancePublicPortsCommand,
  RebootInstanceCommand,
  RebootRelationalDatabaseCommand,
  RegisterContainerImageCommand,
  ReleaseStaticIpCommand,
  ResetDistributionCacheCommand,
  SendContactMethodVerificationCommand,
  SetIpAddressTypeCommand,
  SetResourceAccessForBucketCommand,
  SetupInstanceHttpsCommand,
  StartGUISessionCommand,
  StartInstanceCommand,
  StartRelationalDatabaseCommand,
  StopGUISessionCommand,
  StopInstanceCommand,
  StopRelationalDatabaseCommand,
  TagResourceCommand,
  TestAlarmCommand,
  UnpeerVpcCommand,
  UntagResourceCommand,
  UpdateBucketBundleCommand,
  UpdateBucketCommand,
  UpdateContainerServiceCommand,
  UpdateDistributionBundleCommand,
  UpdateDistributionCommand,
  UpdateDomainEntryCommand,
  UpdateInstanceMetadataOptionsCommand,
  UpdateLoadBalancerAttributeCommand,
  UpdateRelationalDatabaseCommand,
  UpdateRelationalDatabaseParametersCommand,
  AccessDeniedException,
  AccessDirection,
  StatusType,
  AccessType,
  BPAStatusMessage,
  AccountLevelBpaSyncStatus,
  AccountSetupInProgressException,
  AddOnType,
  ComparisonOperator,
  ContactProtocol,
  RegionName,
  MetricName,
  ResourceType,
  AlarmState,
  MetricStatistic,
  TreatMissingData,
  MetricUnit,
  OperationType,
  OperationStatus,
  InvalidInputException,
  NotFoundException,
  OperationFailureException,
  ServiceException,
  UnauthenticatedException,
  AppCategory,
  AutoMountStatus,
  AutoSnapshotStatus,
  BehaviorEnum,
  InstancePlatform,
  BlueprintType,
  BucketMetricName,
  ForwardValues,
  HeaderEnum,
  DnsRecordCreationStateCode,
  CertificateDomainValidationStatus,
  RenewalStatus,
  CertificateStatus,
  CertificateProvider,
  NetworkProtocol,
  CloudFormationStackRecordSourceType,
  RecordState,
  ContactMethodStatus,
  ContactMethodVerificationProtocol,
  ContainerServiceProtocol,
  ContainerServiceDeploymentState,
  ContainerServicePowerName,
  ContainerServiceState,
  ContainerServiceStateDetailCode,
  ContainerServiceMetricName,
  Currency,
  PricingUnit,
  PortInfoSourceType,
  IpAddressType,
  OriginProtocolPolicyEnum,
  Status,
  DiskState,
  DiskSnapshotState,
  DistributionMetricName,
  NameServersUpdateStateCode,
  R53HostedZoneDeletionStateCode,
  ExportSnapshotRecordSourceType,
  AccessKeyFilterSensitiveLog,
  CreateBucketAccessKeyResultFilterSensitiveLog,
  SessionFilterSensitiveLog,
  CreateGUISessionAccessDetailsResultFilterSensitiveLog,
  CreateRelationalDatabaseRequestFilterSensitiveLog,
  GetBucketAccessKeysResultFilterSensitiveLog,
  HttpEndpoint,
  HttpProtocolIpv6,
  HttpTokens,
  InstanceMetadataState,
  PortAccessType,
  InstanceAccessProtocol,
  InstanceMetricName,
  PortState,
  InstanceSnapshotState,
  LoadBalancerAttributeName,
  InstanceHealthState,
  InstanceHealthReason,
  LoadBalancerProtocol,
  LoadBalancerState,
  LoadBalancerMetricName,
  LoadBalancerTlsCertificateDnsRecordCreationStateCode,
  LoadBalancerTlsCertificateDomainStatus,
  LoadBalancerTlsCertificateFailureReason,
  LoadBalancerTlsCertificateRenewalStatus,
  LoadBalancerTlsCertificateRevocationReason,
  LoadBalancerTlsCertificateStatus,
  RelationalDatabaseEngine,
  RelationalDatabasePasswordVersion,
  RelationalDatabaseMetricName,
  SetupStatus,
  ResourceBucketAccess,
  GetRelationalDatabaseMasterUserPasswordResultFilterSensitiveLog,
  SetupInstanceHttpsRequestFilterSensitiveLog,
  UpdateRelationalDatabaseRequestFilterSensitiveLog
});

