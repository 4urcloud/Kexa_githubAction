"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ActionCategory: () => ActionCategory,
  ApplicationFilterSensitiveLog: () => ApplicationFilterSensitiveLog,
  ApplicationHealthStatus: () => ApplicationHealthStatus,
  ApplicationProgressStatus: () => ApplicationProgressStatus,
  ArchiveApplicationCommand: () => ArchiveApplicationCommand,
  ArchiveWaveCommand: () => ArchiveWaveCommand,
  AssociateApplicationsCommand: () => AssociateApplicationsCommand,
  AssociateSourceServersCommand: () => AssociateSourceServersCommand,
  BootMode: () => BootMode,
  ChangeServerLifeCycleStateCommand: () => ChangeServerLifeCycleStateCommand,
  ChangeServerLifeCycleStateSourceServerLifecycleState: () => ChangeServerLifeCycleStateSourceServerLifecycleState,
  ConflictException: () => ConflictException,
  ConnectorFilterSensitiveLog: () => ConnectorFilterSensitiveLog,
  CreateApplicationCommand: () => CreateApplicationCommand,
  CreateApplicationRequestFilterSensitiveLog: () => CreateApplicationRequestFilterSensitiveLog,
  CreateConnectorCommand: () => CreateConnectorCommand,
  CreateConnectorRequestFilterSensitiveLog: () => CreateConnectorRequestFilterSensitiveLog,
  CreateLaunchConfigurationTemplateCommand: () => CreateLaunchConfigurationTemplateCommand,
  CreateLaunchConfigurationTemplateRequestFilterSensitiveLog: () => CreateLaunchConfigurationTemplateRequestFilterSensitiveLog,
  CreateReplicationConfigurationTemplateCommand: () => CreateReplicationConfigurationTemplateCommand,
  CreateReplicationConfigurationTemplateRequestFilterSensitiveLog: () => CreateReplicationConfigurationTemplateRequestFilterSensitiveLog,
  CreateWaveCommand: () => CreateWaveCommand,
  CreateWaveRequestFilterSensitiveLog: () => CreateWaveRequestFilterSensitiveLog,
  DataReplicationErrorString: () => DataReplicationErrorString,
  DataReplicationInitiationStepName: () => DataReplicationInitiationStepName,
  DataReplicationInitiationStepStatus: () => DataReplicationInitiationStepStatus,
  DataReplicationState: () => DataReplicationState,
  DeleteApplicationCommand: () => DeleteApplicationCommand,
  DeleteConnectorCommand: () => DeleteConnectorCommand,
  DeleteJobCommand: () => DeleteJobCommand,
  DeleteLaunchConfigurationTemplateCommand: () => DeleteLaunchConfigurationTemplateCommand,
  DeleteReplicationConfigurationTemplateCommand: () => DeleteReplicationConfigurationTemplateCommand,
  DeleteSourceServerCommand: () => DeleteSourceServerCommand,
  DeleteVcenterClientCommand: () => DeleteVcenterClientCommand,
  DeleteWaveCommand: () => DeleteWaveCommand,
  DescribeJobLogItemsCommand: () => DescribeJobLogItemsCommand,
  DescribeJobsCommand: () => DescribeJobsCommand,
  DescribeJobsResponseFilterSensitiveLog: () => DescribeJobsResponseFilterSensitiveLog,
  DescribeLaunchConfigurationTemplatesCommand: () => DescribeLaunchConfigurationTemplatesCommand,
  DescribeLaunchConfigurationTemplatesResponseFilterSensitiveLog: () => DescribeLaunchConfigurationTemplatesResponseFilterSensitiveLog,
  DescribeReplicationConfigurationTemplatesCommand: () => DescribeReplicationConfigurationTemplatesCommand,
  DescribeReplicationConfigurationTemplatesResponseFilterSensitiveLog: () => DescribeReplicationConfigurationTemplatesResponseFilterSensitiveLog,
  DescribeSourceServersCommand: () => DescribeSourceServersCommand,
  DescribeSourceServersResponseFilterSensitiveLog: () => DescribeSourceServersResponseFilterSensitiveLog,
  DescribeVcenterClientsCommand: () => DescribeVcenterClientsCommand,
  DescribeVcenterClientsResponseFilterSensitiveLog: () => DescribeVcenterClientsResponseFilterSensitiveLog,
  DisassociateApplicationsCommand: () => DisassociateApplicationsCommand,
  DisassociateSourceServersCommand: () => DisassociateSourceServersCommand,
  DisconnectFromServiceCommand: () => DisconnectFromServiceCommand,
  ExportStatus: () => ExportStatus,
  FinalizeCutoverCommand: () => FinalizeCutoverCommand,
  FirstBoot: () => FirstBoot,
  GetLaunchConfigurationCommand: () => GetLaunchConfigurationCommand,
  GetReplicationConfigurationCommand: () => GetReplicationConfigurationCommand,
  ImportErrorType: () => ImportErrorType,
  ImportStatus: () => ImportStatus,
  InitializeServiceCommand: () => InitializeServiceCommand,
  InitiatedBy: () => InitiatedBy,
  InternalServerException: () => InternalServerException,
  JobFilterSensitiveLog: () => JobFilterSensitiveLog,
  JobLogEvent: () => JobLogEvent,
  JobStatus: () => JobStatus,
  JobType: () => JobType,
  LaunchConfigurationTemplateFilterSensitiveLog: () => LaunchConfigurationTemplateFilterSensitiveLog,
  LaunchDisposition: () => LaunchDisposition,
  LaunchStatus: () => LaunchStatus,
  LifeCycleState: () => LifeCycleState,
  ListApplicationsCommand: () => ListApplicationsCommand,
  ListApplicationsResponseFilterSensitiveLog: () => ListApplicationsResponseFilterSensitiveLog,
  ListConnectorsCommand: () => ListConnectorsCommand,
  ListConnectorsResponseFilterSensitiveLog: () => ListConnectorsResponseFilterSensitiveLog,
  ListExportErrorsCommand: () => ListExportErrorsCommand,
  ListExportsCommand: () => ListExportsCommand,
  ListImportErrorsCommand: () => ListImportErrorsCommand,
  ListImportsCommand: () => ListImportsCommand,
  ListManagedAccountsCommand: () => ListManagedAccountsCommand,
  ListSourceServerActionsCommand: () => ListSourceServerActionsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListTagsForResourceResponseFilterSensitiveLog: () => ListTagsForResourceResponseFilterSensitiveLog,
  ListTemplateActionsCommand: () => ListTemplateActionsCommand,
  ListWavesCommand: () => ListWavesCommand,
  ListWavesResponseFilterSensitiveLog: () => ListWavesResponseFilterSensitiveLog,
  MarkAsArchivedCommand: () => MarkAsArchivedCommand,
  Mgn: () => Mgn,
  MgnClient: () => MgnClient,
  MgnServiceException: () => MgnServiceException,
  PauseReplicationCommand: () => PauseReplicationCommand,
  PostLaunchActionExecutionStatus: () => PostLaunchActionExecutionStatus,
  PostLaunchActionsDeploymentType: () => PostLaunchActionsDeploymentType,
  PutSourceServerActionCommand: () => PutSourceServerActionCommand,
  PutTemplateActionCommand: () => PutTemplateActionCommand,
  RemoveSourceServerActionCommand: () => RemoveSourceServerActionCommand,
  RemoveTemplateActionCommand: () => RemoveTemplateActionCommand,
  ReplicationConfigurationDataPlaneRouting: () => ReplicationConfigurationDataPlaneRouting,
  ReplicationConfigurationDefaultLargeStagingDiskType: () => ReplicationConfigurationDefaultLargeStagingDiskType,
  ReplicationConfigurationEbsEncryption: () => ReplicationConfigurationEbsEncryption,
  ReplicationConfigurationFilterSensitiveLog: () => ReplicationConfigurationFilterSensitiveLog,
  ReplicationConfigurationReplicatedDiskStagingDiskType: () => ReplicationConfigurationReplicatedDiskStagingDiskType,
  ReplicationConfigurationTemplateFilterSensitiveLog: () => ReplicationConfigurationTemplateFilterSensitiveLog,
  ReplicationType: () => ReplicationType,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResumeReplicationCommand: () => ResumeReplicationCommand,
  RetryDataReplicationCommand: () => RetryDataReplicationCommand,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SourceServerFilterSensitiveLog: () => SourceServerFilterSensitiveLog,
  SsmDocumentType: () => SsmDocumentType,
  SsmExternalParameter: () => SsmExternalParameter,
  SsmParameterStoreParameterType: () => SsmParameterStoreParameterType,
  StartCutoverCommand: () => StartCutoverCommand,
  StartCutoverRequestFilterSensitiveLog: () => StartCutoverRequestFilterSensitiveLog,
  StartCutoverResponseFilterSensitiveLog: () => StartCutoverResponseFilterSensitiveLog,
  StartExportCommand: () => StartExportCommand,
  StartImportCommand: () => StartImportCommand,
  StartReplicationCommand: () => StartReplicationCommand,
  StartTestCommand: () => StartTestCommand,
  StartTestRequestFilterSensitiveLog: () => StartTestRequestFilterSensitiveLog,
  StartTestResponseFilterSensitiveLog: () => StartTestResponseFilterSensitiveLog,
  StopReplicationCommand: () => StopReplicationCommand,
  TagResourceCommand: () => TagResourceCommand,
  TagResourceRequestFilterSensitiveLog: () => TagResourceRequestFilterSensitiveLog,
  TargetInstanceTypeRightSizingMethod: () => TargetInstanceTypeRightSizingMethod,
  TerminateTargetInstancesCommand: () => TerminateTargetInstancesCommand,
  TerminateTargetInstancesRequestFilterSensitiveLog: () => TerminateTargetInstancesRequestFilterSensitiveLog,
  TerminateTargetInstancesResponseFilterSensitiveLog: () => TerminateTargetInstancesResponseFilterSensitiveLog,
  ThrottlingException: () => ThrottlingException,
  UnarchiveApplicationCommand: () => UnarchiveApplicationCommand,
  UnarchiveWaveCommand: () => UnarchiveWaveCommand,
  UninitializedAccountException: () => UninitializedAccountException,
  UntagResourceCommand: () => UntagResourceCommand,
  UntagResourceRequestFilterSensitiveLog: () => UntagResourceRequestFilterSensitiveLog,
  UpdateApplicationCommand: () => UpdateApplicationCommand,
  UpdateConnectorCommand: () => UpdateConnectorCommand,
  UpdateLaunchConfigurationCommand: () => UpdateLaunchConfigurationCommand,
  UpdateLaunchConfigurationTemplateCommand: () => UpdateLaunchConfigurationTemplateCommand,
  UpdateReplicationConfigurationCommand: () => UpdateReplicationConfigurationCommand,
  UpdateReplicationConfigurationRequestFilterSensitiveLog: () => UpdateReplicationConfigurationRequestFilterSensitiveLog,
  UpdateReplicationConfigurationTemplateCommand: () => UpdateReplicationConfigurationTemplateCommand,
  UpdateReplicationConfigurationTemplateRequestFilterSensitiveLog: () => UpdateReplicationConfigurationTemplateRequestFilterSensitiveLog,
  UpdateSourceServerCommand: () => UpdateSourceServerCommand,
  UpdateSourceServerReplicationTypeCommand: () => UpdateSourceServerReplicationTypeCommand,
  UpdateWaveCommand: () => UpdateWaveCommand,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  VcenterClientFilterSensitiveLog: () => VcenterClientFilterSensitiveLog,
  VolumeType: () => VolumeType,
  WaveFilterSensitiveLog: () => WaveFilterSensitiveLog,
  WaveHealthStatus: () => WaveHealthStatus,
  WaveProgressStatus: () => WaveProgressStatus,
  __Client: () => import_smithy_client.Client,
  paginateDescribeJobLogItems: () => paginateDescribeJobLogItems,
  paginateDescribeJobs: () => paginateDescribeJobs,
  paginateDescribeLaunchConfigurationTemplates: () => paginateDescribeLaunchConfigurationTemplates,
  paginateDescribeReplicationConfigurationTemplates: () => paginateDescribeReplicationConfigurationTemplates,
  paginateDescribeSourceServers: () => paginateDescribeSourceServers,
  paginateDescribeVcenterClients: () => paginateDescribeVcenterClients,
  paginateListApplications: () => paginateListApplications,
  paginateListConnectors: () => paginateListConnectors,
  paginateListExportErrors: () => paginateListExportErrors,
  paginateListExports: () => paginateListExports,
  paginateListImportErrors: () => paginateListImportErrors,
  paginateListImports: () => paginateListImports,
  paginateListManagedAccounts: () => paginateListManagedAccounts,
  paginateListSourceServerActions: () => paginateListSourceServerActions,
  paginateListTemplateActions: () => paginateListTemplateActions,
  paginateListWaves: () => paginateListWaves
});
module.exports = __toCommonJS(src_exports);

// src/MgnClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "mgn"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/MgnClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/MgnClient.ts
var _MgnClient = class _MgnClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultMgnHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_MgnClient, "MgnClient");
var MgnClient = _MgnClient;

// src/Mgn.ts


// src/commands/ArchiveApplicationCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/models/models_0.ts


// src/models/MgnServiceException.ts

var _MgnServiceException = class _MgnServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _MgnServiceException.prototype);
  }
};
__name(_MgnServiceException, "MgnServiceException");
var MgnServiceException = _MgnServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.code = opts.code;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var ActionCategory = {
  BACKUP: "BACKUP",
  CONFIGURATION: "CONFIGURATION",
  DISASTER_RECOVERY: "DISASTER_RECOVERY",
  LICENSE_AND_SUBSCRIPTION: "LICENSE_AND_SUBSCRIPTION",
  NETWORKING: "NETWORKING",
  OBSERVABILITY: "OBSERVABILITY",
  OPERATING_SYSTEM: "OPERATING_SYSTEM",
  OTHER: "OTHER",
  SECURITY: "SECURITY",
  VALIDATION: "VALIDATION"
};
var ApplicationHealthStatus = {
  ERROR: "ERROR",
  HEALTHY: "HEALTHY",
  LAGGING: "LAGGING"
};
var ApplicationProgressStatus = {
  COMPLETED: "COMPLETED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_STARTED: "NOT_STARTED"
};
var _ConflictException = class _ConflictException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.code = opts.code;
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.errors = opts.errors;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.code = opts.code;
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.code = opts.code;
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
    this.quotaValue = opts.quotaValue;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _UninitializedAccountException = class _UninitializedAccountException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UninitializedAccountException",
      $fault: "client",
      ...opts
    });
    this.name = "UninitializedAccountException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UninitializedAccountException.prototype);
    this.code = opts.code;
  }
};
__name(_UninitializedAccountException, "UninitializedAccountException");
var UninitializedAccountException = _UninitializedAccountException;
var ValidationExceptionReason = {
  CANNOT_PARSE: "cannotParse",
  FIELD_VALIDATION_FAILED: "fieldValidationFailed",
  OTHER: "other",
  UNKNOWN_OPERATION: "unknownOperation"
};
var _ValidationException = class _ValidationException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.code = opts.code;
    this.reason = opts.reason;
    this.fieldList = opts.fieldList;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var ExportStatus = {
  FAILED: "FAILED",
  PENDING: "PENDING",
  STARTED: "STARTED",
  SUCCEEDED: "SUCCEEDED"
};
var ImportErrorType = {
  PROCESSING_ERROR: "PROCESSING_ERROR",
  VALIDATION_ERROR: "VALIDATION_ERROR"
};
var ImportStatus = {
  FAILED: "FAILED",
  PENDING: "PENDING",
  STARTED: "STARTED",
  SUCCEEDED: "SUCCEEDED"
};
var JobLogEvent = {
  CLEANUP_END: "CLEANUP_END",
  CLEANUP_FAIL: "CLEANUP_FAIL",
  CLEANUP_START: "CLEANUP_START",
  CONVERSION_END: "CONVERSION_END",
  CONVERSION_FAIL: "CONVERSION_FAIL",
  CONVERSION_START: "CONVERSION_START",
  JOB_CANCEL: "JOB_CANCEL",
  JOB_END: "JOB_END",
  JOB_START: "JOB_START",
  LAUNCH_FAILED: "LAUNCH_FAILED",
  LAUNCH_START: "LAUNCH_START",
  SERVER_SKIPPED: "SERVER_SKIPPED",
  SNAPSHOT_END: "SNAPSHOT_END",
  SNAPSHOT_FAIL: "SNAPSHOT_FAIL",
  SNAPSHOT_START: "SNAPSHOT_START",
  USING_PREVIOUS_SNAPSHOT: "USING_PREVIOUS_SNAPSHOT"
};
var InitiatedBy = {
  DIAGNOSTIC: "DIAGNOSTIC",
  START_CUTOVER: "START_CUTOVER",
  START_TEST: "START_TEST",
  TERMINATE: "TERMINATE"
};
var LaunchStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  LAUNCHED: "LAUNCHED",
  PENDING: "PENDING",
  TERMINATED: "TERMINATED"
};
var PostLaunchActionExecutionStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCESS: "SUCCESS"
};
var SsmExternalParameter;
((SsmExternalParameter3) => {
  SsmExternalParameter3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.dynamicPath !== void 0)
      return visitor.dynamicPath(value.dynamicPath);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(SsmExternalParameter || (SsmExternalParameter = {}));
var SsmParameterStoreParameterType = {
  STRING: "STRING"
};
var SsmDocumentType = {
  AUTOMATION: "AUTOMATION",
  COMMAND: "COMMAND"
};
var JobStatus = {
  COMPLETED: "COMPLETED",
  PENDING: "PENDING",
  STARTED: "STARTED"
};
var JobType = {
  LAUNCH: "LAUNCH",
  TERMINATE: "TERMINATE"
};
var BootMode = {
  LEGACY_BIOS: "LEGACY_BIOS",
  UEFI: "UEFI"
};
var VolumeType = {
  gp2: "gp2",
  gp3: "gp3",
  io1: "io1",
  io2: "io2",
  sc1: "sc1",
  st1: "st1",
  standard: "standard"
};
var LaunchDisposition = {
  STARTED: "STARTED",
  STOPPED: "STOPPED"
};
var PostLaunchActionsDeploymentType = {
  CUTOVER_ONLY: "CUTOVER_ONLY",
  TEST_AND_CUTOVER: "TEST_AND_CUTOVER",
  TEST_ONLY: "TEST_ONLY"
};
var TargetInstanceTypeRightSizingMethod = {
  BASIC: "BASIC",
  NONE: "NONE"
};
var _InternalServerException = class _InternalServerException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ThrottlingException = class _ThrottlingException extends MgnServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var ReplicationConfigurationDataPlaneRouting = {
  PRIVATE_IP: "PRIVATE_IP",
  PUBLIC_IP: "PUBLIC_IP"
};
var ReplicationConfigurationDefaultLargeStagingDiskType = {
  GP2: "GP2",
  GP3: "GP3",
  ST1: "ST1"
};
var ReplicationConfigurationEbsEncryption = {
  CUSTOM: "CUSTOM",
  DEFAULT: "DEFAULT"
};
var ChangeServerLifeCycleStateSourceServerLifecycleState = {
  CUTOVER: "CUTOVER",
  READY_FOR_CUTOVER: "READY_FOR_CUTOVER",
  READY_FOR_TEST: "READY_FOR_TEST"
};
var DataReplicationErrorString = {
  AGENT_NOT_SEEN: "AGENT_NOT_SEEN",
  FAILED_TO_ATTACH_STAGING_DISKS: "FAILED_TO_ATTACH_STAGING_DISKS",
  FAILED_TO_AUTHENTICATE_WITH_SERVICE: "FAILED_TO_AUTHENTICATE_WITH_SERVICE",
  FAILED_TO_BOOT_REPLICATION_SERVER: "FAILED_TO_BOOT_REPLICATION_SERVER",
  FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER: "FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER",
  FAILED_TO_CREATE_SECURITY_GROUP: "FAILED_TO_CREATE_SECURITY_GROUP",
  FAILED_TO_CREATE_STAGING_DISKS: "FAILED_TO_CREATE_STAGING_DISKS",
  FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE: "FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE",
  FAILED_TO_LAUNCH_REPLICATION_SERVER: "FAILED_TO_LAUNCH_REPLICATION_SERVER",
  FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT: "FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT",
  FAILED_TO_START_DATA_TRANSFER: "FAILED_TO_START_DATA_TRANSFER",
  LAST_SNAPSHOT_JOB_FAILED: "LAST_SNAPSHOT_JOB_FAILED",
  NOT_CONVERGING: "NOT_CONVERGING",
  SNAPSHOTS_FAILURE: "SNAPSHOTS_FAILURE",
  UNSTABLE_NETWORK: "UNSTABLE_NETWORK",
  UNSUPPORTED_VM_CONFIGURATION: "UNSUPPORTED_VM_CONFIGURATION"
};
var DataReplicationInitiationStepName = {
  ATTACH_STAGING_DISKS: "ATTACH_STAGING_DISKS",
  AUTHENTICATE_WITH_SERVICE: "AUTHENTICATE_WITH_SERVICE",
  BOOT_REPLICATION_SERVER: "BOOT_REPLICATION_SERVER",
  CONNECT_AGENT_TO_REPLICATION_SERVER: "CONNECT_AGENT_TO_REPLICATION_SERVER",
  CREATE_SECURITY_GROUP: "CREATE_SECURITY_GROUP",
  CREATE_STAGING_DISKS: "CREATE_STAGING_DISKS",
  DOWNLOAD_REPLICATION_SOFTWARE: "DOWNLOAD_REPLICATION_SOFTWARE",
  LAUNCH_REPLICATION_SERVER: "LAUNCH_REPLICATION_SERVER",
  PAIR_REPLICATION_SERVER_WITH_AGENT: "PAIR_REPLICATION_SERVER_WITH_AGENT",
  START_DATA_TRANSFER: "START_DATA_TRANSFER",
  WAIT: "WAIT"
};
var DataReplicationInitiationStepStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_STARTED: "NOT_STARTED",
  SKIPPED: "SKIPPED",
  SUCCEEDED: "SUCCEEDED"
};
var DataReplicationState = {
  BACKLOG: "BACKLOG",
  CONTINUOUS: "CONTINUOUS",
  CREATING_SNAPSHOT: "CREATING_SNAPSHOT",
  DISCONNECTED: "DISCONNECTED",
  INITIAL_SYNC: "INITIAL_SYNC",
  INITIATING: "INITIATING",
  PAUSED: "PAUSED",
  PENDING_SNAPSHOT_SHIPPING: "PENDING_SNAPSHOT_SHIPPING",
  RESCAN: "RESCAN",
  SHIPPING_SNAPSHOT: "SHIPPING_SNAPSHOT",
  STALLED: "STALLED",
  STOPPED: "STOPPED"
};
var FirstBoot = {
  STOPPED: "STOPPED",
  SUCCEEDED: "SUCCEEDED",
  UNKNOWN: "UNKNOWN",
  WAITING: "WAITING"
};
var LifeCycleState = {
  CUTOVER: "CUTOVER",
  CUTTING_OVER: "CUTTING_OVER",
  DISCONNECTED: "DISCONNECTED",
  DISCOVERED: "DISCOVERED",
  NOT_READY: "NOT_READY",
  PENDING_INSTALLATION: "PENDING_INSTALLATION",
  READY_FOR_CUTOVER: "READY_FOR_CUTOVER",
  READY_FOR_TEST: "READY_FOR_TEST",
  STOPPED: "STOPPED",
  TESTING: "TESTING"
};
var ReplicationType = {
  AGENT_BASED: "AGENT_BASED",
  SNAPSHOT_SHIPPING: "SNAPSHOT_SHIPPING"
};
var ReplicationConfigurationReplicatedDiskStagingDiskType = {
  AUTO: "AUTO",
  GP2: "GP2",
  GP3: "GP3",
  IO1: "IO1",
  IO2: "IO2",
  SC1: "SC1",
  ST1: "ST1",
  STANDARD: "STANDARD"
};
var WaveHealthStatus = {
  ERROR: "ERROR",
  HEALTHY: "HEALTHY",
  LAGGING: "LAGGING"
};
var WaveProgressStatus = {
  COMPLETED: "COMPLETED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_STARTED: "NOT_STARTED"
};
var ApplicationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "ApplicationFilterSensitiveLog");
var CreateApplicationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "CreateApplicationRequestFilterSensitiveLog");
var ListApplicationsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => ApplicationFilterSensitiveLog(item)) }
}), "ListApplicationsResponseFilterSensitiveLog");
var ConnectorFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "ConnectorFilterSensitiveLog");
var CreateConnectorRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "CreateConnectorRequestFilterSensitiveLog");
var ListConnectorsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => ConnectorFilterSensitiveLog(item)) }
}), "ListConnectorsResponseFilterSensitiveLog");
var JobFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "JobFilterSensitiveLog");
var DescribeJobsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => JobFilterSensitiveLog(item)) }
}), "DescribeJobsResponseFilterSensitiveLog");
var CreateLaunchConfigurationTemplateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.postLaunchActions && { postLaunchActions: obj.postLaunchActions },
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "CreateLaunchConfigurationTemplateRequestFilterSensitiveLog");
var LaunchConfigurationTemplateFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.postLaunchActions && { postLaunchActions: obj.postLaunchActions },
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "LaunchConfigurationTemplateFilterSensitiveLog");
var DescribeLaunchConfigurationTemplatesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => LaunchConfigurationTemplateFilterSensitiveLog(item)) }
}), "DescribeLaunchConfigurationTemplatesResponseFilterSensitiveLog");
var ListTagsForResourceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "ListTagsForResourceResponseFilterSensitiveLog");
var CreateReplicationConfigurationTemplateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.stagingAreaTags && { stagingAreaTags: import_smithy_client.SENSITIVE_STRING },
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "CreateReplicationConfigurationTemplateRequestFilterSensitiveLog");
var ReplicationConfigurationTemplateFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.stagingAreaTags && { stagingAreaTags: import_smithy_client.SENSITIVE_STRING },
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "ReplicationConfigurationTemplateFilterSensitiveLog");
var DescribeReplicationConfigurationTemplatesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => ReplicationConfigurationTemplateFilterSensitiveLog(item)) }
}), "DescribeReplicationConfigurationTemplatesResponseFilterSensitiveLog");
var UpdateReplicationConfigurationTemplateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.stagingAreaTags && { stagingAreaTags: import_smithy_client.SENSITIVE_STRING }
}), "UpdateReplicationConfigurationTemplateRequestFilterSensitiveLog");
var SourceServerFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "SourceServerFilterSensitiveLog");
var DescribeSourceServersResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => SourceServerFilterSensitiveLog(item)) }
}), "DescribeSourceServersResponseFilterSensitiveLog");
var ReplicationConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.stagingAreaTags && { stagingAreaTags: import_smithy_client.SENSITIVE_STRING }
}), "ReplicationConfigurationFilterSensitiveLog");
var StartCutoverRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "StartCutoverRequestFilterSensitiveLog");
var StartCutoverResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.job && { job: JobFilterSensitiveLog(obj.job) }
}), "StartCutoverResponseFilterSensitiveLog");
var StartTestRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "StartTestRequestFilterSensitiveLog");
var StartTestResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.job && { job: JobFilterSensitiveLog(obj.job) }
}), "StartTestResponseFilterSensitiveLog");
var TerminateTargetInstancesRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "TerminateTargetInstancesRequestFilterSensitiveLog");
var TerminateTargetInstancesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.job && { job: JobFilterSensitiveLog(obj.job) }
}), "TerminateTargetInstancesResponseFilterSensitiveLog");
var UpdateReplicationConfigurationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.stagingAreaTags && { stagingAreaTags: import_smithy_client.SENSITIVE_STRING }
}), "UpdateReplicationConfigurationRequestFilterSensitiveLog");
var TagResourceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "TagResourceRequestFilterSensitiveLog");
var UntagResourceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tagKeys && { tagKeys: import_smithy_client.SENSITIVE_STRING }
}), "UntagResourceRequestFilterSensitiveLog");
var VcenterClientFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.sourceServerTags && { sourceServerTags: import_smithy_client.SENSITIVE_STRING },
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "VcenterClientFilterSensitiveLog");
var DescribeVcenterClientsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => VcenterClientFilterSensitiveLog(item)) }
}), "DescribeVcenterClientsResponseFilterSensitiveLog");
var WaveFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "WaveFilterSensitiveLog");
var CreateWaveRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.tags && { tags: import_smithy_client.SENSITIVE_STRING }
}), "CreateWaveRequestFilterSensitiveLog");
var ListWavesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.items && { items: obj.items.map((item) => WaveFilterSensitiveLog(item)) }
}), "ListWavesResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts


var import_uuid = require("uuid");
var se_ArchiveApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ArchiveApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ArchiveApplicationCommand");
var se_ArchiveWaveCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ArchiveWave");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      waveID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ArchiveWaveCommand");
var se_AssociateApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/AssociateApplications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationIDs: (_) => (0, import_smithy_client._json)(_),
      waveID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociateApplicationsCommand");
var se_AssociateSourceServersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/AssociateSourceServers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationID: [],
      sourceServerIDs: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociateSourceServersCommand");
var se_ChangeServerLifeCycleStateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ChangeServerLifeCycleState");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      lifeCycle: (_) => (0, import_smithy_client._json)(_),
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ChangeServerLifeCycleStateCommand");
var se_CreateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      description: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationCommand");
var se_CreateConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateConnector");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      ssmCommandConfig: (_) => (0, import_smithy_client._json)(_),
      ssmInstanceID: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateConnectorCommand");
var se_CreateLaunchConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateLaunchConfigurationTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      associatePublicIpAddress: [],
      bootMode: [],
      copyPrivateIp: [],
      copyTags: [],
      enableMapAutoTagging: [],
      largeVolumeConf: (_) => (0, import_smithy_client._json)(_),
      launchDisposition: [],
      licensing: (_) => (0, import_smithy_client._json)(_),
      mapAutoTaggingMpeID: [],
      postLaunchActions: (_) => (0, import_smithy_client._json)(_),
      smallVolumeConf: (_) => (0, import_smithy_client._json)(_),
      smallVolumeMaxSize: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      targetInstanceTypeRightSizingMethod: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLaunchConfigurationTemplateCommand");
var se_CreateReplicationConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateReplicationConfigurationTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      associateDefaultSecurityGroup: [],
      bandwidthThrottling: [],
      createPublicIP: [],
      dataPlaneRouting: [],
      defaultLargeStagingDiskType: [],
      ebsEncryption: [],
      ebsEncryptionKeyArn: [],
      replicationServerInstanceType: [],
      replicationServersSecurityGroupsIDs: (_) => (0, import_smithy_client._json)(_),
      stagingAreaSubnetId: [],
      stagingAreaTags: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      useDedicatedReplicationServer: [],
      useFipsEndpoint: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateReplicationConfigurationTemplateCommand");
var se_CreateWaveCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateWave");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      description: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateWaveCommand");
var se_DeleteApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteApplicationCommand");
var se_DeleteConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteConnector");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteConnectorCommand");
var se_DeleteJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      jobID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteJobCommand");
var se_DeleteLaunchConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteLaunchConfigurationTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      launchConfigurationTemplateID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteLaunchConfigurationTemplateCommand");
var se_DeleteReplicationConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteReplicationConfigurationTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      replicationConfigurationTemplateID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteReplicationConfigurationTemplateCommand");
var se_DeleteSourceServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteSourceServer");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteSourceServerCommand");
var se_DeleteVcenterClientCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteVcenterClient");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      vcenterClientID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteVcenterClientCommand");
var se_DeleteWaveCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteWave");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      waveID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteWaveCommand");
var se_DescribeJobLogItemsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeJobLogItems");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      jobID: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeJobLogItemsCommand");
var se_DescribeJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeJobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeJobsCommand");
var se_DescribeLaunchConfigurationTemplatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeLaunchConfigurationTemplates");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      launchConfigurationTemplateIDs: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeLaunchConfigurationTemplatesCommand");
var se_DescribeReplicationConfigurationTemplatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeReplicationConfigurationTemplates");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: [],
      replicationConfigurationTemplateIDs: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeReplicationConfigurationTemplatesCommand");
var se_DescribeSourceServersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeSourceServers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeSourceServersCommand");
var se_DescribeVcenterClientsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/DescribeVcenterClients");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeVcenterClientsCommand");
var se_DisassociateApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DisassociateApplications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationIDs: (_) => (0, import_smithy_client._json)(_),
      waveID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DisassociateApplicationsCommand");
var se_DisassociateSourceServersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DisassociateSourceServers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationID: [],
      sourceServerIDs: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DisassociateSourceServersCommand");
var se_DisconnectFromServiceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DisconnectFromService");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DisconnectFromServiceCommand");
var se_FinalizeCutoverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/FinalizeCutover");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_FinalizeCutoverCommand");
var se_GetLaunchConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetLaunchConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetLaunchConfigurationCommand");
var se_GetReplicationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetReplicationConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetReplicationConfigurationCommand");
var se_InitializeServiceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/InitializeService");
  let body;
  body = "";
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_InitializeServiceCommand");
var se_ListApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListApplications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListApplicationsCommand");
var se_ListConnectorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListConnectors");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListConnectorsCommand");
var se_ListExportErrorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListExportErrors");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      exportID: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListExportErrorsCommand");
var se_ListExportsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListExports");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListExportsCommand");
var se_ListImportErrorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListImportErrors");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      importID: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListImportErrorsCommand");
var se_ListImportsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListImports");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListImportsCommand");
var se_ListManagedAccountsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListManagedAccounts");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListManagedAccountsCommand");
var se_ListSourceServerActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListSourceServerActions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListSourceServerActionsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListTemplateActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListTemplateActions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      launchConfigurationTemplateID: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTemplateActionsCommand");
var se_ListWavesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListWaves");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListWavesCommand");
var se_MarkAsArchivedCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/MarkAsArchived");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_MarkAsArchivedCommand");
var se_PauseReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/PauseReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PauseReplicationCommand");
var se_PutSourceServerActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/PutSourceServerAction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      actionID: [],
      actionName: [],
      active: [],
      category: [],
      description: [],
      documentIdentifier: [],
      documentVersion: [],
      externalParameters: (_) => (0, import_smithy_client._json)(_),
      mustSucceedForCutover: [],
      order: [],
      parameters: (_) => (0, import_smithy_client._json)(_),
      sourceServerID: [],
      timeoutSeconds: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PutSourceServerActionCommand");
var se_PutTemplateActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/PutTemplateAction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionID: [],
      actionName: [],
      active: [],
      category: [],
      description: [],
      documentIdentifier: [],
      documentVersion: [],
      externalParameters: (_) => (0, import_smithy_client._json)(_),
      launchConfigurationTemplateID: [],
      mustSucceedForCutover: [],
      operatingSystem: [],
      order: [],
      parameters: (_) => (0, import_smithy_client._json)(_),
      timeoutSeconds: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PutTemplateActionCommand");
var se_RemoveSourceServerActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/RemoveSourceServerAction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      actionID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RemoveSourceServerActionCommand");
var se_RemoveTemplateActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/RemoveTemplateAction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionID: [],
      launchConfigurationTemplateID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RemoveTemplateActionCommand");
var se_ResumeReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ResumeReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ResumeReplicationCommand");
var se_RetryDataReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/RetryDataReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RetryDataReplicationCommand");
var se_StartCutoverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartCutover");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerIDs: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartCutoverCommand");
var se_StartExportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartExport");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      s3Bucket: [],
      s3BucketOwner: [],
      s3Key: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartExportCommand");
var se_StartImportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartImport");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      s3BucketSource: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartImportCommand");
var se_StartReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartReplicationCommand");
var se_StartTestCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartTest");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerIDs: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartTestCommand");
var se_StopReplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StopReplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopReplicationCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_TerminateTargetInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/TerminateTargetInstances");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      sourceServerIDs: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TerminateTargetInstancesCommand");
var se_UnarchiveApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UnarchiveApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UnarchiveApplicationCommand");
var se_UnarchiveWaveCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UnarchiveWave");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      waveID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UnarchiveWaveCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      applicationID: [],
      description: [],
      name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateApplicationCommand");
var se_UpdateConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateConnector");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorID: [],
      name: [],
      ssmCommandConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateConnectorCommand");
var se_UpdateLaunchConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateLaunchConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      bootMode: [],
      copyPrivateIp: [],
      copyTags: [],
      enableMapAutoTagging: [],
      launchDisposition: [],
      licensing: (_) => (0, import_smithy_client._json)(_),
      mapAutoTaggingMpeID: [],
      name: [],
      postLaunchActions: (_) => (0, import_smithy_client._json)(_),
      sourceServerID: [],
      targetInstanceTypeRightSizingMethod: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateLaunchConfigurationCommand");
var se_UpdateLaunchConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateLaunchConfigurationTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      associatePublicIpAddress: [],
      bootMode: [],
      copyPrivateIp: [],
      copyTags: [],
      enableMapAutoTagging: [],
      largeVolumeConf: (_) => (0, import_smithy_client._json)(_),
      launchConfigurationTemplateID: [],
      launchDisposition: [],
      licensing: (_) => (0, import_smithy_client._json)(_),
      mapAutoTaggingMpeID: [],
      postLaunchActions: (_) => (0, import_smithy_client._json)(_),
      smallVolumeConf: (_) => (0, import_smithy_client._json)(_),
      smallVolumeMaxSize: [],
      targetInstanceTypeRightSizingMethod: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateLaunchConfigurationTemplateCommand");
var se_UpdateReplicationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateReplicationConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      associateDefaultSecurityGroup: [],
      bandwidthThrottling: [],
      createPublicIP: [],
      dataPlaneRouting: [],
      defaultLargeStagingDiskType: [],
      ebsEncryption: [],
      ebsEncryptionKeyArn: [],
      name: [],
      replicatedDisks: (_) => (0, import_smithy_client._json)(_),
      replicationServerInstanceType: [],
      replicationServersSecurityGroupsIDs: (_) => (0, import_smithy_client._json)(_),
      sourceServerID: [],
      stagingAreaSubnetId: [],
      stagingAreaTags: (_) => (0, import_smithy_client._json)(_),
      useDedicatedReplicationServer: [],
      useFipsEndpoint: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateReplicationConfigurationCommand");
var se_UpdateReplicationConfigurationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateReplicationConfigurationTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      arn: [],
      associateDefaultSecurityGroup: [],
      bandwidthThrottling: [],
      createPublicIP: [],
      dataPlaneRouting: [],
      defaultLargeStagingDiskType: [],
      ebsEncryption: [],
      ebsEncryptionKeyArn: [],
      replicationConfigurationTemplateID: [],
      replicationServerInstanceType: [],
      replicationServersSecurityGroupsIDs: (_) => (0, import_smithy_client._json)(_),
      stagingAreaSubnetId: [],
      stagingAreaTags: (_) => (0, import_smithy_client._json)(_),
      useDedicatedReplicationServer: [],
      useFipsEndpoint: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateReplicationConfigurationTemplateCommand");
var se_UpdateSourceServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateSourceServer");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      connectorAction: (_) => (0, import_smithy_client._json)(_),
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateSourceServerCommand");
var se_UpdateSourceServerReplicationTypeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateSourceServerReplicationType");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      replicationType: [],
      sourceServerID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateSourceServerReplicationTypeCommand");
var se_UpdateWaveCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateWave");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      accountID: [],
      description: [],
      name: [],
      waveID: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateWaveCommand");
var de_ArchiveApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationAggregatedStatus: import_smithy_client._json,
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ArchiveApplicationCommand");
var de_ArchiveWaveCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveAggregatedStatus: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ArchiveWaveCommand");
var de_AssociateApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_AssociateApplicationsCommand");
var de_AssociateSourceServersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_AssociateSourceServersCommand");
var de_ChangeServerLifeCycleStateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ChangeServerLifeCycleStateCommand");
var de_CreateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationAggregatedStatus: import_smithy_client._json,
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationCommand");
var de_CreateConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    connectorID: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    ssmCommandConfig: import_smithy_client._json,
    ssmInstanceID: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateConnectorCommand");
var de_CreateLaunchConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    associatePublicIpAddress: import_smithy_client.expectBoolean,
    bootMode: import_smithy_client.expectString,
    copyPrivateIp: import_smithy_client.expectBoolean,
    copyTags: import_smithy_client.expectBoolean,
    ec2LaunchTemplateID: import_smithy_client.expectString,
    enableMapAutoTagging: import_smithy_client.expectBoolean,
    largeVolumeConf: import_smithy_client._json,
    launchConfigurationTemplateID: import_smithy_client.expectString,
    launchDisposition: import_smithy_client.expectString,
    licensing: import_smithy_client._json,
    mapAutoTaggingMpeID: import_smithy_client.expectString,
    postLaunchActions: import_smithy_client._json,
    smallVolumeConf: import_smithy_client._json,
    smallVolumeMaxSize: import_smithy_client.expectLong,
    tags: import_smithy_client._json,
    targetInstanceTypeRightSizingMethod: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateLaunchConfigurationTemplateCommand");
var de_CreateReplicationConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    associateDefaultSecurityGroup: import_smithy_client.expectBoolean,
    bandwidthThrottling: import_smithy_client.expectLong,
    createPublicIP: import_smithy_client.expectBoolean,
    dataPlaneRouting: import_smithy_client.expectString,
    defaultLargeStagingDiskType: import_smithy_client.expectString,
    ebsEncryption: import_smithy_client.expectString,
    ebsEncryptionKeyArn: import_smithy_client.expectString,
    replicationConfigurationTemplateID: import_smithy_client.expectString,
    replicationServerInstanceType: import_smithy_client.expectString,
    replicationServersSecurityGroupsIDs: import_smithy_client._json,
    stagingAreaSubnetId: import_smithy_client.expectString,
    stagingAreaTags: import_smithy_client._json,
    tags: import_smithy_client._json,
    useDedicatedReplicationServer: import_smithy_client.expectBoolean,
    useFipsEndpoint: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateReplicationConfigurationTemplateCommand");
var de_CreateWaveCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveAggregatedStatus: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateWaveCommand");
var de_DeleteApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApplicationCommand");
var de_DeleteConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteConnectorCommand");
var de_DeleteJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteJobCommand");
var de_DeleteLaunchConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLaunchConfigurationTemplateCommand");
var de_DeleteReplicationConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteReplicationConfigurationTemplateCommand");
var de_DeleteSourceServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteSourceServerCommand");
var de_DeleteVcenterClientCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteVcenterClientCommand");
var de_DeleteWaveCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteWaveCommand");
var de_DescribeJobLogItemsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeJobLogItemsCommand");
var de_DescribeJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: (_) => de_JobsList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeJobsCommand");
var de_DescribeLaunchConfigurationTemplatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeLaunchConfigurationTemplatesCommand");
var de_DescribeReplicationConfigurationTemplatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeReplicationConfigurationTemplatesCommand");
var de_DescribeSourceServersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSourceServersCommand");
var de_DescribeVcenterClientsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeVcenterClientsCommand");
var de_DisassociateApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociateApplicationsCommand");
var de_DisassociateSourceServersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociateSourceServersCommand");
var de_DisconnectFromServiceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DisconnectFromServiceCommand");
var de_FinalizeCutoverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_FinalizeCutoverCommand");
var de_GetLaunchConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    bootMode: import_smithy_client.expectString,
    copyPrivateIp: import_smithy_client.expectBoolean,
    copyTags: import_smithy_client.expectBoolean,
    ec2LaunchTemplateID: import_smithy_client.expectString,
    enableMapAutoTagging: import_smithy_client.expectBoolean,
    launchDisposition: import_smithy_client.expectString,
    licensing: import_smithy_client._json,
    mapAutoTaggingMpeID: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    postLaunchActions: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    targetInstanceTypeRightSizingMethod: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetLaunchConfigurationCommand");
var de_GetReplicationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associateDefaultSecurityGroup: import_smithy_client.expectBoolean,
    bandwidthThrottling: import_smithy_client.expectLong,
    createPublicIP: import_smithy_client.expectBoolean,
    dataPlaneRouting: import_smithy_client.expectString,
    defaultLargeStagingDiskType: import_smithy_client.expectString,
    ebsEncryption: import_smithy_client.expectString,
    ebsEncryptionKeyArn: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    replicatedDisks: import_smithy_client._json,
    replicationServerInstanceType: import_smithy_client.expectString,
    replicationServersSecurityGroupsIDs: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    stagingAreaSubnetId: import_smithy_client.expectString,
    stagingAreaTags: import_smithy_client._json,
    useDedicatedReplicationServer: import_smithy_client.expectBoolean,
    useFipsEndpoint: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetReplicationConfigurationCommand");
var de_InitializeServiceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_InitializeServiceCommand");
var de_ListApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationsCommand");
var de_ListConnectorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListConnectorsCommand");
var de_ListExportErrorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListExportErrorsCommand");
var de_ListExportsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: (_) => de_ExportsList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListExportsCommand");
var de_ListImportErrorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListImportErrorsCommand");
var de_ListImportsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: (_) => de_ImportList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListImportsCommand");
var de_ListManagedAccountsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListManagedAccountsCommand");
var de_ListSourceServerActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSourceServerActionsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListTemplateActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTemplateActionsCommand");
var de_ListWavesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWavesCommand");
var de_MarkAsArchivedCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_MarkAsArchivedCommand");
var de_PauseReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PauseReplicationCommand");
var de_PutSourceServerActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    actionID: import_smithy_client.expectString,
    actionName: import_smithy_client.expectString,
    active: import_smithy_client.expectBoolean,
    category: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    documentIdentifier: import_smithy_client.expectString,
    documentVersion: import_smithy_client.expectString,
    externalParameters: import_smithy_client._json,
    mustSucceedForCutover: import_smithy_client.expectBoolean,
    order: import_smithy_client.expectInt32,
    parameters: import_smithy_client._json,
    timeoutSeconds: import_smithy_client.expectInt32
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutSourceServerActionCommand");
var de_PutTemplateActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    actionID: import_smithy_client.expectString,
    actionName: import_smithy_client.expectString,
    active: import_smithy_client.expectBoolean,
    category: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    documentIdentifier: import_smithy_client.expectString,
    documentVersion: import_smithy_client.expectString,
    externalParameters: import_smithy_client._json,
    mustSucceedForCutover: import_smithy_client.expectBoolean,
    operatingSystem: import_smithy_client.expectString,
    order: import_smithy_client.expectInt32,
    parameters: import_smithy_client._json,
    timeoutSeconds: import_smithy_client.expectInt32
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutTemplateActionCommand");
var de_RemoveSourceServerActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RemoveSourceServerActionCommand");
var de_RemoveTemplateActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RemoveTemplateActionCommand");
var de_ResumeReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ResumeReplicationCommand");
var de_RetryDataReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RetryDataReplicationCommand");
var de_StartCutoverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    job: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartCutoverCommand");
var de_StartExportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    exportTask: (_) => de_ExportTask(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartExportCommand");
var de_StartImportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    importTask: (_) => de_ImportTask(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartImportCommand");
var de_StartReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartReplicationCommand");
var de_StartTestCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    job: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartTestCommand");
var de_StopReplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StopReplicationCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_TerminateTargetInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    job: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_TerminateTargetInstancesCommand");
var de_UnarchiveApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationAggregatedStatus: import_smithy_client._json,
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UnarchiveApplicationCommand");
var de_UnarchiveWaveCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveAggregatedStatus: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UnarchiveWaveCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationAggregatedStatus: import_smithy_client._json,
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApplicationCommand");
var de_UpdateConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    connectorID: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    ssmCommandConfig: import_smithy_client._json,
    ssmInstanceID: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateConnectorCommand");
var de_UpdateLaunchConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    bootMode: import_smithy_client.expectString,
    copyPrivateIp: import_smithy_client.expectBoolean,
    copyTags: import_smithy_client.expectBoolean,
    ec2LaunchTemplateID: import_smithy_client.expectString,
    enableMapAutoTagging: import_smithy_client.expectBoolean,
    launchDisposition: import_smithy_client.expectString,
    licensing: import_smithy_client._json,
    mapAutoTaggingMpeID: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    postLaunchActions: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    targetInstanceTypeRightSizingMethod: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLaunchConfigurationCommand");
var de_UpdateLaunchConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    associatePublicIpAddress: import_smithy_client.expectBoolean,
    bootMode: import_smithy_client.expectString,
    copyPrivateIp: import_smithy_client.expectBoolean,
    copyTags: import_smithy_client.expectBoolean,
    ec2LaunchTemplateID: import_smithy_client.expectString,
    enableMapAutoTagging: import_smithy_client.expectBoolean,
    largeVolumeConf: import_smithy_client._json,
    launchConfigurationTemplateID: import_smithy_client.expectString,
    launchDisposition: import_smithy_client.expectString,
    licensing: import_smithy_client._json,
    mapAutoTaggingMpeID: import_smithy_client.expectString,
    postLaunchActions: import_smithy_client._json,
    smallVolumeConf: import_smithy_client._json,
    smallVolumeMaxSize: import_smithy_client.expectLong,
    tags: import_smithy_client._json,
    targetInstanceTypeRightSizingMethod: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLaunchConfigurationTemplateCommand");
var de_UpdateReplicationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associateDefaultSecurityGroup: import_smithy_client.expectBoolean,
    bandwidthThrottling: import_smithy_client.expectLong,
    createPublicIP: import_smithy_client.expectBoolean,
    dataPlaneRouting: import_smithy_client.expectString,
    defaultLargeStagingDiskType: import_smithy_client.expectString,
    ebsEncryption: import_smithy_client.expectString,
    ebsEncryptionKeyArn: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    replicatedDisks: import_smithy_client._json,
    replicationServerInstanceType: import_smithy_client.expectString,
    replicationServersSecurityGroupsIDs: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    stagingAreaSubnetId: import_smithy_client.expectString,
    stagingAreaTags: import_smithy_client._json,
    useDedicatedReplicationServer: import_smithy_client.expectBoolean,
    useFipsEndpoint: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateReplicationConfigurationCommand");
var de_UpdateReplicationConfigurationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    associateDefaultSecurityGroup: import_smithy_client.expectBoolean,
    bandwidthThrottling: import_smithy_client.expectLong,
    createPublicIP: import_smithy_client.expectBoolean,
    dataPlaneRouting: import_smithy_client.expectString,
    defaultLargeStagingDiskType: import_smithy_client.expectString,
    ebsEncryption: import_smithy_client.expectString,
    ebsEncryptionKeyArn: import_smithy_client.expectString,
    replicationConfigurationTemplateID: import_smithy_client.expectString,
    replicationServerInstanceType: import_smithy_client.expectString,
    replicationServersSecurityGroupsIDs: import_smithy_client._json,
    stagingAreaSubnetId: import_smithy_client.expectString,
    stagingAreaTags: import_smithy_client._json,
    tags: import_smithy_client._json,
    useDedicatedReplicationServer: import_smithy_client.expectBoolean,
    useFipsEndpoint: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateReplicationConfigurationTemplateCommand");
var de_UpdateSourceServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateSourceServerCommand");
var de_UpdateSourceServerReplicationTypeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationID: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    connectorAction: import_smithy_client._json,
    dataReplicationInfo: import_smithy_client._json,
    fqdnForActionFramework: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    launchedInstance: import_smithy_client._json,
    lifeCycle: import_smithy_client._json,
    replicationType: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    sourceServerID: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    userProvidedID: import_smithy_client.expectString,
    vcenterClientID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateSourceServerReplicationTypeCommand");
var de_UpdateWaveCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    creationDateTime: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    isArchived: import_smithy_client.expectBoolean,
    lastModifiedDateTime: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    waveAggregatedStatus: import_smithy_client._json,
    waveID: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateWaveCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.mgn#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.mgn#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.mgn#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "UninitializedAccountException":
    case "com.amazonaws.mgn#UninitializedAccountException":
      throw await de_UninitializedAccountExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.mgn#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.mgn#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.mgn#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.mgn#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(MgnServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    errors: import_smithy_client._json,
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseLong)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    quotaValue: import_smithy_client.expectInt32,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [, parsedOutput.headers[_ra]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_UninitializedAccountExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UninitializedAccountException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UninitializedAccountExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    fieldList: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_ExportsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ExportTask(entry, context);
  });
  return retVal;
}, "de_ExportsList");
var de_ExportTask = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationDateTime: import_smithy_client.expectString,
    endDateTime: import_smithy_client.expectString,
    exportID: import_smithy_client.expectString,
    progressPercentage: import_smithy_client.limitedParseFloat32,
    s3Bucket: import_smithy_client.expectString,
    s3BucketOwner: import_smithy_client.expectString,
    s3Key: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    summary: import_smithy_client._json
  });
}, "de_ExportTask");
var de_ImportList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ImportTask(entry, context);
  });
  return retVal;
}, "de_ImportList");
var de_ImportTask = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationDateTime: import_smithy_client.expectString,
    endDateTime: import_smithy_client.expectString,
    importID: import_smithy_client.expectString,
    progressPercentage: import_smithy_client.limitedParseFloat32,
    s3BucketSource: import_smithy_client._json,
    status: import_smithy_client.expectString,
    summary: import_smithy_client._json
  });
}, "de_ImportTask");
var de_JobsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client._json)(entry);
  });
  return retVal;
}, "de_JobsList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _mR = "maxResults";
var _nT = "nextToken";
var _rAS = "retryAfterSeconds";
var _ra = "retry-after";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/ArchiveApplicationCommand.ts
var _ArchiveApplicationCommand = class _ArchiveApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ArchiveApplication", {}).n("MgnClient", "ArchiveApplicationCommand").f(void 0, ApplicationFilterSensitiveLog).ser(se_ArchiveApplicationCommand).de(de_ArchiveApplicationCommand).build() {
};
__name(_ArchiveApplicationCommand, "ArchiveApplicationCommand");
var ArchiveApplicationCommand = _ArchiveApplicationCommand;

// src/commands/ArchiveWaveCommand.ts




var _ArchiveWaveCommand = class _ArchiveWaveCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ArchiveWave", {}).n("MgnClient", "ArchiveWaveCommand").f(void 0, WaveFilterSensitiveLog).ser(se_ArchiveWaveCommand).de(de_ArchiveWaveCommand).build() {
};
__name(_ArchiveWaveCommand, "ArchiveWaveCommand");
var ArchiveWaveCommand = _ArchiveWaveCommand;

// src/commands/AssociateApplicationsCommand.ts




var _AssociateApplicationsCommand = class _AssociateApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "AssociateApplications", {}).n("MgnClient", "AssociateApplicationsCommand").f(void 0, void 0).ser(se_AssociateApplicationsCommand).de(de_AssociateApplicationsCommand).build() {
};
__name(_AssociateApplicationsCommand, "AssociateApplicationsCommand");
var AssociateApplicationsCommand = _AssociateApplicationsCommand;

// src/commands/AssociateSourceServersCommand.ts




var _AssociateSourceServersCommand = class _AssociateSourceServersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "AssociateSourceServers", {}).n("MgnClient", "AssociateSourceServersCommand").f(void 0, void 0).ser(se_AssociateSourceServersCommand).de(de_AssociateSourceServersCommand).build() {
};
__name(_AssociateSourceServersCommand, "AssociateSourceServersCommand");
var AssociateSourceServersCommand = _AssociateSourceServersCommand;

// src/commands/ChangeServerLifeCycleStateCommand.ts




var _ChangeServerLifeCycleStateCommand = class _ChangeServerLifeCycleStateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ChangeServerLifeCycleState", {}).n("MgnClient", "ChangeServerLifeCycleStateCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_ChangeServerLifeCycleStateCommand).de(de_ChangeServerLifeCycleStateCommand).build() {
};
__name(_ChangeServerLifeCycleStateCommand, "ChangeServerLifeCycleStateCommand");
var ChangeServerLifeCycleStateCommand = _ChangeServerLifeCycleStateCommand;

// src/commands/CreateApplicationCommand.ts




var _CreateApplicationCommand = class _CreateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "CreateApplication", {}).n("MgnClient", "CreateApplicationCommand").f(CreateApplicationRequestFilterSensitiveLog, ApplicationFilterSensitiveLog).ser(se_CreateApplicationCommand).de(de_CreateApplicationCommand).build() {
};
__name(_CreateApplicationCommand, "CreateApplicationCommand");
var CreateApplicationCommand = _CreateApplicationCommand;

// src/commands/CreateConnectorCommand.ts




var _CreateConnectorCommand = class _CreateConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "CreateConnector", {}).n("MgnClient", "CreateConnectorCommand").f(CreateConnectorRequestFilterSensitiveLog, ConnectorFilterSensitiveLog).ser(se_CreateConnectorCommand).de(de_CreateConnectorCommand).build() {
};
__name(_CreateConnectorCommand, "CreateConnectorCommand");
var CreateConnectorCommand = _CreateConnectorCommand;

// src/commands/CreateLaunchConfigurationTemplateCommand.ts




var _CreateLaunchConfigurationTemplateCommand = class _CreateLaunchConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "CreateLaunchConfigurationTemplate", {}).n("MgnClient", "CreateLaunchConfigurationTemplateCommand").f(CreateLaunchConfigurationTemplateRequestFilterSensitiveLog, LaunchConfigurationTemplateFilterSensitiveLog).ser(se_CreateLaunchConfigurationTemplateCommand).de(de_CreateLaunchConfigurationTemplateCommand).build() {
};
__name(_CreateLaunchConfigurationTemplateCommand, "CreateLaunchConfigurationTemplateCommand");
var CreateLaunchConfigurationTemplateCommand = _CreateLaunchConfigurationTemplateCommand;

// src/commands/CreateReplicationConfigurationTemplateCommand.ts




var _CreateReplicationConfigurationTemplateCommand = class _CreateReplicationConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "CreateReplicationConfigurationTemplate", {}).n("MgnClient", "CreateReplicationConfigurationTemplateCommand").f(
  CreateReplicationConfigurationTemplateRequestFilterSensitiveLog,
  ReplicationConfigurationTemplateFilterSensitiveLog
).ser(se_CreateReplicationConfigurationTemplateCommand).de(de_CreateReplicationConfigurationTemplateCommand).build() {
};
__name(_CreateReplicationConfigurationTemplateCommand, "CreateReplicationConfigurationTemplateCommand");
var CreateReplicationConfigurationTemplateCommand = _CreateReplicationConfigurationTemplateCommand;

// src/commands/CreateWaveCommand.ts




var _CreateWaveCommand = class _CreateWaveCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "CreateWave", {}).n("MgnClient", "CreateWaveCommand").f(CreateWaveRequestFilterSensitiveLog, WaveFilterSensitiveLog).ser(se_CreateWaveCommand).de(de_CreateWaveCommand).build() {
};
__name(_CreateWaveCommand, "CreateWaveCommand");
var CreateWaveCommand = _CreateWaveCommand;

// src/commands/DeleteApplicationCommand.ts




var _DeleteApplicationCommand = class _DeleteApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteApplication", {}).n("MgnClient", "DeleteApplicationCommand").f(void 0, void 0).ser(se_DeleteApplicationCommand).de(de_DeleteApplicationCommand).build() {
};
__name(_DeleteApplicationCommand, "DeleteApplicationCommand");
var DeleteApplicationCommand = _DeleteApplicationCommand;

// src/commands/DeleteConnectorCommand.ts




var _DeleteConnectorCommand = class _DeleteConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteConnector", {}).n("MgnClient", "DeleteConnectorCommand").f(void 0, void 0).ser(se_DeleteConnectorCommand).de(de_DeleteConnectorCommand).build() {
};
__name(_DeleteConnectorCommand, "DeleteConnectorCommand");
var DeleteConnectorCommand = _DeleteConnectorCommand;

// src/commands/DeleteJobCommand.ts




var _DeleteJobCommand = class _DeleteJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteJob", {}).n("MgnClient", "DeleteJobCommand").f(void 0, void 0).ser(se_DeleteJobCommand).de(de_DeleteJobCommand).build() {
};
__name(_DeleteJobCommand, "DeleteJobCommand");
var DeleteJobCommand = _DeleteJobCommand;

// src/commands/DeleteLaunchConfigurationTemplateCommand.ts




var _DeleteLaunchConfigurationTemplateCommand = class _DeleteLaunchConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteLaunchConfigurationTemplate", {}).n("MgnClient", "DeleteLaunchConfigurationTemplateCommand").f(void 0, void 0).ser(se_DeleteLaunchConfigurationTemplateCommand).de(de_DeleteLaunchConfigurationTemplateCommand).build() {
};
__name(_DeleteLaunchConfigurationTemplateCommand, "DeleteLaunchConfigurationTemplateCommand");
var DeleteLaunchConfigurationTemplateCommand = _DeleteLaunchConfigurationTemplateCommand;

// src/commands/DeleteReplicationConfigurationTemplateCommand.ts




var _DeleteReplicationConfigurationTemplateCommand = class _DeleteReplicationConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteReplicationConfigurationTemplate", {}).n("MgnClient", "DeleteReplicationConfigurationTemplateCommand").f(void 0, void 0).ser(se_DeleteReplicationConfigurationTemplateCommand).de(de_DeleteReplicationConfigurationTemplateCommand).build() {
};
__name(_DeleteReplicationConfigurationTemplateCommand, "DeleteReplicationConfigurationTemplateCommand");
var DeleteReplicationConfigurationTemplateCommand = _DeleteReplicationConfigurationTemplateCommand;

// src/commands/DeleteSourceServerCommand.ts




var _DeleteSourceServerCommand = class _DeleteSourceServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteSourceServer", {}).n("MgnClient", "DeleteSourceServerCommand").f(void 0, void 0).ser(se_DeleteSourceServerCommand).de(de_DeleteSourceServerCommand).build() {
};
__name(_DeleteSourceServerCommand, "DeleteSourceServerCommand");
var DeleteSourceServerCommand = _DeleteSourceServerCommand;

// src/commands/DeleteVcenterClientCommand.ts




var _DeleteVcenterClientCommand = class _DeleteVcenterClientCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteVcenterClient", {}).n("MgnClient", "DeleteVcenterClientCommand").f(void 0, void 0).ser(se_DeleteVcenterClientCommand).de(de_DeleteVcenterClientCommand).build() {
};
__name(_DeleteVcenterClientCommand, "DeleteVcenterClientCommand");
var DeleteVcenterClientCommand = _DeleteVcenterClientCommand;

// src/commands/DeleteWaveCommand.ts




var _DeleteWaveCommand = class _DeleteWaveCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DeleteWave", {}).n("MgnClient", "DeleteWaveCommand").f(void 0, void 0).ser(se_DeleteWaveCommand).de(de_DeleteWaveCommand).build() {
};
__name(_DeleteWaveCommand, "DeleteWaveCommand");
var DeleteWaveCommand = _DeleteWaveCommand;

// src/commands/DescribeJobLogItemsCommand.ts




var _DescribeJobLogItemsCommand = class _DescribeJobLogItemsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DescribeJobLogItems", {}).n("MgnClient", "DescribeJobLogItemsCommand").f(void 0, void 0).ser(se_DescribeJobLogItemsCommand).de(de_DescribeJobLogItemsCommand).build() {
};
__name(_DescribeJobLogItemsCommand, "DescribeJobLogItemsCommand");
var DescribeJobLogItemsCommand = _DescribeJobLogItemsCommand;

// src/commands/DescribeJobsCommand.ts




var _DescribeJobsCommand = class _DescribeJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DescribeJobs", {}).n("MgnClient", "DescribeJobsCommand").f(void 0, DescribeJobsResponseFilterSensitiveLog).ser(se_DescribeJobsCommand).de(de_DescribeJobsCommand).build() {
};
__name(_DescribeJobsCommand, "DescribeJobsCommand");
var DescribeJobsCommand = _DescribeJobsCommand;

// src/commands/DescribeLaunchConfigurationTemplatesCommand.ts




var _DescribeLaunchConfigurationTemplatesCommand = class _DescribeLaunchConfigurationTemplatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DescribeLaunchConfigurationTemplates", {}).n("MgnClient", "DescribeLaunchConfigurationTemplatesCommand").f(void 0, DescribeLaunchConfigurationTemplatesResponseFilterSensitiveLog).ser(se_DescribeLaunchConfigurationTemplatesCommand).de(de_DescribeLaunchConfigurationTemplatesCommand).build() {
};
__name(_DescribeLaunchConfigurationTemplatesCommand, "DescribeLaunchConfigurationTemplatesCommand");
var DescribeLaunchConfigurationTemplatesCommand = _DescribeLaunchConfigurationTemplatesCommand;

// src/commands/DescribeReplicationConfigurationTemplatesCommand.ts




var _DescribeReplicationConfigurationTemplatesCommand = class _DescribeReplicationConfigurationTemplatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DescribeReplicationConfigurationTemplates", {}).n("MgnClient", "DescribeReplicationConfigurationTemplatesCommand").f(void 0, DescribeReplicationConfigurationTemplatesResponseFilterSensitiveLog).ser(se_DescribeReplicationConfigurationTemplatesCommand).de(de_DescribeReplicationConfigurationTemplatesCommand).build() {
};
__name(_DescribeReplicationConfigurationTemplatesCommand, "DescribeReplicationConfigurationTemplatesCommand");
var DescribeReplicationConfigurationTemplatesCommand = _DescribeReplicationConfigurationTemplatesCommand;

// src/commands/DescribeSourceServersCommand.ts




var _DescribeSourceServersCommand = class _DescribeSourceServersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DescribeSourceServers", {}).n("MgnClient", "DescribeSourceServersCommand").f(void 0, DescribeSourceServersResponseFilterSensitiveLog).ser(se_DescribeSourceServersCommand).de(de_DescribeSourceServersCommand).build() {
};
__name(_DescribeSourceServersCommand, "DescribeSourceServersCommand");
var DescribeSourceServersCommand = _DescribeSourceServersCommand;

// src/commands/DescribeVcenterClientsCommand.ts




var _DescribeVcenterClientsCommand = class _DescribeVcenterClientsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DescribeVcenterClients", {}).n("MgnClient", "DescribeVcenterClientsCommand").f(void 0, DescribeVcenterClientsResponseFilterSensitiveLog).ser(se_DescribeVcenterClientsCommand).de(de_DescribeVcenterClientsCommand).build() {
};
__name(_DescribeVcenterClientsCommand, "DescribeVcenterClientsCommand");
var DescribeVcenterClientsCommand = _DescribeVcenterClientsCommand;

// src/commands/DisassociateApplicationsCommand.ts




var _DisassociateApplicationsCommand = class _DisassociateApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DisassociateApplications", {}).n("MgnClient", "DisassociateApplicationsCommand").f(void 0, void 0).ser(se_DisassociateApplicationsCommand).de(de_DisassociateApplicationsCommand).build() {
};
__name(_DisassociateApplicationsCommand, "DisassociateApplicationsCommand");
var DisassociateApplicationsCommand = _DisassociateApplicationsCommand;

// src/commands/DisassociateSourceServersCommand.ts




var _DisassociateSourceServersCommand = class _DisassociateSourceServersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DisassociateSourceServers", {}).n("MgnClient", "DisassociateSourceServersCommand").f(void 0, void 0).ser(se_DisassociateSourceServersCommand).de(de_DisassociateSourceServersCommand).build() {
};
__name(_DisassociateSourceServersCommand, "DisassociateSourceServersCommand");
var DisassociateSourceServersCommand = _DisassociateSourceServersCommand;

// src/commands/DisconnectFromServiceCommand.ts




var _DisconnectFromServiceCommand = class _DisconnectFromServiceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "DisconnectFromService", {}).n("MgnClient", "DisconnectFromServiceCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_DisconnectFromServiceCommand).de(de_DisconnectFromServiceCommand).build() {
};
__name(_DisconnectFromServiceCommand, "DisconnectFromServiceCommand");
var DisconnectFromServiceCommand = _DisconnectFromServiceCommand;

// src/commands/FinalizeCutoverCommand.ts




var _FinalizeCutoverCommand = class _FinalizeCutoverCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "FinalizeCutover", {}).n("MgnClient", "FinalizeCutoverCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_FinalizeCutoverCommand).de(de_FinalizeCutoverCommand).build() {
};
__name(_FinalizeCutoverCommand, "FinalizeCutoverCommand");
var FinalizeCutoverCommand = _FinalizeCutoverCommand;

// src/commands/GetLaunchConfigurationCommand.ts




var _GetLaunchConfigurationCommand = class _GetLaunchConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "GetLaunchConfiguration", {}).n("MgnClient", "GetLaunchConfigurationCommand").f(void 0, void 0).ser(se_GetLaunchConfigurationCommand).de(de_GetLaunchConfigurationCommand).build() {
};
__name(_GetLaunchConfigurationCommand, "GetLaunchConfigurationCommand");
var GetLaunchConfigurationCommand = _GetLaunchConfigurationCommand;

// src/commands/GetReplicationConfigurationCommand.ts




var _GetReplicationConfigurationCommand = class _GetReplicationConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "GetReplicationConfiguration", {}).n("MgnClient", "GetReplicationConfigurationCommand").f(void 0, ReplicationConfigurationFilterSensitiveLog).ser(se_GetReplicationConfigurationCommand).de(de_GetReplicationConfigurationCommand).build() {
};
__name(_GetReplicationConfigurationCommand, "GetReplicationConfigurationCommand");
var GetReplicationConfigurationCommand = _GetReplicationConfigurationCommand;

// src/commands/InitializeServiceCommand.ts




var _InitializeServiceCommand = class _InitializeServiceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "InitializeService", {}).n("MgnClient", "InitializeServiceCommand").f(void 0, void 0).ser(se_InitializeServiceCommand).de(de_InitializeServiceCommand).build() {
};
__name(_InitializeServiceCommand, "InitializeServiceCommand");
var InitializeServiceCommand = _InitializeServiceCommand;

// src/commands/ListApplicationsCommand.ts




var _ListApplicationsCommand = class _ListApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListApplications", {}).n("MgnClient", "ListApplicationsCommand").f(void 0, ListApplicationsResponseFilterSensitiveLog).ser(se_ListApplicationsCommand).de(de_ListApplicationsCommand).build() {
};
__name(_ListApplicationsCommand, "ListApplicationsCommand");
var ListApplicationsCommand = _ListApplicationsCommand;

// src/commands/ListConnectorsCommand.ts




var _ListConnectorsCommand = class _ListConnectorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListConnectors", {}).n("MgnClient", "ListConnectorsCommand").f(void 0, ListConnectorsResponseFilterSensitiveLog).ser(se_ListConnectorsCommand).de(de_ListConnectorsCommand).build() {
};
__name(_ListConnectorsCommand, "ListConnectorsCommand");
var ListConnectorsCommand = _ListConnectorsCommand;

// src/commands/ListExportErrorsCommand.ts




var _ListExportErrorsCommand = class _ListExportErrorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListExportErrors", {}).n("MgnClient", "ListExportErrorsCommand").f(void 0, void 0).ser(se_ListExportErrorsCommand).de(de_ListExportErrorsCommand).build() {
};
__name(_ListExportErrorsCommand, "ListExportErrorsCommand");
var ListExportErrorsCommand = _ListExportErrorsCommand;

// src/commands/ListExportsCommand.ts




var _ListExportsCommand = class _ListExportsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListExports", {}).n("MgnClient", "ListExportsCommand").f(void 0, void 0).ser(se_ListExportsCommand).de(de_ListExportsCommand).build() {
};
__name(_ListExportsCommand, "ListExportsCommand");
var ListExportsCommand = _ListExportsCommand;

// src/commands/ListImportErrorsCommand.ts




var _ListImportErrorsCommand = class _ListImportErrorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListImportErrors", {}).n("MgnClient", "ListImportErrorsCommand").f(void 0, void 0).ser(se_ListImportErrorsCommand).de(de_ListImportErrorsCommand).build() {
};
__name(_ListImportErrorsCommand, "ListImportErrorsCommand");
var ListImportErrorsCommand = _ListImportErrorsCommand;

// src/commands/ListImportsCommand.ts




var _ListImportsCommand = class _ListImportsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListImports", {}).n("MgnClient", "ListImportsCommand").f(void 0, void 0).ser(se_ListImportsCommand).de(de_ListImportsCommand).build() {
};
__name(_ListImportsCommand, "ListImportsCommand");
var ListImportsCommand = _ListImportsCommand;

// src/commands/ListManagedAccountsCommand.ts




var _ListManagedAccountsCommand = class _ListManagedAccountsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListManagedAccounts", {}).n("MgnClient", "ListManagedAccountsCommand").f(void 0, void 0).ser(se_ListManagedAccountsCommand).de(de_ListManagedAccountsCommand).build() {
};
__name(_ListManagedAccountsCommand, "ListManagedAccountsCommand");
var ListManagedAccountsCommand = _ListManagedAccountsCommand;

// src/commands/ListSourceServerActionsCommand.ts




var _ListSourceServerActionsCommand = class _ListSourceServerActionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListSourceServerActions", {}).n("MgnClient", "ListSourceServerActionsCommand").f(void 0, void 0).ser(se_ListSourceServerActionsCommand).de(de_ListSourceServerActionsCommand).build() {
};
__name(_ListSourceServerActionsCommand, "ListSourceServerActionsCommand");
var ListSourceServerActionsCommand = _ListSourceServerActionsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListTagsForResource", {}).n("MgnClient", "ListTagsForResourceCommand").f(void 0, ListTagsForResourceResponseFilterSensitiveLog).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListTemplateActionsCommand.ts




var _ListTemplateActionsCommand = class _ListTemplateActionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListTemplateActions", {}).n("MgnClient", "ListTemplateActionsCommand").f(void 0, void 0).ser(se_ListTemplateActionsCommand).de(de_ListTemplateActionsCommand).build() {
};
__name(_ListTemplateActionsCommand, "ListTemplateActionsCommand");
var ListTemplateActionsCommand = _ListTemplateActionsCommand;

// src/commands/ListWavesCommand.ts




var _ListWavesCommand = class _ListWavesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ListWaves", {}).n("MgnClient", "ListWavesCommand").f(void 0, ListWavesResponseFilterSensitiveLog).ser(se_ListWavesCommand).de(de_ListWavesCommand).build() {
};
__name(_ListWavesCommand, "ListWavesCommand");
var ListWavesCommand = _ListWavesCommand;

// src/commands/MarkAsArchivedCommand.ts




var _MarkAsArchivedCommand = class _MarkAsArchivedCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "MarkAsArchived", {}).n("MgnClient", "MarkAsArchivedCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_MarkAsArchivedCommand).de(de_MarkAsArchivedCommand).build() {
};
__name(_MarkAsArchivedCommand, "MarkAsArchivedCommand");
var MarkAsArchivedCommand = _MarkAsArchivedCommand;

// src/commands/PauseReplicationCommand.ts




var _PauseReplicationCommand = class _PauseReplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "PauseReplication", {}).n("MgnClient", "PauseReplicationCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_PauseReplicationCommand).de(de_PauseReplicationCommand).build() {
};
__name(_PauseReplicationCommand, "PauseReplicationCommand");
var PauseReplicationCommand = _PauseReplicationCommand;

// src/commands/PutSourceServerActionCommand.ts




var _PutSourceServerActionCommand = class _PutSourceServerActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "PutSourceServerAction", {}).n("MgnClient", "PutSourceServerActionCommand").f(void 0, void 0).ser(se_PutSourceServerActionCommand).de(de_PutSourceServerActionCommand).build() {
};
__name(_PutSourceServerActionCommand, "PutSourceServerActionCommand");
var PutSourceServerActionCommand = _PutSourceServerActionCommand;

// src/commands/PutTemplateActionCommand.ts




var _PutTemplateActionCommand = class _PutTemplateActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "PutTemplateAction", {}).n("MgnClient", "PutTemplateActionCommand").f(void 0, void 0).ser(se_PutTemplateActionCommand).de(de_PutTemplateActionCommand).build() {
};
__name(_PutTemplateActionCommand, "PutTemplateActionCommand");
var PutTemplateActionCommand = _PutTemplateActionCommand;

// src/commands/RemoveSourceServerActionCommand.ts




var _RemoveSourceServerActionCommand = class _RemoveSourceServerActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "RemoveSourceServerAction", {}).n("MgnClient", "RemoveSourceServerActionCommand").f(void 0, void 0).ser(se_RemoveSourceServerActionCommand).de(de_RemoveSourceServerActionCommand).build() {
};
__name(_RemoveSourceServerActionCommand, "RemoveSourceServerActionCommand");
var RemoveSourceServerActionCommand = _RemoveSourceServerActionCommand;

// src/commands/RemoveTemplateActionCommand.ts




var _RemoveTemplateActionCommand = class _RemoveTemplateActionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "RemoveTemplateAction", {}).n("MgnClient", "RemoveTemplateActionCommand").f(void 0, void 0).ser(se_RemoveTemplateActionCommand).de(de_RemoveTemplateActionCommand).build() {
};
__name(_RemoveTemplateActionCommand, "RemoveTemplateActionCommand");
var RemoveTemplateActionCommand = _RemoveTemplateActionCommand;

// src/commands/ResumeReplicationCommand.ts




var _ResumeReplicationCommand = class _ResumeReplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "ResumeReplication", {}).n("MgnClient", "ResumeReplicationCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_ResumeReplicationCommand).de(de_ResumeReplicationCommand).build() {
};
__name(_ResumeReplicationCommand, "ResumeReplicationCommand");
var ResumeReplicationCommand = _ResumeReplicationCommand;

// src/commands/RetryDataReplicationCommand.ts




var _RetryDataReplicationCommand = class _RetryDataReplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "RetryDataReplication", {}).n("MgnClient", "RetryDataReplicationCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_RetryDataReplicationCommand).de(de_RetryDataReplicationCommand).build() {
};
__name(_RetryDataReplicationCommand, "RetryDataReplicationCommand");
var RetryDataReplicationCommand = _RetryDataReplicationCommand;

// src/commands/StartCutoverCommand.ts




var _StartCutoverCommand = class _StartCutoverCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "StartCutover", {}).n("MgnClient", "StartCutoverCommand").f(StartCutoverRequestFilterSensitiveLog, StartCutoverResponseFilterSensitiveLog).ser(se_StartCutoverCommand).de(de_StartCutoverCommand).build() {
};
__name(_StartCutoverCommand, "StartCutoverCommand");
var StartCutoverCommand = _StartCutoverCommand;

// src/commands/StartExportCommand.ts




var _StartExportCommand = class _StartExportCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "StartExport", {}).n("MgnClient", "StartExportCommand").f(void 0, void 0).ser(se_StartExportCommand).de(de_StartExportCommand).build() {
};
__name(_StartExportCommand, "StartExportCommand");
var StartExportCommand = _StartExportCommand;

// src/commands/StartImportCommand.ts




var _StartImportCommand = class _StartImportCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "StartImport", {}).n("MgnClient", "StartImportCommand").f(void 0, void 0).ser(se_StartImportCommand).de(de_StartImportCommand).build() {
};
__name(_StartImportCommand, "StartImportCommand");
var StartImportCommand = _StartImportCommand;

// src/commands/StartReplicationCommand.ts




var _StartReplicationCommand = class _StartReplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "StartReplication", {}).n("MgnClient", "StartReplicationCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_StartReplicationCommand).de(de_StartReplicationCommand).build() {
};
__name(_StartReplicationCommand, "StartReplicationCommand");
var StartReplicationCommand = _StartReplicationCommand;

// src/commands/StartTestCommand.ts




var _StartTestCommand = class _StartTestCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "StartTest", {}).n("MgnClient", "StartTestCommand").f(StartTestRequestFilterSensitiveLog, StartTestResponseFilterSensitiveLog).ser(se_StartTestCommand).de(de_StartTestCommand).build() {
};
__name(_StartTestCommand, "StartTestCommand");
var StartTestCommand = _StartTestCommand;

// src/commands/StopReplicationCommand.ts




var _StopReplicationCommand = class _StopReplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "StopReplication", {}).n("MgnClient", "StopReplicationCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_StopReplicationCommand).de(de_StopReplicationCommand).build() {
};
__name(_StopReplicationCommand, "StopReplicationCommand");
var StopReplicationCommand = _StopReplicationCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "TagResource", {}).n("MgnClient", "TagResourceCommand").f(TagResourceRequestFilterSensitiveLog, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/TerminateTargetInstancesCommand.ts




var _TerminateTargetInstancesCommand = class _TerminateTargetInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "TerminateTargetInstances", {}).n("MgnClient", "TerminateTargetInstancesCommand").f(TerminateTargetInstancesRequestFilterSensitiveLog, TerminateTargetInstancesResponseFilterSensitiveLog).ser(se_TerminateTargetInstancesCommand).de(de_TerminateTargetInstancesCommand).build() {
};
__name(_TerminateTargetInstancesCommand, "TerminateTargetInstancesCommand");
var TerminateTargetInstancesCommand = _TerminateTargetInstancesCommand;

// src/commands/UnarchiveApplicationCommand.ts




var _UnarchiveApplicationCommand = class _UnarchiveApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UnarchiveApplication", {}).n("MgnClient", "UnarchiveApplicationCommand").f(void 0, ApplicationFilterSensitiveLog).ser(se_UnarchiveApplicationCommand).de(de_UnarchiveApplicationCommand).build() {
};
__name(_UnarchiveApplicationCommand, "UnarchiveApplicationCommand");
var UnarchiveApplicationCommand = _UnarchiveApplicationCommand;

// src/commands/UnarchiveWaveCommand.ts




var _UnarchiveWaveCommand = class _UnarchiveWaveCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UnarchiveWave", {}).n("MgnClient", "UnarchiveWaveCommand").f(void 0, WaveFilterSensitiveLog).ser(se_UnarchiveWaveCommand).de(de_UnarchiveWaveCommand).build() {
};
__name(_UnarchiveWaveCommand, "UnarchiveWaveCommand");
var UnarchiveWaveCommand = _UnarchiveWaveCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UntagResource", {}).n("MgnClient", "UntagResourceCommand").f(UntagResourceRequestFilterSensitiveLog, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateApplicationCommand.ts




var _UpdateApplicationCommand = class _UpdateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateApplication", {}).n("MgnClient", "UpdateApplicationCommand").f(void 0, ApplicationFilterSensitiveLog).ser(se_UpdateApplicationCommand).de(de_UpdateApplicationCommand).build() {
};
__name(_UpdateApplicationCommand, "UpdateApplicationCommand");
var UpdateApplicationCommand = _UpdateApplicationCommand;

// src/commands/UpdateConnectorCommand.ts




var _UpdateConnectorCommand = class _UpdateConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateConnector", {}).n("MgnClient", "UpdateConnectorCommand").f(void 0, ConnectorFilterSensitiveLog).ser(se_UpdateConnectorCommand).de(de_UpdateConnectorCommand).build() {
};
__name(_UpdateConnectorCommand, "UpdateConnectorCommand");
var UpdateConnectorCommand = _UpdateConnectorCommand;

// src/commands/UpdateLaunchConfigurationCommand.ts




var _UpdateLaunchConfigurationCommand = class _UpdateLaunchConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateLaunchConfiguration", {}).n("MgnClient", "UpdateLaunchConfigurationCommand").f(void 0, void 0).ser(se_UpdateLaunchConfigurationCommand).de(de_UpdateLaunchConfigurationCommand).build() {
};
__name(_UpdateLaunchConfigurationCommand, "UpdateLaunchConfigurationCommand");
var UpdateLaunchConfigurationCommand = _UpdateLaunchConfigurationCommand;

// src/commands/UpdateLaunchConfigurationTemplateCommand.ts




var _UpdateLaunchConfigurationTemplateCommand = class _UpdateLaunchConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateLaunchConfigurationTemplate", {}).n("MgnClient", "UpdateLaunchConfigurationTemplateCommand").f(void 0, LaunchConfigurationTemplateFilterSensitiveLog).ser(se_UpdateLaunchConfigurationTemplateCommand).de(de_UpdateLaunchConfigurationTemplateCommand).build() {
};
__name(_UpdateLaunchConfigurationTemplateCommand, "UpdateLaunchConfigurationTemplateCommand");
var UpdateLaunchConfigurationTemplateCommand = _UpdateLaunchConfigurationTemplateCommand;

// src/commands/UpdateReplicationConfigurationCommand.ts




var _UpdateReplicationConfigurationCommand = class _UpdateReplicationConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateReplicationConfiguration", {}).n("MgnClient", "UpdateReplicationConfigurationCommand").f(UpdateReplicationConfigurationRequestFilterSensitiveLog, ReplicationConfigurationFilterSensitiveLog).ser(se_UpdateReplicationConfigurationCommand).de(de_UpdateReplicationConfigurationCommand).build() {
};
__name(_UpdateReplicationConfigurationCommand, "UpdateReplicationConfigurationCommand");
var UpdateReplicationConfigurationCommand = _UpdateReplicationConfigurationCommand;

// src/commands/UpdateReplicationConfigurationTemplateCommand.ts




var _UpdateReplicationConfigurationTemplateCommand = class _UpdateReplicationConfigurationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateReplicationConfigurationTemplate", {}).n("MgnClient", "UpdateReplicationConfigurationTemplateCommand").f(
  UpdateReplicationConfigurationTemplateRequestFilterSensitiveLog,
  ReplicationConfigurationTemplateFilterSensitiveLog
).ser(se_UpdateReplicationConfigurationTemplateCommand).de(de_UpdateReplicationConfigurationTemplateCommand).build() {
};
__name(_UpdateReplicationConfigurationTemplateCommand, "UpdateReplicationConfigurationTemplateCommand");
var UpdateReplicationConfigurationTemplateCommand = _UpdateReplicationConfigurationTemplateCommand;

// src/commands/UpdateSourceServerCommand.ts




var _UpdateSourceServerCommand = class _UpdateSourceServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateSourceServer", {}).n("MgnClient", "UpdateSourceServerCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_UpdateSourceServerCommand).de(de_UpdateSourceServerCommand).build() {
};
__name(_UpdateSourceServerCommand, "UpdateSourceServerCommand");
var UpdateSourceServerCommand = _UpdateSourceServerCommand;

// src/commands/UpdateSourceServerReplicationTypeCommand.ts




var _UpdateSourceServerReplicationTypeCommand = class _UpdateSourceServerReplicationTypeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateSourceServerReplicationType", {}).n("MgnClient", "UpdateSourceServerReplicationTypeCommand").f(void 0, SourceServerFilterSensitiveLog).ser(se_UpdateSourceServerReplicationTypeCommand).de(de_UpdateSourceServerReplicationTypeCommand).build() {
};
__name(_UpdateSourceServerReplicationTypeCommand, "UpdateSourceServerReplicationTypeCommand");
var UpdateSourceServerReplicationTypeCommand = _UpdateSourceServerReplicationTypeCommand;

// src/commands/UpdateWaveCommand.ts




var _UpdateWaveCommand = class _UpdateWaveCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ApplicationMigrationService", "UpdateWave", {}).n("MgnClient", "UpdateWaveCommand").f(void 0, WaveFilterSensitiveLog).ser(se_UpdateWaveCommand).de(de_UpdateWaveCommand).build() {
};
__name(_UpdateWaveCommand, "UpdateWaveCommand");
var UpdateWaveCommand = _UpdateWaveCommand;

// src/Mgn.ts
var commands = {
  ArchiveApplicationCommand,
  ArchiveWaveCommand,
  AssociateApplicationsCommand,
  AssociateSourceServersCommand,
  ChangeServerLifeCycleStateCommand,
  CreateApplicationCommand,
  CreateConnectorCommand,
  CreateLaunchConfigurationTemplateCommand,
  CreateReplicationConfigurationTemplateCommand,
  CreateWaveCommand,
  DeleteApplicationCommand,
  DeleteConnectorCommand,
  DeleteJobCommand,
  DeleteLaunchConfigurationTemplateCommand,
  DeleteReplicationConfigurationTemplateCommand,
  DeleteSourceServerCommand,
  DeleteVcenterClientCommand,
  DeleteWaveCommand,
  DescribeJobLogItemsCommand,
  DescribeJobsCommand,
  DescribeLaunchConfigurationTemplatesCommand,
  DescribeReplicationConfigurationTemplatesCommand,
  DescribeSourceServersCommand,
  DescribeVcenterClientsCommand,
  DisassociateApplicationsCommand,
  DisassociateSourceServersCommand,
  DisconnectFromServiceCommand,
  FinalizeCutoverCommand,
  GetLaunchConfigurationCommand,
  GetReplicationConfigurationCommand,
  InitializeServiceCommand,
  ListApplicationsCommand,
  ListConnectorsCommand,
  ListExportErrorsCommand,
  ListExportsCommand,
  ListImportErrorsCommand,
  ListImportsCommand,
  ListManagedAccountsCommand,
  ListSourceServerActionsCommand,
  ListTagsForResourceCommand,
  ListTemplateActionsCommand,
  ListWavesCommand,
  MarkAsArchivedCommand,
  PauseReplicationCommand,
  PutSourceServerActionCommand,
  PutTemplateActionCommand,
  RemoveSourceServerActionCommand,
  RemoveTemplateActionCommand,
  ResumeReplicationCommand,
  RetryDataReplicationCommand,
  StartCutoverCommand,
  StartExportCommand,
  StartImportCommand,
  StartReplicationCommand,
  StartTestCommand,
  StopReplicationCommand,
  TagResourceCommand,
  TerminateTargetInstancesCommand,
  UnarchiveApplicationCommand,
  UnarchiveWaveCommand,
  UntagResourceCommand,
  UpdateApplicationCommand,
  UpdateConnectorCommand,
  UpdateLaunchConfigurationCommand,
  UpdateLaunchConfigurationTemplateCommand,
  UpdateReplicationConfigurationCommand,
  UpdateReplicationConfigurationTemplateCommand,
  UpdateSourceServerCommand,
  UpdateSourceServerReplicationTypeCommand,
  UpdateWaveCommand
};
var _Mgn = class _Mgn extends MgnClient {
};
__name(_Mgn, "Mgn");
var Mgn = _Mgn;
(0, import_smithy_client.createAggregatedClient)(commands, Mgn);

// src/pagination/DescribeJobLogItemsPaginator.ts

var paginateDescribeJobLogItems = (0, import_core.createPaginator)(MgnClient, DescribeJobLogItemsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeJobsPaginator.ts

var paginateDescribeJobs = (0, import_core.createPaginator)(MgnClient, DescribeJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeLaunchConfigurationTemplatesPaginator.ts

var paginateDescribeLaunchConfigurationTemplates = (0, import_core.createPaginator)(MgnClient, DescribeLaunchConfigurationTemplatesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeReplicationConfigurationTemplatesPaginator.ts

var paginateDescribeReplicationConfigurationTemplates = (0, import_core.createPaginator)(MgnClient, DescribeReplicationConfigurationTemplatesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeSourceServersPaginator.ts

var paginateDescribeSourceServers = (0, import_core.createPaginator)(MgnClient, DescribeSourceServersCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeVcenterClientsPaginator.ts

var paginateDescribeVcenterClients = (0, import_core.createPaginator)(MgnClient, DescribeVcenterClientsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListApplicationsPaginator.ts

var paginateListApplications = (0, import_core.createPaginator)(MgnClient, ListApplicationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListConnectorsPaginator.ts

var paginateListConnectors = (0, import_core.createPaginator)(MgnClient, ListConnectorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListExportErrorsPaginator.ts

var paginateListExportErrors = (0, import_core.createPaginator)(MgnClient, ListExportErrorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListExportsPaginator.ts

var paginateListExports = (0, import_core.createPaginator)(MgnClient, ListExportsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListImportErrorsPaginator.ts

var paginateListImportErrors = (0, import_core.createPaginator)(MgnClient, ListImportErrorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListImportsPaginator.ts

var paginateListImports = (0, import_core.createPaginator)(MgnClient, ListImportsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListManagedAccountsPaginator.ts

var paginateListManagedAccounts = (0, import_core.createPaginator)(MgnClient, ListManagedAccountsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSourceServerActionsPaginator.ts

var paginateListSourceServerActions = (0, import_core.createPaginator)(MgnClient, ListSourceServerActionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListTemplateActionsPaginator.ts

var paginateListTemplateActions = (0, import_core.createPaginator)(MgnClient, ListTemplateActionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWavesPaginator.ts

var paginateListWaves = (0, import_core.createPaginator)(MgnClient, ListWavesCommand, "nextToken", "nextToken", "maxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  MgnServiceException,
  __Client,
  MgnClient,
  Mgn,
  $Command,
  ArchiveApplicationCommand,
  ArchiveWaveCommand,
  AssociateApplicationsCommand,
  AssociateSourceServersCommand,
  ChangeServerLifeCycleStateCommand,
  CreateApplicationCommand,
  CreateConnectorCommand,
  CreateLaunchConfigurationTemplateCommand,
  CreateReplicationConfigurationTemplateCommand,
  CreateWaveCommand,
  DeleteApplicationCommand,
  DeleteConnectorCommand,
  DeleteJobCommand,
  DeleteLaunchConfigurationTemplateCommand,
  DeleteReplicationConfigurationTemplateCommand,
  DeleteSourceServerCommand,
  DeleteVcenterClientCommand,
  DeleteWaveCommand,
  DescribeJobLogItemsCommand,
  DescribeJobsCommand,
  DescribeLaunchConfigurationTemplatesCommand,
  DescribeReplicationConfigurationTemplatesCommand,
  DescribeSourceServersCommand,
  DescribeVcenterClientsCommand,
  DisassociateApplicationsCommand,
  DisassociateSourceServersCommand,
  DisconnectFromServiceCommand,
  FinalizeCutoverCommand,
  GetLaunchConfigurationCommand,
  GetReplicationConfigurationCommand,
  InitializeServiceCommand,
  ListApplicationsCommand,
  ListConnectorsCommand,
  ListExportErrorsCommand,
  ListExportsCommand,
  ListImportErrorsCommand,
  ListImportsCommand,
  ListManagedAccountsCommand,
  ListSourceServerActionsCommand,
  ListTagsForResourceCommand,
  ListTemplateActionsCommand,
  ListWavesCommand,
  MarkAsArchivedCommand,
  PauseReplicationCommand,
  PutSourceServerActionCommand,
  PutTemplateActionCommand,
  RemoveSourceServerActionCommand,
  RemoveTemplateActionCommand,
  ResumeReplicationCommand,
  RetryDataReplicationCommand,
  StartCutoverCommand,
  StartExportCommand,
  StartImportCommand,
  StartReplicationCommand,
  StartTestCommand,
  StopReplicationCommand,
  TagResourceCommand,
  TerminateTargetInstancesCommand,
  UnarchiveApplicationCommand,
  UnarchiveWaveCommand,
  UntagResourceCommand,
  UpdateApplicationCommand,
  UpdateConnectorCommand,
  UpdateLaunchConfigurationCommand,
  UpdateLaunchConfigurationTemplateCommand,
  UpdateReplicationConfigurationCommand,
  UpdateReplicationConfigurationTemplateCommand,
  UpdateSourceServerCommand,
  UpdateSourceServerReplicationTypeCommand,
  UpdateWaveCommand,
  paginateDescribeJobLogItems,
  paginateDescribeJobs,
  paginateDescribeLaunchConfigurationTemplates,
  paginateDescribeReplicationConfigurationTemplates,
  paginateDescribeSourceServers,
  paginateDescribeVcenterClients,
  paginateListApplications,
  paginateListConnectors,
  paginateListExportErrors,
  paginateListExports,
  paginateListImportErrors,
  paginateListImports,
  paginateListManagedAccounts,
  paginateListSourceServerActions,
  paginateListTemplateActions,
  paginateListWaves,
  AccessDeniedException,
  ActionCategory,
  ApplicationHealthStatus,
  ApplicationProgressStatus,
  ConflictException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  UninitializedAccountException,
  ValidationExceptionReason,
  ValidationException,
  ExportStatus,
  ImportErrorType,
  ImportStatus,
  JobLogEvent,
  InitiatedBy,
  LaunchStatus,
  PostLaunchActionExecutionStatus,
  SsmExternalParameter,
  SsmParameterStoreParameterType,
  SsmDocumentType,
  JobStatus,
  JobType,
  BootMode,
  VolumeType,
  LaunchDisposition,
  PostLaunchActionsDeploymentType,
  TargetInstanceTypeRightSizingMethod,
  InternalServerException,
  ThrottlingException,
  ReplicationConfigurationDataPlaneRouting,
  ReplicationConfigurationDefaultLargeStagingDiskType,
  ReplicationConfigurationEbsEncryption,
  ChangeServerLifeCycleStateSourceServerLifecycleState,
  DataReplicationErrorString,
  DataReplicationInitiationStepName,
  DataReplicationInitiationStepStatus,
  DataReplicationState,
  FirstBoot,
  LifeCycleState,
  ReplicationType,
  ReplicationConfigurationReplicatedDiskStagingDiskType,
  WaveHealthStatus,
  WaveProgressStatus,
  ApplicationFilterSensitiveLog,
  CreateApplicationRequestFilterSensitiveLog,
  ListApplicationsResponseFilterSensitiveLog,
  ConnectorFilterSensitiveLog,
  CreateConnectorRequestFilterSensitiveLog,
  ListConnectorsResponseFilterSensitiveLog,
  JobFilterSensitiveLog,
  DescribeJobsResponseFilterSensitiveLog,
  CreateLaunchConfigurationTemplateRequestFilterSensitiveLog,
  LaunchConfigurationTemplateFilterSensitiveLog,
  DescribeLaunchConfigurationTemplatesResponseFilterSensitiveLog,
  ListTagsForResourceResponseFilterSensitiveLog,
  CreateReplicationConfigurationTemplateRequestFilterSensitiveLog,
  ReplicationConfigurationTemplateFilterSensitiveLog,
  DescribeReplicationConfigurationTemplatesResponseFilterSensitiveLog,
  UpdateReplicationConfigurationTemplateRequestFilterSensitiveLog,
  SourceServerFilterSensitiveLog,
  DescribeSourceServersResponseFilterSensitiveLog,
  ReplicationConfigurationFilterSensitiveLog,
  StartCutoverRequestFilterSensitiveLog,
  StartCutoverResponseFilterSensitiveLog,
  StartTestRequestFilterSensitiveLog,
  StartTestResponseFilterSensitiveLog,
  TerminateTargetInstancesRequestFilterSensitiveLog,
  TerminateTargetInstancesResponseFilterSensitiveLog,
  UpdateReplicationConfigurationRequestFilterSensitiveLog,
  TagResourceRequestFilterSensitiveLog,
  UntagResourceRequestFilterSensitiveLog,
  VcenterClientFilterSensitiveLog,
  DescribeVcenterClientsResponseFilterSensitiveLog,
  WaveFilterSensitiveLog,
  CreateWaveRequestFilterSensitiveLog,
  ListWavesResponseFilterSensitiveLog
});

