import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { MediaPackageServiceException as __BaseException } from "./MediaPackageServiceException";
export const __AdTriggersElement = {
    BREAK: "BREAK",
    DISTRIBUTOR_ADVERTISEMENT: "DISTRIBUTOR_ADVERTISEMENT",
    DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY: "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
    DISTRIBUTOR_PLACEMENT_OPPORTUNITY: "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
    PROVIDER_ADVERTISEMENT: "PROVIDER_ADVERTISEMENT",
    PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY: "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
    PROVIDER_PLACEMENT_OPPORTUNITY: "PROVIDER_PLACEMENT_OPPORTUNITY",
    SPLICE_INSERT: "SPLICE_INSERT",
};
export const __PeriodTriggersElement = {
    ADS: "ADS",
};
export const Status = {
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
};
export const AdMarkers = {
    DATERANGE: "DATERANGE",
    NONE: "NONE",
    PASSTHROUGH: "PASSTHROUGH",
    SCTE35_ENHANCED: "SCTE35_ENHANCED",
};
export const AdsOnDeliveryRestrictions = {
    BOTH: "BOTH",
    NONE: "NONE",
    RESTRICTED: "RESTRICTED",
    UNRESTRICTED: "UNRESTRICTED",
};
export const PlaylistType = {
    EVENT: "EVENT",
    NONE: "NONE",
    VOD: "VOD",
};
export const CmafEncryptionMethod = {
    AES_CTR: "AES_CTR",
    SAMPLE_AES: "SAMPLE_AES",
};
export const PresetSpeke20Audio = {
    PRESET_AUDIO_1: "PRESET-AUDIO-1",
    PRESET_AUDIO_2: "PRESET-AUDIO-2",
    PRESET_AUDIO_3: "PRESET-AUDIO-3",
    SHARED: "SHARED",
    UNENCRYPTED: "UNENCRYPTED",
};
export const PresetSpeke20Video = {
    PRESET_VIDEO_1: "PRESET-VIDEO-1",
    PRESET_VIDEO_2: "PRESET-VIDEO-2",
    PRESET_VIDEO_3: "PRESET-VIDEO-3",
    PRESET_VIDEO_4: "PRESET-VIDEO-4",
    PRESET_VIDEO_5: "PRESET-VIDEO-5",
    PRESET_VIDEO_6: "PRESET-VIDEO-6",
    PRESET_VIDEO_7: "PRESET-VIDEO-7",
    PRESET_VIDEO_8: "PRESET-VIDEO-8",
    SHARED: "SHARED",
    UNENCRYPTED: "UNENCRYPTED",
};
export const StreamOrder = {
    ORIGINAL: "ORIGINAL",
    VIDEO_BITRATE_ASCENDING: "VIDEO_BITRATE_ASCENDING",
    VIDEO_BITRATE_DESCENDING: "VIDEO_BITRATE_DESCENDING",
};
export const ManifestLayout = {
    COMPACT: "COMPACT",
    DRM_TOP_LEVEL_COMPACT: "DRM_TOP_LEVEL_COMPACT",
    FULL: "FULL",
};
export const Profile = {
    DVB_DASH_2014: "DVB_DASH_2014",
    HBBTV_1_5: "HBBTV_1_5",
    HYBRIDCAST: "HYBRIDCAST",
    NONE: "NONE",
};
export const SegmentTemplateFormat = {
    NUMBER_WITH_DURATION: "NUMBER_WITH_DURATION",
    NUMBER_WITH_TIMELINE: "NUMBER_WITH_TIMELINE",
    TIME_WITH_TIMELINE: "TIME_WITH_TIMELINE",
};
export const UtcTiming = {
    HTTP_HEAD: "HTTP-HEAD",
    HTTP_ISO: "HTTP-ISO",
    HTTP_XSDATE: "HTTP-XSDATE",
    NONE: "NONE",
};
export const EncryptionMethod = {
    AES_128: "AES_128",
    SAMPLE_AES: "SAMPLE_AES",
};
export const Origination = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export class ForbiddenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.Message = opts.Message;
    }
}
export class UnprocessableEntityException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnprocessableEntityException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnprocessableEntityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnprocessableEntityException.prototype);
        this.Message = opts.Message;
    }
}
export const IngestEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
    ...(obj.Username && { Username: SENSITIVE_STRING }),
});
export const HlsIngestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.IngestEndpoints && {
        IngestEndpoints: obj.IngestEndpoints.map((item) => IngestEndpointFilterSensitiveLog(item)),
    }),
});
export const ChannelFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
export const ConfigureLogsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
export const CreateChannelResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
export const DescribeChannelResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
export const ListChannelsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RotateChannelCredentialsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
export const RotateIngestEndpointCredentialsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
export const UpdateChannelResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }),
});
