import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { MediaPackageServiceException as __BaseException } from "./MediaPackageServiceException";
export declare const __AdTriggersElement: {
  readonly BREAK: "BREAK";
  readonly DISTRIBUTOR_ADVERTISEMENT: "DISTRIBUTOR_ADVERTISEMENT";
  readonly DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY: "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY";
  readonly DISTRIBUTOR_PLACEMENT_OPPORTUNITY: "DISTRIBUTOR_PLACEMENT_OPPORTUNITY";
  readonly PROVIDER_ADVERTISEMENT: "PROVIDER_ADVERTISEMENT";
  readonly PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY: "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY";
  readonly PROVIDER_PLACEMENT_OPPORTUNITY: "PROVIDER_PLACEMENT_OPPORTUNITY";
  readonly SPLICE_INSERT: "SPLICE_INSERT";
};
export type __AdTriggersElement =
  (typeof __AdTriggersElement)[keyof typeof __AdTriggersElement];
export declare const __PeriodTriggersElement: {
  readonly ADS: "ADS";
};
export type __PeriodTriggersElement =
  (typeof __PeriodTriggersElement)[keyof typeof __PeriodTriggersElement];
export interface EgressAccessLogs {
  LogGroupName?: string;
}
export interface IngestEndpoint {
  Id?: string;
  Password?: string;
  Url?: string;
  Username?: string;
}
export interface HlsIngest {
  IngestEndpoints?: IngestEndpoint[];
}
export interface IngressAccessLogs {
  LogGroupName?: string;
}
export interface Channel {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export interface S3Destination {
  BucketName: string | undefined;
  ManifestKey: string | undefined;
  RoleArn: string | undefined;
}
export declare const Status: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type Status = (typeof Status)[keyof typeof Status];
export interface HarvestJob {
  Arn?: string;
  ChannelId?: string;
  CreatedAt?: string;
  EndTime?: string;
  Id?: string;
  OriginEndpointId?: string;
  S3Destination?: S3Destination;
  StartTime?: string;
  Status?: Status;
}
export declare const AdMarkers: {
  readonly DATERANGE: "DATERANGE";
  readonly NONE: "NONE";
  readonly PASSTHROUGH: "PASSTHROUGH";
  readonly SCTE35_ENHANCED: "SCTE35_ENHANCED";
};
export type AdMarkers = (typeof AdMarkers)[keyof typeof AdMarkers];
export declare const AdsOnDeliveryRestrictions: {
  readonly BOTH: "BOTH";
  readonly NONE: "NONE";
  readonly RESTRICTED: "RESTRICTED";
  readonly UNRESTRICTED: "UNRESTRICTED";
};
export type AdsOnDeliveryRestrictions =
  (typeof AdsOnDeliveryRestrictions)[keyof typeof AdsOnDeliveryRestrictions];
export declare const PlaylistType: {
  readonly EVENT: "EVENT";
  readonly NONE: "NONE";
  readonly VOD: "VOD";
};
export type PlaylistType = (typeof PlaylistType)[keyof typeof PlaylistType];
export interface HlsManifest {
  AdMarkers?: AdMarkers;
  Id: string | undefined;
  IncludeIframeOnlyStream?: boolean;
  ManifestName?: string;
  PlaylistType?: PlaylistType;
  PlaylistWindowSeconds?: number;
  ProgramDateTimeIntervalSeconds?: number;
  Url?: string;
  AdTriggers?: __AdTriggersElement[];
  AdsOnDeliveryRestrictions?: AdsOnDeliveryRestrictions;
}
export interface HlsManifestCreateOrUpdateParameters {
  AdMarkers?: AdMarkers;
  AdTriggers?: __AdTriggersElement[];
  AdsOnDeliveryRestrictions?: AdsOnDeliveryRestrictions;
  Id: string | undefined;
  IncludeIframeOnlyStream?: boolean;
  ManifestName?: string;
  PlaylistType?: PlaylistType;
  PlaylistWindowSeconds?: number;
  ProgramDateTimeIntervalSeconds?: number;
}
export interface Authorization {
  CdnIdentifierSecret: string | undefined;
  SecretsRoleArn: string | undefined;
}
export declare const CmafEncryptionMethod: {
  readonly AES_CTR: "AES_CTR";
  readonly SAMPLE_AES: "SAMPLE_AES";
};
export type CmafEncryptionMethod =
  (typeof CmafEncryptionMethod)[keyof typeof CmafEncryptionMethod];
export declare const PresetSpeke20Audio: {
  readonly PRESET_AUDIO_1: "PRESET-AUDIO-1";
  readonly PRESET_AUDIO_2: "PRESET-AUDIO-2";
  readonly PRESET_AUDIO_3: "PRESET-AUDIO-3";
  readonly SHARED: "SHARED";
  readonly UNENCRYPTED: "UNENCRYPTED";
};
export type PresetSpeke20Audio =
  (typeof PresetSpeke20Audio)[keyof typeof PresetSpeke20Audio];
export declare const PresetSpeke20Video: {
  readonly PRESET_VIDEO_1: "PRESET-VIDEO-1";
  readonly PRESET_VIDEO_2: "PRESET-VIDEO-2";
  readonly PRESET_VIDEO_3: "PRESET-VIDEO-3";
  readonly PRESET_VIDEO_4: "PRESET-VIDEO-4";
  readonly PRESET_VIDEO_5: "PRESET-VIDEO-5";
  readonly PRESET_VIDEO_6: "PRESET-VIDEO-6";
  readonly PRESET_VIDEO_7: "PRESET-VIDEO-7";
  readonly PRESET_VIDEO_8: "PRESET-VIDEO-8";
  readonly SHARED: "SHARED";
  readonly UNENCRYPTED: "UNENCRYPTED";
};
export type PresetSpeke20Video =
  (typeof PresetSpeke20Video)[keyof typeof PresetSpeke20Video];
export interface EncryptionContractConfiguration {
  PresetSpeke20Audio: PresetSpeke20Audio | undefined;
  PresetSpeke20Video: PresetSpeke20Video | undefined;
}
export interface SpekeKeyProvider {
  CertificateArn?: string;
  EncryptionContractConfiguration?: EncryptionContractConfiguration;
  ResourceId: string | undefined;
  RoleArn: string | undefined;
  SystemIds: string[] | undefined;
  Url: string | undefined;
}
export interface CmafEncryption {
  ConstantInitializationVector?: string;
  EncryptionMethod?: CmafEncryptionMethod;
  KeyRotationIntervalSeconds?: number;
  SpekeKeyProvider: SpekeKeyProvider | undefined;
}
export declare const StreamOrder: {
  readonly ORIGINAL: "ORIGINAL";
  readonly VIDEO_BITRATE_ASCENDING: "VIDEO_BITRATE_ASCENDING";
  readonly VIDEO_BITRATE_DESCENDING: "VIDEO_BITRATE_DESCENDING";
};
export type StreamOrder = (typeof StreamOrder)[keyof typeof StreamOrder];
export interface StreamSelection {
  MaxVideoBitsPerSecond?: number;
  MinVideoBitsPerSecond?: number;
  StreamOrder?: StreamOrder;
}
export interface CmafPackage {
  Encryption?: CmafEncryption;
  HlsManifests?: HlsManifest[];
  SegmentDurationSeconds?: number;
  SegmentPrefix?: string;
  StreamSelection?: StreamSelection;
}
export interface DashEncryption {
  KeyRotationIntervalSeconds?: number;
  SpekeKeyProvider: SpekeKeyProvider | undefined;
}
export declare const ManifestLayout: {
  readonly COMPACT: "COMPACT";
  readonly DRM_TOP_LEVEL_COMPACT: "DRM_TOP_LEVEL_COMPACT";
  readonly FULL: "FULL";
};
export type ManifestLayout =
  (typeof ManifestLayout)[keyof typeof ManifestLayout];
export declare const Profile: {
  readonly DVB_DASH_2014: "DVB_DASH_2014";
  readonly HBBTV_1_5: "HBBTV_1_5";
  readonly HYBRIDCAST: "HYBRIDCAST";
  readonly NONE: "NONE";
};
export type Profile = (typeof Profile)[keyof typeof Profile];
export declare const SegmentTemplateFormat: {
  readonly NUMBER_WITH_DURATION: "NUMBER_WITH_DURATION";
  readonly NUMBER_WITH_TIMELINE: "NUMBER_WITH_TIMELINE";
  readonly TIME_WITH_TIMELINE: "TIME_WITH_TIMELINE";
};
export type SegmentTemplateFormat =
  (typeof SegmentTemplateFormat)[keyof typeof SegmentTemplateFormat];
export declare const UtcTiming: {
  readonly HTTP_HEAD: "HTTP-HEAD";
  readonly HTTP_ISO: "HTTP-ISO";
  readonly HTTP_XSDATE: "HTTP-XSDATE";
  readonly NONE: "NONE";
};
export type UtcTiming = (typeof UtcTiming)[keyof typeof UtcTiming];
export interface DashPackage {
  AdTriggers?: __AdTriggersElement[];
  AdsOnDeliveryRestrictions?: AdsOnDeliveryRestrictions;
  Encryption?: DashEncryption;
  IncludeIframeOnlyStream?: boolean;
  ManifestLayout?: ManifestLayout;
  ManifestWindowSeconds?: number;
  MinBufferTimeSeconds?: number;
  MinUpdatePeriodSeconds?: number;
  PeriodTriggers?: __PeriodTriggersElement[];
  Profile?: Profile;
  SegmentDurationSeconds?: number;
  SegmentTemplateFormat?: SegmentTemplateFormat;
  StreamSelection?: StreamSelection;
  SuggestedPresentationDelaySeconds?: number;
  UtcTiming?: UtcTiming;
  UtcTimingUri?: string;
}
export declare const EncryptionMethod: {
  readonly AES_128: "AES_128";
  readonly SAMPLE_AES: "SAMPLE_AES";
};
export type EncryptionMethod =
  (typeof EncryptionMethod)[keyof typeof EncryptionMethod];
export interface HlsEncryption {
  ConstantInitializationVector?: string;
  EncryptionMethod?: EncryptionMethod;
  KeyRotationIntervalSeconds?: number;
  RepeatExtXKey?: boolean;
  SpekeKeyProvider: SpekeKeyProvider | undefined;
}
export interface HlsPackage {
  AdMarkers?: AdMarkers;
  AdTriggers?: __AdTriggersElement[];
  AdsOnDeliveryRestrictions?: AdsOnDeliveryRestrictions;
  Encryption?: HlsEncryption;
  IncludeDvbSubtitles?: boolean;
  IncludeIframeOnlyStream?: boolean;
  PlaylistType?: PlaylistType;
  PlaylistWindowSeconds?: number;
  ProgramDateTimeIntervalSeconds?: number;
  SegmentDurationSeconds?: number;
  StreamSelection?: StreamSelection;
  UseAudioRenditionGroup?: boolean;
}
export interface MssEncryption {
  SpekeKeyProvider: SpekeKeyProvider | undefined;
}
export interface MssPackage {
  Encryption?: MssEncryption;
  ManifestWindowSeconds?: number;
  SegmentDurationSeconds?: number;
  StreamSelection?: StreamSelection;
}
export declare const Origination: {
  readonly ALLOW: "ALLOW";
  readonly DENY: "DENY";
};
export type Origination = (typeof Origination)[keyof typeof Origination];
export interface OriginEndpoint {
  Arn?: string;
  Authorization?: Authorization;
  ChannelId?: string;
  CmafPackage?: CmafPackage;
  CreatedAt?: string;
  DashPackage?: DashPackage;
  Description?: string;
  HlsPackage?: HlsPackage;
  Id?: string;
  ManifestName?: string;
  MssPackage?: MssPackage;
  Origination?: Origination;
  StartoverWindowSeconds?: number;
  Tags?: Record<string, string>;
  TimeDelaySeconds?: number;
  Url?: string;
  Whitelist?: string[];
}
export interface CmafPackageCreateOrUpdateParameters {
  Encryption?: CmafEncryption;
  HlsManifests?: HlsManifestCreateOrUpdateParameters[];
  SegmentDurationSeconds?: number;
  SegmentPrefix?: string;
  StreamSelection?: StreamSelection;
}
export interface ConfigureLogsRequest {
  EgressAccessLogs?: EgressAccessLogs;
  Id: string | undefined;
  IngressAccessLogs?: IngressAccessLogs;
}
export interface ConfigureLogsResponse {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export declare class ForbiddenException extends __BaseException {
  readonly name: "ForbiddenException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare class UnprocessableEntityException extends __BaseException {
  readonly name: "UnprocessableEntityException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UnprocessableEntityException, __BaseException>
  );
}
export interface CreateChannelRequest {
  Description?: string;
  Id: string | undefined;
  Tags?: Record<string, string>;
}
export interface CreateChannelResponse {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export interface CreateHarvestJobRequest {
  EndTime: string | undefined;
  Id: string | undefined;
  OriginEndpointId: string | undefined;
  S3Destination: S3Destination | undefined;
  StartTime: string | undefined;
}
export interface CreateHarvestJobResponse {
  Arn?: string;
  ChannelId?: string;
  CreatedAt?: string;
  EndTime?: string;
  Id?: string;
  OriginEndpointId?: string;
  S3Destination?: S3Destination;
  StartTime?: string;
  Status?: Status;
}
export interface CreateOriginEndpointRequest {
  Authorization?: Authorization;
  ChannelId: string | undefined;
  CmafPackage?: CmafPackageCreateOrUpdateParameters;
  DashPackage?: DashPackage;
  Description?: string;
  HlsPackage?: HlsPackage;
  Id: string | undefined;
  ManifestName?: string;
  MssPackage?: MssPackage;
  Origination?: Origination;
  StartoverWindowSeconds?: number;
  Tags?: Record<string, string>;
  TimeDelaySeconds?: number;
  Whitelist?: string[];
}
export interface CreateOriginEndpointResponse {
  Arn?: string;
  Authorization?: Authorization;
  ChannelId?: string;
  CmafPackage?: CmafPackage;
  CreatedAt?: string;
  DashPackage?: DashPackage;
  Description?: string;
  HlsPackage?: HlsPackage;
  Id?: string;
  ManifestName?: string;
  MssPackage?: MssPackage;
  Origination?: Origination;
  StartoverWindowSeconds?: number;
  Tags?: Record<string, string>;
  TimeDelaySeconds?: number;
  Url?: string;
  Whitelist?: string[];
}
export interface DeleteChannelRequest {
  Id: string | undefined;
}
export interface DeleteChannelResponse {}
export interface DeleteOriginEndpointRequest {
  Id: string | undefined;
}
export interface DeleteOriginEndpointResponse {}
export interface DescribeChannelRequest {
  Id: string | undefined;
}
export interface DescribeChannelResponse {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export interface DescribeHarvestJobRequest {
  Id: string | undefined;
}
export interface DescribeHarvestJobResponse {
  Arn?: string;
  ChannelId?: string;
  CreatedAt?: string;
  EndTime?: string;
  Id?: string;
  OriginEndpointId?: string;
  S3Destination?: S3Destination;
  StartTime?: string;
  Status?: Status;
}
export interface DescribeOriginEndpointRequest {
  Id: string | undefined;
}
export interface DescribeOriginEndpointResponse {
  Arn?: string;
  Authorization?: Authorization;
  ChannelId?: string;
  CmafPackage?: CmafPackage;
  CreatedAt?: string;
  DashPackage?: DashPackage;
  Description?: string;
  HlsPackage?: HlsPackage;
  Id?: string;
  ManifestName?: string;
  MssPackage?: MssPackage;
  Origination?: Origination;
  StartoverWindowSeconds?: number;
  Tags?: Record<string, string>;
  TimeDelaySeconds?: number;
  Url?: string;
  Whitelist?: string[];
}
export interface ListChannelsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListChannelsResponse {
  Channels?: Channel[];
  NextToken?: string;
}
export interface ListHarvestJobsRequest {
  IncludeChannelId?: string;
  IncludeStatus?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListHarvestJobsResponse {
  HarvestJobs?: HarvestJob[];
  NextToken?: string;
}
export interface ListOriginEndpointsRequest {
  ChannelId?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListOriginEndpointsResponse {
  NextToken?: string;
  OriginEndpoints?: OriginEndpoint[];
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface RotateChannelCredentialsRequest {
  Id: string | undefined;
}
export interface RotateChannelCredentialsResponse {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export interface RotateIngestEndpointCredentialsRequest {
  Id: string | undefined;
  IngestEndpointId: string | undefined;
}
export interface RotateIngestEndpointCredentialsResponse {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UpdateChannelRequest {
  Description?: string;
  Id: string | undefined;
}
export interface UpdateChannelResponse {
  Arn?: string;
  CreatedAt?: string;
  Description?: string;
  EgressAccessLogs?: EgressAccessLogs;
  HlsIngest?: HlsIngest;
  Id?: string;
  IngressAccessLogs?: IngressAccessLogs;
  Tags?: Record<string, string>;
}
export interface UpdateOriginEndpointRequest {
  Authorization?: Authorization;
  CmafPackage?: CmafPackageCreateOrUpdateParameters;
  DashPackage?: DashPackage;
  Description?: string;
  HlsPackage?: HlsPackage;
  Id: string | undefined;
  ManifestName?: string;
  MssPackage?: MssPackage;
  Origination?: Origination;
  StartoverWindowSeconds?: number;
  TimeDelaySeconds?: number;
  Whitelist?: string[];
}
export interface UpdateOriginEndpointResponse {
  Arn?: string;
  Authorization?: Authorization;
  ChannelId?: string;
  CmafPackage?: CmafPackage;
  CreatedAt?: string;
  DashPackage?: DashPackage;
  Description?: string;
  HlsPackage?: HlsPackage;
  Id?: string;
  ManifestName?: string;
  MssPackage?: MssPackage;
  Origination?: Origination;
  StartoverWindowSeconds?: number;
  Tags?: Record<string, string>;
  TimeDelaySeconds?: number;
  Url?: string;
  Whitelist?: string[];
}
export declare const IngestEndpointFilterSensitiveLog: (
  obj: IngestEndpoint
) => any;
export declare const HlsIngestFilterSensitiveLog: (obj: HlsIngest) => any;
export declare const ChannelFilterSensitiveLog: (obj: Channel) => any;
export declare const ConfigureLogsResponseFilterSensitiveLog: (
  obj: ConfigureLogsResponse
) => any;
export declare const CreateChannelResponseFilterSensitiveLog: (
  obj: CreateChannelResponse
) => any;
export declare const DescribeChannelResponseFilterSensitiveLog: (
  obj: DescribeChannelResponse
) => any;
export declare const ListChannelsResponseFilterSensitiveLog: (
  obj: ListChannelsResponse
) => any;
export declare const RotateChannelCredentialsResponseFilterSensitiveLog: (
  obj: RotateChannelCredentialsResponse
) => any;
export declare const RotateIngestEndpointCredentialsResponseFilterSensitiveLog: (
  obj: RotateIngestEndpointCredentialsResponse
) => any;
export declare const UpdateChannelResponseFilterSensitiveLog: (
  obj: UpdateChannelResponse
) => any;
