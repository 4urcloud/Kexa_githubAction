"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AdMarkers: () => AdMarkers,
  AdsOnDeliveryRestrictions: () => AdsOnDeliveryRestrictions,
  ChannelFilterSensitiveLog: () => ChannelFilterSensitiveLog,
  CmafEncryptionMethod: () => CmafEncryptionMethod,
  ConfigureLogsCommand: () => ConfigureLogsCommand,
  ConfigureLogsResponseFilterSensitiveLog: () => ConfigureLogsResponseFilterSensitiveLog,
  CreateChannelCommand: () => CreateChannelCommand,
  CreateChannelResponseFilterSensitiveLog: () => CreateChannelResponseFilterSensitiveLog,
  CreateHarvestJobCommand: () => CreateHarvestJobCommand,
  CreateOriginEndpointCommand: () => CreateOriginEndpointCommand,
  DeleteChannelCommand: () => DeleteChannelCommand,
  DeleteOriginEndpointCommand: () => DeleteOriginEndpointCommand,
  DescribeChannelCommand: () => DescribeChannelCommand,
  DescribeChannelResponseFilterSensitiveLog: () => DescribeChannelResponseFilterSensitiveLog,
  DescribeHarvestJobCommand: () => DescribeHarvestJobCommand,
  DescribeOriginEndpointCommand: () => DescribeOriginEndpointCommand,
  EncryptionMethod: () => EncryptionMethod,
  ForbiddenException: () => ForbiddenException,
  HlsIngestFilterSensitiveLog: () => HlsIngestFilterSensitiveLog,
  IngestEndpointFilterSensitiveLog: () => IngestEndpointFilterSensitiveLog,
  InternalServerErrorException: () => InternalServerErrorException,
  ListChannelsCommand: () => ListChannelsCommand,
  ListChannelsResponseFilterSensitiveLog: () => ListChannelsResponseFilterSensitiveLog,
  ListHarvestJobsCommand: () => ListHarvestJobsCommand,
  ListOriginEndpointsCommand: () => ListOriginEndpointsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ManifestLayout: () => ManifestLayout,
  MediaPackage: () => MediaPackage,
  MediaPackageClient: () => MediaPackageClient,
  MediaPackageServiceException: () => MediaPackageServiceException,
  NotFoundException: () => NotFoundException,
  Origination: () => Origination,
  PlaylistType: () => PlaylistType,
  PresetSpeke20Audio: () => PresetSpeke20Audio,
  PresetSpeke20Video: () => PresetSpeke20Video,
  Profile: () => Profile,
  RotateChannelCredentialsCommand: () => RotateChannelCredentialsCommand,
  RotateChannelCredentialsResponseFilterSensitiveLog: () => RotateChannelCredentialsResponseFilterSensitiveLog,
  RotateIngestEndpointCredentialsCommand: () => RotateIngestEndpointCredentialsCommand,
  RotateIngestEndpointCredentialsResponseFilterSensitiveLog: () => RotateIngestEndpointCredentialsResponseFilterSensitiveLog,
  SegmentTemplateFormat: () => SegmentTemplateFormat,
  ServiceUnavailableException: () => ServiceUnavailableException,
  Status: () => Status,
  StreamOrder: () => StreamOrder,
  TagResourceCommand: () => TagResourceCommand,
  TooManyRequestsException: () => TooManyRequestsException,
  UnprocessableEntityException: () => UnprocessableEntityException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateChannelCommand: () => UpdateChannelCommand,
  UpdateChannelResponseFilterSensitiveLog: () => UpdateChannelResponseFilterSensitiveLog,
  UpdateOriginEndpointCommand: () => UpdateOriginEndpointCommand,
  UtcTiming: () => UtcTiming,
  __AdTriggersElement: () => __AdTriggersElement,
  __Client: () => import_smithy_client.Client,
  __PeriodTriggersElement: () => __PeriodTriggersElement,
  paginateListChannels: () => paginateListChannels,
  paginateListHarvestJobs: () => paginateListHarvestJobs,
  paginateListOriginEndpoints: () => paginateListOriginEndpoints
});
module.exports = __toCommonJS(src_exports);

// src/MediaPackageClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "mediapackage"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/MediaPackageClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/MediaPackageClient.ts
var _MediaPackageClient = class _MediaPackageClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultMediaPackageHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_MediaPackageClient, "MediaPackageClient");
var MediaPackageClient = _MediaPackageClient;

// src/MediaPackage.ts


// src/commands/ConfigureLogsCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/models/models_0.ts


// src/models/MediaPackageServiceException.ts

var _MediaPackageServiceException = class _MediaPackageServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _MediaPackageServiceException.prototype);
  }
};
__name(_MediaPackageServiceException, "MediaPackageServiceException");
var MediaPackageServiceException = _MediaPackageServiceException;

// src/models/models_0.ts
var __AdTriggersElement = {
  BREAK: "BREAK",
  DISTRIBUTOR_ADVERTISEMENT: "DISTRIBUTOR_ADVERTISEMENT",
  DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY: "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY",
  DISTRIBUTOR_PLACEMENT_OPPORTUNITY: "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
  PROVIDER_ADVERTISEMENT: "PROVIDER_ADVERTISEMENT",
  PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY: "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
  PROVIDER_PLACEMENT_OPPORTUNITY: "PROVIDER_PLACEMENT_OPPORTUNITY",
  SPLICE_INSERT: "SPLICE_INSERT"
};
var __PeriodTriggersElement = {
  ADS: "ADS"
};
var Status = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCEEDED: "SUCCEEDED"
};
var AdMarkers = {
  DATERANGE: "DATERANGE",
  NONE: "NONE",
  PASSTHROUGH: "PASSTHROUGH",
  SCTE35_ENHANCED: "SCTE35_ENHANCED"
};
var AdsOnDeliveryRestrictions = {
  BOTH: "BOTH",
  NONE: "NONE",
  RESTRICTED: "RESTRICTED",
  UNRESTRICTED: "UNRESTRICTED"
};
var PlaylistType = {
  EVENT: "EVENT",
  NONE: "NONE",
  VOD: "VOD"
};
var CmafEncryptionMethod = {
  AES_CTR: "AES_CTR",
  SAMPLE_AES: "SAMPLE_AES"
};
var PresetSpeke20Audio = {
  PRESET_AUDIO_1: "PRESET-AUDIO-1",
  PRESET_AUDIO_2: "PRESET-AUDIO-2",
  PRESET_AUDIO_3: "PRESET-AUDIO-3",
  SHARED: "SHARED",
  UNENCRYPTED: "UNENCRYPTED"
};
var PresetSpeke20Video = {
  PRESET_VIDEO_1: "PRESET-VIDEO-1",
  PRESET_VIDEO_2: "PRESET-VIDEO-2",
  PRESET_VIDEO_3: "PRESET-VIDEO-3",
  PRESET_VIDEO_4: "PRESET-VIDEO-4",
  PRESET_VIDEO_5: "PRESET-VIDEO-5",
  PRESET_VIDEO_6: "PRESET-VIDEO-6",
  PRESET_VIDEO_7: "PRESET-VIDEO-7",
  PRESET_VIDEO_8: "PRESET-VIDEO-8",
  SHARED: "SHARED",
  UNENCRYPTED: "UNENCRYPTED"
};
var StreamOrder = {
  ORIGINAL: "ORIGINAL",
  VIDEO_BITRATE_ASCENDING: "VIDEO_BITRATE_ASCENDING",
  VIDEO_BITRATE_DESCENDING: "VIDEO_BITRATE_DESCENDING"
};
var ManifestLayout = {
  COMPACT: "COMPACT",
  DRM_TOP_LEVEL_COMPACT: "DRM_TOP_LEVEL_COMPACT",
  FULL: "FULL"
};
var Profile = {
  DVB_DASH_2014: "DVB_DASH_2014",
  HBBTV_1_5: "HBBTV_1_5",
  HYBRIDCAST: "HYBRIDCAST",
  NONE: "NONE"
};
var SegmentTemplateFormat = {
  NUMBER_WITH_DURATION: "NUMBER_WITH_DURATION",
  NUMBER_WITH_TIMELINE: "NUMBER_WITH_TIMELINE",
  TIME_WITH_TIMELINE: "TIME_WITH_TIMELINE"
};
var UtcTiming = {
  HTTP_HEAD: "HTTP-HEAD",
  HTTP_ISO: "HTTP-ISO",
  HTTP_XSDATE: "HTTP-XSDATE",
  NONE: "NONE"
};
var EncryptionMethod = {
  AES_128: "AES_128",
  SAMPLE_AES: "SAMPLE_AES"
};
var Origination = {
  ALLOW: "ALLOW",
  DENY: "DENY"
};
var _ForbiddenException = class _ForbiddenException extends MediaPackageServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ForbiddenException",
      $fault: "client",
      ...opts
    });
    this.name = "ForbiddenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ForbiddenException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ForbiddenException, "ForbiddenException");
var ForbiddenException = _ForbiddenException;
var _InternalServerErrorException = class _InternalServerErrorException extends MediaPackageServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerErrorException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerErrorException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerErrorException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerErrorException, "InternalServerErrorException");
var InternalServerErrorException = _InternalServerErrorException;
var _NotFoundException = class _NotFoundException extends MediaPackageServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var _ServiceUnavailableException = class _ServiceUnavailableException extends MediaPackageServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ServiceUnavailableException, "ServiceUnavailableException");
var ServiceUnavailableException = _ServiceUnavailableException;
var _TooManyRequestsException = class _TooManyRequestsException extends MediaPackageServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyRequestsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
    this.Message = opts.Message;
  }
};
__name(_TooManyRequestsException, "TooManyRequestsException");
var TooManyRequestsException = _TooManyRequestsException;
var _UnprocessableEntityException = class _UnprocessableEntityException extends MediaPackageServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnprocessableEntityException",
      $fault: "client",
      ...opts
    });
    this.name = "UnprocessableEntityException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnprocessableEntityException.prototype);
    this.Message = opts.Message;
  }
};
__name(_UnprocessableEntityException, "UnprocessableEntityException");
var UnprocessableEntityException = _UnprocessableEntityException;
var IngestEndpointFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING },
  ...obj.Username && { Username: import_smithy_client.SENSITIVE_STRING }
}), "IngestEndpointFilterSensitiveLog");
var HlsIngestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.IngestEndpoints && {
    IngestEndpoints: obj.IngestEndpoints.map((item) => IngestEndpointFilterSensitiveLog(item))
  }
}), "HlsIngestFilterSensitiveLog");
var ChannelFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "ChannelFilterSensitiveLog");
var ConfigureLogsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "ConfigureLogsResponseFilterSensitiveLog");
var CreateChannelResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "CreateChannelResponseFilterSensitiveLog");
var DescribeChannelResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "DescribeChannelResponseFilterSensitiveLog");
var ListChannelsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "ListChannelsResponseFilterSensitiveLog");
var RotateChannelCredentialsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "RotateChannelCredentialsResponseFilterSensitiveLog");
var RotateIngestEndpointCredentialsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "RotateIngestEndpointCredentialsResponseFilterSensitiveLog");
var UpdateChannelResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HlsIngest && { HlsIngest: HlsIngestFilterSensitiveLog(obj.HlsIngest) }
}), "UpdateChannelResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts


var se_ConfigureLogsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/channels/{Id}/configure_logs");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      egressAccessLogs: [, (_) => se_EgressAccessLogs(_, context), `EgressAccessLogs`],
      ingressAccessLogs: [, (_) => se_IngressAccessLogs(_, context), `IngressAccessLogs`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_ConfigureLogsCommand");
var se_CreateChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/channels");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [, , `Description`],
      id: [, , `Id`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChannelCommand");
var se_CreateHarvestJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/harvest_jobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      endTime: [, , `EndTime`],
      id: [, , `Id`],
      originEndpointId: [, , `OriginEndpointId`],
      s3Destination: [, (_) => se_S3Destination(_, context), `S3Destination`],
      startTime: [, , `StartTime`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateHarvestJobCommand");
var se_CreateOriginEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/origin_endpoints");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authorization: [, (_) => se_Authorization(_, context), `Authorization`],
      channelId: [, , `ChannelId`],
      cmafPackage: [, (_) => se_CmafPackageCreateOrUpdateParameters(_, context), `CmafPackage`],
      dashPackage: [, (_) => se_DashPackage(_, context), `DashPackage`],
      description: [, , `Description`],
      hlsPackage: [, (_) => se_HlsPackage(_, context), `HlsPackage`],
      id: [, , `Id`],
      manifestName: [, , `ManifestName`],
      mssPackage: [, (_) => se_MssPackage(_, context), `MssPackage`],
      origination: [, , `Origination`],
      startoverWindowSeconds: [, , `StartoverWindowSeconds`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`],
      timeDelaySeconds: [, , `TimeDelaySeconds`],
      whitelist: [, (_) => (0, import_smithy_client._json)(_), `Whitelist`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateOriginEndpointCommand");
var se_DeleteChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channels/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChannelCommand");
var se_DeleteOriginEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/origin_endpoints/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteOriginEndpointCommand");
var se_DescribeChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channels/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeChannelCommand");
var se_DescribeHarvestJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/harvest_jobs/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeHarvestJobCommand");
var se_DescribeOriginEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/origin_endpoints/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeOriginEndpointCommand");
var se_ListChannelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channels");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChannelsCommand");
var se_ListHarvestJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/harvest_jobs");
  const query = (0, import_smithy_client.map)({
    [_iCI]: [, input[_ICI]],
    [_iS]: [, input[_IS]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListHarvestJobsCommand");
var se_ListOriginEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/origin_endpoints");
  const query = (0, import_smithy_client.map)({
    [_cI]: [, input[_CI]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListOriginEndpointsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_RotateChannelCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channels/{Id}/credentials");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RotateChannelCredentialsCommand");
var se_RotateIngestEndpointCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/channels/{Id}/ingest_endpoints/{IngestEndpointId}/credentials");
  b.p("Id", () => input.Id, "{Id}", false);
  b.p("IngestEndpointId", () => input.IngestEndpointId, "{IngestEndpointId}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RotateIngestEndpointCredentialsCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/channels/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [, , `Description`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateChannelCommand");
var se_UpdateOriginEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/origin_endpoints/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authorization: [, (_) => se_Authorization(_, context), `Authorization`],
      cmafPackage: [, (_) => se_CmafPackageCreateOrUpdateParameters(_, context), `CmafPackage`],
      dashPackage: [, (_) => se_DashPackage(_, context), `DashPackage`],
      description: [, , `Description`],
      hlsPackage: [, (_) => se_HlsPackage(_, context), `HlsPackage`],
      manifestName: [, , `ManifestName`],
      mssPackage: [, (_) => se_MssPackage(_, context), `MssPackage`],
      origination: [, , `Origination`],
      startoverWindowSeconds: [, , `StartoverWindowSeconds`],
      timeDelaySeconds: [, , `TimeDelaySeconds`],
      whitelist: [, (_) => (0, import_smithy_client._json)(_), `Whitelist`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateOriginEndpointCommand");
var de_ConfigureLogsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ConfigureLogsCommand");
var de_CreateChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChannelCommand");
var de_CreateHarvestJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    EndTime: [, import_smithy_client.expectString, `endTime`],
    Id: [, import_smithy_client.expectString, `id`],
    OriginEndpointId: [, import_smithy_client.expectString, `originEndpointId`],
    S3Destination: [, (_) => de_S3Destination(_, context), `s3Destination`],
    StartTime: [, import_smithy_client.expectString, `startTime`],
    Status: [, import_smithy_client.expectString, `status`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateHarvestJobCommand");
var de_CreateOriginEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    Authorization: [, (_) => de_Authorization(_, context), `authorization`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CmafPackage: [, (_) => de_CmafPackage(_, context), `cmafPackage`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    DashPackage: [, (_) => de_DashPackage(_, context), `dashPackage`],
    Description: [, import_smithy_client.expectString, `description`],
    HlsPackage: [, (_) => de_HlsPackage(_, context), `hlsPackage`],
    Id: [, import_smithy_client.expectString, `id`],
    ManifestName: [, import_smithy_client.expectString, `manifestName`],
    MssPackage: [, (_) => de_MssPackage(_, context), `mssPackage`],
    Origination: [, import_smithy_client.expectString, `origination`],
    StartoverWindowSeconds: [, import_smithy_client.expectInt32, `startoverWindowSeconds`],
    Tags: [, import_smithy_client._json, `tags`],
    TimeDelaySeconds: [, import_smithy_client.expectInt32, `timeDelaySeconds`],
    Url: [, import_smithy_client.expectString, `url`],
    Whitelist: [, import_smithy_client._json, `whitelist`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateOriginEndpointCommand");
var de_DeleteChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChannelCommand");
var de_DeleteOriginEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteOriginEndpointCommand");
var de_DescribeChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeChannelCommand");
var de_DescribeHarvestJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    EndTime: [, import_smithy_client.expectString, `endTime`],
    Id: [, import_smithy_client.expectString, `id`],
    OriginEndpointId: [, import_smithy_client.expectString, `originEndpointId`],
    S3Destination: [, (_) => de_S3Destination(_, context), `s3Destination`],
    StartTime: [, import_smithy_client.expectString, `startTime`],
    Status: [, import_smithy_client.expectString, `status`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeHarvestJobCommand");
var de_DescribeOriginEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    Authorization: [, (_) => de_Authorization(_, context), `authorization`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CmafPackage: [, (_) => de_CmafPackage(_, context), `cmafPackage`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    DashPackage: [, (_) => de_DashPackage(_, context), `dashPackage`],
    Description: [, import_smithy_client.expectString, `description`],
    HlsPackage: [, (_) => de_HlsPackage(_, context), `hlsPackage`],
    Id: [, import_smithy_client.expectString, `id`],
    ManifestName: [, import_smithy_client.expectString, `manifestName`],
    MssPackage: [, (_) => de_MssPackage(_, context), `mssPackage`],
    Origination: [, import_smithy_client.expectString, `origination`],
    StartoverWindowSeconds: [, import_smithy_client.expectInt32, `startoverWindowSeconds`],
    Tags: [, import_smithy_client._json, `tags`],
    TimeDelaySeconds: [, import_smithy_client.expectInt32, `timeDelaySeconds`],
    Url: [, import_smithy_client.expectString, `url`],
    Whitelist: [, import_smithy_client._json, `whitelist`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeOriginEndpointCommand");
var de_ListChannelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Channels: [, (_) => de___listOfChannel(_, context), `channels`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChannelsCommand");
var de_ListHarvestJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    HarvestJobs: [, (_) => de___listOfHarvestJob(_, context), `harvestJobs`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListHarvestJobsCommand");
var de_ListOriginEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: [, import_smithy_client.expectString, `nextToken`],
    OriginEndpoints: [, (_) => de___listOfOriginEndpoint(_, context), `originEndpoints`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListOriginEndpointsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_RotateChannelCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RotateChannelCredentialsCommand");
var de_RotateIngestEndpointCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RotateIngestEndpointCredentialsCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateChannelCommand");
var de_UpdateOriginEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    Authorization: [, (_) => de_Authorization(_, context), `authorization`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CmafPackage: [, (_) => de_CmafPackage(_, context), `cmafPackage`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    DashPackage: [, (_) => de_DashPackage(_, context), `dashPackage`],
    Description: [, import_smithy_client.expectString, `description`],
    HlsPackage: [, (_) => de_HlsPackage(_, context), `hlsPackage`],
    Id: [, import_smithy_client.expectString, `id`],
    ManifestName: [, import_smithy_client.expectString, `manifestName`],
    MssPackage: [, (_) => de_MssPackage(_, context), `mssPackage`],
    Origination: [, import_smithy_client.expectString, `origination`],
    StartoverWindowSeconds: [, import_smithy_client.expectInt32, `startoverWindowSeconds`],
    Tags: [, import_smithy_client._json, `tags`],
    TimeDelaySeconds: [, import_smithy_client.expectInt32, `timeDelaySeconds`],
    Url: [, import_smithy_client.expectString, `url`],
    Whitelist: [, import_smithy_client._json, `whitelist`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateOriginEndpointCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ForbiddenException":
    case "com.amazonaws.mediapackage#ForbiddenException":
      throw await de_ForbiddenExceptionRes(parsedOutput, context);
    case "InternalServerErrorException":
    case "com.amazonaws.mediapackage#InternalServerErrorException":
      throw await de_InternalServerErrorExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.mediapackage#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.mediapackage#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.mediapackage#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "UnprocessableEntityException":
    case "com.amazonaws.mediapackage#UnprocessableEntityException":
      throw await de_UnprocessableEntityExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(MediaPackageServiceException);
var de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ForbiddenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ForbiddenExceptionRes");
var de_InternalServerErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new InternalServerErrorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerErrorExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyRequestsExceptionRes");
var de_UnprocessableEntityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new UnprocessableEntityException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnprocessableEntityExceptionRes");
var se___listOfHlsManifestCreateOrUpdateParameters = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_HlsManifestCreateOrUpdateParameters(entry, context);
  });
}, "se___listOfHlsManifestCreateOrUpdateParameters");
var se_Authorization = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    cdnIdentifierSecret: [, , `CdnIdentifierSecret`],
    secretsRoleArn: [, , `SecretsRoleArn`]
  });
}, "se_Authorization");
var se_CmafEncryption = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    constantInitializationVector: [, , `ConstantInitializationVector`],
    encryptionMethod: [, , `EncryptionMethod`],
    keyRotationIntervalSeconds: [, , `KeyRotationIntervalSeconds`],
    spekeKeyProvider: [, (_) => se_SpekeKeyProvider(_, context), `SpekeKeyProvider`]
  });
}, "se_CmafEncryption");
var se_CmafPackageCreateOrUpdateParameters = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    encryption: [, (_) => se_CmafEncryption(_, context), `Encryption`],
    hlsManifests: [, (_) => se___listOfHlsManifestCreateOrUpdateParameters(_, context), `HlsManifests`],
    segmentDurationSeconds: [, , `SegmentDurationSeconds`],
    segmentPrefix: [, , `SegmentPrefix`],
    streamSelection: [, (_) => se_StreamSelection(_, context), `StreamSelection`]
  });
}, "se_CmafPackageCreateOrUpdateParameters");
var se_DashEncryption = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    keyRotationIntervalSeconds: [, , `KeyRotationIntervalSeconds`],
    spekeKeyProvider: [, (_) => se_SpekeKeyProvider(_, context), `SpekeKeyProvider`]
  });
}, "se_DashEncryption");
var se_DashPackage = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    adTriggers: [, import_smithy_client._json, `AdTriggers`],
    adsOnDeliveryRestrictions: [, , `AdsOnDeliveryRestrictions`],
    encryption: [, (_) => se_DashEncryption(_, context), `Encryption`],
    includeIframeOnlyStream: [, , `IncludeIframeOnlyStream`],
    manifestLayout: [, , `ManifestLayout`],
    manifestWindowSeconds: [, , `ManifestWindowSeconds`],
    minBufferTimeSeconds: [, , `MinBufferTimeSeconds`],
    minUpdatePeriodSeconds: [, , `MinUpdatePeriodSeconds`],
    periodTriggers: [, import_smithy_client._json, `PeriodTriggers`],
    profile: [, , `Profile`],
    segmentDurationSeconds: [, , `SegmentDurationSeconds`],
    segmentTemplateFormat: [, , `SegmentTemplateFormat`],
    streamSelection: [, (_) => se_StreamSelection(_, context), `StreamSelection`],
    suggestedPresentationDelaySeconds: [, , `SuggestedPresentationDelaySeconds`],
    utcTiming: [, , `UtcTiming`],
    utcTimingUri: [, , `UtcTimingUri`]
  });
}, "se_DashPackage");
var se_EgressAccessLogs = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    logGroupName: [, , `LogGroupName`]
  });
}, "se_EgressAccessLogs");
var se_EncryptionContractConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    presetSpeke20Audio: [, , `PresetSpeke20Audio`],
    presetSpeke20Video: [, , `PresetSpeke20Video`]
  });
}, "se_EncryptionContractConfiguration");
var se_HlsEncryption = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    constantInitializationVector: [, , `ConstantInitializationVector`],
    encryptionMethod: [, , `EncryptionMethod`],
    keyRotationIntervalSeconds: [, , `KeyRotationIntervalSeconds`],
    repeatExtXKey: [, , `RepeatExtXKey`],
    spekeKeyProvider: [, (_) => se_SpekeKeyProvider(_, context), `SpekeKeyProvider`]
  });
}, "se_HlsEncryption");
var se_HlsManifestCreateOrUpdateParameters = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    adMarkers: [, , `AdMarkers`],
    adTriggers: [, import_smithy_client._json, `AdTriggers`],
    adsOnDeliveryRestrictions: [, , `AdsOnDeliveryRestrictions`],
    id: [, , `Id`],
    includeIframeOnlyStream: [, , `IncludeIframeOnlyStream`],
    manifestName: [, , `ManifestName`],
    playlistType: [, , `PlaylistType`],
    playlistWindowSeconds: [, , `PlaylistWindowSeconds`],
    programDateTimeIntervalSeconds: [, , `ProgramDateTimeIntervalSeconds`]
  });
}, "se_HlsManifestCreateOrUpdateParameters");
var se_HlsPackage = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    adMarkers: [, , `AdMarkers`],
    adTriggers: [, import_smithy_client._json, `AdTriggers`],
    adsOnDeliveryRestrictions: [, , `AdsOnDeliveryRestrictions`],
    encryption: [, (_) => se_HlsEncryption(_, context), `Encryption`],
    includeDvbSubtitles: [, , `IncludeDvbSubtitles`],
    includeIframeOnlyStream: [, , `IncludeIframeOnlyStream`],
    playlistType: [, , `PlaylistType`],
    playlistWindowSeconds: [, , `PlaylistWindowSeconds`],
    programDateTimeIntervalSeconds: [, , `ProgramDateTimeIntervalSeconds`],
    segmentDurationSeconds: [, , `SegmentDurationSeconds`],
    streamSelection: [, (_) => se_StreamSelection(_, context), `StreamSelection`],
    useAudioRenditionGroup: [, , `UseAudioRenditionGroup`]
  });
}, "se_HlsPackage");
var se_IngressAccessLogs = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    logGroupName: [, , `LogGroupName`]
  });
}, "se_IngressAccessLogs");
var se_MssEncryption = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    spekeKeyProvider: [, (_) => se_SpekeKeyProvider(_, context), `SpekeKeyProvider`]
  });
}, "se_MssEncryption");
var se_MssPackage = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    encryption: [, (_) => se_MssEncryption(_, context), `Encryption`],
    manifestWindowSeconds: [, , `ManifestWindowSeconds`],
    segmentDurationSeconds: [, , `SegmentDurationSeconds`],
    streamSelection: [, (_) => se_StreamSelection(_, context), `StreamSelection`]
  });
}, "se_MssPackage");
var se_S3Destination = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    bucketName: [, , `BucketName`],
    manifestKey: [, , `ManifestKey`],
    roleArn: [, , `RoleArn`]
  });
}, "se_S3Destination");
var se_SpekeKeyProvider = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    certificateArn: [, , `CertificateArn`],
    encryptionContractConfiguration: [
      ,
      (_) => se_EncryptionContractConfiguration(_, context),
      `EncryptionContractConfiguration`
    ],
    resourceId: [, , `ResourceId`],
    roleArn: [, , `RoleArn`],
    systemIds: [, import_smithy_client._json, `SystemIds`],
    url: [, , `Url`]
  });
}, "se_SpekeKeyProvider");
var se_StreamSelection = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    maxVideoBitsPerSecond: [, , `MaxVideoBitsPerSecond`],
    minVideoBitsPerSecond: [, , `MinVideoBitsPerSecond`],
    streamOrder: [, , `StreamOrder`]
  });
}, "se_StreamSelection");
var de___listOfChannel = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Channel(entry, context);
  });
  return retVal;
}, "de___listOfChannel");
var de___listOfHarvestJob = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_HarvestJob(entry, context);
  });
  return retVal;
}, "de___listOfHarvestJob");
var de___listOfHlsManifest = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_HlsManifest(entry, context);
  });
  return retVal;
}, "de___listOfHlsManifest");
var de___listOfIngestEndpoint = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_IngestEndpoint(entry, context);
  });
  return retVal;
}, "de___listOfIngestEndpoint");
var de___listOfOriginEndpoint = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_OriginEndpoint(entry, context);
  });
  return retVal;
}, "de___listOfOriginEndpoint");
var de_Authorization = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CdnIdentifierSecret: [, import_smithy_client.expectString, `cdnIdentifierSecret`],
    SecretsRoleArn: [, import_smithy_client.expectString, `secretsRoleArn`]
  });
}, "de_Authorization");
var de_Channel = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: [, import_smithy_client.expectString, `arn`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    Description: [, import_smithy_client.expectString, `description`],
    EgressAccessLogs: [, (_) => de_EgressAccessLogs(_, context), `egressAccessLogs`],
    HlsIngest: [, (_) => de_HlsIngest(_, context), `hlsIngest`],
    Id: [, import_smithy_client.expectString, `id`],
    IngressAccessLogs: [, (_) => de_IngressAccessLogs(_, context), `ingressAccessLogs`],
    Tags: [, import_smithy_client._json, `tags`]
  });
}, "de_Channel");
var de_CmafEncryption = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ConstantInitializationVector: [, import_smithy_client.expectString, `constantInitializationVector`],
    EncryptionMethod: [, import_smithy_client.expectString, `encryptionMethod`],
    KeyRotationIntervalSeconds: [, import_smithy_client.expectInt32, `keyRotationIntervalSeconds`],
    SpekeKeyProvider: [, (_) => de_SpekeKeyProvider(_, context), `spekeKeyProvider`]
  });
}, "de_CmafEncryption");
var de_CmafPackage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Encryption: [, (_) => de_CmafEncryption(_, context), `encryption`],
    HlsManifests: [, (_) => de___listOfHlsManifest(_, context), `hlsManifests`],
    SegmentDurationSeconds: [, import_smithy_client.expectInt32, `segmentDurationSeconds`],
    SegmentPrefix: [, import_smithy_client.expectString, `segmentPrefix`],
    StreamSelection: [, (_) => de_StreamSelection(_, context), `streamSelection`]
  });
}, "de_CmafPackage");
var de_DashEncryption = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    KeyRotationIntervalSeconds: [, import_smithy_client.expectInt32, `keyRotationIntervalSeconds`],
    SpekeKeyProvider: [, (_) => de_SpekeKeyProvider(_, context), `spekeKeyProvider`]
  });
}, "de_DashEncryption");
var de_DashPackage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdTriggers: [, import_smithy_client._json, `adTriggers`],
    AdsOnDeliveryRestrictions: [, import_smithy_client.expectString, `adsOnDeliveryRestrictions`],
    Encryption: [, (_) => de_DashEncryption(_, context), `encryption`],
    IncludeIframeOnlyStream: [, import_smithy_client.expectBoolean, `includeIframeOnlyStream`],
    ManifestLayout: [, import_smithy_client.expectString, `manifestLayout`],
    ManifestWindowSeconds: [, import_smithy_client.expectInt32, `manifestWindowSeconds`],
    MinBufferTimeSeconds: [, import_smithy_client.expectInt32, `minBufferTimeSeconds`],
    MinUpdatePeriodSeconds: [, import_smithy_client.expectInt32, `minUpdatePeriodSeconds`],
    PeriodTriggers: [, import_smithy_client._json, `periodTriggers`],
    Profile: [, import_smithy_client.expectString, `profile`],
    SegmentDurationSeconds: [, import_smithy_client.expectInt32, `segmentDurationSeconds`],
    SegmentTemplateFormat: [, import_smithy_client.expectString, `segmentTemplateFormat`],
    StreamSelection: [, (_) => de_StreamSelection(_, context), `streamSelection`],
    SuggestedPresentationDelaySeconds: [, import_smithy_client.expectInt32, `suggestedPresentationDelaySeconds`],
    UtcTiming: [, import_smithy_client.expectString, `utcTiming`],
    UtcTimingUri: [, import_smithy_client.expectString, `utcTimingUri`]
  });
}, "de_DashPackage");
var de_EgressAccessLogs = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LogGroupName: [, import_smithy_client.expectString, `logGroupName`]
  });
}, "de_EgressAccessLogs");
var de_EncryptionContractConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    PresetSpeke20Audio: [, import_smithy_client.expectString, `presetSpeke20Audio`],
    PresetSpeke20Video: [, import_smithy_client.expectString, `presetSpeke20Video`]
  });
}, "de_EncryptionContractConfiguration");
var de_HarvestJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: [, import_smithy_client.expectString, `arn`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    EndTime: [, import_smithy_client.expectString, `endTime`],
    Id: [, import_smithy_client.expectString, `id`],
    OriginEndpointId: [, import_smithy_client.expectString, `originEndpointId`],
    S3Destination: [, (_) => de_S3Destination(_, context), `s3Destination`],
    StartTime: [, import_smithy_client.expectString, `startTime`],
    Status: [, import_smithy_client.expectString, `status`]
  });
}, "de_HarvestJob");
var de_HlsEncryption = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ConstantInitializationVector: [, import_smithy_client.expectString, `constantInitializationVector`],
    EncryptionMethod: [, import_smithy_client.expectString, `encryptionMethod`],
    KeyRotationIntervalSeconds: [, import_smithy_client.expectInt32, `keyRotationIntervalSeconds`],
    RepeatExtXKey: [, import_smithy_client.expectBoolean, `repeatExtXKey`],
    SpekeKeyProvider: [, (_) => de_SpekeKeyProvider(_, context), `spekeKeyProvider`]
  });
}, "de_HlsEncryption");
var de_HlsIngest = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    IngestEndpoints: [, (_) => de___listOfIngestEndpoint(_, context), `ingestEndpoints`]
  });
}, "de_HlsIngest");
var de_HlsManifest = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdMarkers: [, import_smithy_client.expectString, `adMarkers`],
    AdTriggers: [, import_smithy_client._json, `adTriggers`],
    AdsOnDeliveryRestrictions: [, import_smithy_client.expectString, `adsOnDeliveryRestrictions`],
    Id: [, import_smithy_client.expectString, `id`],
    IncludeIframeOnlyStream: [, import_smithy_client.expectBoolean, `includeIframeOnlyStream`],
    ManifestName: [, import_smithy_client.expectString, `manifestName`],
    PlaylistType: [, import_smithy_client.expectString, `playlistType`],
    PlaylistWindowSeconds: [, import_smithy_client.expectInt32, `playlistWindowSeconds`],
    ProgramDateTimeIntervalSeconds: [, import_smithy_client.expectInt32, `programDateTimeIntervalSeconds`],
    Url: [, import_smithy_client.expectString, `url`]
  });
}, "de_HlsManifest");
var de_HlsPackage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdMarkers: [, import_smithy_client.expectString, `adMarkers`],
    AdTriggers: [, import_smithy_client._json, `adTriggers`],
    AdsOnDeliveryRestrictions: [, import_smithy_client.expectString, `adsOnDeliveryRestrictions`],
    Encryption: [, (_) => de_HlsEncryption(_, context), `encryption`],
    IncludeDvbSubtitles: [, import_smithy_client.expectBoolean, `includeDvbSubtitles`],
    IncludeIframeOnlyStream: [, import_smithy_client.expectBoolean, `includeIframeOnlyStream`],
    PlaylistType: [, import_smithy_client.expectString, `playlistType`],
    PlaylistWindowSeconds: [, import_smithy_client.expectInt32, `playlistWindowSeconds`],
    ProgramDateTimeIntervalSeconds: [, import_smithy_client.expectInt32, `programDateTimeIntervalSeconds`],
    SegmentDurationSeconds: [, import_smithy_client.expectInt32, `segmentDurationSeconds`],
    StreamSelection: [, (_) => de_StreamSelection(_, context), `streamSelection`],
    UseAudioRenditionGroup: [, import_smithy_client.expectBoolean, `useAudioRenditionGroup`]
  });
}, "de_HlsPackage");
var de_IngestEndpoint = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Id: [, import_smithy_client.expectString, `id`],
    Password: [, import_smithy_client.expectString, `password`],
    Url: [, import_smithy_client.expectString, `url`],
    Username: [, import_smithy_client.expectString, `username`]
  });
}, "de_IngestEndpoint");
var de_IngressAccessLogs = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LogGroupName: [, import_smithy_client.expectString, `logGroupName`]
  });
}, "de_IngressAccessLogs");
var de_MssEncryption = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    SpekeKeyProvider: [, (_) => de_SpekeKeyProvider(_, context), `spekeKeyProvider`]
  });
}, "de_MssEncryption");
var de_MssPackage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Encryption: [, (_) => de_MssEncryption(_, context), `encryption`],
    ManifestWindowSeconds: [, import_smithy_client.expectInt32, `manifestWindowSeconds`],
    SegmentDurationSeconds: [, import_smithy_client.expectInt32, `segmentDurationSeconds`],
    StreamSelection: [, (_) => de_StreamSelection(_, context), `streamSelection`]
  });
}, "de_MssPackage");
var de_OriginEndpoint = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: [, import_smithy_client.expectString, `arn`],
    Authorization: [, (_) => de_Authorization(_, context), `authorization`],
    ChannelId: [, import_smithy_client.expectString, `channelId`],
    CmafPackage: [, (_) => de_CmafPackage(_, context), `cmafPackage`],
    CreatedAt: [, import_smithy_client.expectString, `createdAt`],
    DashPackage: [, (_) => de_DashPackage(_, context), `dashPackage`],
    Description: [, import_smithy_client.expectString, `description`],
    HlsPackage: [, (_) => de_HlsPackage(_, context), `hlsPackage`],
    Id: [, import_smithy_client.expectString, `id`],
    ManifestName: [, import_smithy_client.expectString, `manifestName`],
    MssPackage: [, (_) => de_MssPackage(_, context), `mssPackage`],
    Origination: [, import_smithy_client.expectString, `origination`],
    StartoverWindowSeconds: [, import_smithy_client.expectInt32, `startoverWindowSeconds`],
    Tags: [, import_smithy_client._json, `tags`],
    TimeDelaySeconds: [, import_smithy_client.expectInt32, `timeDelaySeconds`],
    Url: [, import_smithy_client.expectString, `url`],
    Whitelist: [, import_smithy_client._json, `whitelist`]
  });
}, "de_OriginEndpoint");
var de_S3Destination = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BucketName: [, import_smithy_client.expectString, `bucketName`],
    ManifestKey: [, import_smithy_client.expectString, `manifestKey`],
    RoleArn: [, import_smithy_client.expectString, `roleArn`]
  });
}, "de_S3Destination");
var de_SpekeKeyProvider = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CertificateArn: [, import_smithy_client.expectString, `certificateArn`],
    EncryptionContractConfiguration: [
      ,
      (_) => de_EncryptionContractConfiguration(_, context),
      `encryptionContractConfiguration`
    ],
    ResourceId: [, import_smithy_client.expectString, `resourceId`],
    RoleArn: [, import_smithy_client.expectString, `roleArn`],
    SystemIds: [, import_smithy_client._json, `systemIds`],
    Url: [, import_smithy_client.expectString, `url`]
  });
}, "de_SpekeKeyProvider");
var de_StreamSelection = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MaxVideoBitsPerSecond: [, import_smithy_client.expectInt32, `maxVideoBitsPerSecond`],
    MinVideoBitsPerSecond: [, import_smithy_client.expectInt32, `minVideoBitsPerSecond`],
    StreamOrder: [, import_smithy_client.expectString, `streamOrder`]
  });
}, "de_StreamSelection");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _CI = "ChannelId";
var _ICI = "IncludeChannelId";
var _IS = "IncludeStatus";
var _MR = "MaxResults";
var _NT = "NextToken";
var _TK = "TagKeys";
var _cI = "channelId";
var _iCI = "includeChannelId";
var _iS = "includeStatus";
var _mR = "maxResults";
var _nT = "nextToken";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/ConfigureLogsCommand.ts
var _ConfigureLogsCommand = class _ConfigureLogsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "ConfigureLogs", {}).n("MediaPackageClient", "ConfigureLogsCommand").f(void 0, ConfigureLogsResponseFilterSensitiveLog).ser(se_ConfigureLogsCommand).de(de_ConfigureLogsCommand).build() {
};
__name(_ConfigureLogsCommand, "ConfigureLogsCommand");
var ConfigureLogsCommand = _ConfigureLogsCommand;

// src/commands/CreateChannelCommand.ts




var _CreateChannelCommand = class _CreateChannelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "CreateChannel", {}).n("MediaPackageClient", "CreateChannelCommand").f(void 0, CreateChannelResponseFilterSensitiveLog).ser(se_CreateChannelCommand).de(de_CreateChannelCommand).build() {
};
__name(_CreateChannelCommand, "CreateChannelCommand");
var CreateChannelCommand = _CreateChannelCommand;

// src/commands/CreateHarvestJobCommand.ts




var _CreateHarvestJobCommand = class _CreateHarvestJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "CreateHarvestJob", {}).n("MediaPackageClient", "CreateHarvestJobCommand").f(void 0, void 0).ser(se_CreateHarvestJobCommand).de(de_CreateHarvestJobCommand).build() {
};
__name(_CreateHarvestJobCommand, "CreateHarvestJobCommand");
var CreateHarvestJobCommand = _CreateHarvestJobCommand;

// src/commands/CreateOriginEndpointCommand.ts




var _CreateOriginEndpointCommand = class _CreateOriginEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "CreateOriginEndpoint", {}).n("MediaPackageClient", "CreateOriginEndpointCommand").f(void 0, void 0).ser(se_CreateOriginEndpointCommand).de(de_CreateOriginEndpointCommand).build() {
};
__name(_CreateOriginEndpointCommand, "CreateOriginEndpointCommand");
var CreateOriginEndpointCommand = _CreateOriginEndpointCommand;

// src/commands/DeleteChannelCommand.ts




var _DeleteChannelCommand = class _DeleteChannelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "DeleteChannel", {}).n("MediaPackageClient", "DeleteChannelCommand").f(void 0, void 0).ser(se_DeleteChannelCommand).de(de_DeleteChannelCommand).build() {
};
__name(_DeleteChannelCommand, "DeleteChannelCommand");
var DeleteChannelCommand = _DeleteChannelCommand;

// src/commands/DeleteOriginEndpointCommand.ts




var _DeleteOriginEndpointCommand = class _DeleteOriginEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "DeleteOriginEndpoint", {}).n("MediaPackageClient", "DeleteOriginEndpointCommand").f(void 0, void 0).ser(se_DeleteOriginEndpointCommand).de(de_DeleteOriginEndpointCommand).build() {
};
__name(_DeleteOriginEndpointCommand, "DeleteOriginEndpointCommand");
var DeleteOriginEndpointCommand = _DeleteOriginEndpointCommand;

// src/commands/DescribeChannelCommand.ts




var _DescribeChannelCommand = class _DescribeChannelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "DescribeChannel", {}).n("MediaPackageClient", "DescribeChannelCommand").f(void 0, DescribeChannelResponseFilterSensitiveLog).ser(se_DescribeChannelCommand).de(de_DescribeChannelCommand).build() {
};
__name(_DescribeChannelCommand, "DescribeChannelCommand");
var DescribeChannelCommand = _DescribeChannelCommand;

// src/commands/DescribeHarvestJobCommand.ts




var _DescribeHarvestJobCommand = class _DescribeHarvestJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "DescribeHarvestJob", {}).n("MediaPackageClient", "DescribeHarvestJobCommand").f(void 0, void 0).ser(se_DescribeHarvestJobCommand).de(de_DescribeHarvestJobCommand).build() {
};
__name(_DescribeHarvestJobCommand, "DescribeHarvestJobCommand");
var DescribeHarvestJobCommand = _DescribeHarvestJobCommand;

// src/commands/DescribeOriginEndpointCommand.ts




var _DescribeOriginEndpointCommand = class _DescribeOriginEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "DescribeOriginEndpoint", {}).n("MediaPackageClient", "DescribeOriginEndpointCommand").f(void 0, void 0).ser(se_DescribeOriginEndpointCommand).de(de_DescribeOriginEndpointCommand).build() {
};
__name(_DescribeOriginEndpointCommand, "DescribeOriginEndpointCommand");
var DescribeOriginEndpointCommand = _DescribeOriginEndpointCommand;

// src/commands/ListChannelsCommand.ts




var _ListChannelsCommand = class _ListChannelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "ListChannels", {}).n("MediaPackageClient", "ListChannelsCommand").f(void 0, ListChannelsResponseFilterSensitiveLog).ser(se_ListChannelsCommand).de(de_ListChannelsCommand).build() {
};
__name(_ListChannelsCommand, "ListChannelsCommand");
var ListChannelsCommand = _ListChannelsCommand;

// src/commands/ListHarvestJobsCommand.ts




var _ListHarvestJobsCommand = class _ListHarvestJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "ListHarvestJobs", {}).n("MediaPackageClient", "ListHarvestJobsCommand").f(void 0, void 0).ser(se_ListHarvestJobsCommand).de(de_ListHarvestJobsCommand).build() {
};
__name(_ListHarvestJobsCommand, "ListHarvestJobsCommand");
var ListHarvestJobsCommand = _ListHarvestJobsCommand;

// src/commands/ListOriginEndpointsCommand.ts




var _ListOriginEndpointsCommand = class _ListOriginEndpointsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "ListOriginEndpoints", {}).n("MediaPackageClient", "ListOriginEndpointsCommand").f(void 0, void 0).ser(se_ListOriginEndpointsCommand).de(de_ListOriginEndpointsCommand).build() {
};
__name(_ListOriginEndpointsCommand, "ListOriginEndpointsCommand");
var ListOriginEndpointsCommand = _ListOriginEndpointsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "ListTagsForResource", {}).n("MediaPackageClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/RotateChannelCredentialsCommand.ts




var _RotateChannelCredentialsCommand = class _RotateChannelCredentialsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "RotateChannelCredentials", {}).n("MediaPackageClient", "RotateChannelCredentialsCommand").f(void 0, RotateChannelCredentialsResponseFilterSensitiveLog).ser(se_RotateChannelCredentialsCommand).de(de_RotateChannelCredentialsCommand).build() {
};
__name(_RotateChannelCredentialsCommand, "RotateChannelCredentialsCommand");
var RotateChannelCredentialsCommand = _RotateChannelCredentialsCommand;

// src/commands/RotateIngestEndpointCredentialsCommand.ts




var _RotateIngestEndpointCredentialsCommand = class _RotateIngestEndpointCredentialsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "RotateIngestEndpointCredentials", {}).n("MediaPackageClient", "RotateIngestEndpointCredentialsCommand").f(void 0, RotateIngestEndpointCredentialsResponseFilterSensitiveLog).ser(se_RotateIngestEndpointCredentialsCommand).de(de_RotateIngestEndpointCredentialsCommand).build() {
};
__name(_RotateIngestEndpointCredentialsCommand, "RotateIngestEndpointCredentialsCommand");
var RotateIngestEndpointCredentialsCommand = _RotateIngestEndpointCredentialsCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "TagResource", {}).n("MediaPackageClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "UntagResource", {}).n("MediaPackageClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateChannelCommand.ts




var _UpdateChannelCommand = class _UpdateChannelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "UpdateChannel", {}).n("MediaPackageClient", "UpdateChannelCommand").f(void 0, UpdateChannelResponseFilterSensitiveLog).ser(se_UpdateChannelCommand).de(de_UpdateChannelCommand).build() {
};
__name(_UpdateChannelCommand, "UpdateChannelCommand");
var UpdateChannelCommand = _UpdateChannelCommand;

// src/commands/UpdateOriginEndpointCommand.ts




var _UpdateOriginEndpointCommand = class _UpdateOriginEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("MediaPackage", "UpdateOriginEndpoint", {}).n("MediaPackageClient", "UpdateOriginEndpointCommand").f(void 0, void 0).ser(se_UpdateOriginEndpointCommand).de(de_UpdateOriginEndpointCommand).build() {
};
__name(_UpdateOriginEndpointCommand, "UpdateOriginEndpointCommand");
var UpdateOriginEndpointCommand = _UpdateOriginEndpointCommand;

// src/MediaPackage.ts
var commands = {
  ConfigureLogsCommand,
  CreateChannelCommand,
  CreateHarvestJobCommand,
  CreateOriginEndpointCommand,
  DeleteChannelCommand,
  DeleteOriginEndpointCommand,
  DescribeChannelCommand,
  DescribeHarvestJobCommand,
  DescribeOriginEndpointCommand,
  ListChannelsCommand,
  ListHarvestJobsCommand,
  ListOriginEndpointsCommand,
  ListTagsForResourceCommand,
  RotateChannelCredentialsCommand,
  RotateIngestEndpointCredentialsCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateChannelCommand,
  UpdateOriginEndpointCommand
};
var _MediaPackage = class _MediaPackage extends MediaPackageClient {
};
__name(_MediaPackage, "MediaPackage");
var MediaPackage = _MediaPackage;
(0, import_smithy_client.createAggregatedClient)(commands, MediaPackage);

// src/pagination/ListChannelsPaginator.ts

var paginateListChannels = (0, import_core.createPaginator)(MediaPackageClient, ListChannelsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListHarvestJobsPaginator.ts

var paginateListHarvestJobs = (0, import_core.createPaginator)(MediaPackageClient, ListHarvestJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListOriginEndpointsPaginator.ts

var paginateListOriginEndpoints = (0, import_core.createPaginator)(MediaPackageClient, ListOriginEndpointsCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  MediaPackageServiceException,
  __Client,
  MediaPackageClient,
  MediaPackage,
  $Command,
  ConfigureLogsCommand,
  CreateChannelCommand,
  CreateHarvestJobCommand,
  CreateOriginEndpointCommand,
  DeleteChannelCommand,
  DeleteOriginEndpointCommand,
  DescribeChannelCommand,
  DescribeHarvestJobCommand,
  DescribeOriginEndpointCommand,
  ListChannelsCommand,
  ListHarvestJobsCommand,
  ListOriginEndpointsCommand,
  ListTagsForResourceCommand,
  RotateChannelCredentialsCommand,
  RotateIngestEndpointCredentialsCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateChannelCommand,
  UpdateOriginEndpointCommand,
  paginateListChannels,
  paginateListHarvestJobs,
  paginateListOriginEndpoints,
  __AdTriggersElement,
  __PeriodTriggersElement,
  Status,
  AdMarkers,
  AdsOnDeliveryRestrictions,
  PlaylistType,
  CmafEncryptionMethod,
  PresetSpeke20Audio,
  PresetSpeke20Video,
  StreamOrder,
  ManifestLayout,
  Profile,
  SegmentTemplateFormat,
  UtcTiming,
  EncryptionMethod,
  Origination,
  ForbiddenException,
  InternalServerErrorException,
  NotFoundException,
  ServiceUnavailableException,
  TooManyRequestsException,
  UnprocessableEntityException,
  IngestEndpointFilterSensitiveLog,
  HlsIngestFilterSensitiveLog,
  ChannelFilterSensitiveLog,
  ConfigureLogsResponseFilterSensitiveLog,
  CreateChannelResponseFilterSensitiveLog,
  DescribeChannelResponseFilterSensitiveLog,
  ListChannelsResponseFilterSensitiveLog,
  RotateChannelCredentialsResponseFilterSensitiveLog,
  RotateIngestEndpointCredentialsResponseFilterSensitiveLog,
  UpdateChannelResponseFilterSensitiveLog
});

