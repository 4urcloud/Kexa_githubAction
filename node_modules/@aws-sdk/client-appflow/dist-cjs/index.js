"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AggregationType: () => AggregationType,
  AmplitudeConnectorOperator: () => AmplitudeConnectorOperator,
  AmplitudeConnectorProfileCredentialsFilterSensitiveLog: () => AmplitudeConnectorProfileCredentialsFilterSensitiveLog,
  ApiKeyCredentialsFilterSensitiveLog: () => ApiKeyCredentialsFilterSensitiveLog,
  Appflow: () => Appflow,
  AppflowClient: () => AppflowClient,
  AppflowServiceException: () => AppflowServiceException,
  AuthenticationType: () => AuthenticationType,
  BasicAuthCredentialsFilterSensitiveLog: () => BasicAuthCredentialsFilterSensitiveLog,
  CancelFlowExecutionsCommand: () => CancelFlowExecutionsCommand,
  CatalogType: () => CatalogType,
  ConflictException: () => ConflictException,
  ConnectionMode: () => ConnectionMode,
  ConnectorAuthenticationException: () => ConnectorAuthenticationException,
  ConnectorProfileConfigFilterSensitiveLog: () => ConnectorProfileConfigFilterSensitiveLog,
  ConnectorProfileCredentialsFilterSensitiveLog: () => ConnectorProfileCredentialsFilterSensitiveLog,
  ConnectorProvisioningType: () => ConnectorProvisioningType,
  ConnectorServerException: () => ConnectorServerException,
  ConnectorType: () => ConnectorType,
  CreateConnectorProfileCommand: () => CreateConnectorProfileCommand,
  CreateConnectorProfileRequestFilterSensitiveLog: () => CreateConnectorProfileRequestFilterSensitiveLog,
  CreateFlowCommand: () => CreateFlowCommand,
  CustomAuthCredentialsFilterSensitiveLog: () => CustomAuthCredentialsFilterSensitiveLog,
  CustomConnectorProfileCredentialsFilterSensitiveLog: () => CustomConnectorProfileCredentialsFilterSensitiveLog,
  DataPullMode: () => DataPullMode,
  DataTransferApiType: () => DataTransferApiType,
  DatadogConnectorOperator: () => DatadogConnectorOperator,
  DatadogConnectorProfileCredentialsFilterSensitiveLog: () => DatadogConnectorProfileCredentialsFilterSensitiveLog,
  DeleteConnectorProfileCommand: () => DeleteConnectorProfileCommand,
  DeleteFlowCommand: () => DeleteFlowCommand,
  DescribeConnectorCommand: () => DescribeConnectorCommand,
  DescribeConnectorEntityCommand: () => DescribeConnectorEntityCommand,
  DescribeConnectorProfilesCommand: () => DescribeConnectorProfilesCommand,
  DescribeConnectorsCommand: () => DescribeConnectorsCommand,
  DescribeFlowCommand: () => DescribeFlowCommand,
  DescribeFlowExecutionRecordsCommand: () => DescribeFlowExecutionRecordsCommand,
  DynatraceConnectorOperator: () => DynatraceConnectorOperator,
  ExecutionStatus: () => ExecutionStatus,
  FileType: () => FileType,
  FlowStatus: () => FlowStatus,
  GoogleAnalyticsConnectorOperator: () => GoogleAnalyticsConnectorOperator,
  GoogleAnalyticsConnectorProfileCredentialsFilterSensitiveLog: () => GoogleAnalyticsConnectorProfileCredentialsFilterSensitiveLog,
  HoneycodeConnectorProfileCredentialsFilterSensitiveLog: () => HoneycodeConnectorProfileCredentialsFilterSensitiveLog,
  InforNexusConnectorOperator: () => InforNexusConnectorOperator,
  InforNexusConnectorProfileCredentialsFilterSensitiveLog: () => InforNexusConnectorProfileCredentialsFilterSensitiveLog,
  InternalServerException: () => InternalServerException,
  ListConnectorEntitiesCommand: () => ListConnectorEntitiesCommand,
  ListConnectorsCommand: () => ListConnectorsCommand,
  ListFlowsCommand: () => ListFlowsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  MarketoConnectorOperator: () => MarketoConnectorOperator,
  MarketoConnectorProfileCredentialsFilterSensitiveLog: () => MarketoConnectorProfileCredentialsFilterSensitiveLog,
  OAuth2CredentialsFilterSensitiveLog: () => OAuth2CredentialsFilterSensitiveLog,
  OAuth2CustomPropType: () => OAuth2CustomPropType,
  OAuth2GrantType: () => OAuth2GrantType,
  OAuthCredentialsFilterSensitiveLog: () => OAuthCredentialsFilterSensitiveLog,
  Operator: () => Operator,
  OperatorPropertiesKeys: () => OperatorPropertiesKeys,
  Operators: () => Operators,
  PardotConnectorOperator: () => PardotConnectorOperator,
  PardotConnectorProfileCredentialsFilterSensitiveLog: () => PardotConnectorProfileCredentialsFilterSensitiveLog,
  PathPrefix: () => PathPrefix,
  PrefixFormat: () => PrefixFormat,
  PrefixType: () => PrefixType,
  PrivateConnectionProvisioningFailureCause: () => PrivateConnectionProvisioningFailureCause,
  PrivateConnectionProvisioningStatus: () => PrivateConnectionProvisioningStatus,
  RedshiftConnectorProfileCredentialsFilterSensitiveLog: () => RedshiftConnectorProfileCredentialsFilterSensitiveLog,
  RegisterConnectorCommand: () => RegisterConnectorCommand,
  ResetConnectorMetadataCacheCommand: () => ResetConnectorMetadataCacheCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  S3ConnectorOperator: () => S3ConnectorOperator,
  S3InputFileType: () => S3InputFileType,
  SAPODataConnectorOperator: () => SAPODataConnectorOperator,
  SAPODataConnectorProfileCredentialsFilterSensitiveLog: () => SAPODataConnectorProfileCredentialsFilterSensitiveLog,
  SalesforceConnectorOperator: () => SalesforceConnectorOperator,
  SalesforceConnectorProfileCredentialsFilterSensitiveLog: () => SalesforceConnectorProfileCredentialsFilterSensitiveLog,
  SalesforceDataTransferApi: () => SalesforceDataTransferApi,
  ScheduleFrequencyType: () => ScheduleFrequencyType,
  ServiceNowConnectorOperator: () => ServiceNowConnectorOperator,
  ServiceNowConnectorProfileCredentialsFilterSensitiveLog: () => ServiceNowConnectorProfileCredentialsFilterSensitiveLog,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SingularConnectorOperator: () => SingularConnectorOperator,
  SingularConnectorProfileCredentialsFilterSensitiveLog: () => SingularConnectorProfileCredentialsFilterSensitiveLog,
  SlackConnectorOperator: () => SlackConnectorOperator,
  SlackConnectorProfileCredentialsFilterSensitiveLog: () => SlackConnectorProfileCredentialsFilterSensitiveLog,
  SnowflakeConnectorProfileCredentialsFilterSensitiveLog: () => SnowflakeConnectorProfileCredentialsFilterSensitiveLog,
  StartFlowCommand: () => StartFlowCommand,
  StopFlowCommand: () => StopFlowCommand,
  SupportedDataTransferType: () => SupportedDataTransferType,
  TagResourceCommand: () => TagResourceCommand,
  TaskType: () => TaskType,
  ThrottlingException: () => ThrottlingException,
  TrendmicroConnectorOperator: () => TrendmicroConnectorOperator,
  TrendmicroConnectorProfileCredentialsFilterSensitiveLog: () => TrendmicroConnectorProfileCredentialsFilterSensitiveLog,
  TriggerType: () => TriggerType,
  UnregisterConnectorCommand: () => UnregisterConnectorCommand,
  UnsupportedOperationException: () => UnsupportedOperationException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateConnectorProfileCommand: () => UpdateConnectorProfileCommand,
  UpdateConnectorProfileRequestFilterSensitiveLog: () => UpdateConnectorProfileRequestFilterSensitiveLog,
  UpdateConnectorRegistrationCommand: () => UpdateConnectorRegistrationCommand,
  UpdateFlowCommand: () => UpdateFlowCommand,
  ValidationException: () => ValidationException,
  VeevaConnectorOperator: () => VeevaConnectorOperator,
  VeevaConnectorProfileCredentialsFilterSensitiveLog: () => VeevaConnectorProfileCredentialsFilterSensitiveLog,
  WriteOperationType: () => WriteOperationType,
  ZendeskConnectorOperator: () => ZendeskConnectorOperator,
  ZendeskConnectorProfileCredentialsFilterSensitiveLog: () => ZendeskConnectorProfileCredentialsFilterSensitiveLog,
  __Client: () => import_smithy_client.Client,
  paginateDescribeConnectorProfiles: () => paginateDescribeConnectorProfiles,
  paginateDescribeConnectors: () => paginateDescribeConnectors,
  paginateDescribeFlowExecutionRecords: () => paginateDescribeFlowExecutionRecords,
  paginateListConnectors: () => paginateListConnectors,
  paginateListFlows: () => paginateListFlows
});
module.exports = __toCommonJS(src_exports);

// src/AppflowClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "appflow"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/AppflowClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/AppflowClient.ts
var _AppflowClient = class _AppflowClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultAppflowHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_AppflowClient, "AppflowClient");
var AppflowClient = _AppflowClient;

// src/Appflow.ts


// src/commands/CancelFlowExecutionsCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts


var import_uuid = require("uuid");

// src/models/AppflowServiceException.ts

var _AppflowServiceException = class _AppflowServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _AppflowServiceException.prototype);
  }
};
__name(_AppflowServiceException, "AppflowServiceException");
var AppflowServiceException = _AppflowServiceException;

// src/models/models_0.ts

var _AccessDeniedException = class _AccessDeniedException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AggregationType = {
  NONE: "None",
  SINGLE_FILE: "SingleFile"
};
var AmplitudeConnectorOperator = {
  BETWEEN: "BETWEEN"
};
var OAuth2CustomPropType = {
  AUTH_URL: "AUTH_URL",
  TOKEN_URL: "TOKEN_URL"
};
var OAuth2GrantType = {
  AUTHORIZATION_CODE: "AUTHORIZATION_CODE",
  CLIENT_CREDENTIALS: "CLIENT_CREDENTIALS",
  JWT_BEARER: "JWT_BEARER"
};
var AuthenticationType = {
  APIKEY: "APIKEY",
  BASIC: "BASIC",
  CUSTOM: "CUSTOM",
  OAUTH2: "OAUTH2"
};
var _InternalServerException = class _InternalServerException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ThrottlingException = class _ThrottlingException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var CatalogType = {
  GLUE: "GLUE"
};
var _ConflictException = class _ConflictException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var ConnectionMode = {
  PRIVATE: "Private",
  PUBLIC: "Public"
};
var _ConnectorAuthenticationException = class _ConnectorAuthenticationException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConnectorAuthenticationException",
      $fault: "client",
      ...opts
    });
    this.name = "ConnectorAuthenticationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConnectorAuthenticationException.prototype);
  }
};
__name(_ConnectorAuthenticationException, "ConnectorAuthenticationException");
var ConnectorAuthenticationException = _ConnectorAuthenticationException;
var SalesforceDataTransferApi = {
  AUTOMATIC: "AUTOMATIC",
  BULKV2: "BULKV2",
  REST_SYNC: "REST_SYNC"
};
var ConnectorProvisioningType = {
  LAMBDA: "LAMBDA"
};
var ConnectorType = {
  AMPLITUDE: "Amplitude",
  CUSTOMCONNECTOR: "CustomConnector",
  CUSTOMERPROFILES: "CustomerProfiles",
  DATADOG: "Datadog",
  DYNATRACE: "Dynatrace",
  EVENTBRIDGE: "EventBridge",
  GOOGLEANALYTICS: "Googleanalytics",
  HONEYCODE: "Honeycode",
  INFORNEXUS: "Infornexus",
  LOOKOUTMETRICS: "LookoutMetrics",
  MARKETO: "Marketo",
  PARDOT: "Pardot",
  REDSHIFT: "Redshift",
  S3: "S3",
  SALESFORCE: "Salesforce",
  SAPODATA: "SAPOData",
  SERVICENOW: "Servicenow",
  SINGULAR: "Singular",
  SLACK: "Slack",
  SNOWFLAKE: "Snowflake",
  TRENDMICRO: "Trendmicro",
  UPSOLVER: "Upsolver",
  VEEVA: "Veeva",
  ZENDESK: "Zendesk"
};
var DataTransferApiType = {
  ASYNC: "ASYNC",
  AUTOMATIC: "AUTOMATIC",
  SYNC: "SYNC"
};
var SupportedDataTransferType = {
  FILE: "FILE",
  RECORD: "RECORD"
};
var Operators = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var ScheduleFrequencyType = {
  BYMINUTE: "BYMINUTE",
  DAILY: "DAILY",
  HOURLY: "HOURLY",
  MONTHLY: "MONTHLY",
  ONCE: "ONCE",
  WEEKLY: "WEEKLY"
};
var TriggerType = {
  EVENT: "Event",
  ONDEMAND: "OnDemand",
  SCHEDULED: "Scheduled"
};
var WriteOperationType = {
  DELETE: "DELETE",
  INSERT: "INSERT",
  UPDATE: "UPDATE",
  UPSERT: "UPSERT"
};
var Operator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var DatadogConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var DynatraceConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var GoogleAnalyticsConnectorOperator = {
  BETWEEN: "BETWEEN",
  PROJECTION: "PROJECTION"
};
var InforNexusConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var MarketoConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  DIVISION: "DIVISION",
  GREATER_THAN: "GREATER_THAN",
  LESS_THAN: "LESS_THAN",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var PardotConnectorOperator = {
  ADDITION: "ADDITION",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var S3ConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var SalesforceConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var SAPODataConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var ServiceNowConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var SingularConnectorOperator = {
  ADDITION: "ADDITION",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var SlackConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var TrendmicroConnectorOperator = {
  ADDITION: "ADDITION",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var VeevaConnectorOperator = {
  ADDITION: "ADDITION",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  DIVISION: "DIVISION",
  EQUAL_TO: "EQUAL_TO",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NOT_EQUAL_TO: "NOT_EQUAL_TO",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var ZendeskConnectorOperator = {
  ADDITION: "ADDITION",
  DIVISION: "DIVISION",
  GREATER_THAN: "GREATER_THAN",
  MASK_ALL: "MASK_ALL",
  MASK_FIRST_N: "MASK_FIRST_N",
  MASK_LAST_N: "MASK_LAST_N",
  MULTIPLICATION: "MULTIPLICATION",
  NO_OP: "NO_OP",
  PROJECTION: "PROJECTION",
  SUBTRACTION: "SUBTRACTION",
  VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE",
  VALIDATE_NON_NULL: "VALIDATE_NON_NULL",
  VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO",
  VALIDATE_NUMERIC: "VALIDATE_NUMERIC"
};
var PrivateConnectionProvisioningFailureCause = {
  ACCESS_DENIED: "ACCESS_DENIED",
  CONNECTOR_AUTHENTICATION: "CONNECTOR_AUTHENTICATION",
  CONNECTOR_SERVER: "CONNECTOR_SERVER",
  INTERNAL_SERVER: "INTERNAL_SERVER",
  VALIDATION: "VALIDATION"
};
var PrivateConnectionProvisioningStatus = {
  CREATED: "CREATED",
  FAILED: "FAILED",
  PENDING: "PENDING"
};
var _ConnectorServerException = class _ConnectorServerException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConnectorServerException",
      $fault: "client",
      ...opts
    });
    this.name = "ConnectorServerException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConnectorServerException.prototype);
  }
};
__name(_ConnectorServerException, "ConnectorServerException");
var ConnectorServerException = _ConnectorServerException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var FileType = {
  CSV: "CSV",
  JSON: "JSON",
  PARQUET: "PARQUET"
};
var PathPrefix = {
  EXECUTION_ID: "EXECUTION_ID",
  SCHEMA_VERSION: "SCHEMA_VERSION"
};
var PrefixFormat = {
  DAY: "DAY",
  HOUR: "HOUR",
  MINUTE: "MINUTE",
  MONTH: "MONTH",
  YEAR: "YEAR"
};
var PrefixType = {
  FILENAME: "FILENAME",
  PATH: "PATH",
  PATH_AND_FILENAME: "PATH_AND_FILENAME"
};
var S3InputFileType = {
  CSV: "CSV",
  JSON: "JSON"
};
var OperatorPropertiesKeys = {
  CONCAT_FORMAT: "CONCAT_FORMAT",
  DATA_TYPE: "DATA_TYPE",
  DESTINATION_DATA_TYPE: "DESTINATION_DATA_TYPE",
  EXCLUDE_SOURCE_FIELDS_LIST: "EXCLUDE_SOURCE_FIELDS_LIST",
  INCLUDE_NEW_FIELDS: "INCLUDE_NEW_FIELDS",
  LOWER_BOUND: "LOWER_BOUND",
  MASK_LENGTH: "MASK_LENGTH",
  MASK_VALUE: "MASK_VALUE",
  MATH_OPERATION_FIELDS_ORDER: "MATH_OPERATION_FIELDS_ORDER",
  ORDERED_PARTITION_KEYS_LIST: "ORDERED_PARTITION_KEYS_LIST",
  SOURCE_DATA_TYPE: "SOURCE_DATA_TYPE",
  SUBFIELD_CATEGORY_MAP: "SUBFIELD_CATEGORY_MAP",
  TRUNCATE_LENGTH: "TRUNCATE_LENGTH",
  UPPER_BOUND: "UPPER_BOUND",
  VALIDATION_ACTION: "VALIDATION_ACTION",
  VALUE: "VALUE",
  VALUES: "VALUES"
};
var TaskType = {
  ARITHMETIC: "Arithmetic",
  FILTER: "Filter",
  MAP: "Map",
  MAP_ALL: "Map_all",
  MASK: "Mask",
  MERGE: "Merge",
  PARTITION: "Partition",
  PASSTHROUGH: "Passthrough",
  TRUNCATE: "Truncate",
  VALIDATE: "Validate"
};
var DataPullMode = {
  COMPLETE: "Complete",
  INCREMENTAL: "Incremental"
};
var FlowStatus = {
  ACTIVE: "Active",
  DELETED: "Deleted",
  DEPRECATED: "Deprecated",
  DRAFT: "Draft",
  ERRORED: "Errored",
  SUSPENDED: "Suspended"
};
var ExecutionStatus = {
  CANCELED: "Canceled",
  CANCELSTARTED: "CancelStarted",
  ERROR: "Error",
  INPROGRESS: "InProgress",
  SUCCESSFUL: "Successful"
};
var _UnsupportedOperationException = class _UnsupportedOperationException extends AppflowServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedOperationException",
      $fault: "client",
      ...opts
    });
    this.name = "UnsupportedOperationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnsupportedOperationException.prototype);
  }
};
__name(_UnsupportedOperationException, "UnsupportedOperationException");
var UnsupportedOperationException = _UnsupportedOperationException;
var AmplitudeConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.apiKey && { apiKey: import_smithy_client.SENSITIVE_STRING },
  ...obj.secretKey && { secretKey: import_smithy_client.SENSITIVE_STRING }
}), "AmplitudeConnectorProfileCredentialsFilterSensitiveLog");
var ApiKeyCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.apiKey && { apiKey: import_smithy_client.SENSITIVE_STRING },
  ...obj.apiSecretKey && { apiSecretKey: import_smithy_client.SENSITIVE_STRING }
}), "ApiKeyCredentialsFilterSensitiveLog");
var BasicAuthCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.password && { password: import_smithy_client.SENSITIVE_STRING }
}), "BasicAuthCredentialsFilterSensitiveLog");
var CustomAuthCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.credentialsMap && { credentialsMap: import_smithy_client.SENSITIVE_STRING }
}), "CustomAuthCredentialsFilterSensitiveLog");
var OAuth2CredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "OAuth2CredentialsFilterSensitiveLog");
var CustomConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.basic && { basic: BasicAuthCredentialsFilterSensitiveLog(obj.basic) },
  ...obj.oauth2 && { oauth2: OAuth2CredentialsFilterSensitiveLog(obj.oauth2) },
  ...obj.apiKey && { apiKey: ApiKeyCredentialsFilterSensitiveLog(obj.apiKey) },
  ...obj.custom && { custom: CustomAuthCredentialsFilterSensitiveLog(obj.custom) }
}), "CustomConnectorProfileCredentialsFilterSensitiveLog");
var DatadogConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.apiKey && { apiKey: import_smithy_client.SENSITIVE_STRING }
}), "DatadogConnectorProfileCredentialsFilterSensitiveLog");
var GoogleAnalyticsConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "GoogleAnalyticsConnectorProfileCredentialsFilterSensitiveLog");
var HoneycodeConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "HoneycodeConnectorProfileCredentialsFilterSensitiveLog");
var InforNexusConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessKeyId && { accessKeyId: import_smithy_client.SENSITIVE_STRING }
}), "InforNexusConnectorProfileCredentialsFilterSensitiveLog");
var MarketoConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "MarketoConnectorProfileCredentialsFilterSensitiveLog");
var PardotConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.clientCredentialsArn && { clientCredentialsArn: import_smithy_client.SENSITIVE_STRING }
}), "PardotConnectorProfileCredentialsFilterSensitiveLog");
var RedshiftConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.password && { password: import_smithy_client.SENSITIVE_STRING }
}), "RedshiftConnectorProfileCredentialsFilterSensitiveLog");
var SalesforceConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.clientCredentialsArn && { clientCredentialsArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.jwtToken && { jwtToken: import_smithy_client.SENSITIVE_STRING }
}), "SalesforceConnectorProfileCredentialsFilterSensitiveLog");
var OAuthCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "OAuthCredentialsFilterSensitiveLog");
var SAPODataConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.basicAuthCredentials && {
    basicAuthCredentials: BasicAuthCredentialsFilterSensitiveLog(obj.basicAuthCredentials)
  },
  ...obj.oAuthCredentials && { oAuthCredentials: OAuthCredentialsFilterSensitiveLog(obj.oAuthCredentials) }
}), "SAPODataConnectorProfileCredentialsFilterSensitiveLog");
var ServiceNowConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.password && { password: import_smithy_client.SENSITIVE_STRING },
  ...obj.oAuth2Credentials && { oAuth2Credentials: OAuth2CredentialsFilterSensitiveLog(obj.oAuth2Credentials) }
}), "ServiceNowConnectorProfileCredentialsFilterSensitiveLog");
var SingularConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.apiKey && { apiKey: import_smithy_client.SENSITIVE_STRING }
}), "SingularConnectorProfileCredentialsFilterSensitiveLog");
var SlackConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "SlackConnectorProfileCredentialsFilterSensitiveLog");
var SnowflakeConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.password && { password: import_smithy_client.SENSITIVE_STRING }
}), "SnowflakeConnectorProfileCredentialsFilterSensitiveLog");
var TrendmicroConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.apiSecretKey && { apiSecretKey: import_smithy_client.SENSITIVE_STRING }
}), "TrendmicroConnectorProfileCredentialsFilterSensitiveLog");
var VeevaConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.password && { password: import_smithy_client.SENSITIVE_STRING }
}), "VeevaConnectorProfileCredentialsFilterSensitiveLog");
var ZendeskConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },
  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }
}), "ZendeskConnectorProfileCredentialsFilterSensitiveLog");
var ConnectorProfileCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Amplitude && { Amplitude: AmplitudeConnectorProfileCredentialsFilterSensitiveLog(obj.Amplitude) },
  ...obj.Datadog && { Datadog: DatadogConnectorProfileCredentialsFilterSensitiveLog(obj.Datadog) },
  ...obj.GoogleAnalytics && {
    GoogleAnalytics: GoogleAnalyticsConnectorProfileCredentialsFilterSensitiveLog(obj.GoogleAnalytics)
  },
  ...obj.Honeycode && { Honeycode: HoneycodeConnectorProfileCredentialsFilterSensitiveLog(obj.Honeycode) },
  ...obj.InforNexus && { InforNexus: InforNexusConnectorProfileCredentialsFilterSensitiveLog(obj.InforNexus) },
  ...obj.Marketo && { Marketo: MarketoConnectorProfileCredentialsFilterSensitiveLog(obj.Marketo) },
  ...obj.Redshift && { Redshift: RedshiftConnectorProfileCredentialsFilterSensitiveLog(obj.Redshift) },
  ...obj.Salesforce && { Salesforce: SalesforceConnectorProfileCredentialsFilterSensitiveLog(obj.Salesforce) },
  ...obj.ServiceNow && { ServiceNow: ServiceNowConnectorProfileCredentialsFilterSensitiveLog(obj.ServiceNow) },
  ...obj.Singular && { Singular: SingularConnectorProfileCredentialsFilterSensitiveLog(obj.Singular) },
  ...obj.Slack && { Slack: SlackConnectorProfileCredentialsFilterSensitiveLog(obj.Slack) },
  ...obj.Snowflake && { Snowflake: SnowflakeConnectorProfileCredentialsFilterSensitiveLog(obj.Snowflake) },
  ...obj.Trendmicro && { Trendmicro: TrendmicroConnectorProfileCredentialsFilterSensitiveLog(obj.Trendmicro) },
  ...obj.Veeva && { Veeva: VeevaConnectorProfileCredentialsFilterSensitiveLog(obj.Veeva) },
  ...obj.Zendesk && { Zendesk: ZendeskConnectorProfileCredentialsFilterSensitiveLog(obj.Zendesk) },
  ...obj.SAPOData && { SAPOData: SAPODataConnectorProfileCredentialsFilterSensitiveLog(obj.SAPOData) },
  ...obj.CustomConnector && {
    CustomConnector: CustomConnectorProfileCredentialsFilterSensitiveLog(obj.CustomConnector)
  },
  ...obj.Pardot && { Pardot: PardotConnectorProfileCredentialsFilterSensitiveLog(obj.Pardot) }
}), "ConnectorProfileCredentialsFilterSensitiveLog");
var ConnectorProfileConfigFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.connectorProfileCredentials && {
    connectorProfileCredentials: ConnectorProfileCredentialsFilterSensitiveLog(obj.connectorProfileCredentials)
  }
}), "ConnectorProfileConfigFilterSensitiveLog");
var CreateConnectorProfileRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "CreateConnectorProfileRequestFilterSensitiveLog");
var UpdateConnectorProfileRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "UpdateConnectorProfileRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CancelFlowExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/cancel-flow-executions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      executionIds: (_) => (0, import_smithy_client._json)(_),
      flowName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelFlowExecutionsCommand");
var se_CreateConnectorProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/create-connector-profile");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      connectionMode: [],
      connectorLabel: [],
      connectorProfileConfig: (_) => (0, import_smithy_client._json)(_),
      connectorProfileName: [],
      connectorType: [],
      kmsArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateConnectorProfileCommand");
var se_CreateFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/create-flow");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      destinationFlowConfigList: (_) => (0, import_smithy_client._json)(_),
      flowName: [],
      kmsArn: [],
      metadataCatalogConfig: (_) => (0, import_smithy_client._json)(_),
      sourceFlowConfig: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      tasks: (_) => (0, import_smithy_client._json)(_),
      triggerConfig: (_) => se_TriggerConfig(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFlowCommand");
var se_DeleteConnectorProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/delete-connector-profile");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorProfileName: [],
      forceDelete: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteConnectorProfileCommand");
var se_DeleteFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/delete-flow");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      flowName: [],
      forceDelete: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteFlowCommand");
var se_DescribeConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describe-connector");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorLabel: [],
      connectorType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeConnectorCommand");
var se_DescribeConnectorEntityCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describe-connector-entity");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiVersion: [],
      connectorEntityName: [],
      connectorProfileName: [],
      connectorType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeConnectorEntityCommand");
var se_DescribeConnectorProfilesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describe-connector-profiles");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorLabel: [],
      connectorProfileNames: (_) => (0, import_smithy_client._json)(_),
      connectorType: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeConnectorProfilesCommand");
var se_DescribeConnectorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describe-connectors");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorTypes: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeConnectorsCommand");
var se_DescribeFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describe-flow");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      flowName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeFlowCommand");
var se_DescribeFlowExecutionRecordsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describe-flow-execution-records");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      flowName: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeFlowExecutionRecordsCommand");
var se_ListConnectorEntitiesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/list-connector-entities");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiVersion: [],
      connectorProfileName: [],
      connectorType: [],
      entitiesPath: [],
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListConnectorEntitiesCommand");
var se_ListConnectorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/list-connectors");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListConnectorsCommand");
var se_ListFlowsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/list-flows");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListFlowsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_RegisterConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/register-connector");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      connectorLabel: [],
      connectorProvisioningConfig: (_) => (0, import_smithy_client._json)(_),
      connectorProvisioningType: [],
      description: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RegisterConnectorCommand");
var se_ResetConnectorMetadataCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/reset-connector-metadata-cache");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      apiVersion: [],
      connectorEntityName: [],
      connectorProfileName: [],
      connectorType: [],
      entitiesPath: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ResetConnectorMetadataCacheCommand");
var se_StartFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/start-flow");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      flowName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartFlowCommand");
var se_StopFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/stop-flow");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      flowName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopFlowCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UnregisterConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/unregister-connector");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectorLabel: [],
      forceDelete: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UnregisterConnectorCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateConnectorProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/update-connector-profile");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      connectionMode: [],
      connectorProfileConfig: (_) => (0, import_smithy_client._json)(_),
      connectorProfileName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateConnectorProfileCommand");
var se_UpdateConnectorRegistrationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/update-connector-registration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      connectorLabel: [],
      connectorProvisioningConfig: (_) => (0, import_smithy_client._json)(_),
      description: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateConnectorRegistrationCommand");
var se_UpdateFlowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/update-flow");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      destinationFlowConfigList: (_) => (0, import_smithy_client._json)(_),
      flowName: [],
      metadataCatalogConfig: (_) => (0, import_smithy_client._json)(_),
      sourceFlowConfig: (_) => (0, import_smithy_client._json)(_),
      tasks: (_) => (0, import_smithy_client._json)(_),
      triggerConfig: (_) => se_TriggerConfig(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateFlowCommand");
var de_CancelFlowExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    invalidExecutions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelFlowExecutionsCommand");
var de_CreateConnectorProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorProfileArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateConnectorProfileCommand");
var de_CreateFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowArn: import_smithy_client.expectString,
    flowStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFlowCommand");
var de_DeleteConnectorProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteConnectorProfileCommand");
var de_DeleteFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteFlowCommand");
var de_DescribeConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorConfiguration: (_) => de_ConnectorConfiguration(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeConnectorCommand");
var de_DescribeConnectorEntityCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorEntityFields: (_) => de_ConnectorEntityFieldList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeConnectorEntityCommand");
var de_DescribeConnectorProfilesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorProfileDetails: (_) => de_ConnectorProfileDetailList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeConnectorProfilesCommand");
var de_DescribeConnectorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorConfigurations: (_) => de_ConnectorConfigurationsMap(_, context),
    connectors: (_) => de_ConnectorList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeConnectorsCommand");
var de_DescribeFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdBy: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    destinationFlowConfigList: import_smithy_client._json,
    flowArn: import_smithy_client.expectString,
    flowName: import_smithy_client.expectString,
    flowStatus: import_smithy_client.expectString,
    flowStatusMessage: import_smithy_client.expectString,
    kmsArn: import_smithy_client.expectString,
    lastRunExecutionDetails: (_) => de_ExecutionDetails(_, context),
    lastRunMetadataCatalogDetails: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedBy: import_smithy_client.expectString,
    metadataCatalogConfig: import_smithy_client._json,
    schemaVersion: import_smithy_client.expectLong,
    sourceFlowConfig: import_smithy_client._json,
    tags: import_smithy_client._json,
    tasks: import_smithy_client._json,
    triggerConfig: (_) => de_TriggerConfig(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeFlowCommand");
var de_DescribeFlowExecutionRecordsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowExecutions: (_) => de_FlowExecutionList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeFlowExecutionRecordsCommand");
var de_ListConnectorEntitiesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorEntityMap: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListConnectorEntitiesCommand");
var de_ListConnectorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectors: (_) => de_ConnectorList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListConnectorsCommand");
var de_ListFlowsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flows: (_) => de_FlowList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFlowsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_RegisterConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RegisterConnectorCommand");
var de_ResetConnectorMetadataCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_ResetConnectorMetadataCacheCommand");
var de_StartFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    executionId: import_smithy_client.expectString,
    flowArn: import_smithy_client.expectString,
    flowStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartFlowCommand");
var de_StopFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowArn: import_smithy_client.expectString,
    flowStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StopFlowCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UnregisterConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UnregisterConnectorCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateConnectorProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorProfileArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateConnectorProfileCommand");
var de_UpdateConnectorRegistrationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectorArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateConnectorRegistrationCommand");
var de_UpdateFlowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    flowStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateFlowCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.appflow#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.appflow#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.appflow#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.appflow#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.appflow#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.appflow#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ConnectorAuthenticationException":
    case "com.amazonaws.appflow#ConnectorAuthenticationException":
      throw await de_ConnectorAuthenticationExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.appflow#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ConnectorServerException":
    case "com.amazonaws.appflow#ConnectorServerException":
      throw await de_ConnectorServerExceptionRes(parsedOutput, context);
    case "UnsupportedOperationException":
    case "com.amazonaws.appflow#UnsupportedOperationException":
      throw await de_UnsupportedOperationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(AppflowServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ConnectorAuthenticationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConnectorAuthenticationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConnectorAuthenticationExceptionRes");
var de_ConnectorServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConnectorServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConnectorServerExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_UnsupportedOperationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnsupportedOperationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnsupportedOperationExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_ScheduledTriggerProperties = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    dataPullMode: [],
    firstExecutionFrom: (_) => Math.round(_.getTime() / 1e3),
    flowErrorDeactivationThreshold: [],
    scheduleEndTime: (_) => Math.round(_.getTime() / 1e3),
    scheduleExpression: [],
    scheduleOffset: [],
    scheduleStartTime: (_) => Math.round(_.getTime() / 1e3),
    timezone: []
  });
}, "se_ScheduledTriggerProperties");
var se_TriggerConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    triggerProperties: (_) => se_TriggerProperties(_, context),
    triggerType: []
  });
}, "se_TriggerConfig");
var se_TriggerProperties = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Scheduled: (_) => se_ScheduledTriggerProperties(_, context)
  });
}, "se_TriggerProperties");
var de_ConnectorConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    authenticationConfig: import_smithy_client._json,
    canUseAsDestination: import_smithy_client.expectBoolean,
    canUseAsSource: import_smithy_client.expectBoolean,
    connectorArn: import_smithy_client.expectString,
    connectorDescription: import_smithy_client.expectString,
    connectorLabel: import_smithy_client.expectString,
    connectorMetadata: import_smithy_client._json,
    connectorModes: import_smithy_client._json,
    connectorName: import_smithy_client.expectString,
    connectorOwner: import_smithy_client.expectString,
    connectorProvisioningConfig: import_smithy_client._json,
    connectorProvisioningType: import_smithy_client.expectString,
    connectorRuntimeSettings: import_smithy_client._json,
    connectorType: import_smithy_client.expectString,
    connectorVersion: import_smithy_client.expectString,
    isPrivateLinkEnabled: import_smithy_client.expectBoolean,
    isPrivateLinkEndpointUrlRequired: import_smithy_client.expectBoolean,
    logoURL: import_smithy_client.expectString,
    registeredAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    registeredBy: import_smithy_client.expectString,
    supportedApiVersions: import_smithy_client._json,
    supportedDataTransferApis: import_smithy_client._json,
    supportedDataTransferTypes: import_smithy_client._json,
    supportedDestinationConnectors: import_smithy_client._json,
    supportedOperators: import_smithy_client._json,
    supportedSchedulingFrequencies: import_smithy_client._json,
    supportedTriggerTypes: import_smithy_client._json,
    supportedWriteOperations: import_smithy_client._json
  });
}, "de_ConnectorConfiguration");
var de_ConnectorConfigurationsMap = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce(
    (acc, [key, value]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_ConnectorConfiguration(value, context);
      return acc;
    },
    {}
  );
}, "de_ConnectorConfigurationsMap");
var de_ConnectorDetail = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationType: import_smithy_client.expectString,
    connectorDescription: import_smithy_client.expectString,
    connectorLabel: import_smithy_client.expectString,
    connectorModes: import_smithy_client._json,
    connectorName: import_smithy_client.expectString,
    connectorOwner: import_smithy_client.expectString,
    connectorProvisioningType: import_smithy_client.expectString,
    connectorType: import_smithy_client.expectString,
    connectorVersion: import_smithy_client.expectString,
    registeredAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    registeredBy: import_smithy_client.expectString,
    supportedDataTransferTypes: import_smithy_client._json
  });
}, "de_ConnectorDetail");
var de_ConnectorEntityField = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    customProperties: import_smithy_client._json,
    defaultValue: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    destinationProperties: import_smithy_client._json,
    identifier: import_smithy_client.expectString,
    isDeprecated: import_smithy_client.expectBoolean,
    isPrimaryKey: import_smithy_client.expectBoolean,
    label: import_smithy_client.expectString,
    parentIdentifier: import_smithy_client.expectString,
    sourceProperties: import_smithy_client._json,
    supportedFieldTypeDetails: (_) => de_SupportedFieldTypeDetails(_, context)
  });
}, "de_ConnectorEntityField");
var de_ConnectorEntityFieldList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ConnectorEntityField(entry, context);
  });
  return retVal;
}, "de_ConnectorEntityFieldList");
var de_ConnectorList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ConnectorDetail(entry, context);
  });
  return retVal;
}, "de_ConnectorList");
var de_ConnectorProfile = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    connectionMode: import_smithy_client.expectString,
    connectorLabel: import_smithy_client.expectString,
    connectorProfileArn: import_smithy_client.expectString,
    connectorProfileName: import_smithy_client.expectString,
    connectorProfileProperties: import_smithy_client._json,
    connectorType: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    credentialsArn: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    privateConnectionProvisioningState: import_smithy_client._json
  });
}, "de_ConnectorProfile");
var de_ConnectorProfileDetailList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ConnectorProfile(entry, context);
  });
  return retVal;
}, "de_ConnectorProfileDetailList");
var de_ExecutionDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    mostRecentExecutionMessage: import_smithy_client.expectString,
    mostRecentExecutionStatus: import_smithy_client.expectString,
    mostRecentExecutionTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ExecutionDetails");
var de_ExecutionRecord = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataPullEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    dataPullStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    executionId: import_smithy_client.expectString,
    executionResult: import_smithy_client._json,
    executionStatus: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    metadataCatalogDetails: import_smithy_client._json,
    startedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ExecutionRecord");
var de_FieldTypeDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    fieldLengthRange: (_) => de_Range(_, context),
    fieldType: import_smithy_client.expectString,
    fieldValueRange: (_) => de_Range(_, context),
    filterOperators: import_smithy_client._json,
    supportedDateFormat: import_smithy_client.expectString,
    supportedValues: import_smithy_client._json,
    valueRegexPattern: import_smithy_client.expectString
  });
}, "de_FieldTypeDetails");
var de_FlowDefinition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdBy: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    destinationConnectorLabel: import_smithy_client.expectString,
    destinationConnectorType: import_smithy_client.expectString,
    flowArn: import_smithy_client.expectString,
    flowName: import_smithy_client.expectString,
    flowStatus: import_smithy_client.expectString,
    lastRunExecutionDetails: (_) => de_ExecutionDetails(_, context),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedBy: import_smithy_client.expectString,
    sourceConnectorLabel: import_smithy_client.expectString,
    sourceConnectorType: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    triggerType: import_smithy_client.expectString
  });
}, "de_FlowDefinition");
var de_FlowExecutionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ExecutionRecord(entry, context);
  });
  return retVal;
}, "de_FlowExecutionList");
var de_FlowList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FlowDefinition(entry, context);
  });
  return retVal;
}, "de_FlowList");
var de_Range = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    maximum: import_smithy_client.limitedParseDouble,
    minimum: import_smithy_client.limitedParseDouble
  });
}, "de_Range");
var de_ScheduledTriggerProperties = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataPullMode: import_smithy_client.expectString,
    firstExecutionFrom: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    flowErrorDeactivationThreshold: import_smithy_client.expectInt32,
    scheduleEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    scheduleExpression: import_smithy_client.expectString,
    scheduleOffset: import_smithy_client.expectLong,
    scheduleStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    timezone: import_smithy_client.expectString
  });
}, "de_ScheduledTriggerProperties");
var de_SupportedFieldTypeDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    v1: (_) => de_FieldTypeDetails(_, context)
  });
}, "de_SupportedFieldTypeDetails");
var de_TriggerConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    triggerProperties: (_) => de_TriggerProperties(_, context),
    triggerType: import_smithy_client.expectString
  });
}, "de_TriggerConfig");
var de_TriggerProperties = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Scheduled: (_) => de_ScheduledTriggerProperties(_, context)
  });
}, "de_TriggerProperties");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CancelFlowExecutionsCommand.ts
var _CancelFlowExecutionsCommand = class _CancelFlowExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "CancelFlowExecutions", {}).n("AppflowClient", "CancelFlowExecutionsCommand").f(void 0, void 0).ser(se_CancelFlowExecutionsCommand).de(de_CancelFlowExecutionsCommand).build() {
};
__name(_CancelFlowExecutionsCommand, "CancelFlowExecutionsCommand");
var CancelFlowExecutionsCommand = _CancelFlowExecutionsCommand;

// src/commands/CreateConnectorProfileCommand.ts




var _CreateConnectorProfileCommand = class _CreateConnectorProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "CreateConnectorProfile", {}).n("AppflowClient", "CreateConnectorProfileCommand").f(CreateConnectorProfileRequestFilterSensitiveLog, void 0).ser(se_CreateConnectorProfileCommand).de(de_CreateConnectorProfileCommand).build() {
};
__name(_CreateConnectorProfileCommand, "CreateConnectorProfileCommand");
var CreateConnectorProfileCommand = _CreateConnectorProfileCommand;

// src/commands/CreateFlowCommand.ts




var _CreateFlowCommand = class _CreateFlowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "CreateFlow", {}).n("AppflowClient", "CreateFlowCommand").f(void 0, void 0).ser(se_CreateFlowCommand).de(de_CreateFlowCommand).build() {
};
__name(_CreateFlowCommand, "CreateFlowCommand");
var CreateFlowCommand = _CreateFlowCommand;

// src/commands/DeleteConnectorProfileCommand.ts




var _DeleteConnectorProfileCommand = class _DeleteConnectorProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DeleteConnectorProfile", {}).n("AppflowClient", "DeleteConnectorProfileCommand").f(void 0, void 0).ser(se_DeleteConnectorProfileCommand).de(de_DeleteConnectorProfileCommand).build() {
};
__name(_DeleteConnectorProfileCommand, "DeleteConnectorProfileCommand");
var DeleteConnectorProfileCommand = _DeleteConnectorProfileCommand;

// src/commands/DeleteFlowCommand.ts




var _DeleteFlowCommand = class _DeleteFlowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DeleteFlow", {}).n("AppflowClient", "DeleteFlowCommand").f(void 0, void 0).ser(se_DeleteFlowCommand).de(de_DeleteFlowCommand).build() {
};
__name(_DeleteFlowCommand, "DeleteFlowCommand");
var DeleteFlowCommand = _DeleteFlowCommand;

// src/commands/DescribeConnectorCommand.ts




var _DescribeConnectorCommand = class _DescribeConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DescribeConnector", {}).n("AppflowClient", "DescribeConnectorCommand").f(void 0, void 0).ser(se_DescribeConnectorCommand).de(de_DescribeConnectorCommand).build() {
};
__name(_DescribeConnectorCommand, "DescribeConnectorCommand");
var DescribeConnectorCommand = _DescribeConnectorCommand;

// src/commands/DescribeConnectorEntityCommand.ts




var _DescribeConnectorEntityCommand = class _DescribeConnectorEntityCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DescribeConnectorEntity", {}).n("AppflowClient", "DescribeConnectorEntityCommand").f(void 0, void 0).ser(se_DescribeConnectorEntityCommand).de(de_DescribeConnectorEntityCommand).build() {
};
__name(_DescribeConnectorEntityCommand, "DescribeConnectorEntityCommand");
var DescribeConnectorEntityCommand = _DescribeConnectorEntityCommand;

// src/commands/DescribeConnectorProfilesCommand.ts




var _DescribeConnectorProfilesCommand = class _DescribeConnectorProfilesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DescribeConnectorProfiles", {}).n("AppflowClient", "DescribeConnectorProfilesCommand").f(void 0, void 0).ser(se_DescribeConnectorProfilesCommand).de(de_DescribeConnectorProfilesCommand).build() {
};
__name(_DescribeConnectorProfilesCommand, "DescribeConnectorProfilesCommand");
var DescribeConnectorProfilesCommand = _DescribeConnectorProfilesCommand;

// src/commands/DescribeConnectorsCommand.ts




var _DescribeConnectorsCommand = class _DescribeConnectorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DescribeConnectors", {}).n("AppflowClient", "DescribeConnectorsCommand").f(void 0, void 0).ser(se_DescribeConnectorsCommand).de(de_DescribeConnectorsCommand).build() {
};
__name(_DescribeConnectorsCommand, "DescribeConnectorsCommand");
var DescribeConnectorsCommand = _DescribeConnectorsCommand;

// src/commands/DescribeFlowCommand.ts




var _DescribeFlowCommand = class _DescribeFlowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DescribeFlow", {}).n("AppflowClient", "DescribeFlowCommand").f(void 0, void 0).ser(se_DescribeFlowCommand).de(de_DescribeFlowCommand).build() {
};
__name(_DescribeFlowCommand, "DescribeFlowCommand");
var DescribeFlowCommand = _DescribeFlowCommand;

// src/commands/DescribeFlowExecutionRecordsCommand.ts




var _DescribeFlowExecutionRecordsCommand = class _DescribeFlowExecutionRecordsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "DescribeFlowExecutionRecords", {}).n("AppflowClient", "DescribeFlowExecutionRecordsCommand").f(void 0, void 0).ser(se_DescribeFlowExecutionRecordsCommand).de(de_DescribeFlowExecutionRecordsCommand).build() {
};
__name(_DescribeFlowExecutionRecordsCommand, "DescribeFlowExecutionRecordsCommand");
var DescribeFlowExecutionRecordsCommand = _DescribeFlowExecutionRecordsCommand;

// src/commands/ListConnectorEntitiesCommand.ts




var _ListConnectorEntitiesCommand = class _ListConnectorEntitiesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "ListConnectorEntities", {}).n("AppflowClient", "ListConnectorEntitiesCommand").f(void 0, void 0).ser(se_ListConnectorEntitiesCommand).de(de_ListConnectorEntitiesCommand).build() {
};
__name(_ListConnectorEntitiesCommand, "ListConnectorEntitiesCommand");
var ListConnectorEntitiesCommand = _ListConnectorEntitiesCommand;

// src/commands/ListConnectorsCommand.ts




var _ListConnectorsCommand = class _ListConnectorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "ListConnectors", {}).n("AppflowClient", "ListConnectorsCommand").f(void 0, void 0).ser(se_ListConnectorsCommand).de(de_ListConnectorsCommand).build() {
};
__name(_ListConnectorsCommand, "ListConnectorsCommand");
var ListConnectorsCommand = _ListConnectorsCommand;

// src/commands/ListFlowsCommand.ts




var _ListFlowsCommand = class _ListFlowsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "ListFlows", {}).n("AppflowClient", "ListFlowsCommand").f(void 0, void 0).ser(se_ListFlowsCommand).de(de_ListFlowsCommand).build() {
};
__name(_ListFlowsCommand, "ListFlowsCommand");
var ListFlowsCommand = _ListFlowsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "ListTagsForResource", {}).n("AppflowClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/RegisterConnectorCommand.ts




var _RegisterConnectorCommand = class _RegisterConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "RegisterConnector", {}).n("AppflowClient", "RegisterConnectorCommand").f(void 0, void 0).ser(se_RegisterConnectorCommand).de(de_RegisterConnectorCommand).build() {
};
__name(_RegisterConnectorCommand, "RegisterConnectorCommand");
var RegisterConnectorCommand = _RegisterConnectorCommand;

// src/commands/ResetConnectorMetadataCacheCommand.ts




var _ResetConnectorMetadataCacheCommand = class _ResetConnectorMetadataCacheCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "ResetConnectorMetadataCache", {}).n("AppflowClient", "ResetConnectorMetadataCacheCommand").f(void 0, void 0).ser(se_ResetConnectorMetadataCacheCommand).de(de_ResetConnectorMetadataCacheCommand).build() {
};
__name(_ResetConnectorMetadataCacheCommand, "ResetConnectorMetadataCacheCommand");
var ResetConnectorMetadataCacheCommand = _ResetConnectorMetadataCacheCommand;

// src/commands/StartFlowCommand.ts




var _StartFlowCommand = class _StartFlowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "StartFlow", {}).n("AppflowClient", "StartFlowCommand").f(void 0, void 0).ser(se_StartFlowCommand).de(de_StartFlowCommand).build() {
};
__name(_StartFlowCommand, "StartFlowCommand");
var StartFlowCommand = _StartFlowCommand;

// src/commands/StopFlowCommand.ts




var _StopFlowCommand = class _StopFlowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "StopFlow", {}).n("AppflowClient", "StopFlowCommand").f(void 0, void 0).ser(se_StopFlowCommand).de(de_StopFlowCommand).build() {
};
__name(_StopFlowCommand, "StopFlowCommand");
var StopFlowCommand = _StopFlowCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "TagResource", {}).n("AppflowClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UnregisterConnectorCommand.ts




var _UnregisterConnectorCommand = class _UnregisterConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "UnregisterConnector", {}).n("AppflowClient", "UnregisterConnectorCommand").f(void 0, void 0).ser(se_UnregisterConnectorCommand).de(de_UnregisterConnectorCommand).build() {
};
__name(_UnregisterConnectorCommand, "UnregisterConnectorCommand");
var UnregisterConnectorCommand = _UnregisterConnectorCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "UntagResource", {}).n("AppflowClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateConnectorProfileCommand.ts




var _UpdateConnectorProfileCommand = class _UpdateConnectorProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "UpdateConnectorProfile", {}).n("AppflowClient", "UpdateConnectorProfileCommand").f(UpdateConnectorProfileRequestFilterSensitiveLog, void 0).ser(se_UpdateConnectorProfileCommand).de(de_UpdateConnectorProfileCommand).build() {
};
__name(_UpdateConnectorProfileCommand, "UpdateConnectorProfileCommand");
var UpdateConnectorProfileCommand = _UpdateConnectorProfileCommand;

// src/commands/UpdateConnectorRegistrationCommand.ts




var _UpdateConnectorRegistrationCommand = class _UpdateConnectorRegistrationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "UpdateConnectorRegistration", {}).n("AppflowClient", "UpdateConnectorRegistrationCommand").f(void 0, void 0).ser(se_UpdateConnectorRegistrationCommand).de(de_UpdateConnectorRegistrationCommand).build() {
};
__name(_UpdateConnectorRegistrationCommand, "UpdateConnectorRegistrationCommand");
var UpdateConnectorRegistrationCommand = _UpdateConnectorRegistrationCommand;

// src/commands/UpdateFlowCommand.ts




var _UpdateFlowCommand = class _UpdateFlowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("SandstoneConfigurationServiceLambda", "UpdateFlow", {}).n("AppflowClient", "UpdateFlowCommand").f(void 0, void 0).ser(se_UpdateFlowCommand).de(de_UpdateFlowCommand).build() {
};
__name(_UpdateFlowCommand, "UpdateFlowCommand");
var UpdateFlowCommand = _UpdateFlowCommand;

// src/Appflow.ts
var commands = {
  CancelFlowExecutionsCommand,
  CreateConnectorProfileCommand,
  CreateFlowCommand,
  DeleteConnectorProfileCommand,
  DeleteFlowCommand,
  DescribeConnectorCommand,
  DescribeConnectorEntityCommand,
  DescribeConnectorProfilesCommand,
  DescribeConnectorsCommand,
  DescribeFlowCommand,
  DescribeFlowExecutionRecordsCommand,
  ListConnectorEntitiesCommand,
  ListConnectorsCommand,
  ListFlowsCommand,
  ListTagsForResourceCommand,
  RegisterConnectorCommand,
  ResetConnectorMetadataCacheCommand,
  StartFlowCommand,
  StopFlowCommand,
  TagResourceCommand,
  UnregisterConnectorCommand,
  UntagResourceCommand,
  UpdateConnectorProfileCommand,
  UpdateConnectorRegistrationCommand,
  UpdateFlowCommand
};
var _Appflow = class _Appflow extends AppflowClient {
};
__name(_Appflow, "Appflow");
var Appflow = _Appflow;
(0, import_smithy_client.createAggregatedClient)(commands, Appflow);

// src/pagination/DescribeConnectorProfilesPaginator.ts

var paginateDescribeConnectorProfiles = (0, import_core.createPaginator)(AppflowClient, DescribeConnectorProfilesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeConnectorsPaginator.ts

var paginateDescribeConnectors = (0, import_core.createPaginator)(AppflowClient, DescribeConnectorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/DescribeFlowExecutionRecordsPaginator.ts

var paginateDescribeFlowExecutionRecords = (0, import_core.createPaginator)(AppflowClient, DescribeFlowExecutionRecordsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListConnectorsPaginator.ts

var paginateListConnectors = (0, import_core.createPaginator)(AppflowClient, ListConnectorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFlowsPaginator.ts

var paginateListFlows = (0, import_core.createPaginator)(AppflowClient, ListFlowsCommand, "nextToken", "nextToken", "maxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  AppflowServiceException,
  __Client,
  AppflowClient,
  Appflow,
  $Command,
  CancelFlowExecutionsCommand,
  CreateConnectorProfileCommand,
  CreateFlowCommand,
  DeleteConnectorProfileCommand,
  DeleteFlowCommand,
  DescribeConnectorCommand,
  DescribeConnectorEntityCommand,
  DescribeConnectorProfilesCommand,
  DescribeConnectorsCommand,
  DescribeFlowCommand,
  DescribeFlowExecutionRecordsCommand,
  ListConnectorEntitiesCommand,
  ListConnectorsCommand,
  ListFlowsCommand,
  ListTagsForResourceCommand,
  RegisterConnectorCommand,
  ResetConnectorMetadataCacheCommand,
  StartFlowCommand,
  StopFlowCommand,
  TagResourceCommand,
  UnregisterConnectorCommand,
  UntagResourceCommand,
  UpdateConnectorProfileCommand,
  UpdateConnectorRegistrationCommand,
  UpdateFlowCommand,
  paginateDescribeConnectorProfiles,
  paginateDescribeConnectors,
  paginateDescribeFlowExecutionRecords,
  paginateListConnectors,
  paginateListFlows,
  AccessDeniedException,
  AggregationType,
  AmplitudeConnectorOperator,
  OAuth2CustomPropType,
  OAuth2GrantType,
  AuthenticationType,
  InternalServerException,
  ResourceNotFoundException,
  ThrottlingException,
  ValidationException,
  CatalogType,
  ConflictException,
  ConnectionMode,
  ConnectorAuthenticationException,
  SalesforceDataTransferApi,
  ConnectorProvisioningType,
  ConnectorType,
  DataTransferApiType,
  SupportedDataTransferType,
  Operators,
  ScheduleFrequencyType,
  TriggerType,
  WriteOperationType,
  Operator,
  DatadogConnectorOperator,
  DynatraceConnectorOperator,
  GoogleAnalyticsConnectorOperator,
  InforNexusConnectorOperator,
  MarketoConnectorOperator,
  PardotConnectorOperator,
  S3ConnectorOperator,
  SalesforceConnectorOperator,
  SAPODataConnectorOperator,
  ServiceNowConnectorOperator,
  SingularConnectorOperator,
  SlackConnectorOperator,
  TrendmicroConnectorOperator,
  VeevaConnectorOperator,
  ZendeskConnectorOperator,
  PrivateConnectionProvisioningFailureCause,
  PrivateConnectionProvisioningStatus,
  ConnectorServerException,
  ServiceQuotaExceededException,
  FileType,
  PathPrefix,
  PrefixFormat,
  PrefixType,
  S3InputFileType,
  OperatorPropertiesKeys,
  TaskType,
  DataPullMode,
  FlowStatus,
  ExecutionStatus,
  UnsupportedOperationException,
  AmplitudeConnectorProfileCredentialsFilterSensitiveLog,
  ApiKeyCredentialsFilterSensitiveLog,
  BasicAuthCredentialsFilterSensitiveLog,
  CustomAuthCredentialsFilterSensitiveLog,
  OAuth2CredentialsFilterSensitiveLog,
  CustomConnectorProfileCredentialsFilterSensitiveLog,
  DatadogConnectorProfileCredentialsFilterSensitiveLog,
  GoogleAnalyticsConnectorProfileCredentialsFilterSensitiveLog,
  HoneycodeConnectorProfileCredentialsFilterSensitiveLog,
  InforNexusConnectorProfileCredentialsFilterSensitiveLog,
  MarketoConnectorProfileCredentialsFilterSensitiveLog,
  PardotConnectorProfileCredentialsFilterSensitiveLog,
  RedshiftConnectorProfileCredentialsFilterSensitiveLog,
  SalesforceConnectorProfileCredentialsFilterSensitiveLog,
  OAuthCredentialsFilterSensitiveLog,
  SAPODataConnectorProfileCredentialsFilterSensitiveLog,
  ServiceNowConnectorProfileCredentialsFilterSensitiveLog,
  SingularConnectorProfileCredentialsFilterSensitiveLog,
  SlackConnectorProfileCredentialsFilterSensitiveLog,
  SnowflakeConnectorProfileCredentialsFilterSensitiveLog,
  TrendmicroConnectorProfileCredentialsFilterSensitiveLog,
  VeevaConnectorProfileCredentialsFilterSensitiveLog,
  ZendeskConnectorProfileCredentialsFilterSensitiveLog,
  ConnectorProfileCredentialsFilterSensitiveLog,
  ConnectorProfileConfigFilterSensitiveLog,
  CreateConnectorProfileRequestFilterSensitiveLog,
  UpdateConnectorProfileRequestFilterSensitiveLog
});

