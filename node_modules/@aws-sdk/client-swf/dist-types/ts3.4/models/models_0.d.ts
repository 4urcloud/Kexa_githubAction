import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { SWFServiceException as __BaseException } from "./SWFServiceException";
export interface ActivityType {
  name: string | undefined;
  version: string | undefined;
}
export interface WorkflowExecution {
  workflowId: string | undefined;
  runId: string | undefined;
}
export interface ActivityTask {
  taskToken: string | undefined;
  activityId: string | undefined;
  startedEventId: number | undefined;
  workflowExecution: WorkflowExecution | undefined;
  activityType: ActivityType | undefined;
  input?: string;
}
export interface ActivityTaskCanceledEventAttributes {
  details?: string;
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
  latestCancelRequestedEventId?: number;
}
export interface ActivityTaskCancelRequestedEventAttributes {
  decisionTaskCompletedEventId: number | undefined;
  activityId: string | undefined;
}
export interface ActivityTaskCompletedEventAttributes {
  result?: string;
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
}
export interface ActivityTaskFailedEventAttributes {
  reason?: string;
  details?: string;
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
}
export interface TaskList {
  name: string | undefined;
}
export interface ActivityTaskScheduledEventAttributes {
  activityType: ActivityType | undefined;
  activityId: string | undefined;
  input?: string;
  control?: string;
  scheduleToStartTimeout?: string;
  scheduleToCloseTimeout?: string;
  startToCloseTimeout?: string;
  taskList: TaskList | undefined;
  taskPriority?: string;
  decisionTaskCompletedEventId: number | undefined;
  heartbeatTimeout?: string;
}
export interface ActivityTaskStartedEventAttributes {
  identity?: string;
  scheduledEventId: number | undefined;
}
export interface ActivityTaskStatus {
  cancelRequested: boolean | undefined;
}
export declare const ActivityTaskTimeoutType: {
  readonly HEARTBEAT: "HEARTBEAT";
  readonly SCHEDULE_TO_CLOSE: "SCHEDULE_TO_CLOSE";
  readonly SCHEDULE_TO_START: "SCHEDULE_TO_START";
  readonly START_TO_CLOSE: "START_TO_CLOSE";
};
export type ActivityTaskTimeoutType =
  (typeof ActivityTaskTimeoutType)[keyof typeof ActivityTaskTimeoutType];
export interface ActivityTaskTimedOutEventAttributes {
  timeoutType: ActivityTaskTimeoutType | undefined;
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
  details?: string;
}
export interface ActivityTypeConfiguration {
  defaultTaskStartToCloseTimeout?: string;
  defaultTaskHeartbeatTimeout?: string;
  defaultTaskList?: TaskList;
  defaultTaskPriority?: string;
  defaultTaskScheduleToStartTimeout?: string;
  defaultTaskScheduleToCloseTimeout?: string;
}
export declare const RegistrationStatus: {
  readonly DEPRECATED: "DEPRECATED";
  readonly REGISTERED: "REGISTERED";
};
export type RegistrationStatus =
  (typeof RegistrationStatus)[keyof typeof RegistrationStatus];
export interface ActivityTypeInfo {
  activityType: ActivityType | undefined;
  status: RegistrationStatus | undefined;
  description?: string;
  creationDate: Date | undefined;
  deprecationDate?: Date;
}
export interface ActivityTypeDetail {
  typeInfo: ActivityTypeInfo | undefined;
  configuration: ActivityTypeConfiguration | undefined;
}
export interface ActivityTypeInfos {
  typeInfos: ActivityTypeInfo[] | undefined;
  nextPageToken?: string;
}
export interface CancelTimerDecisionAttributes {
  timerId: string | undefined;
}
export declare const CancelTimerFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly TIMER_ID_UNKNOWN: "TIMER_ID_UNKNOWN";
};
export type CancelTimerFailedCause =
  (typeof CancelTimerFailedCause)[keyof typeof CancelTimerFailedCause];
export interface CancelTimerFailedEventAttributes {
  timerId: string | undefined;
  cause: CancelTimerFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface CancelWorkflowExecutionDecisionAttributes {
  details?: string;
}
export declare const CancelWorkflowExecutionFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly UNHANDLED_DECISION: "UNHANDLED_DECISION";
};
export type CancelWorkflowExecutionFailedCause =
  (typeof CancelWorkflowExecutionFailedCause)[keyof typeof CancelWorkflowExecutionFailedCause];
export interface CancelWorkflowExecutionFailedEventAttributes {
  cause: CancelWorkflowExecutionFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const ChildPolicy: {
  readonly ABANDON: "ABANDON";
  readonly REQUEST_CANCEL: "REQUEST_CANCEL";
  readonly TERMINATE: "TERMINATE";
};
export type ChildPolicy = (typeof ChildPolicy)[keyof typeof ChildPolicy];
export interface WorkflowType {
  name: string | undefined;
  version: string | undefined;
}
export interface ChildWorkflowExecutionCanceledEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  details?: string;
  initiatedEventId: number | undefined;
  startedEventId: number | undefined;
}
export interface ChildWorkflowExecutionCompletedEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  result?: string;
  initiatedEventId: number | undefined;
  startedEventId: number | undefined;
}
export interface ChildWorkflowExecutionFailedEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  reason?: string;
  details?: string;
  initiatedEventId: number | undefined;
  startedEventId: number | undefined;
}
export interface ChildWorkflowExecutionStartedEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  initiatedEventId: number | undefined;
}
export interface ChildWorkflowExecutionTerminatedEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  initiatedEventId: number | undefined;
  startedEventId: number | undefined;
}
export declare const WorkflowExecutionTimeoutType: {
  readonly START_TO_CLOSE: "START_TO_CLOSE";
};
export type WorkflowExecutionTimeoutType =
  (typeof WorkflowExecutionTimeoutType)[keyof typeof WorkflowExecutionTimeoutType];
export interface ChildWorkflowExecutionTimedOutEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  timeoutType: WorkflowExecutionTimeoutType | undefined;
  initiatedEventId: number | undefined;
  startedEventId: number | undefined;
}
export declare const CloseStatus: {
  readonly CANCELED: "CANCELED";
  readonly COMPLETED: "COMPLETED";
  readonly CONTINUED_AS_NEW: "CONTINUED_AS_NEW";
  readonly FAILED: "FAILED";
  readonly TERMINATED: "TERMINATED";
  readonly TIMED_OUT: "TIMED_OUT";
};
export type CloseStatus = (typeof CloseStatus)[keyof typeof CloseStatus];
export interface CloseStatusFilter {
  status: CloseStatus | undefined;
}
export interface CompleteWorkflowExecutionDecisionAttributes {
  result?: string;
}
export declare const CompleteWorkflowExecutionFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly UNHANDLED_DECISION: "UNHANDLED_DECISION";
};
export type CompleteWorkflowExecutionFailedCause =
  (typeof CompleteWorkflowExecutionFailedCause)[keyof typeof CompleteWorkflowExecutionFailedCause];
export interface CompleteWorkflowExecutionFailedEventAttributes {
  cause: CompleteWorkflowExecutionFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface ContinueAsNewWorkflowExecutionDecisionAttributes {
  input?: string;
  executionStartToCloseTimeout?: string;
  taskList?: TaskList;
  taskPriority?: string;
  taskStartToCloseTimeout?: string;
  childPolicy?: ChildPolicy;
  tagList?: string[];
  workflowTypeVersion?: string;
  lambdaRole?: string;
}
export declare const ContinueAsNewWorkflowExecutionFailedCause: {
  readonly CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED: "CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED";
  readonly DEFAULT_CHILD_POLICY_UNDEFINED: "DEFAULT_CHILD_POLICY_UNDEFINED";
  readonly DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED: "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED";
  readonly DEFAULT_TASK_LIST_UNDEFINED: "DEFAULT_TASK_LIST_UNDEFINED";
  readonly DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED: "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED";
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly UNHANDLED_DECISION: "UNHANDLED_DECISION";
  readonly WORKFLOW_TYPE_DEPRECATED: "WORKFLOW_TYPE_DEPRECATED";
  readonly WORKFLOW_TYPE_DOES_NOT_EXIST: "WORKFLOW_TYPE_DOES_NOT_EXIST";
};
export type ContinueAsNewWorkflowExecutionFailedCause =
  (typeof ContinueAsNewWorkflowExecutionFailedCause)[keyof typeof ContinueAsNewWorkflowExecutionFailedCause];
export interface ContinueAsNewWorkflowExecutionFailedEventAttributes {
  cause: ContinueAsNewWorkflowExecutionFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface ExecutionTimeFilter {
  oldestDate: Date | undefined;
  latestDate?: Date;
}
export interface WorkflowExecutionFilter {
  workflowId: string | undefined;
}
export interface TagFilter {
  tag: string | undefined;
}
export interface WorkflowTypeFilter {
  name: string | undefined;
  version?: string;
}
export interface CountClosedWorkflowExecutionsInput {
  domain: string | undefined;
  startTimeFilter?: ExecutionTimeFilter;
  closeTimeFilter?: ExecutionTimeFilter;
  executionFilter?: WorkflowExecutionFilter;
  typeFilter?: WorkflowTypeFilter;
  tagFilter?: TagFilter;
  closeStatusFilter?: CloseStatusFilter;
}
export declare class OperationNotPermittedFault extends __BaseException {
  readonly name: "OperationNotPermittedFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<OperationNotPermittedFault, __BaseException>
  );
}
export declare class UnknownResourceFault extends __BaseException {
  readonly name: "UnknownResourceFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnknownResourceFault, __BaseException>
  );
}
export interface WorkflowExecutionCount {
  count: number | undefined;
  truncated?: boolean;
}
export interface CountOpenWorkflowExecutionsInput {
  domain: string | undefined;
  startTimeFilter: ExecutionTimeFilter | undefined;
  typeFilter?: WorkflowTypeFilter;
  tagFilter?: TagFilter;
  executionFilter?: WorkflowExecutionFilter;
}
export interface CountPendingActivityTasksInput {
  domain: string | undefined;
  taskList: TaskList | undefined;
}
export interface PendingTaskCount {
  count: number | undefined;
  truncated?: boolean;
}
export interface CountPendingDecisionTasksInput {
  domain: string | undefined;
  taskList: TaskList | undefined;
}
export declare const DecisionType: {
  readonly CancelTimer: "CancelTimer";
  readonly CancelWorkflowExecution: "CancelWorkflowExecution";
  readonly CompleteWorkflowExecution: "CompleteWorkflowExecution";
  readonly ContinueAsNewWorkflowExecution: "ContinueAsNewWorkflowExecution";
  readonly FailWorkflowExecution: "FailWorkflowExecution";
  readonly RecordMarker: "RecordMarker";
  readonly RequestCancelActivityTask: "RequestCancelActivityTask";
  readonly RequestCancelExternalWorkflowExecution: "RequestCancelExternalWorkflowExecution";
  readonly ScheduleActivityTask: "ScheduleActivityTask";
  readonly ScheduleLambdaFunction: "ScheduleLambdaFunction";
  readonly SignalExternalWorkflowExecution: "SignalExternalWorkflowExecution";
  readonly StartChildWorkflowExecution: "StartChildWorkflowExecution";
  readonly StartTimer: "StartTimer";
};
export type DecisionType = (typeof DecisionType)[keyof typeof DecisionType];
export interface FailWorkflowExecutionDecisionAttributes {
  reason?: string;
  details?: string;
}
export interface RecordMarkerDecisionAttributes {
  markerName: string | undefined;
  details?: string;
}
export interface RequestCancelActivityTaskDecisionAttributes {
  activityId: string | undefined;
}
export interface RequestCancelExternalWorkflowExecutionDecisionAttributes {
  workflowId: string | undefined;
  runId?: string;
  control?: string;
}
export interface ScheduleActivityTaskDecisionAttributes {
  activityType: ActivityType | undefined;
  activityId: string | undefined;
  control?: string;
  input?: string;
  scheduleToCloseTimeout?: string;
  taskList?: TaskList;
  taskPriority?: string;
  scheduleToStartTimeout?: string;
  startToCloseTimeout?: string;
  heartbeatTimeout?: string;
}
export interface ScheduleLambdaFunctionDecisionAttributes {
  id: string | undefined;
  name: string | undefined;
  control?: string;
  input?: string;
  startToCloseTimeout?: string;
}
export interface SignalExternalWorkflowExecutionDecisionAttributes {
  workflowId: string | undefined;
  runId?: string;
  signalName: string | undefined;
  input?: string;
  control?: string;
}
export interface StartChildWorkflowExecutionDecisionAttributes {
  workflowType: WorkflowType | undefined;
  workflowId: string | undefined;
  control?: string;
  input?: string;
  executionStartToCloseTimeout?: string;
  taskList?: TaskList;
  taskPriority?: string;
  taskStartToCloseTimeout?: string;
  childPolicy?: ChildPolicy;
  tagList?: string[];
  lambdaRole?: string;
}
export interface StartTimerDecisionAttributes {
  timerId: string | undefined;
  control?: string;
  startToFireTimeout: string | undefined;
}
export interface Decision {
  decisionType: DecisionType | undefined;
  scheduleActivityTaskDecisionAttributes?: ScheduleActivityTaskDecisionAttributes;
  requestCancelActivityTaskDecisionAttributes?: RequestCancelActivityTaskDecisionAttributes;
  completeWorkflowExecutionDecisionAttributes?: CompleteWorkflowExecutionDecisionAttributes;
  failWorkflowExecutionDecisionAttributes?: FailWorkflowExecutionDecisionAttributes;
  cancelWorkflowExecutionDecisionAttributes?: CancelWorkflowExecutionDecisionAttributes;
  continueAsNewWorkflowExecutionDecisionAttributes?: ContinueAsNewWorkflowExecutionDecisionAttributes;
  recordMarkerDecisionAttributes?: RecordMarkerDecisionAttributes;
  startTimerDecisionAttributes?: StartTimerDecisionAttributes;
  cancelTimerDecisionAttributes?: CancelTimerDecisionAttributes;
  signalExternalWorkflowExecutionDecisionAttributes?: SignalExternalWorkflowExecutionDecisionAttributes;
  requestCancelExternalWorkflowExecutionDecisionAttributes?: RequestCancelExternalWorkflowExecutionDecisionAttributes;
  startChildWorkflowExecutionDecisionAttributes?: StartChildWorkflowExecutionDecisionAttributes;
  scheduleLambdaFunctionDecisionAttributes?: ScheduleLambdaFunctionDecisionAttributes;
}
export interface DecisionTaskCompletedEventAttributes {
  executionContext?: string;
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
  taskList?: TaskList;
  taskListScheduleToStartTimeout?: string;
}
export interface DecisionTaskScheduledEventAttributes {
  taskList: TaskList | undefined;
  taskPriority?: string;
  startToCloseTimeout?: string;
  scheduleToStartTimeout?: string;
}
export interface DecisionTaskStartedEventAttributes {
  identity?: string;
  scheduledEventId: number | undefined;
}
export declare const DecisionTaskTimeoutType: {
  readonly SCHEDULE_TO_START: "SCHEDULE_TO_START";
  readonly START_TO_CLOSE: "START_TO_CLOSE";
};
export type DecisionTaskTimeoutType =
  (typeof DecisionTaskTimeoutType)[keyof typeof DecisionTaskTimeoutType];
export interface DecisionTaskTimedOutEventAttributes {
  timeoutType: DecisionTaskTimeoutType | undefined;
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
}
export declare const EventType: {
  readonly ActivityTaskCancelRequested: "ActivityTaskCancelRequested";
  readonly ActivityTaskCanceled: "ActivityTaskCanceled";
  readonly ActivityTaskCompleted: "ActivityTaskCompleted";
  readonly ActivityTaskFailed: "ActivityTaskFailed";
  readonly ActivityTaskScheduled: "ActivityTaskScheduled";
  readonly ActivityTaskStarted: "ActivityTaskStarted";
  readonly ActivityTaskTimedOut: "ActivityTaskTimedOut";
  readonly CancelTimerFailed: "CancelTimerFailed";
  readonly CancelWorkflowExecutionFailed: "CancelWorkflowExecutionFailed";
  readonly ChildWorkflowExecutionCanceled: "ChildWorkflowExecutionCanceled";
  readonly ChildWorkflowExecutionCompleted: "ChildWorkflowExecutionCompleted";
  readonly ChildWorkflowExecutionFailed: "ChildWorkflowExecutionFailed";
  readonly ChildWorkflowExecutionStarted: "ChildWorkflowExecutionStarted";
  readonly ChildWorkflowExecutionTerminated: "ChildWorkflowExecutionTerminated";
  readonly ChildWorkflowExecutionTimedOut: "ChildWorkflowExecutionTimedOut";
  readonly CompleteWorkflowExecutionFailed: "CompleteWorkflowExecutionFailed";
  readonly ContinueAsNewWorkflowExecutionFailed: "ContinueAsNewWorkflowExecutionFailed";
  readonly DecisionTaskCompleted: "DecisionTaskCompleted";
  readonly DecisionTaskScheduled: "DecisionTaskScheduled";
  readonly DecisionTaskStarted: "DecisionTaskStarted";
  readonly DecisionTaskTimedOut: "DecisionTaskTimedOut";
  readonly ExternalWorkflowExecutionCancelRequested: "ExternalWorkflowExecutionCancelRequested";
  readonly ExternalWorkflowExecutionSignaled: "ExternalWorkflowExecutionSignaled";
  readonly FailWorkflowExecutionFailed: "FailWorkflowExecutionFailed";
  readonly LambdaFunctionCompleted: "LambdaFunctionCompleted";
  readonly LambdaFunctionFailed: "LambdaFunctionFailed";
  readonly LambdaFunctionScheduled: "LambdaFunctionScheduled";
  readonly LambdaFunctionStarted: "LambdaFunctionStarted";
  readonly LambdaFunctionTimedOut: "LambdaFunctionTimedOut";
  readonly MarkerRecorded: "MarkerRecorded";
  readonly RecordMarkerFailed: "RecordMarkerFailed";
  readonly RequestCancelActivityTaskFailed: "RequestCancelActivityTaskFailed";
  readonly RequestCancelExternalWorkflowExecutionFailed: "RequestCancelExternalWorkflowExecutionFailed";
  readonly RequestCancelExternalWorkflowExecutionInitiated: "RequestCancelExternalWorkflowExecutionInitiated";
  readonly ScheduleActivityTaskFailed: "ScheduleActivityTaskFailed";
  readonly ScheduleLambdaFunctionFailed: "ScheduleLambdaFunctionFailed";
  readonly SignalExternalWorkflowExecutionFailed: "SignalExternalWorkflowExecutionFailed";
  readonly SignalExternalWorkflowExecutionInitiated: "SignalExternalWorkflowExecutionInitiated";
  readonly StartChildWorkflowExecutionFailed: "StartChildWorkflowExecutionFailed";
  readonly StartChildWorkflowExecutionInitiated: "StartChildWorkflowExecutionInitiated";
  readonly StartLambdaFunctionFailed: "StartLambdaFunctionFailed";
  readonly StartTimerFailed: "StartTimerFailed";
  readonly TimerCanceled: "TimerCanceled";
  readonly TimerFired: "TimerFired";
  readonly TimerStarted: "TimerStarted";
  readonly WorkflowExecutionCancelRequested: "WorkflowExecutionCancelRequested";
  readonly WorkflowExecutionCanceled: "WorkflowExecutionCanceled";
  readonly WorkflowExecutionCompleted: "WorkflowExecutionCompleted";
  readonly WorkflowExecutionContinuedAsNew: "WorkflowExecutionContinuedAsNew";
  readonly WorkflowExecutionFailed: "WorkflowExecutionFailed";
  readonly WorkflowExecutionSignaled: "WorkflowExecutionSignaled";
  readonly WorkflowExecutionStarted: "WorkflowExecutionStarted";
  readonly WorkflowExecutionTerminated: "WorkflowExecutionTerminated";
  readonly WorkflowExecutionTimedOut: "WorkflowExecutionTimedOut";
};
export type EventType = (typeof EventType)[keyof typeof EventType];
export interface ExternalWorkflowExecutionCancelRequestedEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  initiatedEventId: number | undefined;
}
export interface ExternalWorkflowExecutionSignaledEventAttributes {
  workflowExecution: WorkflowExecution | undefined;
  initiatedEventId: number | undefined;
}
export declare const FailWorkflowExecutionFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly UNHANDLED_DECISION: "UNHANDLED_DECISION";
};
export type FailWorkflowExecutionFailedCause =
  (typeof FailWorkflowExecutionFailedCause)[keyof typeof FailWorkflowExecutionFailedCause];
export interface FailWorkflowExecutionFailedEventAttributes {
  cause: FailWorkflowExecutionFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface LambdaFunctionCompletedEventAttributes {
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
  result?: string;
}
export interface LambdaFunctionFailedEventAttributes {
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
  reason?: string;
  details?: string;
}
export interface LambdaFunctionScheduledEventAttributes {
  id: string | undefined;
  name: string | undefined;
  control?: string;
  input?: string;
  startToCloseTimeout?: string;
  decisionTaskCompletedEventId: number | undefined;
}
export interface LambdaFunctionStartedEventAttributes {
  scheduledEventId: number | undefined;
}
export declare const LambdaFunctionTimeoutType: {
  readonly START_TO_CLOSE: "START_TO_CLOSE";
};
export type LambdaFunctionTimeoutType =
  (typeof LambdaFunctionTimeoutType)[keyof typeof LambdaFunctionTimeoutType];
export interface LambdaFunctionTimedOutEventAttributes {
  scheduledEventId: number | undefined;
  startedEventId: number | undefined;
  timeoutType?: LambdaFunctionTimeoutType;
}
export interface MarkerRecordedEventAttributes {
  markerName: string | undefined;
  details?: string;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const RecordMarkerFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
};
export type RecordMarkerFailedCause =
  (typeof RecordMarkerFailedCause)[keyof typeof RecordMarkerFailedCause];
export interface RecordMarkerFailedEventAttributes {
  markerName: string | undefined;
  cause: RecordMarkerFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const RequestCancelActivityTaskFailedCause: {
  readonly ACTIVITY_ID_UNKNOWN: "ACTIVITY_ID_UNKNOWN";
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
};
export type RequestCancelActivityTaskFailedCause =
  (typeof RequestCancelActivityTaskFailedCause)[keyof typeof RequestCancelActivityTaskFailedCause];
export interface RequestCancelActivityTaskFailedEventAttributes {
  activityId: string | undefined;
  cause: RequestCancelActivityTaskFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const RequestCancelExternalWorkflowExecutionFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED: "REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED";
  readonly UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION: "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION";
};
export type RequestCancelExternalWorkflowExecutionFailedCause =
  (typeof RequestCancelExternalWorkflowExecutionFailedCause)[keyof typeof RequestCancelExternalWorkflowExecutionFailedCause];
export interface RequestCancelExternalWorkflowExecutionFailedEventAttributes {
  workflowId: string | undefined;
  runId?: string;
  cause: RequestCancelExternalWorkflowExecutionFailedCause | undefined;
  initiatedEventId: number | undefined;
  decisionTaskCompletedEventId: number | undefined;
  control?: string;
}
export interface RequestCancelExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: string | undefined;
  runId?: string;
  decisionTaskCompletedEventId: number | undefined;
  control?: string;
}
export declare const ScheduleActivityTaskFailedCause: {
  readonly ACTIVITY_CREATION_RATE_EXCEEDED: "ACTIVITY_CREATION_RATE_EXCEEDED";
  readonly ACTIVITY_ID_ALREADY_IN_USE: "ACTIVITY_ID_ALREADY_IN_USE";
  readonly ACTIVITY_TYPE_DEPRECATED: "ACTIVITY_TYPE_DEPRECATED";
  readonly ACTIVITY_TYPE_DOES_NOT_EXIST: "ACTIVITY_TYPE_DOES_NOT_EXIST";
  readonly DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED: "DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED";
  readonly DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED: "DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED";
  readonly DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED: "DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED";
  readonly DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED: "DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED";
  readonly DEFAULT_TASK_LIST_UNDEFINED: "DEFAULT_TASK_LIST_UNDEFINED";
  readonly OPEN_ACTIVITIES_LIMIT_EXCEEDED: "OPEN_ACTIVITIES_LIMIT_EXCEEDED";
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
};
export type ScheduleActivityTaskFailedCause =
  (typeof ScheduleActivityTaskFailedCause)[keyof typeof ScheduleActivityTaskFailedCause];
export interface ScheduleActivityTaskFailedEventAttributes {
  activityType: ActivityType | undefined;
  activityId: string | undefined;
  cause: ScheduleActivityTaskFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const ScheduleLambdaFunctionFailedCause: {
  readonly ID_ALREADY_IN_USE: "ID_ALREADY_IN_USE";
  readonly LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED: "LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED";
  readonly LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION: "LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION";
  readonly OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED: "OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED";
};
export type ScheduleLambdaFunctionFailedCause =
  (typeof ScheduleLambdaFunctionFailedCause)[keyof typeof ScheduleLambdaFunctionFailedCause];
export interface ScheduleLambdaFunctionFailedEventAttributes {
  id: string | undefined;
  name: string | undefined;
  cause: ScheduleLambdaFunctionFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const SignalExternalWorkflowExecutionFailedCause: {
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED: "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED";
  readonly UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION: "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION";
};
export type SignalExternalWorkflowExecutionFailedCause =
  (typeof SignalExternalWorkflowExecutionFailedCause)[keyof typeof SignalExternalWorkflowExecutionFailedCause];
export interface SignalExternalWorkflowExecutionFailedEventAttributes {
  workflowId: string | undefined;
  runId?: string;
  cause: SignalExternalWorkflowExecutionFailedCause | undefined;
  initiatedEventId: number | undefined;
  decisionTaskCompletedEventId: number | undefined;
  control?: string;
}
export interface SignalExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: string | undefined;
  runId?: string;
  signalName: string | undefined;
  input?: string;
  decisionTaskCompletedEventId: number | undefined;
  control?: string;
}
export declare const StartChildWorkflowExecutionFailedCause: {
  readonly CHILD_CREATION_RATE_EXCEEDED: "CHILD_CREATION_RATE_EXCEEDED";
  readonly DEFAULT_CHILD_POLICY_UNDEFINED: "DEFAULT_CHILD_POLICY_UNDEFINED";
  readonly DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED: "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED";
  readonly DEFAULT_TASK_LIST_UNDEFINED: "DEFAULT_TASK_LIST_UNDEFINED";
  readonly DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED: "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED";
  readonly OPEN_CHILDREN_LIMIT_EXCEEDED: "OPEN_CHILDREN_LIMIT_EXCEEDED";
  readonly OPEN_WORKFLOWS_LIMIT_EXCEEDED: "OPEN_WORKFLOWS_LIMIT_EXCEEDED";
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly WORKFLOW_ALREADY_RUNNING: "WORKFLOW_ALREADY_RUNNING";
  readonly WORKFLOW_TYPE_DEPRECATED: "WORKFLOW_TYPE_DEPRECATED";
  readonly WORKFLOW_TYPE_DOES_NOT_EXIST: "WORKFLOW_TYPE_DOES_NOT_EXIST";
};
export type StartChildWorkflowExecutionFailedCause =
  (typeof StartChildWorkflowExecutionFailedCause)[keyof typeof StartChildWorkflowExecutionFailedCause];
export interface StartChildWorkflowExecutionFailedEventAttributes {
  workflowType: WorkflowType | undefined;
  cause: StartChildWorkflowExecutionFailedCause | undefined;
  workflowId: string | undefined;
  initiatedEventId: number | undefined;
  decisionTaskCompletedEventId: number | undefined;
  control?: string;
}
export interface StartChildWorkflowExecutionInitiatedEventAttributes {
  workflowId: string | undefined;
  workflowType: WorkflowType | undefined;
  control?: string;
  input?: string;
  executionStartToCloseTimeout?: string;
  taskList: TaskList | undefined;
  taskPriority?: string;
  decisionTaskCompletedEventId: number | undefined;
  childPolicy: ChildPolicy | undefined;
  taskStartToCloseTimeout?: string;
  tagList?: string[];
  lambdaRole?: string;
}
export declare const StartLambdaFunctionFailedCause: {
  readonly ASSUME_ROLE_FAILED: "ASSUME_ROLE_FAILED";
};
export type StartLambdaFunctionFailedCause =
  (typeof StartLambdaFunctionFailedCause)[keyof typeof StartLambdaFunctionFailedCause];
export interface StartLambdaFunctionFailedEventAttributes {
  scheduledEventId?: number;
  cause?: StartLambdaFunctionFailedCause;
  message?: string;
}
export declare const StartTimerFailedCause: {
  readonly OPEN_TIMERS_LIMIT_EXCEEDED: "OPEN_TIMERS_LIMIT_EXCEEDED";
  readonly OPERATION_NOT_PERMITTED: "OPERATION_NOT_PERMITTED";
  readonly TIMER_CREATION_RATE_EXCEEDED: "TIMER_CREATION_RATE_EXCEEDED";
  readonly TIMER_ID_ALREADY_IN_USE: "TIMER_ID_ALREADY_IN_USE";
};
export type StartTimerFailedCause =
  (typeof StartTimerFailedCause)[keyof typeof StartTimerFailedCause];
export interface StartTimerFailedEventAttributes {
  timerId: string | undefined;
  cause: StartTimerFailedCause | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface TimerCanceledEventAttributes {
  timerId: string | undefined;
  startedEventId: number | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface TimerFiredEventAttributes {
  timerId: string | undefined;
  startedEventId: number | undefined;
}
export interface TimerStartedEventAttributes {
  timerId: string | undefined;
  control?: string;
  startToFireTimeout: string | undefined;
  decisionTaskCompletedEventId: number | undefined;
}
export interface WorkflowExecutionCanceledEventAttributes {
  details?: string;
  decisionTaskCompletedEventId: number | undefined;
}
export declare const WorkflowExecutionCancelRequestedCause: {
  readonly CHILD_POLICY_APPLIED: "CHILD_POLICY_APPLIED";
};
export type WorkflowExecutionCancelRequestedCause =
  (typeof WorkflowExecutionCancelRequestedCause)[keyof typeof WorkflowExecutionCancelRequestedCause];
export interface WorkflowExecutionCancelRequestedEventAttributes {
  externalWorkflowExecution?: WorkflowExecution;
  externalInitiatedEventId?: number;
  cause?: WorkflowExecutionCancelRequestedCause;
}
export interface WorkflowExecutionCompletedEventAttributes {
  result?: string;
  decisionTaskCompletedEventId: number | undefined;
}
export interface WorkflowExecutionContinuedAsNewEventAttributes {
  input?: string;
  decisionTaskCompletedEventId: number | undefined;
  newExecutionRunId: string | undefined;
  executionStartToCloseTimeout?: string;
  taskList: TaskList | undefined;
  taskPriority?: string;
  taskStartToCloseTimeout?: string;
  childPolicy: ChildPolicy | undefined;
  tagList?: string[];
  workflowType: WorkflowType | undefined;
  lambdaRole?: string;
}
export interface WorkflowExecutionFailedEventAttributes {
  reason?: string;
  details?: string;
  decisionTaskCompletedEventId: number | undefined;
}
export interface WorkflowExecutionSignaledEventAttributes {
  signalName: string | undefined;
  input?: string;
  externalWorkflowExecution?: WorkflowExecution;
  externalInitiatedEventId?: number;
}
export interface WorkflowExecutionStartedEventAttributes {
  input?: string;
  executionStartToCloseTimeout?: string;
  taskStartToCloseTimeout?: string;
  childPolicy: ChildPolicy | undefined;
  taskList: TaskList | undefined;
  taskPriority?: string;
  workflowType: WorkflowType | undefined;
  tagList?: string[];
  continuedExecutionRunId?: string;
  parentWorkflowExecution?: WorkflowExecution;
  parentInitiatedEventId?: number;
  lambdaRole?: string;
}
export declare const WorkflowExecutionTerminatedCause: {
  readonly CHILD_POLICY_APPLIED: "CHILD_POLICY_APPLIED";
  readonly EVENT_LIMIT_EXCEEDED: "EVENT_LIMIT_EXCEEDED";
  readonly OPERATOR_INITIATED: "OPERATOR_INITIATED";
};
export type WorkflowExecutionTerminatedCause =
  (typeof WorkflowExecutionTerminatedCause)[keyof typeof WorkflowExecutionTerminatedCause];
export interface WorkflowExecutionTerminatedEventAttributes {
  reason?: string;
  details?: string;
  childPolicy: ChildPolicy | undefined;
  cause?: WorkflowExecutionTerminatedCause;
}
export interface WorkflowExecutionTimedOutEventAttributes {
  timeoutType: WorkflowExecutionTimeoutType | undefined;
  childPolicy: ChildPolicy | undefined;
}
export interface HistoryEvent {
  eventTimestamp: Date | undefined;
  eventType: EventType | undefined;
  eventId: number | undefined;
  workflowExecutionStartedEventAttributes?: WorkflowExecutionStartedEventAttributes;
  workflowExecutionCompletedEventAttributes?: WorkflowExecutionCompletedEventAttributes;
  completeWorkflowExecutionFailedEventAttributes?: CompleteWorkflowExecutionFailedEventAttributes;
  workflowExecutionFailedEventAttributes?: WorkflowExecutionFailedEventAttributes;
  failWorkflowExecutionFailedEventAttributes?: FailWorkflowExecutionFailedEventAttributes;
  workflowExecutionTimedOutEventAttributes?: WorkflowExecutionTimedOutEventAttributes;
  workflowExecutionCanceledEventAttributes?: WorkflowExecutionCanceledEventAttributes;
  cancelWorkflowExecutionFailedEventAttributes?: CancelWorkflowExecutionFailedEventAttributes;
  workflowExecutionContinuedAsNewEventAttributes?: WorkflowExecutionContinuedAsNewEventAttributes;
  continueAsNewWorkflowExecutionFailedEventAttributes?: ContinueAsNewWorkflowExecutionFailedEventAttributes;
  workflowExecutionTerminatedEventAttributes?: WorkflowExecutionTerminatedEventAttributes;
  workflowExecutionCancelRequestedEventAttributes?: WorkflowExecutionCancelRequestedEventAttributes;
  decisionTaskScheduledEventAttributes?: DecisionTaskScheduledEventAttributes;
  decisionTaskStartedEventAttributes?: DecisionTaskStartedEventAttributes;
  decisionTaskCompletedEventAttributes?: DecisionTaskCompletedEventAttributes;
  decisionTaskTimedOutEventAttributes?: DecisionTaskTimedOutEventAttributes;
  activityTaskScheduledEventAttributes?: ActivityTaskScheduledEventAttributes;
  activityTaskStartedEventAttributes?: ActivityTaskStartedEventAttributes;
  activityTaskCompletedEventAttributes?: ActivityTaskCompletedEventAttributes;
  activityTaskFailedEventAttributes?: ActivityTaskFailedEventAttributes;
  activityTaskTimedOutEventAttributes?: ActivityTaskTimedOutEventAttributes;
  activityTaskCanceledEventAttributes?: ActivityTaskCanceledEventAttributes;
  activityTaskCancelRequestedEventAttributes?: ActivityTaskCancelRequestedEventAttributes;
  workflowExecutionSignaledEventAttributes?: WorkflowExecutionSignaledEventAttributes;
  markerRecordedEventAttributes?: MarkerRecordedEventAttributes;
  recordMarkerFailedEventAttributes?: RecordMarkerFailedEventAttributes;
  timerStartedEventAttributes?: TimerStartedEventAttributes;
  timerFiredEventAttributes?: TimerFiredEventAttributes;
  timerCanceledEventAttributes?: TimerCanceledEventAttributes;
  startChildWorkflowExecutionInitiatedEventAttributes?: StartChildWorkflowExecutionInitiatedEventAttributes;
  childWorkflowExecutionStartedEventAttributes?: ChildWorkflowExecutionStartedEventAttributes;
  childWorkflowExecutionCompletedEventAttributes?: ChildWorkflowExecutionCompletedEventAttributes;
  childWorkflowExecutionFailedEventAttributes?: ChildWorkflowExecutionFailedEventAttributes;
  childWorkflowExecutionTimedOutEventAttributes?: ChildWorkflowExecutionTimedOutEventAttributes;
  childWorkflowExecutionCanceledEventAttributes?: ChildWorkflowExecutionCanceledEventAttributes;
  childWorkflowExecutionTerminatedEventAttributes?: ChildWorkflowExecutionTerminatedEventAttributes;
  signalExternalWorkflowExecutionInitiatedEventAttributes?: SignalExternalWorkflowExecutionInitiatedEventAttributes;
  externalWorkflowExecutionSignaledEventAttributes?: ExternalWorkflowExecutionSignaledEventAttributes;
  signalExternalWorkflowExecutionFailedEventAttributes?: SignalExternalWorkflowExecutionFailedEventAttributes;
  externalWorkflowExecutionCancelRequestedEventAttributes?: ExternalWorkflowExecutionCancelRequestedEventAttributes;
  requestCancelExternalWorkflowExecutionInitiatedEventAttributes?: RequestCancelExternalWorkflowExecutionInitiatedEventAttributes;
  requestCancelExternalWorkflowExecutionFailedEventAttributes?: RequestCancelExternalWorkflowExecutionFailedEventAttributes;
  scheduleActivityTaskFailedEventAttributes?: ScheduleActivityTaskFailedEventAttributes;
  requestCancelActivityTaskFailedEventAttributes?: RequestCancelActivityTaskFailedEventAttributes;
  startTimerFailedEventAttributes?: StartTimerFailedEventAttributes;
  cancelTimerFailedEventAttributes?: CancelTimerFailedEventAttributes;
  startChildWorkflowExecutionFailedEventAttributes?: StartChildWorkflowExecutionFailedEventAttributes;
  lambdaFunctionScheduledEventAttributes?: LambdaFunctionScheduledEventAttributes;
  lambdaFunctionStartedEventAttributes?: LambdaFunctionStartedEventAttributes;
  lambdaFunctionCompletedEventAttributes?: LambdaFunctionCompletedEventAttributes;
  lambdaFunctionFailedEventAttributes?: LambdaFunctionFailedEventAttributes;
  lambdaFunctionTimedOutEventAttributes?: LambdaFunctionTimedOutEventAttributes;
  scheduleLambdaFunctionFailedEventAttributes?: ScheduleLambdaFunctionFailedEventAttributes;
  startLambdaFunctionFailedEventAttributes?: StartLambdaFunctionFailedEventAttributes;
}
export interface DecisionTask {
  taskToken: string | undefined;
  startedEventId: number | undefined;
  workflowExecution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  events: HistoryEvent[] | undefined;
  nextPageToken?: string;
  previousStartedEventId?: number;
}
export declare class DefaultUndefinedFault extends __BaseException {
  readonly name: "DefaultUndefinedFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DefaultUndefinedFault, __BaseException>
  );
}
export interface DeprecateActivityTypeInput {
  domain: string | undefined;
  activityType: ActivityType | undefined;
}
export declare class TypeDeprecatedFault extends __BaseException {
  readonly name: "TypeDeprecatedFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TypeDeprecatedFault, __BaseException>
  );
}
export interface DeprecateDomainInput {
  name: string | undefined;
}
export declare class DomainDeprecatedFault extends __BaseException {
  readonly name: "DomainDeprecatedFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DomainDeprecatedFault, __BaseException>
  );
}
export interface DeprecateWorkflowTypeInput {
  domain: string | undefined;
  workflowType: WorkflowType | undefined;
}
export interface DescribeActivityTypeInput {
  domain: string | undefined;
  activityType: ActivityType | undefined;
}
export interface DescribeDomainInput {
  name: string | undefined;
}
export interface DomainConfiguration {
  workflowExecutionRetentionPeriodInDays: string | undefined;
}
export interface DomainInfo {
  name: string | undefined;
  status: RegistrationStatus | undefined;
  description?: string;
  arn?: string;
}
export interface DomainDetail {
  domainInfo: DomainInfo | undefined;
  configuration: DomainConfiguration | undefined;
}
export interface DescribeWorkflowExecutionInput {
  domain: string | undefined;
  execution: WorkflowExecution | undefined;
}
export interface WorkflowExecutionConfiguration {
  taskStartToCloseTimeout: string | undefined;
  executionStartToCloseTimeout: string | undefined;
  taskList: TaskList | undefined;
  taskPriority?: string;
  childPolicy: ChildPolicy | undefined;
  lambdaRole?: string;
}
export declare const ExecutionStatus: {
  readonly CLOSED: "CLOSED";
  readonly OPEN: "OPEN";
};
export type ExecutionStatus =
  (typeof ExecutionStatus)[keyof typeof ExecutionStatus];
export interface WorkflowExecutionInfo {
  execution: WorkflowExecution | undefined;
  workflowType: WorkflowType | undefined;
  startTimestamp: Date | undefined;
  closeTimestamp?: Date;
  executionStatus: ExecutionStatus | undefined;
  closeStatus?: CloseStatus;
  parent?: WorkflowExecution;
  tagList?: string[];
  cancelRequested?: boolean;
}
export interface WorkflowExecutionOpenCounts {
  openActivityTasks: number | undefined;
  openDecisionTasks: number | undefined;
  openTimers: number | undefined;
  openChildWorkflowExecutions: number | undefined;
  openLambdaFunctions?: number;
}
export interface WorkflowExecutionDetail {
  executionInfo: WorkflowExecutionInfo | undefined;
  executionConfiguration: WorkflowExecutionConfiguration | undefined;
  openCounts: WorkflowExecutionOpenCounts | undefined;
  latestActivityTaskTimestamp?: Date;
  latestExecutionContext?: string;
}
export interface DescribeWorkflowTypeInput {
  domain: string | undefined;
  workflowType: WorkflowType | undefined;
}
export interface WorkflowTypeConfiguration {
  defaultTaskStartToCloseTimeout?: string;
  defaultExecutionStartToCloseTimeout?: string;
  defaultTaskList?: TaskList;
  defaultTaskPriority?: string;
  defaultChildPolicy?: ChildPolicy;
  defaultLambdaRole?: string;
}
export interface WorkflowTypeInfo {
  workflowType: WorkflowType | undefined;
  status: RegistrationStatus | undefined;
  description?: string;
  creationDate: Date | undefined;
  deprecationDate?: Date;
}
export interface WorkflowTypeDetail {
  typeInfo: WorkflowTypeInfo | undefined;
  configuration: WorkflowTypeConfiguration | undefined;
}
export declare class DomainAlreadyExistsFault extends __BaseException {
  readonly name: "DomainAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DomainAlreadyExistsFault, __BaseException>
  );
}
export interface DomainInfos {
  domainInfos: DomainInfo[] | undefined;
  nextPageToken?: string;
}
export interface GetWorkflowExecutionHistoryInput {
  domain: string | undefined;
  execution: WorkflowExecution | undefined;
  nextPageToken?: string;
  maximumPageSize?: number;
  reverseOrder?: boolean;
}
export interface History {
  events: HistoryEvent[] | undefined;
  nextPageToken?: string;
}
export declare class LimitExceededFault extends __BaseException {
  readonly name: "LimitExceededFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<LimitExceededFault, __BaseException>);
}
export interface ListActivityTypesInput {
  domain: string | undefined;
  name?: string;
  registrationStatus: RegistrationStatus | undefined;
  nextPageToken?: string;
  maximumPageSize?: number;
  reverseOrder?: boolean;
}
export interface ListClosedWorkflowExecutionsInput {
  domain: string | undefined;
  startTimeFilter?: ExecutionTimeFilter;
  closeTimeFilter?: ExecutionTimeFilter;
  executionFilter?: WorkflowExecutionFilter;
  closeStatusFilter?: CloseStatusFilter;
  typeFilter?: WorkflowTypeFilter;
  tagFilter?: TagFilter;
  nextPageToken?: string;
  maximumPageSize?: number;
  reverseOrder?: boolean;
}
export interface WorkflowExecutionInfos {
  executionInfos: WorkflowExecutionInfo[] | undefined;
  nextPageToken?: string;
}
export interface ListDomainsInput {
  nextPageToken?: string;
  registrationStatus: RegistrationStatus | undefined;
  maximumPageSize?: number;
  reverseOrder?: boolean;
}
export interface ListOpenWorkflowExecutionsInput {
  domain: string | undefined;
  startTimeFilter: ExecutionTimeFilter | undefined;
  typeFilter?: WorkflowTypeFilter;
  tagFilter?: TagFilter;
  nextPageToken?: string;
  maximumPageSize?: number;
  reverseOrder?: boolean;
  executionFilter?: WorkflowExecutionFilter;
}
export interface ListTagsForResourceInput {
  resourceArn: string | undefined;
}
export interface ResourceTag {
  key: string | undefined;
  value?: string;
}
export interface ListTagsForResourceOutput {
  tags?: ResourceTag[];
}
export interface ListWorkflowTypesInput {
  domain: string | undefined;
  name?: string;
  registrationStatus: RegistrationStatus | undefined;
  nextPageToken?: string;
  maximumPageSize?: number;
  reverseOrder?: boolean;
}
export interface WorkflowTypeInfos {
  typeInfos: WorkflowTypeInfo[] | undefined;
  nextPageToken?: string;
}
export interface PollForActivityTaskInput {
  domain: string | undefined;
  taskList: TaskList | undefined;
  identity?: string;
}
export interface PollForDecisionTaskInput {
  domain: string | undefined;
  taskList: TaskList | undefined;
  identity?: string;
  nextPageToken?: string;
  maximumPageSize?: number;
  reverseOrder?: boolean;
  startAtPreviousStartedEvent?: boolean;
}
export interface RecordActivityTaskHeartbeatInput {
  taskToken: string | undefined;
  details?: string;
}
export interface RegisterActivityTypeInput {
  domain: string | undefined;
  name: string | undefined;
  version: string | undefined;
  description?: string;
  defaultTaskStartToCloseTimeout?: string;
  defaultTaskHeartbeatTimeout?: string;
  defaultTaskList?: TaskList;
  defaultTaskPriority?: string;
  defaultTaskScheduleToStartTimeout?: string;
  defaultTaskScheduleToCloseTimeout?: string;
}
export declare class TypeAlreadyExistsFault extends __BaseException {
  readonly name: "TypeAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TypeAlreadyExistsFault, __BaseException>
  );
}
export interface RegisterDomainInput {
  name: string | undefined;
  description?: string;
  workflowExecutionRetentionPeriodInDays: string | undefined;
  tags?: ResourceTag[];
}
export declare class TooManyTagsFault extends __BaseException {
  readonly name: "TooManyTagsFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<TooManyTagsFault, __BaseException>);
}
export interface RegisterWorkflowTypeInput {
  domain: string | undefined;
  name: string | undefined;
  version: string | undefined;
  description?: string;
  defaultTaskStartToCloseTimeout?: string;
  defaultExecutionStartToCloseTimeout?: string;
  defaultTaskList?: TaskList;
  defaultTaskPriority?: string;
  defaultChildPolicy?: ChildPolicy;
  defaultLambdaRole?: string;
}
export interface RequestCancelWorkflowExecutionInput {
  domain: string | undefined;
  workflowId: string | undefined;
  runId?: string;
}
export interface RespondActivityTaskCanceledInput {
  taskToken: string | undefined;
  details?: string;
}
export interface RespondActivityTaskCompletedInput {
  taskToken: string | undefined;
  result?: string;
}
export interface RespondActivityTaskFailedInput {
  taskToken: string | undefined;
  reason?: string;
  details?: string;
}
export interface RespondDecisionTaskCompletedInput {
  taskToken: string | undefined;
  decisions?: Decision[];
  executionContext?: string;
  taskList?: TaskList;
  taskListScheduleToStartTimeout?: string;
}
export interface Run {
  runId?: string;
}
export interface SignalWorkflowExecutionInput {
  domain: string | undefined;
  workflowId: string | undefined;
  runId?: string;
  signalName: string | undefined;
  input?: string;
}
export interface StartWorkflowExecutionInput {
  domain: string | undefined;
  workflowId: string | undefined;
  workflowType: WorkflowType | undefined;
  taskList?: TaskList;
  taskPriority?: string;
  input?: string;
  executionStartToCloseTimeout?: string;
  tagList?: string[];
  taskStartToCloseTimeout?: string;
  childPolicy?: ChildPolicy;
  lambdaRole?: string;
}
export declare class WorkflowExecutionAlreadyStartedFault extends __BaseException {
  readonly name: "WorkflowExecutionAlreadyStartedFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      WorkflowExecutionAlreadyStartedFault,
      __BaseException
    >
  );
}
export interface TagResourceInput {
  resourceArn: string | undefined;
  tags: ResourceTag[] | undefined;
}
export interface TerminateWorkflowExecutionInput {
  domain: string | undefined;
  workflowId: string | undefined;
  runId?: string;
  reason?: string;
  details?: string;
  childPolicy?: ChildPolicy;
}
export interface UndeprecateActivityTypeInput {
  domain: string | undefined;
  activityType: ActivityType | undefined;
}
export interface UndeprecateDomainInput {
  name: string | undefined;
}
export interface UndeprecateWorkflowTypeInput {
  domain: string | undefined;
  workflowType: WorkflowType | undefined;
}
export interface UntagResourceInput {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
