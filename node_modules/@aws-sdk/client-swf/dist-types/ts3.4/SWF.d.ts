import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CountClosedWorkflowExecutionsCommandInput,
  CountClosedWorkflowExecutionsCommandOutput,
} from "./commands/CountClosedWorkflowExecutionsCommand";
import {
  CountOpenWorkflowExecutionsCommandInput,
  CountOpenWorkflowExecutionsCommandOutput,
} from "./commands/CountOpenWorkflowExecutionsCommand";
import {
  CountPendingActivityTasksCommandInput,
  CountPendingActivityTasksCommandOutput,
} from "./commands/CountPendingActivityTasksCommand";
import {
  CountPendingDecisionTasksCommandInput,
  CountPendingDecisionTasksCommandOutput,
} from "./commands/CountPendingDecisionTasksCommand";
import {
  DeprecateActivityTypeCommandInput,
  DeprecateActivityTypeCommandOutput,
} from "./commands/DeprecateActivityTypeCommand";
import {
  DeprecateDomainCommandInput,
  DeprecateDomainCommandOutput,
} from "./commands/DeprecateDomainCommand";
import {
  DeprecateWorkflowTypeCommandInput,
  DeprecateWorkflowTypeCommandOutput,
} from "./commands/DeprecateWorkflowTypeCommand";
import {
  DescribeActivityTypeCommandInput,
  DescribeActivityTypeCommandOutput,
} from "./commands/DescribeActivityTypeCommand";
import {
  DescribeDomainCommandInput,
  DescribeDomainCommandOutput,
} from "./commands/DescribeDomainCommand";
import {
  DescribeWorkflowExecutionCommandInput,
  DescribeWorkflowExecutionCommandOutput,
} from "./commands/DescribeWorkflowExecutionCommand";
import {
  DescribeWorkflowTypeCommandInput,
  DescribeWorkflowTypeCommandOutput,
} from "./commands/DescribeWorkflowTypeCommand";
import {
  GetWorkflowExecutionHistoryCommandInput,
  GetWorkflowExecutionHistoryCommandOutput,
} from "./commands/GetWorkflowExecutionHistoryCommand";
import {
  ListActivityTypesCommandInput,
  ListActivityTypesCommandOutput,
} from "./commands/ListActivityTypesCommand";
import {
  ListClosedWorkflowExecutionsCommandInput,
  ListClosedWorkflowExecutionsCommandOutput,
} from "./commands/ListClosedWorkflowExecutionsCommand";
import {
  ListDomainsCommandInput,
  ListDomainsCommandOutput,
} from "./commands/ListDomainsCommand";
import {
  ListOpenWorkflowExecutionsCommandInput,
  ListOpenWorkflowExecutionsCommandOutput,
} from "./commands/ListOpenWorkflowExecutionsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListWorkflowTypesCommandInput,
  ListWorkflowTypesCommandOutput,
} from "./commands/ListWorkflowTypesCommand";
import {
  PollForActivityTaskCommandInput,
  PollForActivityTaskCommandOutput,
} from "./commands/PollForActivityTaskCommand";
import {
  PollForDecisionTaskCommandInput,
  PollForDecisionTaskCommandOutput,
} from "./commands/PollForDecisionTaskCommand";
import {
  RecordActivityTaskHeartbeatCommandInput,
  RecordActivityTaskHeartbeatCommandOutput,
} from "./commands/RecordActivityTaskHeartbeatCommand";
import {
  RegisterActivityTypeCommandInput,
  RegisterActivityTypeCommandOutput,
} from "./commands/RegisterActivityTypeCommand";
import {
  RegisterDomainCommandInput,
  RegisterDomainCommandOutput,
} from "./commands/RegisterDomainCommand";
import {
  RegisterWorkflowTypeCommandInput,
  RegisterWorkflowTypeCommandOutput,
} from "./commands/RegisterWorkflowTypeCommand";
import {
  RequestCancelWorkflowExecutionCommandInput,
  RequestCancelWorkflowExecutionCommandOutput,
} from "./commands/RequestCancelWorkflowExecutionCommand";
import {
  RespondActivityTaskCanceledCommandInput,
  RespondActivityTaskCanceledCommandOutput,
} from "./commands/RespondActivityTaskCanceledCommand";
import {
  RespondActivityTaskCompletedCommandInput,
  RespondActivityTaskCompletedCommandOutput,
} from "./commands/RespondActivityTaskCompletedCommand";
import {
  RespondActivityTaskFailedCommandInput,
  RespondActivityTaskFailedCommandOutput,
} from "./commands/RespondActivityTaskFailedCommand";
import {
  RespondDecisionTaskCompletedCommandInput,
  RespondDecisionTaskCompletedCommandOutput,
} from "./commands/RespondDecisionTaskCompletedCommand";
import {
  SignalWorkflowExecutionCommandInput,
  SignalWorkflowExecutionCommandOutput,
} from "./commands/SignalWorkflowExecutionCommand";
import {
  StartWorkflowExecutionCommandInput,
  StartWorkflowExecutionCommandOutput,
} from "./commands/StartWorkflowExecutionCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  TerminateWorkflowExecutionCommandInput,
  TerminateWorkflowExecutionCommandOutput,
} from "./commands/TerminateWorkflowExecutionCommand";
import {
  UndeprecateActivityTypeCommandInput,
  UndeprecateActivityTypeCommandOutput,
} from "./commands/UndeprecateActivityTypeCommand";
import {
  UndeprecateDomainCommandInput,
  UndeprecateDomainCommandOutput,
} from "./commands/UndeprecateDomainCommand";
import {
  UndeprecateWorkflowTypeCommandInput,
  UndeprecateWorkflowTypeCommandOutput,
} from "./commands/UndeprecateWorkflowTypeCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import { SWFClient } from "./SWFClient";
export interface SWF {
  countClosedWorkflowExecutions(
    args: CountClosedWorkflowExecutionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CountClosedWorkflowExecutionsCommandOutput>;
  countClosedWorkflowExecutions(
    args: CountClosedWorkflowExecutionsCommandInput,
    cb: (err: any, data?: CountClosedWorkflowExecutionsCommandOutput) => void
  ): void;
  countClosedWorkflowExecutions(
    args: CountClosedWorkflowExecutionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CountClosedWorkflowExecutionsCommandOutput) => void
  ): void;
  countOpenWorkflowExecutions(
    args: CountOpenWorkflowExecutionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CountOpenWorkflowExecutionsCommandOutput>;
  countOpenWorkflowExecutions(
    args: CountOpenWorkflowExecutionsCommandInput,
    cb: (err: any, data?: CountOpenWorkflowExecutionsCommandOutput) => void
  ): void;
  countOpenWorkflowExecutions(
    args: CountOpenWorkflowExecutionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CountOpenWorkflowExecutionsCommandOutput) => void
  ): void;
  countPendingActivityTasks(
    args: CountPendingActivityTasksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CountPendingActivityTasksCommandOutput>;
  countPendingActivityTasks(
    args: CountPendingActivityTasksCommandInput,
    cb: (err: any, data?: CountPendingActivityTasksCommandOutput) => void
  ): void;
  countPendingActivityTasks(
    args: CountPendingActivityTasksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CountPendingActivityTasksCommandOutput) => void
  ): void;
  countPendingDecisionTasks(
    args: CountPendingDecisionTasksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CountPendingDecisionTasksCommandOutput>;
  countPendingDecisionTasks(
    args: CountPendingDecisionTasksCommandInput,
    cb: (err: any, data?: CountPendingDecisionTasksCommandOutput) => void
  ): void;
  countPendingDecisionTasks(
    args: CountPendingDecisionTasksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CountPendingDecisionTasksCommandOutput) => void
  ): void;
  deprecateActivityType(
    args: DeprecateActivityTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeprecateActivityTypeCommandOutput>;
  deprecateActivityType(
    args: DeprecateActivityTypeCommandInput,
    cb: (err: any, data?: DeprecateActivityTypeCommandOutput) => void
  ): void;
  deprecateActivityType(
    args: DeprecateActivityTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeprecateActivityTypeCommandOutput) => void
  ): void;
  deprecateDomain(
    args: DeprecateDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeprecateDomainCommandOutput>;
  deprecateDomain(
    args: DeprecateDomainCommandInput,
    cb: (err: any, data?: DeprecateDomainCommandOutput) => void
  ): void;
  deprecateDomain(
    args: DeprecateDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeprecateDomainCommandOutput) => void
  ): void;
  deprecateWorkflowType(
    args: DeprecateWorkflowTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeprecateWorkflowTypeCommandOutput>;
  deprecateWorkflowType(
    args: DeprecateWorkflowTypeCommandInput,
    cb: (err: any, data?: DeprecateWorkflowTypeCommandOutput) => void
  ): void;
  deprecateWorkflowType(
    args: DeprecateWorkflowTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeprecateWorkflowTypeCommandOutput) => void
  ): void;
  describeActivityType(
    args: DescribeActivityTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeActivityTypeCommandOutput>;
  describeActivityType(
    args: DescribeActivityTypeCommandInput,
    cb: (err: any, data?: DescribeActivityTypeCommandOutput) => void
  ): void;
  describeActivityType(
    args: DescribeActivityTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeActivityTypeCommandOutput) => void
  ): void;
  describeDomain(
    args: DescribeDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDomainCommandOutput>;
  describeDomain(
    args: DescribeDomainCommandInput,
    cb: (err: any, data?: DescribeDomainCommandOutput) => void
  ): void;
  describeDomain(
    args: DescribeDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDomainCommandOutput) => void
  ): void;
  describeWorkflowExecution(
    args: DescribeWorkflowExecutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeWorkflowExecutionCommandOutput>;
  describeWorkflowExecution(
    args: DescribeWorkflowExecutionCommandInput,
    cb: (err: any, data?: DescribeWorkflowExecutionCommandOutput) => void
  ): void;
  describeWorkflowExecution(
    args: DescribeWorkflowExecutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeWorkflowExecutionCommandOutput) => void
  ): void;
  describeWorkflowType(
    args: DescribeWorkflowTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeWorkflowTypeCommandOutput>;
  describeWorkflowType(
    args: DescribeWorkflowTypeCommandInput,
    cb: (err: any, data?: DescribeWorkflowTypeCommandOutput) => void
  ): void;
  describeWorkflowType(
    args: DescribeWorkflowTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeWorkflowTypeCommandOutput) => void
  ): void;
  getWorkflowExecutionHistory(
    args: GetWorkflowExecutionHistoryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetWorkflowExecutionHistoryCommandOutput>;
  getWorkflowExecutionHistory(
    args: GetWorkflowExecutionHistoryCommandInput,
    cb: (err: any, data?: GetWorkflowExecutionHistoryCommandOutput) => void
  ): void;
  getWorkflowExecutionHistory(
    args: GetWorkflowExecutionHistoryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetWorkflowExecutionHistoryCommandOutput) => void
  ): void;
  listActivityTypes(
    args: ListActivityTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListActivityTypesCommandOutput>;
  listActivityTypes(
    args: ListActivityTypesCommandInput,
    cb: (err: any, data?: ListActivityTypesCommandOutput) => void
  ): void;
  listActivityTypes(
    args: ListActivityTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListActivityTypesCommandOutput) => void
  ): void;
  listClosedWorkflowExecutions(
    args: ListClosedWorkflowExecutionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListClosedWorkflowExecutionsCommandOutput>;
  listClosedWorkflowExecutions(
    args: ListClosedWorkflowExecutionsCommandInput,
    cb: (err: any, data?: ListClosedWorkflowExecutionsCommandOutput) => void
  ): void;
  listClosedWorkflowExecutions(
    args: ListClosedWorkflowExecutionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListClosedWorkflowExecutionsCommandOutput) => void
  ): void;
  listDomains(
    args: ListDomainsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDomainsCommandOutput>;
  listDomains(
    args: ListDomainsCommandInput,
    cb: (err: any, data?: ListDomainsCommandOutput) => void
  ): void;
  listDomains(
    args: ListDomainsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDomainsCommandOutput) => void
  ): void;
  listOpenWorkflowExecutions(
    args: ListOpenWorkflowExecutionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListOpenWorkflowExecutionsCommandOutput>;
  listOpenWorkflowExecutions(
    args: ListOpenWorkflowExecutionsCommandInput,
    cb: (err: any, data?: ListOpenWorkflowExecutionsCommandOutput) => void
  ): void;
  listOpenWorkflowExecutions(
    args: ListOpenWorkflowExecutionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListOpenWorkflowExecutionsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listWorkflowTypes(
    args: ListWorkflowTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListWorkflowTypesCommandOutput>;
  listWorkflowTypes(
    args: ListWorkflowTypesCommandInput,
    cb: (err: any, data?: ListWorkflowTypesCommandOutput) => void
  ): void;
  listWorkflowTypes(
    args: ListWorkflowTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListWorkflowTypesCommandOutput) => void
  ): void;
  pollForActivityTask(
    args: PollForActivityTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PollForActivityTaskCommandOutput>;
  pollForActivityTask(
    args: PollForActivityTaskCommandInput,
    cb: (err: any, data?: PollForActivityTaskCommandOutput) => void
  ): void;
  pollForActivityTask(
    args: PollForActivityTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PollForActivityTaskCommandOutput) => void
  ): void;
  pollForDecisionTask(
    args: PollForDecisionTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PollForDecisionTaskCommandOutput>;
  pollForDecisionTask(
    args: PollForDecisionTaskCommandInput,
    cb: (err: any, data?: PollForDecisionTaskCommandOutput) => void
  ): void;
  pollForDecisionTask(
    args: PollForDecisionTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PollForDecisionTaskCommandOutput) => void
  ): void;
  recordActivityTaskHeartbeat(
    args: RecordActivityTaskHeartbeatCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RecordActivityTaskHeartbeatCommandOutput>;
  recordActivityTaskHeartbeat(
    args: RecordActivityTaskHeartbeatCommandInput,
    cb: (err: any, data?: RecordActivityTaskHeartbeatCommandOutput) => void
  ): void;
  recordActivityTaskHeartbeat(
    args: RecordActivityTaskHeartbeatCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RecordActivityTaskHeartbeatCommandOutput) => void
  ): void;
  registerActivityType(
    args: RegisterActivityTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterActivityTypeCommandOutput>;
  registerActivityType(
    args: RegisterActivityTypeCommandInput,
    cb: (err: any, data?: RegisterActivityTypeCommandOutput) => void
  ): void;
  registerActivityType(
    args: RegisterActivityTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterActivityTypeCommandOutput) => void
  ): void;
  registerDomain(
    args: RegisterDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterDomainCommandOutput>;
  registerDomain(
    args: RegisterDomainCommandInput,
    cb: (err: any, data?: RegisterDomainCommandOutput) => void
  ): void;
  registerDomain(
    args: RegisterDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterDomainCommandOutput) => void
  ): void;
  registerWorkflowType(
    args: RegisterWorkflowTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterWorkflowTypeCommandOutput>;
  registerWorkflowType(
    args: RegisterWorkflowTypeCommandInput,
    cb: (err: any, data?: RegisterWorkflowTypeCommandOutput) => void
  ): void;
  registerWorkflowType(
    args: RegisterWorkflowTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterWorkflowTypeCommandOutput) => void
  ): void;
  requestCancelWorkflowExecution(
    args: RequestCancelWorkflowExecutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RequestCancelWorkflowExecutionCommandOutput>;
  requestCancelWorkflowExecution(
    args: RequestCancelWorkflowExecutionCommandInput,
    cb: (err: any, data?: RequestCancelWorkflowExecutionCommandOutput) => void
  ): void;
  requestCancelWorkflowExecution(
    args: RequestCancelWorkflowExecutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RequestCancelWorkflowExecutionCommandOutput) => void
  ): void;
  respondActivityTaskCanceled(
    args: RespondActivityTaskCanceledCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RespondActivityTaskCanceledCommandOutput>;
  respondActivityTaskCanceled(
    args: RespondActivityTaskCanceledCommandInput,
    cb: (err: any, data?: RespondActivityTaskCanceledCommandOutput) => void
  ): void;
  respondActivityTaskCanceled(
    args: RespondActivityTaskCanceledCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RespondActivityTaskCanceledCommandOutput) => void
  ): void;
  respondActivityTaskCompleted(
    args: RespondActivityTaskCompletedCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RespondActivityTaskCompletedCommandOutput>;
  respondActivityTaskCompleted(
    args: RespondActivityTaskCompletedCommandInput,
    cb: (err: any, data?: RespondActivityTaskCompletedCommandOutput) => void
  ): void;
  respondActivityTaskCompleted(
    args: RespondActivityTaskCompletedCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RespondActivityTaskCompletedCommandOutput) => void
  ): void;
  respondActivityTaskFailed(
    args: RespondActivityTaskFailedCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RespondActivityTaskFailedCommandOutput>;
  respondActivityTaskFailed(
    args: RespondActivityTaskFailedCommandInput,
    cb: (err: any, data?: RespondActivityTaskFailedCommandOutput) => void
  ): void;
  respondActivityTaskFailed(
    args: RespondActivityTaskFailedCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RespondActivityTaskFailedCommandOutput) => void
  ): void;
  respondDecisionTaskCompleted(
    args: RespondDecisionTaskCompletedCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RespondDecisionTaskCompletedCommandOutput>;
  respondDecisionTaskCompleted(
    args: RespondDecisionTaskCompletedCommandInput,
    cb: (err: any, data?: RespondDecisionTaskCompletedCommandOutput) => void
  ): void;
  respondDecisionTaskCompleted(
    args: RespondDecisionTaskCompletedCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RespondDecisionTaskCompletedCommandOutput) => void
  ): void;
  signalWorkflowExecution(
    args: SignalWorkflowExecutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SignalWorkflowExecutionCommandOutput>;
  signalWorkflowExecution(
    args: SignalWorkflowExecutionCommandInput,
    cb: (err: any, data?: SignalWorkflowExecutionCommandOutput) => void
  ): void;
  signalWorkflowExecution(
    args: SignalWorkflowExecutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SignalWorkflowExecutionCommandOutput) => void
  ): void;
  startWorkflowExecution(
    args: StartWorkflowExecutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartWorkflowExecutionCommandOutput>;
  startWorkflowExecution(
    args: StartWorkflowExecutionCommandInput,
    cb: (err: any, data?: StartWorkflowExecutionCommandOutput) => void
  ): void;
  startWorkflowExecution(
    args: StartWorkflowExecutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartWorkflowExecutionCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  terminateWorkflowExecution(
    args: TerminateWorkflowExecutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TerminateWorkflowExecutionCommandOutput>;
  terminateWorkflowExecution(
    args: TerminateWorkflowExecutionCommandInput,
    cb: (err: any, data?: TerminateWorkflowExecutionCommandOutput) => void
  ): void;
  terminateWorkflowExecution(
    args: TerminateWorkflowExecutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TerminateWorkflowExecutionCommandOutput) => void
  ): void;
  undeprecateActivityType(
    args: UndeprecateActivityTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UndeprecateActivityTypeCommandOutput>;
  undeprecateActivityType(
    args: UndeprecateActivityTypeCommandInput,
    cb: (err: any, data?: UndeprecateActivityTypeCommandOutput) => void
  ): void;
  undeprecateActivityType(
    args: UndeprecateActivityTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UndeprecateActivityTypeCommandOutput) => void
  ): void;
  undeprecateDomain(
    args: UndeprecateDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UndeprecateDomainCommandOutput>;
  undeprecateDomain(
    args: UndeprecateDomainCommandInput,
    cb: (err: any, data?: UndeprecateDomainCommandOutput) => void
  ): void;
  undeprecateDomain(
    args: UndeprecateDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UndeprecateDomainCommandOutput) => void
  ): void;
  undeprecateWorkflowType(
    args: UndeprecateWorkflowTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UndeprecateWorkflowTypeCommandOutput>;
  undeprecateWorkflowType(
    args: UndeprecateWorkflowTypeCommandInput,
    cb: (err: any, data?: UndeprecateWorkflowTypeCommandOutput) => void
  ): void;
  undeprecateWorkflowType(
    args: UndeprecateWorkflowTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UndeprecateWorkflowTypeCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
}
export declare class SWF extends SWFClient implements SWF {}
