import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { PersonalizeRuntimeServiceException as __BaseException } from "./PersonalizeRuntimeServiceException";
export interface PredictedAction {
  actionId?: string;
  score?: number;
}
export interface GetActionRecommendationsRequest {
  campaignArn?: string;
  userId?: string;
  numResults?: number;
  filterArn?: string;
  filterValues?: Record<string, string>;
}
export interface GetActionRecommendationsResponse {
  actionList?: PredictedAction[];
  recommendationId?: string;
}
export declare class InvalidInputException extends __BaseException {
  readonly name: "InvalidInputException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidInputException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface GetPersonalizedRankingRequest {
  campaignArn: string | undefined;
  inputList: string[] | undefined;
  userId: string | undefined;
  context?: Record<string, string>;
  filterArn?: string;
  filterValues?: Record<string, string>;
  metadataColumns?: Record<string, string[]>;
}
export interface PredictedItem {
  itemId?: string;
  score?: number;
  promotionName?: string;
  metadata?: Record<string, string>;
}
export interface GetPersonalizedRankingResponse {
  personalizedRanking?: PredictedItem[];
  recommendationId?: string;
}
export interface Promotion {
  name?: string;
  percentPromotedItems?: number;
  filterArn?: string;
  filterValues?: Record<string, string>;
}
export interface GetRecommendationsRequest {
  campaignArn?: string;
  itemId?: string;
  userId?: string;
  numResults?: number;
  context?: Record<string, string>;
  filterArn?: string;
  filterValues?: Record<string, string>;
  recommenderArn?: string;
  promotions?: Promotion[];
  metadataColumns?: Record<string, string[]>;
}
export interface GetRecommendationsResponse {
  itemList?: PredictedItem[];
  recommendationId?: string;
}
export declare const GetActionRecommendationsRequestFilterSensitiveLog: (
  obj: GetActionRecommendationsRequest
) => any;
export declare const GetPersonalizedRankingRequestFilterSensitiveLog: (
  obj: GetPersonalizedRankingRequest
) => any;
export declare const PromotionFilterSensitiveLog: (obj: Promotion) => any;
export declare const GetRecommendationsRequestFilterSensitiveLog: (
  obj: GetRecommendationsRequest
) => any;
