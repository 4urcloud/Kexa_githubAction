import { SavingsplansServiceException as __BaseException } from "./SavingsplansServiceException";
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const SavingsPlanRateFilterName = {
    INSTANCE_TYPE: "instanceType",
    OPERATION: "operation",
    PRODUCT_DESCRIPTION: "productDescription",
    PRODUCT_TYPE: "productType",
    REGION: "region",
    SERVICE_CODE: "serviceCode",
    TENANCY: "tenancy",
    USAGE_TYPE: "usageType",
};
export const CurrencyCode = {
    CNY: "CNY",
    USD: "USD",
};
export const SavingsPlanProductType = {
    EC2: "EC2",
    FARGATE: "Fargate",
    LAMBDA: "Lambda",
    SAGEMAKER: "SageMaker",
};
export const SavingsPlanRatePropertyKey = {
    INSTANCE_FAMILY: "instanceFamily",
    INSTANCE_TYPE: "instanceType",
    PRODUCT_DESCRIPTION: "productDescription",
    REGION: "region",
    TENANCY: "tenancy",
};
export const SavingsPlanRateServiceCode = {
    EC2: "AmazonEC2",
    FARGATE: "AmazonECS",
    FARGATE_EKS: "AmazonEKS",
    LAMBDA: "AWSLambda",
    SAGEMAKER: "AmazonSageMaker",
};
export const SavingsPlanRateUnit = {
    HOURS: "Hrs",
    LAMBDA_GB_SECOND: "Lambda-GB-Second",
    REQUEST: "Request",
};
export const SavingsPlansFilterName = {
    COMMITMENT: "commitment",
    EC2_INSTANCE_FAMILY: "ec2-instance-family",
    END: "end",
    PAYMENT_OPTION: "payment-option",
    REGION: "region",
    SAVINGS_PLAN_TYPE: "savings-plan-type",
    START: "start",
    TERM: "term",
    UPFRONT: "upfront",
};
export const SavingsPlanState = {
    ACTIVE: "active",
    PAYMENT_FAILED: "payment-failed",
    PAYMENT_PENDING: "payment-pending",
    QUEUED: "queued",
    QUEUED_DELETED: "queued-deleted",
    RETIRED: "retired",
};
export const SavingsPlanPaymentOption = {
    ALL_UPFRONT: "All Upfront",
    NO_UPFRONT: "No Upfront",
    PARTIAL_UPFRONT: "Partial Upfront",
};
export const SavingsPlanType = {
    COMPUTE: "Compute",
    EC2_INSTANCE: "EC2Instance",
    SAGEMAKER: "SageMaker",
};
export const SavingsPlanRateFilterAttribute = {
    INSTANCE_FAMILY: "instanceFamily",
    INSTANCE_TYPE: "instanceType",
    PRODUCT_DESCRIPTION: "productDescription",
    PRODUCT_ID: "productId",
    REGION: "region",
    TENANCY: "tenancy",
};
export const SavingsPlanOfferingFilterAttribute = {
    instanceFamily: "instanceFamily",
    region: "region",
};
export const SavingsPlanOfferingPropertyKey = {
    INSTANCE_FAMILY: "instanceFamily",
    REGION: "region",
};
