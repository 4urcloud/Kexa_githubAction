import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { SavingsplansServiceException as __BaseException } from "./SavingsplansServiceException";
/**
 * @public
 */
export interface CreateSavingsPlanRequest {
    /**
     * <p>The ID of the offering.</p>
     * @public
     */
    savingsPlanOfferingId: string | undefined;
    /**
     * <p>The hourly commitment, in the same currency of the <code>savingsPlanOfferingId</code>.
     *          This is a value between 0.001 and 1 million. You cannot specify more than five digits after
     *          the decimal point.</p>
     * @public
     */
    commitment: string | undefined;
    /**
     * <p>The up-front payment amount. This is a whole number between 50 and 99 percent of the
     *          total value of the Savings Plan. This parameter is only supported if the
     *          payment option is <code>Partial Upfront</code>.</p>
     * @public
     */
    upfrontPaymentAmount?: string;
    /**
     * <p>The purchase time of the Savings Plan in UTC format
     *          (YYYY-MM-DDTHH:MM:SSZ).</p>
     * @public
     */
    purchaseTime?: Date;
    /**
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request.</p>
     * @public
     */
    clientToken?: string;
    /**
     * <p>One or more tags.</p>
     * @public
     */
    tags?: Record<string, string>;
}
/**
 * @public
 */
export interface CreateSavingsPlanResponse {
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId?: string;
}
/**
 * <p>An unexpected error occurred.</p>
 * @public
 */
export declare class InternalServerException extends __BaseException {
    readonly name: "InternalServerException";
    readonly $fault: "server";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
}
/**
 * <p>The specified resource was not found.</p>
 * @public
 */
export declare class ResourceNotFoundException extends __BaseException {
    readonly name: "ResourceNotFoundException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
}
/**
 * <p>A service quota has been exceeded.</p>
 * @public
 */
export declare class ServiceQuotaExceededException extends __BaseException {
    readonly name: "ServiceQuotaExceededException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
}
/**
 * <p>One of the input parameters is not valid.</p>
 * @public
 */
export declare class ValidationException extends __BaseException {
    readonly name: "ValidationException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
}
/**
 * @public
 */
export interface DeleteQueuedSavingsPlanRequest {
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId: string | undefined;
}
/**
 * @public
 */
export interface DeleteQueuedSavingsPlanResponse {
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanRateFilterName: {
    readonly INSTANCE_TYPE: "instanceType";
    readonly OPERATION: "operation";
    readonly PRODUCT_DESCRIPTION: "productDescription";
    readonly PRODUCT_TYPE: "productType";
    readonly REGION: "region";
    readonly SERVICE_CODE: "serviceCode";
    readonly TENANCY: "tenancy";
    readonly USAGE_TYPE: "usageType";
};
/**
 * @public
 */
export type SavingsPlanRateFilterName = (typeof SavingsPlanRateFilterName)[keyof typeof SavingsPlanRateFilterName];
/**
 * <p>Information about a Savings Plan rate filter.</p>
 * @public
 */
export interface SavingsPlanRateFilter {
    /**
     * <p>The filter name.</p>
     * @public
     */
    name?: SavingsPlanRateFilterName;
    /**
     * <p>The filter values.</p>
     * @public
     */
    values?: string[];
}
/**
 * @public
 */
export interface DescribeSavingsPlanRatesRequest {
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId: string | undefined;
    /**
     * <p>The filters.</p>
     * @public
     */
    filters?: SavingsPlanRateFilter[];
    /**
     * <p>The token for the next page of results.</p>
     * @public
     */
    nextToken?: string;
    /**
     * <p>The maximum number of results to return with a single call. To retrieve additional
     *          results, make another call with the returned token value.</p>
     * @public
     */
    maxResults?: number;
}
/**
 * @public
 * @enum
 */
export declare const CurrencyCode: {
    readonly CNY: "CNY";
    readonly USD: "USD";
};
/**
 * @public
 */
export type CurrencyCode = (typeof CurrencyCode)[keyof typeof CurrencyCode];
/**
 * @public
 * @enum
 */
export declare const SavingsPlanProductType: {
    readonly EC2: "EC2";
    readonly FARGATE: "Fargate";
    readonly LAMBDA: "Lambda";
    readonly SAGEMAKER: "SageMaker";
};
/**
 * @public
 */
export type SavingsPlanProductType = (typeof SavingsPlanProductType)[keyof typeof SavingsPlanProductType];
/**
 * @public
 * @enum
 */
export declare const SavingsPlanRatePropertyKey: {
    readonly INSTANCE_FAMILY: "instanceFamily";
    readonly INSTANCE_TYPE: "instanceType";
    readonly PRODUCT_DESCRIPTION: "productDescription";
    readonly REGION: "region";
    readonly TENANCY: "tenancy";
};
/**
 * @public
 */
export type SavingsPlanRatePropertyKey = (typeof SavingsPlanRatePropertyKey)[keyof typeof SavingsPlanRatePropertyKey];
/**
 * <p>Information about a Savings Plan rate property.</p>
 * @public
 */
export interface SavingsPlanRateProperty {
    /**
     * <p>The property name.</p>
     * @public
     */
    name?: SavingsPlanRatePropertyKey;
    /**
     * <p>The property value.</p>
     * @public
     */
    value?: string;
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanRateServiceCode: {
    readonly EC2: "AmazonEC2";
    readonly FARGATE: "AmazonECS";
    readonly FARGATE_EKS: "AmazonEKS";
    readonly LAMBDA: "AWSLambda";
    readonly SAGEMAKER: "AmazonSageMaker";
};
/**
 * @public
 */
export type SavingsPlanRateServiceCode = (typeof SavingsPlanRateServiceCode)[keyof typeof SavingsPlanRateServiceCode];
/**
 * @public
 * @enum
 */
export declare const SavingsPlanRateUnit: {
    readonly HOURS: "Hrs";
    readonly LAMBDA_GB_SECOND: "Lambda-GB-Second";
    readonly REQUEST: "Request";
};
/**
 * @public
 */
export type SavingsPlanRateUnit = (typeof SavingsPlanRateUnit)[keyof typeof SavingsPlanRateUnit];
/**
 * <p>Information about a Savings Plan rate.</p>
 * @public
 */
export interface SavingsPlanRate {
    /**
     * <p>The rate.</p>
     * @public
     */
    rate?: string;
    /**
     * <p>The currency.</p>
     * @public
     */
    currency?: CurrencyCode;
    /**
     * <p>The unit.</p>
     * @public
     */
    unit?: SavingsPlanRateUnit;
    /**
     * <p>The product type.</p>
     * @public
     */
    productType?: SavingsPlanProductType;
    /**
     * <p>The service.</p>
     * @public
     */
    serviceCode?: SavingsPlanRateServiceCode;
    /**
     * <p>The usage details of the line item in the billing report.</p>
     * @public
     */
    usageType?: string;
    /**
     * <p>The specific Amazon Web Services operation for the line item in the billing
     *          report.</p>
     * @public
     */
    operation?: string;
    /**
     * <p>The properties.</p>
     * @public
     */
    properties?: SavingsPlanRateProperty[];
}
/**
 * @public
 */
export interface DescribeSavingsPlanRatesResponse {
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId?: string;
    /**
     * <p>Information about the Savings Plan rates.</p>
     * @public
     */
    searchResults?: SavingsPlanRate[];
    /**
     * <p>The token to use to retrieve the next page of results. This value is null when there are
     *          no more results to return.</p>
     * @public
     */
    nextToken?: string;
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlansFilterName: {
    readonly COMMITMENT: "commitment";
    readonly EC2_INSTANCE_FAMILY: "ec2-instance-family";
    readonly END: "end";
    readonly PAYMENT_OPTION: "payment-option";
    readonly REGION: "region";
    readonly SAVINGS_PLAN_TYPE: "savings-plan-type";
    readonly START: "start";
    readonly TERM: "term";
    readonly UPFRONT: "upfront";
};
/**
 * @public
 */
export type SavingsPlansFilterName = (typeof SavingsPlansFilterName)[keyof typeof SavingsPlansFilterName];
/**
 * <p>Information about a Savings Plan filter.</p>
 * @public
 */
export interface SavingsPlanFilter {
    /**
     * <p>The filter name.</p>
     * @public
     */
    name?: SavingsPlansFilterName;
    /**
     * <p>The filter value.</p>
     * @public
     */
    values?: string[];
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanState: {
    readonly ACTIVE: "active";
    readonly PAYMENT_FAILED: "payment-failed";
    readonly PAYMENT_PENDING: "payment-pending";
    readonly PENDING_RETURN: "pending-return";
    readonly QUEUED: "queued";
    readonly QUEUED_DELETED: "queued-deleted";
    readonly RETIRED: "retired";
    readonly RETURNED: "returned";
};
/**
 * @public
 */
export type SavingsPlanState = (typeof SavingsPlanState)[keyof typeof SavingsPlanState];
/**
 * @public
 */
export interface DescribeSavingsPlansRequest {
    /**
     * <p>The Amazon Resource Names (ARN) of the Savings Plans.</p>
     * @public
     */
    savingsPlanArns?: string[];
    /**
     * <p>The IDs of the Savings Plans.</p>
     * @public
     */
    savingsPlanIds?: string[];
    /**
     * <p>The token for the next page of results.</p>
     * @public
     */
    nextToken?: string;
    /**
     * <p>The maximum number of results to return with a single call. To retrieve additional
     *          results, make another call with the returned token value.</p>
     * @public
     */
    maxResults?: number;
    /**
     * <p>The current states of the Savings Plans.</p>
     * @public
     */
    states?: SavingsPlanState[];
    /**
     * <p>The filters.</p>
     * @public
     */
    filters?: SavingsPlanFilter[];
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanPaymentOption: {
    readonly ALL_UPFRONT: "All Upfront";
    readonly NO_UPFRONT: "No Upfront";
    readonly PARTIAL_UPFRONT: "Partial Upfront";
};
/**
 * @public
 */
export type SavingsPlanPaymentOption = (typeof SavingsPlanPaymentOption)[keyof typeof SavingsPlanPaymentOption];
/**
 * @public
 * @enum
 */
export declare const SavingsPlanType: {
    readonly COMPUTE: "Compute";
    readonly EC2_INSTANCE: "EC2Instance";
    readonly SAGEMAKER: "SageMaker";
};
/**
 * @public
 */
export type SavingsPlanType = (typeof SavingsPlanType)[keyof typeof SavingsPlanType];
/**
 * <p>Information about a Savings Plan.</p>
 * @public
 */
export interface SavingsPlan {
    /**
     * <p>The ID of the offering.</p>
     * @public
     */
    offeringId?: string;
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId?: string;
    /**
     * <p>The Amazon Resource Name (ARN) of the Savings Plan.</p>
     * @public
     */
    savingsPlanArn?: string;
    /**
     * <p>The description.</p>
     * @public
     */
    description?: string;
    /**
     * <p>The start time.</p>
     * @public
     */
    start?: string;
    /**
     * <p>The end time.</p>
     * @public
     */
    end?: string;
    /**
     * <p>The current state.</p>
     * @public
     */
    state?: SavingsPlanState;
    /**
     * <p>The Amazon Web Services Region.</p>
     * @public
     */
    region?: string;
    /**
     * <p>The EC2 instance family.</p>
     * @public
     */
    ec2InstanceFamily?: string;
    /**
     * <p>The plan type.</p>
     * @public
     */
    savingsPlanType?: SavingsPlanType;
    /**
     * <p>The payment option.</p>
     * @public
     */
    paymentOption?: SavingsPlanPaymentOption;
    /**
     * <p>The product types.</p>
     * @public
     */
    productTypes?: SavingsPlanProductType[];
    /**
     * <p>The currency.</p>
     * @public
     */
    currency?: CurrencyCode;
    /**
     * <p>The hourly commitment amount in the specified currency.</p>
     * @public
     */
    commitment?: string;
    /**
     * <p>The up-front payment amount.</p>
     * @public
     */
    upfrontPaymentAmount?: string;
    /**
     * <p>The recurring payment amount.</p>
     * @public
     */
    recurringPaymentAmount?: string;
    /**
     * <p>The duration of the term, in seconds.</p>
     * @public
     */
    termDurationInSeconds?: number;
    /**
     * <p>One or more tags.</p>
     * @public
     */
    tags?: Record<string, string>;
    /**
     * <p>The time until when a return for the Savings Plan can be requested. If the
     *             Savings Plan is not returnable, the field reflects the Savings Plan start time.</p>
     * @public
     */
    returnableUntil?: string;
}
/**
 * @public
 */
export interface DescribeSavingsPlansResponse {
    /**
     * <p>Information about the Savings Plans.</p>
     * @public
     */
    savingsPlans?: SavingsPlan[];
    /**
     * <p>The token to use to retrieve the next page of results. This value is null when there are
     *          no more results to return.</p>
     * @public
     */
    nextToken?: string;
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanRateFilterAttribute: {
    readonly INSTANCE_FAMILY: "instanceFamily";
    readonly INSTANCE_TYPE: "instanceType";
    readonly PRODUCT_DESCRIPTION: "productDescription";
    readonly PRODUCT_ID: "productId";
    readonly REGION: "region";
    readonly TENANCY: "tenancy";
};
/**
 * @public
 */
export type SavingsPlanRateFilterAttribute = (typeof SavingsPlanRateFilterAttribute)[keyof typeof SavingsPlanRateFilterAttribute];
/**
 * <p>Information about a Savings Plan offering rate filter.</p>
 * @public
 */
export interface SavingsPlanOfferingRateFilterElement {
    /**
     * <p>The filter name.</p>
     * @public
     */
    name?: SavingsPlanRateFilterAttribute;
    /**
     * <p>The filter values.</p>
     * @public
     */
    values?: string[];
}
/**
 * @public
 */
export interface DescribeSavingsPlansOfferingRatesRequest {
    /**
     * <p>The IDs of the offerings.</p>
     * @public
     */
    savingsPlanOfferingIds?: string[];
    /**
     * <p>The payment options.</p>
     * @public
     */
    savingsPlanPaymentOptions?: SavingsPlanPaymentOption[];
    /**
     * <p>The plan types.</p>
     * @public
     */
    savingsPlanTypes?: SavingsPlanType[];
    /**
     * <p>The Amazon Web Services products.</p>
     * @public
     */
    products?: SavingsPlanProductType[];
    /**
     * <p>The services.</p>
     * @public
     */
    serviceCodes?: SavingsPlanRateServiceCode[];
    /**
     * <p>The usage details of the line item in the billing report.</p>
     * @public
     */
    usageTypes?: string[];
    /**
     * <p>The specific Amazon Web Services operation for the line item in the billing
     *          report.</p>
     * @public
     */
    operations?: string[];
    /**
     * <p>The filters.</p>
     * @public
     */
    filters?: SavingsPlanOfferingRateFilterElement[];
    /**
     * <p>The token for the next page of results.</p>
     * @public
     */
    nextToken?: string;
    /**
     * <p>The maximum number of results to return with a single call. To retrieve additional
     *          results, make another call with the returned token value.</p>
     * @public
     */
    maxResults?: number;
}
/**
 * <p>Information about a Savings Plan offering rate property.</p>
 * @public
 */
export interface SavingsPlanOfferingRateProperty {
    /**
     * <p>The property name.</p>
     * @public
     */
    name?: string;
    /**
     * <p>The property value.</p>
     * @public
     */
    value?: string;
}
/**
 * <p>Information about a Savings Plan offering.</p>
 * @public
 */
export interface ParentSavingsPlanOffering {
    /**
     * <p>The ID of the offering.</p>
     * @public
     */
    offeringId?: string;
    /**
     * <p>The payment option.</p>
     * @public
     */
    paymentOption?: SavingsPlanPaymentOption;
    /**
     * <p>The plan type.</p>
     * @public
     */
    planType?: SavingsPlanType;
    /**
     * <p>The duration, in seconds.</p>
     * @public
     */
    durationSeconds?: number;
    /**
     * <p>The currency.</p>
     * @public
     */
    currency?: CurrencyCode;
    /**
     * <p>The description.</p>
     * @public
     */
    planDescription?: string;
}
/**
 * <p>Information about a Savings Plan offering rate.</p>
 * @public
 */
export interface SavingsPlanOfferingRate {
    /**
     * <p>The Savings Plan offering.</p>
     * @public
     */
    savingsPlanOffering?: ParentSavingsPlanOffering;
    /**
     * <p>The Savings Plan rate.</p>
     * @public
     */
    rate?: string;
    /**
     * <p>The unit.</p>
     * @public
     */
    unit?: SavingsPlanRateUnit;
    /**
     * <p>The product type.</p>
     * @public
     */
    productType?: SavingsPlanProductType;
    /**
     * <p>The service.</p>
     * @public
     */
    serviceCode?: SavingsPlanRateServiceCode;
    /**
     * <p>The usage details of the line item in the billing report.</p>
     * @public
     */
    usageType?: string;
    /**
     * <p>The specific Amazon Web Services operation for the line item in the billing
     *          report.</p>
     * @public
     */
    operation?: string;
    /**
     * <p>The properties.</p>
     * @public
     */
    properties?: SavingsPlanOfferingRateProperty[];
}
/**
 * @public
 */
export interface DescribeSavingsPlansOfferingRatesResponse {
    /**
     * <p>Information about the Savings Plans offering rates.</p>
     * @public
     */
    searchResults?: SavingsPlanOfferingRate[];
    /**
     * <p>The token to use to retrieve the next page of results. This value is null when there are
     *          no more results to return.</p>
     * @public
     */
    nextToken?: string;
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanOfferingFilterAttribute: {
    readonly instanceFamily: "instanceFamily";
    readonly region: "region";
};
/**
 * @public
 */
export type SavingsPlanOfferingFilterAttribute = (typeof SavingsPlanOfferingFilterAttribute)[keyof typeof SavingsPlanOfferingFilterAttribute];
/**
 * <p>Information about a Savings Plan offering filter.</p>
 * @public
 */
export interface SavingsPlanOfferingFilterElement {
    /**
     * <p>The filter name.</p>
     * @public
     */
    name?: SavingsPlanOfferingFilterAttribute;
    /**
     * <p>The filter values.</p>
     * @public
     */
    values?: string[];
}
/**
 * @public
 */
export interface DescribeSavingsPlansOfferingsRequest {
    /**
     * <p>The IDs of the offerings.</p>
     * @public
     */
    offeringIds?: string[];
    /**
     * <p>The payment options.</p>
     * @public
     */
    paymentOptions?: SavingsPlanPaymentOption[];
    /**
     * <p>The product type.</p>
     * @public
     */
    productType?: SavingsPlanProductType;
    /**
     * <p>The plan types.</p>
     * @public
     */
    planTypes?: SavingsPlanType[];
    /**
     * <p>The duration, in seconds.</p>
     * @public
     */
    durations?: number[];
    /**
     * <p>The currencies.</p>
     * @public
     */
    currencies?: CurrencyCode[];
    /**
     * <p>The descriptions.</p>
     * @public
     */
    descriptions?: string[];
    /**
     * <p>The services.</p>
     * @public
     */
    serviceCodes?: string[];
    /**
     * <p>The usage details of the line item in the billing report.</p>
     * @public
     */
    usageTypes?: string[];
    /**
     * <p>The specific Amazon Web Services operation for the line item in the billing
     *          report.</p>
     * @public
     */
    operations?: string[];
    /**
     * <p>The filters.</p>
     * @public
     */
    filters?: SavingsPlanOfferingFilterElement[];
    /**
     * <p>The token for the next page of results.</p>
     * @public
     */
    nextToken?: string;
    /**
     * <p>The maximum number of results to return with a single call. To retrieve additional
     *          results, make another call with the returned token value.</p>
     * @public
     */
    maxResults?: number;
}
/**
 * @public
 * @enum
 */
export declare const SavingsPlanOfferingPropertyKey: {
    readonly INSTANCE_FAMILY: "instanceFamily";
    readonly REGION: "region";
};
/**
 * @public
 */
export type SavingsPlanOfferingPropertyKey = (typeof SavingsPlanOfferingPropertyKey)[keyof typeof SavingsPlanOfferingPropertyKey];
/**
 * <p>Information about a Savings Plan offering property.</p>
 * @public
 */
export interface SavingsPlanOfferingProperty {
    /**
     * <p>The property name.</p>
     * @public
     */
    name?: SavingsPlanOfferingPropertyKey;
    /**
     * <p>The property value.</p>
     * @public
     */
    value?: string;
}
/**
 * <p>Information about a Savings Plan offering.</p>
 * @public
 */
export interface SavingsPlanOffering {
    /**
     * <p>The ID of the offering.</p>
     * @public
     */
    offeringId?: string;
    /**
     * <p>The product type.</p>
     * @public
     */
    productTypes?: SavingsPlanProductType[];
    /**
     * <p>The plan type.</p>
     * @public
     */
    planType?: SavingsPlanType;
    /**
     * <p>The description.</p>
     * @public
     */
    description?: string;
    /**
     * <p>The payment option.</p>
     * @public
     */
    paymentOption?: SavingsPlanPaymentOption;
    /**
     * <p>The duration, in seconds.</p>
     * @public
     */
    durationSeconds?: number;
    /**
     * <p>The currency.</p>
     * @public
     */
    currency?: CurrencyCode;
    /**
     * <p>The service.</p>
     * @public
     */
    serviceCode?: string;
    /**
     * <p>The usage details of the line item in the billing report.</p>
     * @public
     */
    usageType?: string;
    /**
     * <p>The specific Amazon Web Services operation for the line item in the billing
     *          report.</p>
     * @public
     */
    operation?: string;
    /**
     * <p>The properties.</p>
     * @public
     */
    properties?: SavingsPlanOfferingProperty[];
}
/**
 * @public
 */
export interface DescribeSavingsPlansOfferingsResponse {
    /**
     * <p>Information about the Savings Plans offerings.</p>
     * @public
     */
    searchResults?: SavingsPlanOffering[];
    /**
     * <p>The token to use to retrieve the next page of results. This value is null when there are
     *          no more results to return.</p>
     * @public
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface ListTagsForResourceRequest {
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * @public
     */
    resourceArn: string | undefined;
}
/**
 * @public
 */
export interface ListTagsForResourceResponse {
    /**
     * <p>Information about the tags.</p>
     * @public
     */
    tags?: Record<string, string>;
}
/**
 * @public
 */
export interface ReturnSavingsPlanRequest {
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId: string | undefined;
    /**
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request.</p>
     * @public
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface ReturnSavingsPlanResponse {
    /**
     * <p>The ID of the Savings Plan.</p>
     * @public
     */
    savingsPlanId?: string;
}
/**
 * @public
 */
export interface TagResourceRequest {
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * @public
     */
    resourceArn: string | undefined;
    /**
     * <p>One or more tags. For example, \{ "tags": \{"key1":"value1", "key2":"value2"\} \}.</p>
     * @public
     */
    tags: Record<string, string> | undefined;
}
/**
 * @public
 */
export interface TagResourceResponse {
}
/**
 * @public
 */
export interface UntagResourceRequest {
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * @public
     */
    resourceArn: string | undefined;
    /**
     * <p>The tag keys.</p>
     * @public
     */
    tagKeys: string[] | undefined;
}
/**
 * @public
 */
export interface UntagResourceResponse {
}
