"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ApplicationFilterSensitiveLog: () => ApplicationFilterSensitiveLog,
  ApplicationState: () => ApplicationState,
  Architecture: () => Architecture,
  CancelJobRunCommand: () => CancelJobRunCommand,
  ConfigurationFilterSensitiveLog: () => ConfigurationFilterSensitiveLog,
  ConfigurationOverridesFilterSensitiveLog: () => ConfigurationOverridesFilterSensitiveLog,
  ConflictException: () => ConflictException,
  CreateApplicationCommand: () => CreateApplicationCommand,
  CreateApplicationRequestFilterSensitiveLog: () => CreateApplicationRequestFilterSensitiveLog,
  DeleteApplicationCommand: () => DeleteApplicationCommand,
  EMRServerless: () => EMRServerless,
  EMRServerlessClient: () => EMRServerlessClient,
  EMRServerlessServiceException: () => EMRServerlessServiceException,
  GetApplicationCommand: () => GetApplicationCommand,
  GetApplicationResponseFilterSensitiveLog: () => GetApplicationResponseFilterSensitiveLog,
  GetDashboardForJobRunCommand: () => GetDashboardForJobRunCommand,
  GetJobRunCommand: () => GetJobRunCommand,
  GetJobRunResponseFilterSensitiveLog: () => GetJobRunResponseFilterSensitiveLog,
  HiveFilterSensitiveLog: () => HiveFilterSensitiveLog,
  InternalServerException: () => InternalServerException,
  JobDriver: () => JobDriver,
  JobDriverFilterSensitiveLog: () => JobDriverFilterSensitiveLog,
  JobRunFilterSensitiveLog: () => JobRunFilterSensitiveLog,
  JobRunState: () => JobRunState,
  ListApplicationsCommand: () => ListApplicationsCommand,
  ListJobRunsCommand: () => ListJobRunsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SparkSubmitFilterSensitiveLog: () => SparkSubmitFilterSensitiveLog,
  StartApplicationCommand: () => StartApplicationCommand,
  StartJobRunCommand: () => StartJobRunCommand,
  StartJobRunRequestFilterSensitiveLog: () => StartJobRunRequestFilterSensitiveLog,
  StopApplicationCommand: () => StopApplicationCommand,
  TagResourceCommand: () => TagResourceCommand,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateApplicationCommand: () => UpdateApplicationCommand,
  UpdateApplicationRequestFilterSensitiveLog: () => UpdateApplicationRequestFilterSensitiveLog,
  UpdateApplicationResponseFilterSensitiveLog: () => UpdateApplicationResponseFilterSensitiveLog,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListApplications: () => paginateListApplications,
  paginateListJobRuns: () => paginateListJobRuns
});
module.exports = __toCommonJS(src_exports);

// src/EMRServerlessClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "emr-serverless"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/EMRServerlessClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/EMRServerlessClient.ts
var _EMRServerlessClient = class _EMRServerlessClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultEMRServerlessHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_EMRServerlessClient, "EMRServerlessClient");
var EMRServerlessClient = _EMRServerlessClient;

// src/EMRServerless.ts


// src/commands/CancelJobRunCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/EMRServerlessServiceException.ts

var _EMRServerlessServiceException = class _EMRServerlessServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _EMRServerlessServiceException.prototype);
  }
};
__name(_EMRServerlessServiceException, "EMRServerlessServiceException");
var EMRServerlessServiceException = _EMRServerlessServiceException;

// src/models/models_0.ts

var Architecture = {
  ARM64: "ARM64",
  X86_64: "X86_64"
};
var ApplicationState = {
  CREATED: "CREATED",
  CREATING: "CREATING",
  STARTED: "STARTED",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING",
  TERMINATED: "TERMINATED"
};
var _ConflictException = class _ConflictException extends EMRServerlessServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends EMRServerlessServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends EMRServerlessServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ValidationException = class _ValidationException extends EMRServerlessServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends EMRServerlessServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var JobDriver;
((JobDriver3) => {
  JobDriver3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.sparkSubmit !== void 0)
      return visitor.sparkSubmit(value.sparkSubmit);
    if (value.hive !== void 0)
      return visitor.hive(value.hive);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(JobDriver || (JobDriver = {}));
var JobRunState = {
  CANCELLED: "CANCELLED",
  CANCELLING: "CANCELLING",
  FAILED: "FAILED",
  PENDING: "PENDING",
  RUNNING: "RUNNING",
  SCHEDULED: "SCHEDULED",
  SUBMITTED: "SUBMITTED",
  SUCCESS: "SUCCESS"
};
var HiveFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.query && { query: import_smithy_client.SENSITIVE_STRING },
  ...obj.initQueryFile && { initQueryFile: import_smithy_client.SENSITIVE_STRING },
  ...obj.parameters && { parameters: import_smithy_client.SENSITIVE_STRING }
}), "HiveFilterSensitiveLog");
var SparkSubmitFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.entryPoint && { entryPoint: import_smithy_client.SENSITIVE_STRING },
  ...obj.entryPointArguments && { entryPointArguments: import_smithy_client.SENSITIVE_STRING },
  ...obj.sparkSubmitParameters && { sparkSubmitParameters: import_smithy_client.SENSITIVE_STRING }
}), "SparkSubmitFilterSensitiveLog");
var JobDriverFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.sparkSubmit !== void 0)
    return { sparkSubmit: SparkSubmitFilterSensitiveLog(obj.sparkSubmit) };
  if (obj.hive !== void 0)
    return { hive: HiveFilterSensitiveLog(obj.hive) };
  if (obj.$unknown !== void 0)
    return { [obj.$unknown[0]]: "UNKNOWN" };
}, "JobDriverFilterSensitiveLog");
var ConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.properties && { properties: import_smithy_client.SENSITIVE_STRING },
  ...obj.configurations && {
    configurations: obj.configurations.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "ConfigurationFilterSensitiveLog");
var ApplicationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.runtimeConfiguration && {
    runtimeConfiguration: obj.runtimeConfiguration.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "ApplicationFilterSensitiveLog");
var ConfigurationOverridesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.applicationConfiguration && {
    applicationConfiguration: obj.applicationConfiguration.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "ConfigurationOverridesFilterSensitiveLog");
var CreateApplicationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.runtimeConfiguration && {
    runtimeConfiguration: obj.runtimeConfiguration.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "CreateApplicationRequestFilterSensitiveLog");
var UpdateApplicationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.runtimeConfiguration && {
    runtimeConfiguration: obj.runtimeConfiguration.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "UpdateApplicationRequestFilterSensitiveLog");
var GetApplicationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.application && { application: ApplicationFilterSensitiveLog(obj.application) }
}), "GetApplicationResponseFilterSensitiveLog");
var JobRunFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.configurationOverrides && {
    configurationOverrides: ConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  },
  ...obj.jobDriver && { jobDriver: JobDriverFilterSensitiveLog(obj.jobDriver) }
}), "JobRunFilterSensitiveLog");
var StartJobRunRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobDriver && { jobDriver: JobDriverFilterSensitiveLog(obj.jobDriver) },
  ...obj.configurationOverrides && {
    configurationOverrides: ConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  }
}), "StartJobRunRequestFilterSensitiveLog");
var UpdateApplicationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.application && { application: ApplicationFilterSensitiveLog(obj.application) }
}), "UpdateApplicationResponseFilterSensitiveLog");
var GetJobRunResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobRun && { jobRun: JobRunFilterSensitiveLog(obj.jobRun) }
}), "GetJobRunResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CancelJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/jobruns/{jobRunId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("jobRunId", () => input.jobRunId, "{jobRunId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_CancelJobRunCommand");
var se_CreateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      architecture: [],
      autoStartConfiguration: (_) => (0, import_smithy_client._json)(_),
      autoStopConfiguration: (_) => (0, import_smithy_client._json)(_),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      imageConfiguration: (_) => (0, import_smithy_client._json)(_),
      initialCapacity: (_) => (0, import_smithy_client._json)(_),
      maximumCapacity: (_) => (0, import_smithy_client._json)(_),
      monitoringConfiguration: (_) => (0, import_smithy_client._json)(_),
      name: [],
      networkConfiguration: (_) => (0, import_smithy_client._json)(_),
      releaseLabel: [],
      runtimeConfiguration: (_) => se_ConfigurationList(_, context),
      tags: (_) => (0, import_smithy_client._json)(_),
      type: [],
      workerTypeSpecifications: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationCommand");
var se_DeleteApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApplicationCommand");
var se_GetApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApplicationCommand");
var se_GetDashboardForJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/jobruns/{jobRunId}/dashboard");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("jobRunId", () => input.jobRunId, "{jobRunId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDashboardForJobRunCommand");
var se_GetJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/jobruns/{jobRunId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("jobRunId", () => input.jobRunId, "{jobRunId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetJobRunCommand");
var se_ListApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_s]: [() => input.states !== void 0, () => (input[_s] || []).map((_entry) => _entry)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationsCommand");
var se_ListJobRunsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/jobruns");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_cAA]: [() => input.createdAtAfter !== void 0, () => (input[_cAA].toISOString().split(".")[0] + "Z").toString()],
    [_cAB]: [() => input.createdAtBefore !== void 0, () => (input[_cAB].toISOString().split(".")[0] + "Z").toString()],
    [_s]: [() => input.states !== void 0, () => (input[_s] || []).map((_entry) => _entry)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJobRunsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_StartApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/start");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartApplicationCommand");
var se_StartJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/jobruns");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      configurationOverrides: (_) => se_ConfigurationOverrides(_, context),
      executionRoleArn: [],
      executionTimeoutMinutes: [],
      jobDriver: (_) => (0, import_smithy_client._json)(_),
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartJobRunCommand");
var se_StopApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/stop");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopApplicationCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      architecture: [],
      autoStartConfiguration: (_) => (0, import_smithy_client._json)(_),
      autoStopConfiguration: (_) => (0, import_smithy_client._json)(_),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      imageConfiguration: (_) => (0, import_smithy_client._json)(_),
      initialCapacity: (_) => (0, import_smithy_client._json)(_),
      maximumCapacity: (_) => (0, import_smithy_client._json)(_),
      monitoringConfiguration: (_) => (0, import_smithy_client._json)(_),
      networkConfiguration: (_) => (0, import_smithy_client._json)(_),
      releaseLabel: [],
      runtimeConfiguration: (_) => se_ConfigurationList(_, context),
      workerTypeSpecifications: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateApplicationCommand");
var de_CancelJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    jobRunId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelJobRunCommand");
var de_CreateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationCommand");
var de_DeleteApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApplicationCommand");
var de_GetApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    application: (_) => de_Application(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApplicationCommand");
var de_GetDashboardForJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    url: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDashboardForJobRunCommand");
var de_GetJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobRun: (_) => de_JobRun(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetJobRunCommand");
var de_ListApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applications: (_) => de_ApplicationList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationsCommand");
var de_ListJobRunsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobRuns: (_) => de_JobRuns(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJobRunsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_StartApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StartApplicationCommand");
var de_StartJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    jobRunId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartJobRunCommand");
var de_StopApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopApplicationCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    application: (_) => de_Application(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApplicationCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServerException":
    case "com.amazonaws.emrserverless#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.emrserverless#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.emrserverless#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.emrserverless#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.emrserverless#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(EMRServerlessServiceException);
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_Configuration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    classification: [],
    configurations: (_) => se_ConfigurationList(_, context),
    properties: import_smithy_client._json
  });
}, "se_Configuration");
var se_ConfigurationList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_Configuration(entry, context);
  });
}, "se_ConfigurationList");
var se_ConfigurationOverrides = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    applicationConfiguration: (_) => se_ConfigurationList(_, context),
    monitoringConfiguration: import_smithy_client._json
  });
}, "se_ConfigurationOverrides");
var de_Application = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationId: import_smithy_client.expectString,
    architecture: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    autoStartConfiguration: import_smithy_client._json,
    autoStopConfiguration: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    imageConfiguration: import_smithy_client._json,
    initialCapacity: import_smithy_client._json,
    maximumCapacity: import_smithy_client._json,
    monitoringConfiguration: import_smithy_client._json,
    name: import_smithy_client.expectString,
    networkConfiguration: import_smithy_client._json,
    releaseLabel: import_smithy_client.expectString,
    runtimeConfiguration: (_) => de_ConfigurationList(_, context),
    state: import_smithy_client.expectString,
    stateDetails: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    type: import_smithy_client.expectString,
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    workerTypeSpecifications: import_smithy_client._json
  });
}, "de_Application");
var de_ApplicationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationSummary(entry, context);
  });
  return retVal;
}, "de_ApplicationList");
var de_ApplicationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    architecture: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    releaseLabel: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    stateDetails: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ApplicationSummary");
var de_Configuration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    classification: import_smithy_client.expectString,
    configurations: (_) => de_ConfigurationList(_, context),
    properties: import_smithy_client._json
  });
}, "de_Configuration");
var de_ConfigurationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Configuration(entry, context);
  });
  return retVal;
}, "de_ConfigurationList");
var de_ConfigurationOverrides = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationConfiguration: (_) => de_ConfigurationList(_, context),
    monitoringConfiguration: import_smithy_client._json
  });
}, "de_ConfigurationOverrides");
var de_JobRun = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationId: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    billedResourceUtilization: (_) => de_ResourceUtilization(_, context),
    configurationOverrides: (_) => de_ConfigurationOverrides(_, context),
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdBy: import_smithy_client.expectString,
    executionRole: import_smithy_client.expectString,
    executionTimeoutMinutes: import_smithy_client.expectLong,
    jobDriver: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    jobRunId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    networkConfiguration: import_smithy_client._json,
    releaseLabel: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    stateDetails: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    totalExecutionDurationSeconds: import_smithy_client.expectInt32,
    totalResourceUtilization: (_) => de_TotalResourceUtilization(_, context),
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_JobRun");
var de_JobRuns = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JobRunSummary(entry, context);
  });
  return retVal;
}, "de_JobRuns");
var de_JobRunSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationId: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdBy: import_smithy_client.expectString,
    executionRole: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    releaseLabel: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    stateDetails: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_JobRunSummary");
var de_ResourceUtilization = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    memoryGBHour: import_smithy_client.limitedParseDouble,
    storageGBHour: import_smithy_client.limitedParseDouble,
    vCPUHour: import_smithy_client.limitedParseDouble
  });
}, "de_ResourceUtilization");
var de_TotalResourceUtilization = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    memoryGBHour: import_smithy_client.limitedParseDouble,
    storageGBHour: import_smithy_client.limitedParseDouble,
    vCPUHour: import_smithy_client.limitedParseDouble
  });
}, "de_TotalResourceUtilization");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _cAA = "createdAtAfter";
var _cAB = "createdAtBefore";
var _mR = "maxResults";
var _nT = "nextToken";
var _s = "states";
var _tK = "tagKeys";

// src/commands/CancelJobRunCommand.ts
var _CancelJobRunCommand = class _CancelJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "CancelJobRun", {}).n("EMRServerlessClient", "CancelJobRunCommand").f(void 0, void 0).ser(se_CancelJobRunCommand).de(de_CancelJobRunCommand).build() {
};
__name(_CancelJobRunCommand, "CancelJobRunCommand");
var CancelJobRunCommand = _CancelJobRunCommand;

// src/commands/CreateApplicationCommand.ts




var _CreateApplicationCommand = class _CreateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "CreateApplication", {}).n("EMRServerlessClient", "CreateApplicationCommand").f(CreateApplicationRequestFilterSensitiveLog, void 0).ser(se_CreateApplicationCommand).de(de_CreateApplicationCommand).build() {
};
__name(_CreateApplicationCommand, "CreateApplicationCommand");
var CreateApplicationCommand = _CreateApplicationCommand;

// src/commands/DeleteApplicationCommand.ts




var _DeleteApplicationCommand = class _DeleteApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "DeleteApplication", {}).n("EMRServerlessClient", "DeleteApplicationCommand").f(void 0, void 0).ser(se_DeleteApplicationCommand).de(de_DeleteApplicationCommand).build() {
};
__name(_DeleteApplicationCommand, "DeleteApplicationCommand");
var DeleteApplicationCommand = _DeleteApplicationCommand;

// src/commands/GetApplicationCommand.ts




var _GetApplicationCommand = class _GetApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "GetApplication", {}).n("EMRServerlessClient", "GetApplicationCommand").f(void 0, GetApplicationResponseFilterSensitiveLog).ser(se_GetApplicationCommand).de(de_GetApplicationCommand).build() {
};
__name(_GetApplicationCommand, "GetApplicationCommand");
var GetApplicationCommand = _GetApplicationCommand;

// src/commands/GetDashboardForJobRunCommand.ts




var _GetDashboardForJobRunCommand = class _GetDashboardForJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "GetDashboardForJobRun", {}).n("EMRServerlessClient", "GetDashboardForJobRunCommand").f(void 0, void 0).ser(se_GetDashboardForJobRunCommand).de(de_GetDashboardForJobRunCommand).build() {
};
__name(_GetDashboardForJobRunCommand, "GetDashboardForJobRunCommand");
var GetDashboardForJobRunCommand = _GetDashboardForJobRunCommand;

// src/commands/GetJobRunCommand.ts




var _GetJobRunCommand = class _GetJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "GetJobRun", {}).n("EMRServerlessClient", "GetJobRunCommand").f(void 0, GetJobRunResponseFilterSensitiveLog).ser(se_GetJobRunCommand).de(de_GetJobRunCommand).build() {
};
__name(_GetJobRunCommand, "GetJobRunCommand");
var GetJobRunCommand = _GetJobRunCommand;

// src/commands/ListApplicationsCommand.ts




var _ListApplicationsCommand = class _ListApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "ListApplications", {}).n("EMRServerlessClient", "ListApplicationsCommand").f(void 0, void 0).ser(se_ListApplicationsCommand).de(de_ListApplicationsCommand).build() {
};
__name(_ListApplicationsCommand, "ListApplicationsCommand");
var ListApplicationsCommand = _ListApplicationsCommand;

// src/commands/ListJobRunsCommand.ts




var _ListJobRunsCommand = class _ListJobRunsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "ListJobRuns", {}).n("EMRServerlessClient", "ListJobRunsCommand").f(void 0, void 0).ser(se_ListJobRunsCommand).de(de_ListJobRunsCommand).build() {
};
__name(_ListJobRunsCommand, "ListJobRunsCommand");
var ListJobRunsCommand = _ListJobRunsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "ListTagsForResource", {}).n("EMRServerlessClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/StartApplicationCommand.ts




var _StartApplicationCommand = class _StartApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "StartApplication", {}).n("EMRServerlessClient", "StartApplicationCommand").f(void 0, void 0).ser(se_StartApplicationCommand).de(de_StartApplicationCommand).build() {
};
__name(_StartApplicationCommand, "StartApplicationCommand");
var StartApplicationCommand = _StartApplicationCommand;

// src/commands/StartJobRunCommand.ts




var _StartJobRunCommand = class _StartJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "StartJobRun", {}).n("EMRServerlessClient", "StartJobRunCommand").f(StartJobRunRequestFilterSensitiveLog, void 0).ser(se_StartJobRunCommand).de(de_StartJobRunCommand).build() {
};
__name(_StartJobRunCommand, "StartJobRunCommand");
var StartJobRunCommand = _StartJobRunCommand;

// src/commands/StopApplicationCommand.ts




var _StopApplicationCommand = class _StopApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "StopApplication", {}).n("EMRServerlessClient", "StopApplicationCommand").f(void 0, void 0).ser(se_StopApplicationCommand).de(de_StopApplicationCommand).build() {
};
__name(_StopApplicationCommand, "StopApplicationCommand");
var StopApplicationCommand = _StopApplicationCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "TagResource", {}).n("EMRServerlessClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "UntagResource", {}).n("EMRServerlessClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateApplicationCommand.ts




var _UpdateApplicationCommand = class _UpdateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsToledoWebService", "UpdateApplication", {}).n("EMRServerlessClient", "UpdateApplicationCommand").f(UpdateApplicationRequestFilterSensitiveLog, UpdateApplicationResponseFilterSensitiveLog).ser(se_UpdateApplicationCommand).de(de_UpdateApplicationCommand).build() {
};
__name(_UpdateApplicationCommand, "UpdateApplicationCommand");
var UpdateApplicationCommand = _UpdateApplicationCommand;

// src/EMRServerless.ts
var commands = {
  CancelJobRunCommand,
  CreateApplicationCommand,
  DeleteApplicationCommand,
  GetApplicationCommand,
  GetDashboardForJobRunCommand,
  GetJobRunCommand,
  ListApplicationsCommand,
  ListJobRunsCommand,
  ListTagsForResourceCommand,
  StartApplicationCommand,
  StartJobRunCommand,
  StopApplicationCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApplicationCommand
};
var _EMRServerless = class _EMRServerless extends EMRServerlessClient {
};
__name(_EMRServerless, "EMRServerless");
var EMRServerless = _EMRServerless;
(0, import_smithy_client.createAggregatedClient)(commands, EMRServerless);

// src/pagination/ListApplicationsPaginator.ts

var paginateListApplications = (0, import_core.createPaginator)(EMRServerlessClient, ListApplicationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListJobRunsPaginator.ts

var paginateListJobRuns = (0, import_core.createPaginator)(EMRServerlessClient, ListJobRunsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  EMRServerlessServiceException,
  __Client,
  EMRServerlessClient,
  EMRServerless,
  $Command,
  CancelJobRunCommand,
  CreateApplicationCommand,
  DeleteApplicationCommand,
  GetApplicationCommand,
  GetDashboardForJobRunCommand,
  GetJobRunCommand,
  ListApplicationsCommand,
  ListJobRunsCommand,
  ListTagsForResourceCommand,
  StartApplicationCommand,
  StartJobRunCommand,
  StopApplicationCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApplicationCommand,
  paginateListApplications,
  paginateListJobRuns,
  Architecture,
  ApplicationState,
  ConflictException,
  InternalServerException,
  ResourceNotFoundException,
  ValidationException,
  ServiceQuotaExceededException,
  JobDriver,
  JobRunState,
  HiveFilterSensitiveLog,
  SparkSubmitFilterSensitiveLog,
  JobDriverFilterSensitiveLog,
  ConfigurationFilterSensitiveLog,
  ApplicationFilterSensitiveLog,
  ConfigurationOverridesFilterSensitiveLog,
  CreateApplicationRequestFilterSensitiveLog,
  UpdateApplicationRequestFilterSensitiveLog,
  GetApplicationResponseFilterSensitiveLog,
  JobRunFilterSensitiveLog,
  StartJobRunRequestFilterSensitiveLog,
  UpdateApplicationResponseFilterSensitiveLog,
  GetJobRunResponseFilterSensitiveLog
});

