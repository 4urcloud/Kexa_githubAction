import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { CloudSearchDomainClient } from "./CloudSearchDomainClient";
import {
  SearchCommandInput,
  SearchCommandOutput,
} from "./commands/SearchCommand";
import {
  SuggestCommandInput,
  SuggestCommandOutput,
} from "./commands/SuggestCommand";
import {
  UploadDocumentsCommandInput,
  UploadDocumentsCommandOutput,
} from "./commands/UploadDocumentsCommand";
export interface CloudSearchDomain {
  search(
    args: SearchCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SearchCommandOutput>;
  search(
    args: SearchCommandInput,
    cb: (err: any, data?: SearchCommandOutput) => void
  ): void;
  search(
    args: SearchCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SearchCommandOutput) => void
  ): void;
  suggest(
    args: SuggestCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SuggestCommandOutput>;
  suggest(
    args: SuggestCommandInput,
    cb: (err: any, data?: SuggestCommandOutput) => void
  ): void;
  suggest(
    args: SuggestCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SuggestCommandOutput) => void
  ): void;
  uploadDocuments(
    args: UploadDocumentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UploadDocumentsCommandOutput>;
  uploadDocuments(
    args: UploadDocumentsCommandInput,
    cb: (err: any, data?: UploadDocumentsCommandOutput) => void
  ): void;
  uploadDocuments(
    args: UploadDocumentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UploadDocumentsCommandOutput) => void
  ): void;
}
export declare class CloudSearchDomain
  extends CloudSearchDomainClient
  implements CloudSearchDomain {}
