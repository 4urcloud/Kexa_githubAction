import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateBrowserSettingsCommandInput,
  AssociateBrowserSettingsCommandOutput,
} from "./commands/AssociateBrowserSettingsCommand";
import {
  AssociateIpAccessSettingsCommandInput,
  AssociateIpAccessSettingsCommandOutput,
} from "./commands/AssociateIpAccessSettingsCommand";
import {
  AssociateNetworkSettingsCommandInput,
  AssociateNetworkSettingsCommandOutput,
} from "./commands/AssociateNetworkSettingsCommand";
import {
  AssociateTrustStoreCommandInput,
  AssociateTrustStoreCommandOutput,
} from "./commands/AssociateTrustStoreCommand";
import {
  AssociateUserAccessLoggingSettingsCommandInput,
  AssociateUserAccessLoggingSettingsCommandOutput,
} from "./commands/AssociateUserAccessLoggingSettingsCommand";
import {
  AssociateUserSettingsCommandInput,
  AssociateUserSettingsCommandOutput,
} from "./commands/AssociateUserSettingsCommand";
import {
  CreateBrowserSettingsCommandInput,
  CreateBrowserSettingsCommandOutput,
} from "./commands/CreateBrowserSettingsCommand";
import {
  CreateIdentityProviderCommandInput,
  CreateIdentityProviderCommandOutput,
} from "./commands/CreateIdentityProviderCommand";
import {
  CreateIpAccessSettingsCommandInput,
  CreateIpAccessSettingsCommandOutput,
} from "./commands/CreateIpAccessSettingsCommand";
import {
  CreateNetworkSettingsCommandInput,
  CreateNetworkSettingsCommandOutput,
} from "./commands/CreateNetworkSettingsCommand";
import {
  CreatePortalCommandInput,
  CreatePortalCommandOutput,
} from "./commands/CreatePortalCommand";
import {
  CreateTrustStoreCommandInput,
  CreateTrustStoreCommandOutput,
} from "./commands/CreateTrustStoreCommand";
import {
  CreateUserAccessLoggingSettingsCommandInput,
  CreateUserAccessLoggingSettingsCommandOutput,
} from "./commands/CreateUserAccessLoggingSettingsCommand";
import {
  CreateUserSettingsCommandInput,
  CreateUserSettingsCommandOutput,
} from "./commands/CreateUserSettingsCommand";
import {
  DeleteBrowserSettingsCommandInput,
  DeleteBrowserSettingsCommandOutput,
} from "./commands/DeleteBrowserSettingsCommand";
import {
  DeleteIdentityProviderCommandInput,
  DeleteIdentityProviderCommandOutput,
} from "./commands/DeleteIdentityProviderCommand";
import {
  DeleteIpAccessSettingsCommandInput,
  DeleteIpAccessSettingsCommandOutput,
} from "./commands/DeleteIpAccessSettingsCommand";
import {
  DeleteNetworkSettingsCommandInput,
  DeleteNetworkSettingsCommandOutput,
} from "./commands/DeleteNetworkSettingsCommand";
import {
  DeletePortalCommandInput,
  DeletePortalCommandOutput,
} from "./commands/DeletePortalCommand";
import {
  DeleteTrustStoreCommandInput,
  DeleteTrustStoreCommandOutput,
} from "./commands/DeleteTrustStoreCommand";
import {
  DeleteUserAccessLoggingSettingsCommandInput,
  DeleteUserAccessLoggingSettingsCommandOutput,
} from "./commands/DeleteUserAccessLoggingSettingsCommand";
import {
  DeleteUserSettingsCommandInput,
  DeleteUserSettingsCommandOutput,
} from "./commands/DeleteUserSettingsCommand";
import {
  DisassociateBrowserSettingsCommandInput,
  DisassociateBrowserSettingsCommandOutput,
} from "./commands/DisassociateBrowserSettingsCommand";
import {
  DisassociateIpAccessSettingsCommandInput,
  DisassociateIpAccessSettingsCommandOutput,
} from "./commands/DisassociateIpAccessSettingsCommand";
import {
  DisassociateNetworkSettingsCommandInput,
  DisassociateNetworkSettingsCommandOutput,
} from "./commands/DisassociateNetworkSettingsCommand";
import {
  DisassociateTrustStoreCommandInput,
  DisassociateTrustStoreCommandOutput,
} from "./commands/DisassociateTrustStoreCommand";
import {
  DisassociateUserAccessLoggingSettingsCommandInput,
  DisassociateUserAccessLoggingSettingsCommandOutput,
} from "./commands/DisassociateUserAccessLoggingSettingsCommand";
import {
  DisassociateUserSettingsCommandInput,
  DisassociateUserSettingsCommandOutput,
} from "./commands/DisassociateUserSettingsCommand";
import {
  GetBrowserSettingsCommandInput,
  GetBrowserSettingsCommandOutput,
} from "./commands/GetBrowserSettingsCommand";
import {
  GetIdentityProviderCommandInput,
  GetIdentityProviderCommandOutput,
} from "./commands/GetIdentityProviderCommand";
import {
  GetIpAccessSettingsCommandInput,
  GetIpAccessSettingsCommandOutput,
} from "./commands/GetIpAccessSettingsCommand";
import {
  GetNetworkSettingsCommandInput,
  GetNetworkSettingsCommandOutput,
} from "./commands/GetNetworkSettingsCommand";
import {
  GetPortalCommandInput,
  GetPortalCommandOutput,
} from "./commands/GetPortalCommand";
import {
  GetPortalServiceProviderMetadataCommandInput,
  GetPortalServiceProviderMetadataCommandOutput,
} from "./commands/GetPortalServiceProviderMetadataCommand";
import {
  GetTrustStoreCertificateCommandInput,
  GetTrustStoreCertificateCommandOutput,
} from "./commands/GetTrustStoreCertificateCommand";
import {
  GetTrustStoreCommandInput,
  GetTrustStoreCommandOutput,
} from "./commands/GetTrustStoreCommand";
import {
  GetUserAccessLoggingSettingsCommandInput,
  GetUserAccessLoggingSettingsCommandOutput,
} from "./commands/GetUserAccessLoggingSettingsCommand";
import {
  GetUserSettingsCommandInput,
  GetUserSettingsCommandOutput,
} from "./commands/GetUserSettingsCommand";
import {
  ListBrowserSettingsCommandInput,
  ListBrowserSettingsCommandOutput,
} from "./commands/ListBrowserSettingsCommand";
import {
  ListIdentityProvidersCommandInput,
  ListIdentityProvidersCommandOutput,
} from "./commands/ListIdentityProvidersCommand";
import {
  ListIpAccessSettingsCommandInput,
  ListIpAccessSettingsCommandOutput,
} from "./commands/ListIpAccessSettingsCommand";
import {
  ListNetworkSettingsCommandInput,
  ListNetworkSettingsCommandOutput,
} from "./commands/ListNetworkSettingsCommand";
import {
  ListPortalsCommandInput,
  ListPortalsCommandOutput,
} from "./commands/ListPortalsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListTrustStoreCertificatesCommandInput,
  ListTrustStoreCertificatesCommandOutput,
} from "./commands/ListTrustStoreCertificatesCommand";
import {
  ListTrustStoresCommandInput,
  ListTrustStoresCommandOutput,
} from "./commands/ListTrustStoresCommand";
import {
  ListUserAccessLoggingSettingsCommandInput,
  ListUserAccessLoggingSettingsCommandOutput,
} from "./commands/ListUserAccessLoggingSettingsCommand";
import {
  ListUserSettingsCommandInput,
  ListUserSettingsCommandOutput,
} from "./commands/ListUserSettingsCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateBrowserSettingsCommandInput,
  UpdateBrowserSettingsCommandOutput,
} from "./commands/UpdateBrowserSettingsCommand";
import {
  UpdateIdentityProviderCommandInput,
  UpdateIdentityProviderCommandOutput,
} from "./commands/UpdateIdentityProviderCommand";
import {
  UpdateIpAccessSettingsCommandInput,
  UpdateIpAccessSettingsCommandOutput,
} from "./commands/UpdateIpAccessSettingsCommand";
import {
  UpdateNetworkSettingsCommandInput,
  UpdateNetworkSettingsCommandOutput,
} from "./commands/UpdateNetworkSettingsCommand";
import {
  UpdatePortalCommandInput,
  UpdatePortalCommandOutput,
} from "./commands/UpdatePortalCommand";
import {
  UpdateTrustStoreCommandInput,
  UpdateTrustStoreCommandOutput,
} from "./commands/UpdateTrustStoreCommand";
import {
  UpdateUserAccessLoggingSettingsCommandInput,
  UpdateUserAccessLoggingSettingsCommandOutput,
} from "./commands/UpdateUserAccessLoggingSettingsCommand";
import {
  UpdateUserSettingsCommandInput,
  UpdateUserSettingsCommandOutput,
} from "./commands/UpdateUserSettingsCommand";
import { WorkSpacesWebClient } from "./WorkSpacesWebClient";
export interface WorkSpacesWeb {
  associateBrowserSettings(
    args: AssociateBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateBrowserSettingsCommandOutput>;
  associateBrowserSettings(
    args: AssociateBrowserSettingsCommandInput,
    cb: (err: any, data?: AssociateBrowserSettingsCommandOutput) => void
  ): void;
  associateBrowserSettings(
    args: AssociateBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateBrowserSettingsCommandOutput) => void
  ): void;
  associateIpAccessSettings(
    args: AssociateIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateIpAccessSettingsCommandOutput>;
  associateIpAccessSettings(
    args: AssociateIpAccessSettingsCommandInput,
    cb: (err: any, data?: AssociateIpAccessSettingsCommandOutput) => void
  ): void;
  associateIpAccessSettings(
    args: AssociateIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateIpAccessSettingsCommandOutput) => void
  ): void;
  associateNetworkSettings(
    args: AssociateNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateNetworkSettingsCommandOutput>;
  associateNetworkSettings(
    args: AssociateNetworkSettingsCommandInput,
    cb: (err: any, data?: AssociateNetworkSettingsCommandOutput) => void
  ): void;
  associateNetworkSettings(
    args: AssociateNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateNetworkSettingsCommandOutput) => void
  ): void;
  associateTrustStore(
    args: AssociateTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateTrustStoreCommandOutput>;
  associateTrustStore(
    args: AssociateTrustStoreCommandInput,
    cb: (err: any, data?: AssociateTrustStoreCommandOutput) => void
  ): void;
  associateTrustStore(
    args: AssociateTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateTrustStoreCommandOutput) => void
  ): void;
  associateUserAccessLoggingSettings(
    args: AssociateUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateUserAccessLoggingSettingsCommandOutput>;
  associateUserAccessLoggingSettings(
    args: AssociateUserAccessLoggingSettingsCommandInput,
    cb: (
      err: any,
      data?: AssociateUserAccessLoggingSettingsCommandOutput
    ) => void
  ): void;
  associateUserAccessLoggingSettings(
    args: AssociateUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: AssociateUserAccessLoggingSettingsCommandOutput
    ) => void
  ): void;
  associateUserSettings(
    args: AssociateUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateUserSettingsCommandOutput>;
  associateUserSettings(
    args: AssociateUserSettingsCommandInput,
    cb: (err: any, data?: AssociateUserSettingsCommandOutput) => void
  ): void;
  associateUserSettings(
    args: AssociateUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateUserSettingsCommandOutput) => void
  ): void;
  createBrowserSettings(
    args: CreateBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBrowserSettingsCommandOutput>;
  createBrowserSettings(
    args: CreateBrowserSettingsCommandInput,
    cb: (err: any, data?: CreateBrowserSettingsCommandOutput) => void
  ): void;
  createBrowserSettings(
    args: CreateBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBrowserSettingsCommandOutput) => void
  ): void;
  createIdentityProvider(
    args: CreateIdentityProviderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateIdentityProviderCommandOutput>;
  createIdentityProvider(
    args: CreateIdentityProviderCommandInput,
    cb: (err: any, data?: CreateIdentityProviderCommandOutput) => void
  ): void;
  createIdentityProvider(
    args: CreateIdentityProviderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateIdentityProviderCommandOutput) => void
  ): void;
  createIpAccessSettings(
    args: CreateIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateIpAccessSettingsCommandOutput>;
  createIpAccessSettings(
    args: CreateIpAccessSettingsCommandInput,
    cb: (err: any, data?: CreateIpAccessSettingsCommandOutput) => void
  ): void;
  createIpAccessSettings(
    args: CreateIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateIpAccessSettingsCommandOutput) => void
  ): void;
  createNetworkSettings(
    args: CreateNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateNetworkSettingsCommandOutput>;
  createNetworkSettings(
    args: CreateNetworkSettingsCommandInput,
    cb: (err: any, data?: CreateNetworkSettingsCommandOutput) => void
  ): void;
  createNetworkSettings(
    args: CreateNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateNetworkSettingsCommandOutput) => void
  ): void;
  createPortal(): Promise<CreatePortalCommandOutput>;
  createPortal(
    args: CreatePortalCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePortalCommandOutput>;
  createPortal(
    args: CreatePortalCommandInput,
    cb: (err: any, data?: CreatePortalCommandOutput) => void
  ): void;
  createPortal(
    args: CreatePortalCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePortalCommandOutput) => void
  ): void;
  createTrustStore(
    args: CreateTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTrustStoreCommandOutput>;
  createTrustStore(
    args: CreateTrustStoreCommandInput,
    cb: (err: any, data?: CreateTrustStoreCommandOutput) => void
  ): void;
  createTrustStore(
    args: CreateTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTrustStoreCommandOutput) => void
  ): void;
  createUserAccessLoggingSettings(
    args: CreateUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateUserAccessLoggingSettingsCommandOutput>;
  createUserAccessLoggingSettings(
    args: CreateUserAccessLoggingSettingsCommandInput,
    cb: (err: any, data?: CreateUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  createUserAccessLoggingSettings(
    args: CreateUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  createUserSettings(
    args: CreateUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateUserSettingsCommandOutput>;
  createUserSettings(
    args: CreateUserSettingsCommandInput,
    cb: (err: any, data?: CreateUserSettingsCommandOutput) => void
  ): void;
  createUserSettings(
    args: CreateUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateUserSettingsCommandOutput) => void
  ): void;
  deleteBrowserSettings(
    args: DeleteBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBrowserSettingsCommandOutput>;
  deleteBrowserSettings(
    args: DeleteBrowserSettingsCommandInput,
    cb: (err: any, data?: DeleteBrowserSettingsCommandOutput) => void
  ): void;
  deleteBrowserSettings(
    args: DeleteBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBrowserSettingsCommandOutput) => void
  ): void;
  deleteIdentityProvider(
    args: DeleteIdentityProviderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteIdentityProviderCommandOutput>;
  deleteIdentityProvider(
    args: DeleteIdentityProviderCommandInput,
    cb: (err: any, data?: DeleteIdentityProviderCommandOutput) => void
  ): void;
  deleteIdentityProvider(
    args: DeleteIdentityProviderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteIdentityProviderCommandOutput) => void
  ): void;
  deleteIpAccessSettings(
    args: DeleteIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteIpAccessSettingsCommandOutput>;
  deleteIpAccessSettings(
    args: DeleteIpAccessSettingsCommandInput,
    cb: (err: any, data?: DeleteIpAccessSettingsCommandOutput) => void
  ): void;
  deleteIpAccessSettings(
    args: DeleteIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteIpAccessSettingsCommandOutput) => void
  ): void;
  deleteNetworkSettings(
    args: DeleteNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteNetworkSettingsCommandOutput>;
  deleteNetworkSettings(
    args: DeleteNetworkSettingsCommandInput,
    cb: (err: any, data?: DeleteNetworkSettingsCommandOutput) => void
  ): void;
  deleteNetworkSettings(
    args: DeleteNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteNetworkSettingsCommandOutput) => void
  ): void;
  deletePortal(
    args: DeletePortalCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePortalCommandOutput>;
  deletePortal(
    args: DeletePortalCommandInput,
    cb: (err: any, data?: DeletePortalCommandOutput) => void
  ): void;
  deletePortal(
    args: DeletePortalCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePortalCommandOutput) => void
  ): void;
  deleteTrustStore(
    args: DeleteTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTrustStoreCommandOutput>;
  deleteTrustStore(
    args: DeleteTrustStoreCommandInput,
    cb: (err: any, data?: DeleteTrustStoreCommandOutput) => void
  ): void;
  deleteTrustStore(
    args: DeleteTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTrustStoreCommandOutput) => void
  ): void;
  deleteUserAccessLoggingSettings(
    args: DeleteUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteUserAccessLoggingSettingsCommandOutput>;
  deleteUserAccessLoggingSettings(
    args: DeleteUserAccessLoggingSettingsCommandInput,
    cb: (err: any, data?: DeleteUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  deleteUserAccessLoggingSettings(
    args: DeleteUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  deleteUserSettings(
    args: DeleteUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteUserSettingsCommandOutput>;
  deleteUserSettings(
    args: DeleteUserSettingsCommandInput,
    cb: (err: any, data?: DeleteUserSettingsCommandOutput) => void
  ): void;
  deleteUserSettings(
    args: DeleteUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteUserSettingsCommandOutput) => void
  ): void;
  disassociateBrowserSettings(
    args: DisassociateBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateBrowserSettingsCommandOutput>;
  disassociateBrowserSettings(
    args: DisassociateBrowserSettingsCommandInput,
    cb: (err: any, data?: DisassociateBrowserSettingsCommandOutput) => void
  ): void;
  disassociateBrowserSettings(
    args: DisassociateBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateBrowserSettingsCommandOutput) => void
  ): void;
  disassociateIpAccessSettings(
    args: DisassociateIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateIpAccessSettingsCommandOutput>;
  disassociateIpAccessSettings(
    args: DisassociateIpAccessSettingsCommandInput,
    cb: (err: any, data?: DisassociateIpAccessSettingsCommandOutput) => void
  ): void;
  disassociateIpAccessSettings(
    args: DisassociateIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateIpAccessSettingsCommandOutput) => void
  ): void;
  disassociateNetworkSettings(
    args: DisassociateNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateNetworkSettingsCommandOutput>;
  disassociateNetworkSettings(
    args: DisassociateNetworkSettingsCommandInput,
    cb: (err: any, data?: DisassociateNetworkSettingsCommandOutput) => void
  ): void;
  disassociateNetworkSettings(
    args: DisassociateNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateNetworkSettingsCommandOutput) => void
  ): void;
  disassociateTrustStore(
    args: DisassociateTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateTrustStoreCommandOutput>;
  disassociateTrustStore(
    args: DisassociateTrustStoreCommandInput,
    cb: (err: any, data?: DisassociateTrustStoreCommandOutput) => void
  ): void;
  disassociateTrustStore(
    args: DisassociateTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateTrustStoreCommandOutput) => void
  ): void;
  disassociateUserAccessLoggingSettings(
    args: DisassociateUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateUserAccessLoggingSettingsCommandOutput>;
  disassociateUserAccessLoggingSettings(
    args: DisassociateUserAccessLoggingSettingsCommandInput,
    cb: (
      err: any,
      data?: DisassociateUserAccessLoggingSettingsCommandOutput
    ) => void
  ): void;
  disassociateUserAccessLoggingSettings(
    args: DisassociateUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DisassociateUserAccessLoggingSettingsCommandOutput
    ) => void
  ): void;
  disassociateUserSettings(
    args: DisassociateUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateUserSettingsCommandOutput>;
  disassociateUserSettings(
    args: DisassociateUserSettingsCommandInput,
    cb: (err: any, data?: DisassociateUserSettingsCommandOutput) => void
  ): void;
  disassociateUserSettings(
    args: DisassociateUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateUserSettingsCommandOutput) => void
  ): void;
  getBrowserSettings(
    args: GetBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBrowserSettingsCommandOutput>;
  getBrowserSettings(
    args: GetBrowserSettingsCommandInput,
    cb: (err: any, data?: GetBrowserSettingsCommandOutput) => void
  ): void;
  getBrowserSettings(
    args: GetBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBrowserSettingsCommandOutput) => void
  ): void;
  getIdentityProvider(
    args: GetIdentityProviderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIdentityProviderCommandOutput>;
  getIdentityProvider(
    args: GetIdentityProviderCommandInput,
    cb: (err: any, data?: GetIdentityProviderCommandOutput) => void
  ): void;
  getIdentityProvider(
    args: GetIdentityProviderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIdentityProviderCommandOutput) => void
  ): void;
  getIpAccessSettings(
    args: GetIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIpAccessSettingsCommandOutput>;
  getIpAccessSettings(
    args: GetIpAccessSettingsCommandInput,
    cb: (err: any, data?: GetIpAccessSettingsCommandOutput) => void
  ): void;
  getIpAccessSettings(
    args: GetIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIpAccessSettingsCommandOutput) => void
  ): void;
  getNetworkSettings(
    args: GetNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetNetworkSettingsCommandOutput>;
  getNetworkSettings(
    args: GetNetworkSettingsCommandInput,
    cb: (err: any, data?: GetNetworkSettingsCommandOutput) => void
  ): void;
  getNetworkSettings(
    args: GetNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetNetworkSettingsCommandOutput) => void
  ): void;
  getPortal(
    args: GetPortalCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetPortalCommandOutput>;
  getPortal(
    args: GetPortalCommandInput,
    cb: (err: any, data?: GetPortalCommandOutput) => void
  ): void;
  getPortal(
    args: GetPortalCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetPortalCommandOutput) => void
  ): void;
  getPortalServiceProviderMetadata(
    args: GetPortalServiceProviderMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetPortalServiceProviderMetadataCommandOutput>;
  getPortalServiceProviderMetadata(
    args: GetPortalServiceProviderMetadataCommandInput,
    cb: (err: any, data?: GetPortalServiceProviderMetadataCommandOutput) => void
  ): void;
  getPortalServiceProviderMetadata(
    args: GetPortalServiceProviderMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetPortalServiceProviderMetadataCommandOutput) => void
  ): void;
  getTrustStore(
    args: GetTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetTrustStoreCommandOutput>;
  getTrustStore(
    args: GetTrustStoreCommandInput,
    cb: (err: any, data?: GetTrustStoreCommandOutput) => void
  ): void;
  getTrustStore(
    args: GetTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetTrustStoreCommandOutput) => void
  ): void;
  getTrustStoreCertificate(
    args: GetTrustStoreCertificateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetTrustStoreCertificateCommandOutput>;
  getTrustStoreCertificate(
    args: GetTrustStoreCertificateCommandInput,
    cb: (err: any, data?: GetTrustStoreCertificateCommandOutput) => void
  ): void;
  getTrustStoreCertificate(
    args: GetTrustStoreCertificateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetTrustStoreCertificateCommandOutput) => void
  ): void;
  getUserAccessLoggingSettings(
    args: GetUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetUserAccessLoggingSettingsCommandOutput>;
  getUserAccessLoggingSettings(
    args: GetUserAccessLoggingSettingsCommandInput,
    cb: (err: any, data?: GetUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  getUserAccessLoggingSettings(
    args: GetUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  getUserSettings(
    args: GetUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetUserSettingsCommandOutput>;
  getUserSettings(
    args: GetUserSettingsCommandInput,
    cb: (err: any, data?: GetUserSettingsCommandOutput) => void
  ): void;
  getUserSettings(
    args: GetUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetUserSettingsCommandOutput) => void
  ): void;
  listBrowserSettings(): Promise<ListBrowserSettingsCommandOutput>;
  listBrowserSettings(
    args: ListBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListBrowserSettingsCommandOutput>;
  listBrowserSettings(
    args: ListBrowserSettingsCommandInput,
    cb: (err: any, data?: ListBrowserSettingsCommandOutput) => void
  ): void;
  listBrowserSettings(
    args: ListBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListBrowserSettingsCommandOutput) => void
  ): void;
  listIdentityProviders(
    args: ListIdentityProvidersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIdentityProvidersCommandOutput>;
  listIdentityProviders(
    args: ListIdentityProvidersCommandInput,
    cb: (err: any, data?: ListIdentityProvidersCommandOutput) => void
  ): void;
  listIdentityProviders(
    args: ListIdentityProvidersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIdentityProvidersCommandOutput) => void
  ): void;
  listIpAccessSettings(): Promise<ListIpAccessSettingsCommandOutput>;
  listIpAccessSettings(
    args: ListIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIpAccessSettingsCommandOutput>;
  listIpAccessSettings(
    args: ListIpAccessSettingsCommandInput,
    cb: (err: any, data?: ListIpAccessSettingsCommandOutput) => void
  ): void;
  listIpAccessSettings(
    args: ListIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIpAccessSettingsCommandOutput) => void
  ): void;
  listNetworkSettings(): Promise<ListNetworkSettingsCommandOutput>;
  listNetworkSettings(
    args: ListNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListNetworkSettingsCommandOutput>;
  listNetworkSettings(
    args: ListNetworkSettingsCommandInput,
    cb: (err: any, data?: ListNetworkSettingsCommandOutput) => void
  ): void;
  listNetworkSettings(
    args: ListNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListNetworkSettingsCommandOutput) => void
  ): void;
  listPortals(): Promise<ListPortalsCommandOutput>;
  listPortals(
    args: ListPortalsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListPortalsCommandOutput>;
  listPortals(
    args: ListPortalsCommandInput,
    cb: (err: any, data?: ListPortalsCommandOutput) => void
  ): void;
  listPortals(
    args: ListPortalsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListPortalsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTrustStoreCertificates(
    args: ListTrustStoreCertificatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTrustStoreCertificatesCommandOutput>;
  listTrustStoreCertificates(
    args: ListTrustStoreCertificatesCommandInput,
    cb: (err: any, data?: ListTrustStoreCertificatesCommandOutput) => void
  ): void;
  listTrustStoreCertificates(
    args: ListTrustStoreCertificatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTrustStoreCertificatesCommandOutput) => void
  ): void;
  listTrustStores(): Promise<ListTrustStoresCommandOutput>;
  listTrustStores(
    args: ListTrustStoresCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTrustStoresCommandOutput>;
  listTrustStores(
    args: ListTrustStoresCommandInput,
    cb: (err: any, data?: ListTrustStoresCommandOutput) => void
  ): void;
  listTrustStores(
    args: ListTrustStoresCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTrustStoresCommandOutput) => void
  ): void;
  listUserAccessLoggingSettings(): Promise<ListUserAccessLoggingSettingsCommandOutput>;
  listUserAccessLoggingSettings(
    args: ListUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListUserAccessLoggingSettingsCommandOutput>;
  listUserAccessLoggingSettings(
    args: ListUserAccessLoggingSettingsCommandInput,
    cb: (err: any, data?: ListUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  listUserAccessLoggingSettings(
    args: ListUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  listUserSettings(): Promise<ListUserSettingsCommandOutput>;
  listUserSettings(
    args: ListUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListUserSettingsCommandOutput>;
  listUserSettings(
    args: ListUserSettingsCommandInput,
    cb: (err: any, data?: ListUserSettingsCommandOutput) => void
  ): void;
  listUserSettings(
    args: ListUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListUserSettingsCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateBrowserSettings(
    args: UpdateBrowserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBrowserSettingsCommandOutput>;
  updateBrowserSettings(
    args: UpdateBrowserSettingsCommandInput,
    cb: (err: any, data?: UpdateBrowserSettingsCommandOutput) => void
  ): void;
  updateBrowserSettings(
    args: UpdateBrowserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBrowserSettingsCommandOutput) => void
  ): void;
  updateIdentityProvider(
    args: UpdateIdentityProviderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateIdentityProviderCommandOutput>;
  updateIdentityProvider(
    args: UpdateIdentityProviderCommandInput,
    cb: (err: any, data?: UpdateIdentityProviderCommandOutput) => void
  ): void;
  updateIdentityProvider(
    args: UpdateIdentityProviderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateIdentityProviderCommandOutput) => void
  ): void;
  updateIpAccessSettings(
    args: UpdateIpAccessSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateIpAccessSettingsCommandOutput>;
  updateIpAccessSettings(
    args: UpdateIpAccessSettingsCommandInput,
    cb: (err: any, data?: UpdateIpAccessSettingsCommandOutput) => void
  ): void;
  updateIpAccessSettings(
    args: UpdateIpAccessSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateIpAccessSettingsCommandOutput) => void
  ): void;
  updateNetworkSettings(
    args: UpdateNetworkSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateNetworkSettingsCommandOutput>;
  updateNetworkSettings(
    args: UpdateNetworkSettingsCommandInput,
    cb: (err: any, data?: UpdateNetworkSettingsCommandOutput) => void
  ): void;
  updateNetworkSettings(
    args: UpdateNetworkSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateNetworkSettingsCommandOutput) => void
  ): void;
  updatePortal(
    args: UpdatePortalCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdatePortalCommandOutput>;
  updatePortal(
    args: UpdatePortalCommandInput,
    cb: (err: any, data?: UpdatePortalCommandOutput) => void
  ): void;
  updatePortal(
    args: UpdatePortalCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdatePortalCommandOutput) => void
  ): void;
  updateTrustStore(
    args: UpdateTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateTrustStoreCommandOutput>;
  updateTrustStore(
    args: UpdateTrustStoreCommandInput,
    cb: (err: any, data?: UpdateTrustStoreCommandOutput) => void
  ): void;
  updateTrustStore(
    args: UpdateTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateTrustStoreCommandOutput) => void
  ): void;
  updateUserAccessLoggingSettings(
    args: UpdateUserAccessLoggingSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateUserAccessLoggingSettingsCommandOutput>;
  updateUserAccessLoggingSettings(
    args: UpdateUserAccessLoggingSettingsCommandInput,
    cb: (err: any, data?: UpdateUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  updateUserAccessLoggingSettings(
    args: UpdateUserAccessLoggingSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateUserAccessLoggingSettingsCommandOutput) => void
  ): void;
  updateUserSettings(
    args: UpdateUserSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateUserSettingsCommandOutput>;
  updateUserSettings(
    args: UpdateUserSettingsCommandInput,
    cb: (err: any, data?: UpdateUserSettingsCommandOutput) => void
  ): void;
  updateUserSettings(
    args: UpdateUserSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateUserSettingsCommandOutput) => void
  ): void;
}
export declare class WorkSpacesWeb
  extends WorkSpacesWebClient
  implements WorkSpacesWeb {}
