import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { WorkSpacesWebServiceException as __BaseException } from "./WorkSpacesWebServiceException";
/**
 * @public
 * <p>Access is denied.</p>
 */
export declare class AccessDeniedException extends __BaseException {
    readonly name: "AccessDeniedException";
    readonly $fault: "client";
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>);
}
/**
 * @public
 */
export interface AssociateBrowserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateBrowserSettingsResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
}
/**
 * @public
 * <p>There is a conflict.</p>
 */
export declare class ConflictException extends __BaseException {
    readonly name: "ConflictException";
    readonly $fault: "client";
    /**
     * @public
     * <p>Identifier of the resource affected.</p>
     */
    resourceId?: string;
    /**
     * @public
     * <p>Type of the resource affected.</p>
     */
    resourceType?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
/**
 * @public
 * <p>There is an internal server error.</p>
 */
export declare class InternalServerException extends __BaseException {
    readonly name: "InternalServerException";
    readonly $fault: "server";
    /**
     * @public
     * <p>Advice to clients on when the call can be safely retried.</p>
     */
    retryAfterSeconds?: number;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>);
}
/**
 * @public
 * <p>The resource cannot be found.</p>
 */
export declare class ResourceNotFoundException extends __BaseException {
    readonly name: "ResourceNotFoundException";
    readonly $fault: "client";
    /**
     * @public
     * <p>Hypothetical identifier of the resource affected.</p>
     */
    resourceId?: string;
    /**
     * @public
     * <p>Hypothetical type of the resource affected.</p>
     */
    resourceType?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
}
/**
 * @public
 * <p>There is a throttling error.</p>
 */
export declare class ThrottlingException extends __BaseException {
    readonly name: "ThrottlingException";
    readonly $fault: "client";
    /**
     * @public
     * <p>The originating service.</p>
     */
    serviceCode?: string;
    /**
     * @public
     * <p>The originating quota.</p>
     */
    quotaCode?: string;
    /**
     * @public
     * <p>Advice to clients on when the call can be safely retried.</p>
     */
    retryAfterSeconds?: number;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>);
}
/**
 * @public
 * <p>Information about a field passed inside a request that resulted in an exception.</p>
 */
export interface ValidationExceptionField {
    /**
     * @public
     * <p>The name of the field that failed validation.</p>
     */
    name: string | undefined;
    /**
     * @public
     * <p>The message describing why the field failed validation.</p>
     */
    message: string | undefined;
}
/**
 * @public
 * @enum
 */
export declare const ValidationExceptionReason: {
    readonly CANNOT_PARSE: "cannotParse";
    readonly FIELD_VALIDATION_FAILED: "fieldValidationFailed";
    readonly OTHER: "other";
    readonly UNKNOWN_OPERATION: "unknownOperation";
};
/**
 * @public
 */
export type ValidationExceptionReason = (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
/**
 * @public
 * <p>There is a validation error.</p>
 */
export declare class ValidationException extends __BaseException {
    readonly name: "ValidationException";
    readonly $fault: "client";
    /**
     * @public
     * <p>Reason the request failed validation</p>
     */
    reason?: ValidationExceptionReason;
    /**
     * @public
     * <p>The field that caused the error.</p>
     */
    fieldList?: ValidationExceptionField[];
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>);
}
/**
 * @public
 */
export interface AssociateIpAccessSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the IP access settings.</p>
     */
    ipAccessSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateIpAccessSettingsResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the IP access settings resource.</p>
     */
    ipAccessSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateNetworkSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateNetworkSettingsResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateTrustStoreRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateTrustStoreResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateUserAccessLoggingSettingsResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateUserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface AssociateUserSettingsResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
}
/**
 * @public
 * @enum
 */
export declare const AuthenticationType: {
    readonly IAM_IDENTITY_CENTER: "IAM_Identity_Center";
    readonly STANDARD: "Standard";
};
/**
 * @public
 */
export type AuthenticationType = (typeof AuthenticationType)[keyof typeof AuthenticationType];
/**
 * @public
 * <p>The tag.</p>
 */
export interface Tag {
    /**
     * @public
     * <p>The key of the tag.</p>
     */
    Key: string | undefined;
    /**
     * @public
     * <p>The value of the tag</p>
     */
    Value: string | undefined;
}
/**
 * @public
 */
export interface CreateBrowserSettingsRequest {
    /**
     * @public
     * <p>The tags to add to the browser settings resource. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>The custom managed key of the browser settings.</p>
     */
    customerManagedKey?: string;
    /**
     * @public
     * <p>Additional encryption context of the browser settings.</p>
     */
    additionalEncryptionContext?: Record<string, string>;
    /**
     * @public
     * <p>A JSON string containing Chrome Enterprise policies that will be applied to all
     *          streaming sessions.</p>
     */
    browserPolicy: string | undefined;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request.</p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS SDK. </p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface CreateBrowserSettingsResponse {
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
}
/**
 * @public
 * <p>The service quota has been exceeded.</p>
 */
export declare class ServiceQuotaExceededException extends __BaseException {
    readonly name: "ServiceQuotaExceededException";
    readonly $fault: "client";
    /**
     * @public
     * <p>Identifier of the resource affected.</p>
     */
    resourceId?: string;
    /**
     * @public
     * <p> Type of the resource affected.</p>
     */
    resourceType?: string;
    /**
     * @public
     * <p>The originating service.</p>
     */
    serviceCode?: string;
    /**
     * @public
     * <p>The originating quota.</p>
     */
    quotaCode?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>);
}
/**
 * @public
 */
export interface DeleteBrowserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteBrowserSettingsResponse {
}
/**
 * @public
 */
export interface GetBrowserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
}
/**
 * @public
 * <p>The browser settings resource that can be associated with a web portal. Once associated
 *          with a web portal, browser settings control how the browser will behave once a user starts
 *          a streaming session for the web portal. </p>
 */
export interface BrowserSettings {
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
    /**
     * @public
     * <p>A list of web portal ARNs that this browser settings is associated with.</p>
     */
    associatedPortalArns?: string[];
    /**
     * @public
     * <p>A JSON string containing Chrome Enterprise policies that will be applied to all
     *          streaming sessions.</p>
     */
    browserPolicy?: string;
}
/**
 * @public
 */
export interface GetBrowserSettingsResponse {
    /**
     * @public
     * <p>The browser settings.</p>
     */
    browserSettings?: BrowserSettings;
}
/**
 * @public
 */
export interface ListBrowserSettingsRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary for browser settings.</p>
 */
export interface BrowserSettingsSummary {
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface ListBrowserSettingsResponse {
    /**
     * @public
     * <p>The browser settings.</p>
     */
    browserSettings?: BrowserSettingsSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdateBrowserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the browser settings.</p>
     */
    browserSettingsArn: string | undefined;
    /**
     * @public
     * <p>A JSON string containing Chrome Enterprise policies that will be applied to all
     *          streaming sessions. </p>
     */
    browserPolicy?: string;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface UpdateBrowserSettingsResponse {
    /**
     * @public
     * <p>The browser settings.</p>
     */
    browserSettings: BrowserSettings | undefined;
}
/**
 * @public
 * @enum
 */
export declare const IdentityProviderType: {
    readonly Facebook: "Facebook";
    readonly Google: "Google";
    readonly LoginWithAmazon: "LoginWithAmazon";
    readonly OIDC: "OIDC";
    readonly SAML: "SAML";
    readonly SignInWithApple: "SignInWithApple";
};
/**
 * @public
 */
export type IdentityProviderType = (typeof IdentityProviderType)[keyof typeof IdentityProviderType];
/**
 * @public
 */
export interface CreateIdentityProviderRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The identity provider name.</p>
     */
    identityProviderName: string | undefined;
    /**
     * @public
     * <p>The identity provider type.</p>
     */
    identityProviderType: IdentityProviderType | undefined;
    /**
     * @public
     * <p>The identity provider details. The following list describes the provider detail keys for
     *          each identity provider type. </p>
     *          <ul>
     *             <li>
     *                <p>For Google and Login with Amazon:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For Facebook:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>api_version</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For Sign in with Apple:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>team_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>key_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>private_key</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For OIDC providers:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>attributes_request_method</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>oidc_issuer</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_url</code>
     *                         <i>if not available from discovery URL specified by
     *                            <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>token_url</code>
     *                         <i>if not available from discovery URL specified by
     *                            <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>attributes_url</code>
     *                         <i>if not available from discovery URL specified by
     *                            <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>jwks_uri</code>
     *                         <i>if not available from discovery URL specified by
     *                            <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For SAML providers:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>MetadataFile</code> OR <code>MetadataURL</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>IDPSignout</code> (boolean)
     *                <i>optional</i>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *          </ul>
     */
    identityProviderDetails: Record<string, string> | undefined;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request.</p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface CreateIdentityProviderResponse {
    /**
     * @public
     * <p>The ARN of the identity provider.</p>
     */
    identityProviderArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteIdentityProviderRequest {
    /**
     * @public
     * <p>The ARN of the identity provider.</p>
     */
    identityProviderArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteIdentityProviderResponse {
}
/**
 * @public
 */
export interface GetIdentityProviderRequest {
    /**
     * @public
     * <p>The ARN of the identity provider.</p>
     */
    identityProviderArn: string | undefined;
}
/**
 * @public
 * <p>The identity provider.</p>
 */
export interface IdentityProvider {
    /**
     * @public
     * <p>The ARN of the identity provider.</p>
     */
    identityProviderArn: string | undefined;
    /**
     * @public
     * <p>The identity provider name.</p>
     */
    identityProviderName?: string;
    /**
     * @public
     * <p>The identity provider type.</p>
     */
    identityProviderType?: IdentityProviderType;
    /**
     * @public
     * <p>The identity provider details. The following list describes the provider detail keys for
     *          each identity provider type. </p>
     *          <ul>
     *             <li>
     *                <p>For Google and Login with Amazon:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For Facebook:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>api_version</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For Sign in with Apple:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>team_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>key_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>private_key</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For OIDC providers:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>attributes_request_method</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>oidc_issuer</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_url</code>
     *                         <i>if not available from discovery URL specified by oidc_issuer
     *                         key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>token_url</code>
     *                         <i>if not available from discovery URL specified by oidc_issuer
     *                         key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>attributes_url</code>
     *                         <i>if not available from discovery URL specified by oidc_issuer
     *                         key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>jwks_uri</code>
     *                         <i>if not available from discovery URL specified by oidc_issuer
     *                         key</i>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For SAML providers:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>MetadataFile</code> OR <code>MetadataURL</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>IDPSignout</code>
     *                         <i>optional</i>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *          </ul>
     */
    identityProviderDetails?: Record<string, string>;
}
/**
 * @public
 */
export interface GetIdentityProviderResponse {
    /**
     * @public
     * <p>The identity provider.</p>
     */
    identityProvider?: IdentityProvider;
}
/**
 * @public
 */
export interface ListIdentityProvidersRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 * <p>The summary of the identity provider.</p>
 */
export interface IdentityProviderSummary {
    /**
     * @public
     * <p>The ARN of the identity provider.</p>
     */
    identityProviderArn: string | undefined;
    /**
     * @public
     * <p>The identity provider name.</p>
     */
    identityProviderName?: string;
    /**
     * @public
     * <p>The identity provider type.</p>
     */
    identityProviderType?: IdentityProviderType;
}
/**
 * @public
 */
export interface ListIdentityProvidersResponse {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The identity providers.</p>
     */
    identityProviders?: IdentityProviderSummary[];
}
/**
 * @public
 */
export interface UpdateIdentityProviderRequest {
    /**
     * @public
     * <p>The ARN of the identity provider.</p>
     */
    identityProviderArn: string | undefined;
    /**
     * @public
     * <p>The name of the identity provider.</p>
     */
    identityProviderName?: string;
    /**
     * @public
     * <p>The type of the identity provider.</p>
     */
    identityProviderType?: IdentityProviderType;
    /**
     * @public
     * <p>The details of the identity provider. The following list describes the provider detail keys for
     *          each identity provider type. </p>
     *          <ul>
     *             <li>
     *                <p>For Google and Login with Amazon:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For Facebook:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>api_version</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For Sign in with Apple:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>team_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>key_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>private_key</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For OIDC providers:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>client_id</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>client_secret</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>attributes_request_method</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>oidc_issuer</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_scopes</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>authorize_url</code>
     *                         <i>if not available from discovery URL specified by
     *                   <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>token_url</code>
     *                         <i>if not available from discovery URL specified by
     *                   <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>attributes_url</code>
     *                         <i>if not available from discovery URL specified by
     *                   <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>jwks_uri</code>
     *                         <i>if not available from discovery URL specified by
     *                   <code>oidc_issuer</code> key</i>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *             <li>
     *                <p>For SAML providers:</p>
     *                <ul>
     *                   <li>
     *                      <p>
     *                         <code>MetadataFile</code> OR <code>MetadataURL</code>
     *                      </p>
     *                   </li>
     *                   <li>
     *                      <p>
     *                         <code>IDPSignout</code> (boolean)
     *                <i>optional</i>
     *                      </p>
     *                   </li>
     *                </ul>
     *             </li>
     *          </ul>
     */
    identityProviderDetails?: Record<string, string>;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface UpdateIdentityProviderResponse {
    /**
     * @public
     * <p>The identity provider.</p>
     */
    identityProvider: IdentityProvider | undefined;
}
/**
 * @public
 * <p>The IP rules of the IP access settings.</p>
 */
export interface IpRule {
    /**
     * @public
     * <p>The IP range of the IP rule.</p>
     */
    ipRange: string | undefined;
    /**
     * @public
     * <p>The description of the IP rule.</p>
     */
    description?: string;
}
/**
 * @public
 */
export interface CreateIpAccessSettingsRequest {
    /**
     * @public
     * <p>The display name of the IP access settings.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The description of the IP access settings.</p>
     */
    description?: string;
    /**
     * @public
     * <p>The tags to add to the browser settings resource. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>The custom managed key of the IP access settings.</p>
     */
    customerManagedKey?: string;
    /**
     * @public
     * <p>Additional encryption context of the IP access settings.</p>
     */
    additionalEncryptionContext?: Record<string, string>;
    /**
     * @public
     * <p>The IP rules of the IP access settings.</p>
     */
    ipRules: IpRule[] | undefined;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface CreateIpAccessSettingsResponse {
    /**
     * @public
     * <p>The ARN of the IP access settings resource.</p>
     */
    ipAccessSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteIpAccessSettingsRequest {
    /**
     * @public
     * <p>The ARN of the IP access settings.</p>
     */
    ipAccessSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteIpAccessSettingsResponse {
}
/**
 * @public
 */
export interface GetIpAccessSettingsRequest {
    /**
     * @public
     * <p>The ARN of the IP access settings.</p>
     */
    ipAccessSettingsArn: string | undefined;
}
/**
 * @public
 * <p>The IP access settings resource that can be associated with a web portal. </p>
 */
export interface IpAccessSettings {
    /**
     * @public
     * <p>The ARN of the IP access settings resource.</p>
     */
    ipAccessSettingsArn: string | undefined;
    /**
     * @public
     * <p>A list of web portal ARNs that this IP access settings resource is associated with.</p>
     */
    associatedPortalArns?: string[];
    /**
     * @public
     * <p>The IP rules of the IP access settings.</p>
     */
    ipRules?: IpRule[];
    /**
     * @public
     * <p> The display name of the IP access settings.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The description of the IP access settings.</p>
     */
    description?: string;
    /**
     * @public
     * <p>The creation date timestamp of the IP access settings.</p>
     */
    creationDate?: Date;
}
/**
 * @public
 */
export interface GetIpAccessSettingsResponse {
    /**
     * @public
     * <p>The IP access settings.</p>
     */
    ipAccessSettings?: IpAccessSettings;
}
/**
 * @public
 */
export interface ListIpAccessSettingsRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary of IP access settings.</p>
 */
export interface IpAccessSettingsSummary {
    /**
     * @public
     * <p>The ARN of IP access settings.</p>
     */
    ipAccessSettingsArn: string | undefined;
    /**
     * @public
     * <p>The display name of the IP access settings.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The description of the IP access settings.</p>
     */
    description?: string;
    /**
     * @public
     * <p>The creation date timestamp of the IP access settings.</p>
     */
    creationDate?: Date;
}
/**
 * @public
 */
export interface ListIpAccessSettingsResponse {
    /**
     * @public
     * <p>The IP access settings.</p>
     */
    ipAccessSettings?: IpAccessSettingsSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdateIpAccessSettingsRequest {
    /**
     * @public
     * <p>The ARN of the IP access settings.</p>
     */
    ipAccessSettingsArn: string | undefined;
    /**
     * @public
     * <p>The display name of the IP access settings.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The description of the IP access settings.</p>
     */
    description?: string;
    /**
     * @public
     * <p>The updated IP rules of the IP access settings.</p>
     */
    ipRules?: IpRule[];
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface UpdateIpAccessSettingsResponse {
    /**
     * @public
     * <p>The IP access settings.</p>
     */
    ipAccessSettings: IpAccessSettings | undefined;
}
/**
 * @public
 */
export interface ListTagsForResourceRequest {
    /**
     * @public
     * <p>The ARN of the resource.</p>
     */
    resourceArn: string | undefined;
}
/**
 * @public
 */
export interface ListTagsForResourceResponse {
    /**
     * @public
     * <p>The tags of the resource.</p>
     */
    tags?: Tag[];
}
/**
 * @public
 */
export interface CreateNetworkSettingsRequest {
    /**
     * @public
     * <p>The VPC that streaming instances will connect to.</p>
     */
    vpcId: string | undefined;
    /**
     * @public
     * <p>The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.</p>
     */
    subnetIds: string[] | undefined;
    /**
     * @public
     * <p>One or more security groups used to control access from streaming instances to your VPC.</p>
     */
    securityGroupIds: string[] | undefined;
    /**
     * @public
     * <p>The tags to add to the network settings resource. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface CreateNetworkSettingsResponse {
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteNetworkSettingsRequest {
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteNetworkSettingsResponse {
}
/**
 * @public
 */
export interface GetNetworkSettingsRequest {
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
}
/**
 * @public
 * <p>A network settings resource that can be associated with a web portal. Once associated
 *          with a web portal, network settings define how streaming instances will connect with your
 *          specified VPC. </p>
 */
export interface NetworkSettings {
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
    /**
     * @public
     * <p>A list of web portal ARNs that this network settings is associated with.</p>
     */
    associatedPortalArns?: string[];
    /**
     * @public
     * <p>The VPC that streaming instances will connect to.</p>
     */
    vpcId?: string;
    /**
     * @public
     * <p>The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.</p>
     */
    subnetIds?: string[];
    /**
     * @public
     * <p>One or more security groups used to control access from streaming instances to your VPC. </p>
     */
    securityGroupIds?: string[];
}
/**
 * @public
 */
export interface GetNetworkSettingsResponse {
    /**
     * @public
     * <p>The network settings.</p>
     */
    networkSettings?: NetworkSettings;
}
/**
 * @public
 */
export interface ListNetworkSettingsRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary of network settings.</p>
 */
export interface NetworkSettingsSummary {
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
    /**
     * @public
     * <p>The VPC ID of the network settings.</p>
     */
    vpcId?: string;
}
/**
 * @public
 */
export interface ListNetworkSettingsResponse {
    /**
     * @public
     * <p>The network settings.</p>
     */
    networkSettings?: NetworkSettingsSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdateNetworkSettingsRequest {
    /**
     * @public
     * <p>The ARN of the network settings.</p>
     */
    networkSettingsArn: string | undefined;
    /**
     * @public
     * <p>The VPC that streaming instances will connect to.</p>
     */
    vpcId?: string;
    /**
     * @public
     * <p>The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.</p>
     */
    subnetIds?: string[];
    /**
     * @public
     * <p>One or more security groups used to control access from streaming instances to your VPC.</p>
     */
    securityGroupIds?: string[];
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface UpdateNetworkSettingsResponse {
    /**
     * @public
     * <p>The network settings.</p>
     */
    networkSettings: NetworkSettings | undefined;
}
/**
 * @public
 * @enum
 */
export declare const BrowserType: {
    readonly CHROME: "Chrome";
};
/**
 * @public
 */
export type BrowserType = (typeof BrowserType)[keyof typeof BrowserType];
/**
 * @public
 */
export interface CreatePortalRequest {
    /**
     * @public
     * <p>The name of the web portal. This is not visible to users who log into the web portal.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The tags to add to the web portal. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>The customer managed key of the web portal.</p>
     */
    customerManagedKey?: string;
    /**
     * @public
     * <p>The additional encryption context of the portal.</p>
     */
    additionalEncryptionContext?: Record<string, string>;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
    /**
     * @public
     * <p>The type of authentication integration points used when signing into the web portal.
     *          Defaults to <code>Standard</code>.</p>
     *          <p>
     *             <code>Standard</code> web portals are authenticated directly through your identity
     *          provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity
     *          provider with your web portal. User and group access to your web portal is controlled
     *          through your identity provider.</p>
     *          <p>
     *             <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity
     *          Center (successor to AWS Single Sign-On). They provide additional features, such as
     *          IdP-initiated authentication. Identity sources (including external identity provider
     *          integration), plus user and group access to your web portal, can be configured in the IAM
     *          Identity Center.</p>
     */
    authenticationType?: AuthenticationType;
}
/**
 * @public
 */
export interface CreatePortalResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The endpoint URL of the web portal that users access in order to start streaming sessions.</p>
     */
    portalEndpoint: string | undefined;
}
/**
 * @public
 */
export interface DeletePortalRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DeletePortalResponse {
}
/**
 * @public
 */
export interface DisassociateBrowserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DisassociateBrowserSettingsResponse {
}
/**
 * @public
 */
export interface DisassociateIpAccessSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DisassociateIpAccessSettingsResponse {
}
/**
 * @public
 */
export interface DisassociateNetworkSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DisassociateNetworkSettingsResponse {
}
/**
 * @public
 */
export interface DisassociateTrustStoreRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DisassociateTrustStoreResponse {
}
/**
 * @public
 */
export interface DisassociateUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DisassociateUserAccessLoggingSettingsResponse {
}
/**
 * @public
 */
export interface DisassociateUserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface DisassociateUserSettingsResponse {
}
/**
 * @public
 */
export interface GetPortalRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 * @enum
 */
export declare const PortalStatus: {
    readonly ACTIVE: "Active";
    readonly INCOMPLETE: "Incomplete";
    readonly PENDING: "Pending";
};
/**
 * @public
 */
export type PortalStatus = (typeof PortalStatus)[keyof typeof PortalStatus];
/**
 * @public
 * @enum
 */
export declare const RendererType: {
    readonly APPSTREAM: "AppStream";
};
/**
 * @public
 */
export type RendererType = (typeof RendererType)[keyof typeof RendererType];
/**
 * @public
 * <p>The web portal.</p>
 */
export interface Portal {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The renderer that is used in streaming sessions.</p>
     */
    rendererType?: RendererType;
    /**
     * @public
     * <p>The browser that users see when using a streaming session.</p>
     */
    browserType?: BrowserType;
    /**
     * @public
     * <p>The status of the web portal.</p>
     */
    portalStatus?: PortalStatus;
    /**
     * @public
     * <p>The endpoint URL of the web portal that users access in order to start streaming
     *          sessions.</p>
     */
    portalEndpoint?: string;
    /**
     * @public
     * <p>The name of the web portal.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The creation date of the web portal.</p>
     */
    creationDate?: Date;
    /**
     * @public
     * <p>The ARN of the browser settings that is associated with this web portal.</p>
     */
    browserSettingsArn?: string;
    /**
     * @public
     * <p>The ARN of the user settings that is associated with the web portal.</p>
     */
    userSettingsArn?: string;
    /**
     * @public
     * <p>The ARN of the network settings that is associated with the web portal.</p>
     */
    networkSettingsArn?: string;
    /**
     * @public
     * <p>The ARN of the trust store that is associated with the web portal.</p>
     */
    trustStoreArn?: string;
    /**
     * @public
     * <p>A message that explains why the web portal is in its current status.</p>
     */
    statusReason?: string;
    /**
     * @public
     * <p>The ARN of the user access logging settings that is associated with the web portal.</p>
     */
    userAccessLoggingSettingsArn?: string;
    /**
     * @public
     * <p>The type of authentication integration points used when signing into the web portal.
     *          Defaults to <code>Standard</code>.</p>
     *          <p>
     *             <code>Standard</code> web portals are authenticated directly through your identity
     *          provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity
     *          provider with your web portal. User and group access to your web portal is controlled
     *          through your identity provider.</p>
     *          <p>
     *             <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity
     *          Center (successor to AWS Single Sign-On). They provide additional features, such as
     *          IdP-initiated authentication. Identity sources (including external identity provider
     *          integration), plus user and group access to your web portal, can be configured in the IAM
     *          Identity Center.</p>
     */
    authenticationType?: AuthenticationType;
    /**
     * @public
     * <p>The ARN of the IP access settings.</p>
     */
    ipAccessSettingsArn?: string;
}
/**
 * @public
 */
export interface GetPortalResponse {
    /**
     * @public
     * <p>The web portal.</p>
     */
    portal?: Portal;
}
/**
 * @public
 */
export interface GetPortalServiceProviderMetadataRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
}
/**
 * @public
 */
export interface GetPortalServiceProviderMetadataResponse {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The service provider SAML metadata.</p>
     */
    serviceProviderSamlMetadata?: string;
}
/**
 * @public
 */
export interface ListPortalsRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation. </p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary of the portal.</p>
 */
export interface PortalSummary {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The renderer that is used in streaming sessions.</p>
     */
    rendererType?: RendererType;
    /**
     * @public
     * <p>The browser type of the web portal.</p>
     */
    browserType?: BrowserType;
    /**
     * @public
     * <p>The status of the web portal.</p>
     */
    portalStatus?: PortalStatus;
    /**
     * @public
     * <p>The endpoint URL of the web portal that users access in order to start streaming
     *          sessions.</p>
     */
    portalEndpoint?: string;
    /**
     * @public
     * <p>The name of the web portal.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The creation date of the web portal.</p>
     */
    creationDate?: Date;
    /**
     * @public
     * <p>The ARN of the browser settings that is associated with the web portal.</p>
     */
    browserSettingsArn?: string;
    /**
     * @public
     * <p>The ARN of the user settings that is associated with the web portal.</p>
     */
    userSettingsArn?: string;
    /**
     * @public
     * <p>The ARN of the network settings that is associated with the web portal.</p>
     */
    networkSettingsArn?: string;
    /**
     * @public
     * <p>The ARN of the trust that is associated with this web portal.</p>
     */
    trustStoreArn?: string;
    /**
     * @public
     * <p>The ARN of the user access logging settings that is associated with the web portal.</p>
     */
    userAccessLoggingSettingsArn?: string;
    /**
     * @public
     * <p>The type of authentication integration points used when signing into the web portal.
     *          Defaults to <code>Standard</code>.</p>
     *          <p>
     *             <code>Standard</code> web portals are authenticated directly through your identity
     *          provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity
     *          provider with your web portal. User and group access to your web portal is controlled
     *          through your identity provider.</p>
     *          <p>
     *             <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity
     *          Center (successor to AWS Single Sign-On). They provide additional features, such as
     *          IdP-initiated authentication. Identity sources (including external identity provider
     *          integration), plus user and group access to your web portal, can be configured in the IAM
     *          Identity Center.</p>
     */
    authenticationType?: AuthenticationType;
    /**
     * @public
     * <p>The ARN of the IP access settings.</p>
     */
    ipAccessSettingsArn?: string;
}
/**
 * @public
 */
export interface ListPortalsResponse {
    /**
     * @public
     * <p>The portals in the list.</p>
     */
    portals?: PortalSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation. </p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdatePortalRequest {
    /**
     * @public
     * <p>The ARN of the web portal.</p>
     */
    portalArn: string | undefined;
    /**
     * @public
     * <p>The name of the web portal. This is not visible to users who log into the web portal.</p>
     */
    displayName?: string;
    /**
     * @public
     * <p>The type of authentication integration points used when signing into the web portal.
     *          Defaults to <code>Standard</code>.</p>
     *          <p>
     *             <code>Standard</code> web portals are authenticated directly through your identity
     *          provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity
     *          provider with your web portal. User and group access to your web portal is controlled
     *          through your identity provider.</p>
     *          <p>
     *             <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity
     *          Center (successor to AWS Single Sign-On). They provide additional features, such as
     *          IdP-initiated authentication. Identity sources (including external identity provider
     *          integration), plus user and group access to your web portal, can be configured in the IAM
     *          Identity Center.</p>
     */
    authenticationType?: AuthenticationType;
}
/**
 * @public
 */
export interface UpdatePortalResponse {
    /**
     * @public
     * <p>The web portal.</p>
     */
    portal?: Portal;
}
/**
 * @public
 */
export interface TagResourceRequest {
    /**
     * @public
     * <p>The ARN of the resource.</p>
     */
    resourceArn: string | undefined;
    /**
     * @public
     * <p>The tags of the resource.</p>
     */
    tags: Tag[] | undefined;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface TagResourceResponse {
}
/**
 * @public
 * <p>There are too many tags.</p>
 */
export declare class TooManyTagsException extends __BaseException {
    readonly name: "TooManyTagsException";
    readonly $fault: "client";
    /**
     * @public
     * <p>Name of the resource affected.</p>
     */
    resourceName?: string;
    /**
     * @internal
     */
    constructor(opts: __ExceptionOptionType<TooManyTagsException, __BaseException>);
}
/**
 * @public
 * <p>The summary of the certificate.</p>
 */
export interface CertificateSummary {
    /**
     * @public
     * <p>A hexadecimal identifier for the certificate.</p>
     */
    thumbprint?: string;
    /**
     * @public
     * <p>The entity the certificate belongs to.</p>
     */
    subject?: string;
    /**
     * @public
     * <p>The entity that issued the certificate.</p>
     */
    issuer?: string;
    /**
     * @public
     * <p>The certificate is not valid before this date.</p>
     */
    notValidBefore?: Date;
    /**
     * @public
     * <p>The certificate is not valid after this date.</p>
     */
    notValidAfter?: Date;
}
/**
 * @public
 */
export interface CreateTrustStoreRequest {
    /**
     * @public
     * <p>A list of CA certificates to be added to the trust store.</p>
     */
    certificateList: Uint8Array[] | undefined;
    /**
     * @public
     * <p>The tags to add to the trust store. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface CreateTrustStoreResponse {
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteTrustStoreRequest {
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteTrustStoreResponse {
}
/**
 * @public
 */
export interface GetTrustStoreRequest {
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 * <p>A trust store that can be associated with a web portal. A trust store contains
 *          certificate authority (CA) certificates. Once associated with a web portal, the browser in
 *          a streaming session will recognize certificates that have been issued using any of the CAs
 *          in the trust store. If your organization has internal websites that use certificates issued
 *          by private CAs, you should add the private CA certificate to the trust store. </p>
 */
export interface TrustStore {
    /**
     * @public
     * <p>A list of web portal ARNs that this trust store is associated with.</p>
     */
    associatedPortalArns?: string[];
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 */
export interface GetTrustStoreResponse {
    /**
     * @public
     * <p>The trust store.</p>
     */
    trustStore?: TrustStore;
}
/**
 * @public
 */
export interface GetTrustStoreCertificateRequest {
    /**
     * @public
     * <p>The ARN of the trust store certificate.</p>
     */
    trustStoreArn: string | undefined;
    /**
     * @public
     * <p>The thumbprint of the trust store certificate.</p>
     */
    thumbprint: string | undefined;
}
/**
 * @public
 * <p>The certificate.</p>
 */
export interface Certificate {
    /**
     * @public
     * <p>A hexadecimal identifier for the certificate.</p>
     */
    thumbprint?: string;
    /**
     * @public
     * <p>The entity the certificate belongs to.</p>
     */
    subject?: string;
    /**
     * @public
     * <p>The entity that issued the certificate.</p>
     */
    issuer?: string;
    /**
     * @public
     * <p>The certificate is not valid before this date.</p>
     */
    notValidBefore?: Date;
    /**
     * @public
     * <p>The certificate is not valid after this date.</p>
     */
    notValidAfter?: Date;
    /**
     * @public
     * <p>The body of the certificate.</p>
     */
    body?: Uint8Array;
}
/**
 * @public
 */
export interface GetTrustStoreCertificateResponse {
    /**
     * @public
     * <p>The ARN of the trust store certificate.</p>
     */
    trustStoreArn: string | undefined;
    /**
     * @public
     * <p>The certificate of the trust store certificate.</p>
     */
    certificate?: Certificate;
}
/**
 * @public
 */
export interface ListTrustStoreCertificatesRequest {
    /**
     * @public
     * <p>The ARN of the trust store</p>
     */
    trustStoreArn: string | undefined;
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 */
export interface ListTrustStoreCertificatesResponse {
    /**
     * @public
     * <p>The certificate list.</p>
     */
    certificateList?: CertificateSummary[];
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.&gt;</p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface ListTrustStoresRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary of the trust store.</p>
 */
export interface TrustStoreSummary {
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn?: string;
}
/**
 * @public
 */
export interface ListTrustStoresResponse {
    /**
     * @public
     * <p>The trust stores.</p>
     */
    trustStores?: TrustStoreSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdateTrustStoreRequest {
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
    /**
     * @public
     * <p>A list of CA certificates to add to the trust store.</p>
     */
    certificatesToAdd?: Uint8Array[];
    /**
     * @public
     * <p>A list of CA certificates to delete from a trust store.</p>
     */
    certificatesToDelete?: string[];
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface UpdateTrustStoreResponse {
    /**
     * @public
     * <p>The ARN of the trust store.</p>
     */
    trustStoreArn: string | undefined;
}
/**
 * @public
 */
export interface UntagResourceRequest {
    /**
     * @public
     * <p>The ARN of the resource.</p>
     */
    resourceArn: string | undefined;
    /**
     * @public
     * <p>The list of tag keys to remove from the resource.</p>
     */
    tagKeys: string[] | undefined;
}
/**
 * @public
 */
export interface UntagResourceResponse {
}
/**
 * @public
 */
export interface CreateUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The ARN of the Kinesis stream.</p>
     */
    kinesisStreamArn: string | undefined;
    /**
     * @public
     * <p>The tags to add to the user settings resource. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface CreateUserAccessLoggingSettingsResponse {
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteUserAccessLoggingSettingsResponse {
}
/**
 * @public
 */
export interface GetUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
}
/**
 * @public
 * <p>A user access logging settings resource that can be associated with a web portal.</p>
 */
export interface UserAccessLoggingSettings {
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
    /**
     * @public
     * <p>A list of web portal ARNs that this user access logging settings is associated with.</p>
     */
    associatedPortalArns?: string[];
    /**
     * @public
     * <p>The ARN of the Kinesis stream.</p>
     */
    kinesisStreamArn?: string;
}
/**
 * @public
 */
export interface GetUserAccessLoggingSettingsResponse {
    /**
     * @public
     * <p>The user access logging settings.</p>
     */
    userAccessLoggingSettings?: UserAccessLoggingSettings;
}
/**
 * @public
 */
export interface ListUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary of user access logging settings.</p>
 */
export interface UserAccessLoggingSettingsSummary {
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the Kinesis stream.</p>
     */
    kinesisStreamArn?: string;
}
/**
 * @public
 */
export interface ListUserAccessLoggingSettingsResponse {
    /**
     * @public
     * <p>The user access logging settings.</p>
     */
    userAccessLoggingSettings?: UserAccessLoggingSettingsSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation.</p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdateUserAccessLoggingSettingsRequest {
    /**
     * @public
     * <p>The ARN of the user access logging settings.</p>
     */
    userAccessLoggingSettingsArn: string | undefined;
    /**
     * @public
     * <p>The ARN of the Kinesis stream.</p>
     */
    kinesisStreamArn?: string;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
}
/**
 * @public
 */
export interface UpdateUserAccessLoggingSettingsResponse {
    /**
     * @public
     * <p>The user access logging settings.</p>
     */
    userAccessLoggingSettings: UserAccessLoggingSettings | undefined;
}
/**
 * @public
 * <p>Specifies a single cookie or set of cookies in an end user's browser.</p>
 */
export interface CookieSpecification {
    /**
     * @public
     * <p>The domain of the cookie.</p>
     */
    domain: string | undefined;
    /**
     * @public
     * <p>The name of the cookie.</p>
     */
    name?: string;
    /**
     * @public
     * <p>The path of the cookie.</p>
     */
    path?: string;
}
/**
 * @public
 * <p>The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.</p>
 */
export interface CookieSynchronizationConfiguration {
    /**
     * @public
     * <p>The list of cookie specifications that are allowed to be synchronized to the remote browser.</p>
     */
    allowlist: CookieSpecification[] | undefined;
    /**
     * @public
     * <p>The list of cookie specifications that are blocked from being synchronized to the remote browser.</p>
     */
    blocklist?: CookieSpecification[];
}
/**
 * @public
 * @enum
 */
export declare const EnabledType: {
    readonly DISABLED: "Disabled";
    readonly ENABLED: "Enabled";
};
/**
 * @public
 */
export type EnabledType = (typeof EnabledType)[keyof typeof EnabledType];
/**
 * @public
 */
export interface CreateUserSettingsRequest {
    /**
     * @public
     * <p>Specifies whether the user can copy text from the streaming session to the local
     *          device.</p>
     */
    copyAllowed: EnabledType | undefined;
    /**
     * @public
     * <p>Specifies whether the user can paste text from the local device to the streaming
     *          session.</p>
     */
    pasteAllowed: EnabledType | undefined;
    /**
     * @public
     * <p>Specifies whether the user can download files from the streaming session to the local
     *          device.</p>
     */
    downloadAllowed: EnabledType | undefined;
    /**
     * @public
     * <p>Specifies whether the user can upload files from the local device to the streaming
     *          session.</p>
     */
    uploadAllowed: EnabledType | undefined;
    /**
     * @public
     * <p>Specifies whether the user can print to the local device.</p>
     */
    printAllowed: EnabledType | undefined;
    /**
     * @public
     * <p>The tags to add to the user settings resource. A tag is a key-value pair.</p>
     */
    tags?: Tag[];
    /**
     * @public
     * <p>The amount of time that a streaming session remains active after users disconnect.</p>
     */
    disconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.</p>
     */
    idleDisconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token returns the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
    /**
     * @public
     * <p>The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.</p>
     */
    cookieSynchronizationConfiguration?: CookieSynchronizationConfiguration;
    /**
     * @public
     * <p>The customer managed key used to encrypt sensitive information in the user settings.</p>
     */
    customerManagedKey?: string;
    /**
     * @public
     * <p>The additional encryption context of the user settings.</p>
     */
    additionalEncryptionContext?: Record<string, string>;
}
/**
 * @public
 */
export interface CreateUserSettingsResponse {
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteUserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
}
/**
 * @public
 */
export interface DeleteUserSettingsResponse {
}
/**
 * @public
 */
export interface GetUserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
}
/**
 * @public
 * <p>A user settings resource that can be associated with a web portal. Once associated with
 *          a web portal, user settings control how users can transfer data between a streaming session
 *          and the their local devices. </p>
 */
export interface UserSettings {
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
    /**
     * @public
     * <p>A list of web portal ARNs that this user settings is associated with.</p>
     */
    associatedPortalArns?: string[];
    /**
     * @public
     * <p>Specifies whether the user can copy text from the streaming session to the local
     *          device.</p>
     */
    copyAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can paste text from the local device to the streaming
     *          session.</p>
     */
    pasteAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can download files from the streaming session to the local
     *          device.</p>
     */
    downloadAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can upload files from the local device to the streaming
     *          session.</p>
     */
    uploadAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can print to the local device.</p>
     */
    printAllowed?: EnabledType;
    /**
     * @public
     * <p>The amount of time that a streaming session remains active after users disconnect.</p>
     */
    disconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.</p>
     */
    idleDisconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.</p>
     */
    cookieSynchronizationConfiguration?: CookieSynchronizationConfiguration;
}
/**
 * @public
 */
export interface GetUserSettingsResponse {
    /**
     * @public
     * <p>The user settings.</p>
     */
    userSettings?: UserSettings;
}
/**
 * @public
 */
export interface ListUserSettingsRequest {
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation. </p>
     */
    nextToken?: string;
    /**
     * @public
     * <p>The maximum number of results to be included in the next page.</p>
     */
    maxResults?: number;
}
/**
 * @public
 * <p>The summary of user settings.</p>
 */
export interface UserSettingsSummary {
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
    /**
     * @public
     * <p>Specifies whether the user can copy text from the streaming session to the local
     *          device.</p>
     */
    copyAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can paste text from the local device to the streaming
     *          session.</p>
     */
    pasteAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can download files from the streaming session to the local
     *          device.</p>
     */
    downloadAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can upload files from the local device to the streaming
     *          session.</p>
     */
    uploadAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can print to the local device.</p>
     */
    printAllowed?: EnabledType;
    /**
     * @public
     * <p>The amount of time that a streaming session remains active after users disconnect.</p>
     */
    disconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.</p>
     */
    idleDisconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.</p>
     */
    cookieSynchronizationConfiguration?: CookieSynchronizationConfiguration;
}
/**
 * @public
 */
export interface ListUserSettingsResponse {
    /**
     * @public
     * <p>The user settings.</p>
     */
    userSettings?: UserSettingsSummary[];
    /**
     * @public
     * <p>The pagination token used to retrieve the next page of results for this operation. </p>
     */
    nextToken?: string;
}
/**
 * @public
 */
export interface UpdateUserSettingsRequest {
    /**
     * @public
     * <p>The ARN of the user settings.</p>
     */
    userSettingsArn: string | undefined;
    /**
     * @public
     * <p>Specifies whether the user can copy text from the streaming session to the local
     *          device.</p>
     */
    copyAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can paste text from the local device to the streaming
     *          session.</p>
     */
    pasteAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can download files from the streaming session to the local
     *          device.</p>
     */
    downloadAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can upload files from the local device to the streaming
     *          session.</p>
     */
    uploadAllowed?: EnabledType;
    /**
     * @public
     * <p>Specifies whether the user can print to the local device.</p>
     */
    printAllowed?: EnabledType;
    /**
     * @public
     * <p>The amount of time that a streaming session remains active after users disconnect.</p>
     */
    disconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.</p>
     */
    idleDisconnectTimeoutInMinutes?: number;
    /**
     * @public
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
     *          request. Idempotency ensures that an API request completes only once. With an idempotent
     *          request, if the original request completes successfully, subsequent retries with the same
     *          client token return the result from the original successful request. </p>
     *          <p>If you do not specify a client token, one is automatically generated by the AWS
     *          SDK.</p>
     */
    clientToken?: string;
    /**
     * @public
     * <p>The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.</p>
     *          <p>If the allowlist and blocklist are empty, the configuration becomes null.</p>
     */
    cookieSynchronizationConfiguration?: CookieSynchronizationConfiguration;
}
/**
 * @public
 */
export interface UpdateUserSettingsResponse {
    /**
     * @public
     * <p>The user settings.</p>
     */
    userSettings: UserSettings | undefined;
}
/**
 * @internal
 */
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
/**
 * @internal
 */
export declare const CreateBrowserSettingsRequestFilterSensitiveLog: (obj: CreateBrowserSettingsRequest) => any;
/**
 * @internal
 */
export declare const BrowserSettingsFilterSensitiveLog: (obj: BrowserSettings) => any;
/**
 * @internal
 */
export declare const GetBrowserSettingsResponseFilterSensitiveLog: (obj: GetBrowserSettingsResponse) => any;
/**
 * @internal
 */
export declare const UpdateBrowserSettingsRequestFilterSensitiveLog: (obj: UpdateBrowserSettingsRequest) => any;
/**
 * @internal
 */
export declare const UpdateBrowserSettingsResponseFilterSensitiveLog: (obj: UpdateBrowserSettingsResponse) => any;
/**
 * @internal
 */
export declare const CreateIdentityProviderRequestFilterSensitiveLog: (obj: CreateIdentityProviderRequest) => any;
/**
 * @internal
 */
export declare const IdentityProviderFilterSensitiveLog: (obj: IdentityProvider) => any;
/**
 * @internal
 */
export declare const GetIdentityProviderResponseFilterSensitiveLog: (obj: GetIdentityProviderResponse) => any;
/**
 * @internal
 */
export declare const IdentityProviderSummaryFilterSensitiveLog: (obj: IdentityProviderSummary) => any;
/**
 * @internal
 */
export declare const ListIdentityProvidersResponseFilterSensitiveLog: (obj: ListIdentityProvidersResponse) => any;
/**
 * @internal
 */
export declare const UpdateIdentityProviderRequestFilterSensitiveLog: (obj: UpdateIdentityProviderRequest) => any;
/**
 * @internal
 */
export declare const UpdateIdentityProviderResponseFilterSensitiveLog: (obj: UpdateIdentityProviderResponse) => any;
/**
 * @internal
 */
export declare const IpRuleFilterSensitiveLog: (obj: IpRule) => any;
/**
 * @internal
 */
export declare const CreateIpAccessSettingsRequestFilterSensitiveLog: (obj: CreateIpAccessSettingsRequest) => any;
/**
 * @internal
 */
export declare const IpAccessSettingsFilterSensitiveLog: (obj: IpAccessSettings) => any;
/**
 * @internal
 */
export declare const GetIpAccessSettingsResponseFilterSensitiveLog: (obj: GetIpAccessSettingsResponse) => any;
/**
 * @internal
 */
export declare const IpAccessSettingsSummaryFilterSensitiveLog: (obj: IpAccessSettingsSummary) => any;
/**
 * @internal
 */
export declare const ListIpAccessSettingsResponseFilterSensitiveLog: (obj: ListIpAccessSettingsResponse) => any;
/**
 * @internal
 */
export declare const UpdateIpAccessSettingsRequestFilterSensitiveLog: (obj: UpdateIpAccessSettingsRequest) => any;
/**
 * @internal
 */
export declare const UpdateIpAccessSettingsResponseFilterSensitiveLog: (obj: UpdateIpAccessSettingsResponse) => any;
/**
 * @internal
 */
export declare const ListTagsForResourceResponseFilterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
/**
 * @internal
 */
export declare const CreateNetworkSettingsRequestFilterSensitiveLog: (obj: CreateNetworkSettingsRequest) => any;
/**
 * @internal
 */
export declare const CreatePortalRequestFilterSensitiveLog: (obj: CreatePortalRequest) => any;
/**
 * @internal
 */
export declare const PortalFilterSensitiveLog: (obj: Portal) => any;
/**
 * @internal
 */
export declare const GetPortalResponseFilterSensitiveLog: (obj: GetPortalResponse) => any;
/**
 * @internal
 */
export declare const PortalSummaryFilterSensitiveLog: (obj: PortalSummary) => any;
/**
 * @internal
 */
export declare const ListPortalsResponseFilterSensitiveLog: (obj: ListPortalsResponse) => any;
/**
 * @internal
 */
export declare const UpdatePortalRequestFilterSensitiveLog: (obj: UpdatePortalRequest) => any;
/**
 * @internal
 */
export declare const UpdatePortalResponseFilterSensitiveLog: (obj: UpdatePortalResponse) => any;
/**
 * @internal
 */
export declare const TagResourceRequestFilterSensitiveLog: (obj: TagResourceRequest) => any;
/**
 * @internal
 */
export declare const CreateTrustStoreRequestFilterSensitiveLog: (obj: CreateTrustStoreRequest) => any;
/**
 * @internal
 */
export declare const UntagResourceRequestFilterSensitiveLog: (obj: UntagResourceRequest) => any;
/**
 * @internal
 */
export declare const CreateUserAccessLoggingSettingsRequestFilterSensitiveLog: (obj: CreateUserAccessLoggingSettingsRequest) => any;
/**
 * @internal
 */
export declare const CookieSynchronizationConfigurationFilterSensitiveLog: (obj: CookieSynchronizationConfiguration) => any;
/**
 * @internal
 */
export declare const CreateUserSettingsRequestFilterSensitiveLog: (obj: CreateUserSettingsRequest) => any;
/**
 * @internal
 */
export declare const UserSettingsFilterSensitiveLog: (obj: UserSettings) => any;
/**
 * @internal
 */
export declare const GetUserSettingsResponseFilterSensitiveLog: (obj: GetUserSettingsResponse) => any;
/**
 * @internal
 */
export declare const UserSettingsSummaryFilterSensitiveLog: (obj: UserSettingsSummary) => any;
/**
 * @internal
 */
export declare const ListUserSettingsResponseFilterSensitiveLog: (obj: ListUserSettingsResponse) => any;
/**
 * @internal
 */
export declare const UpdateUserSettingsRequestFilterSensitiveLog: (obj: UpdateUserSettingsRequest) => any;
/**
 * @internal
 */
export declare const UpdateUserSettingsResponseFilterSensitiveLog: (obj: UpdateUserSettingsResponse) => any;
