import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { LockRuleRequest, LockRuleResponse } from "../models/models_0";
import { RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RbinClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link LockRuleCommand}.
 */
export interface LockRuleCommandInput extends LockRuleRequest {
}
/**
 * @public
 *
 * The output of {@link LockRuleCommand}.
 */
export interface LockRuleCommandOutput extends LockRuleResponse, __MetadataBearer {
}
declare const LockRuleCommand_base: {
    new (input: LockRuleCommandInput): import("@smithy/smithy-client").CommandImpl<LockRuleCommandInput, LockRuleCommandOutput, RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: LockRuleCommandInput): import("@smithy/smithy-client").CommandImpl<LockRuleCommandInput, LockRuleCommandOutput, RbinClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Locks a retention rule. A locked retention rule can't be modified or deleted.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { RbinClient, LockRuleCommand } from "@aws-sdk/client-rbin"; // ES Modules import
 * // const { RbinClient, LockRuleCommand } = require("@aws-sdk/client-rbin"); // CommonJS import
 * const client = new RbinClient(config);
 * const input = { // LockRuleRequest
 *   Identifier: "STRING_VALUE", // required
 *   LockConfiguration: { // LockConfiguration
 *     UnlockDelay: { // UnlockDelay
 *       UnlockDelayValue: Number("int"), // required
 *       UnlockDelayUnit: "DAYS", // required
 *     },
 *   },
 * };
 * const command = new LockRuleCommand(input);
 * const response = await client.send(command);
 * // { // LockRuleResponse
 * //   Identifier: "STRING_VALUE",
 * //   Description: "STRING_VALUE",
 * //   ResourceType: "EBS_SNAPSHOT" || "EC2_IMAGE",
 * //   RetentionPeriod: { // RetentionPeriod
 * //     RetentionPeriodValue: Number("int"), // required
 * //     RetentionPeriodUnit: "DAYS", // required
 * //   },
 * //   ResourceTags: [ // ResourceTags
 * //     { // ResourceTag
 * //       ResourceTagKey: "STRING_VALUE", // required
 * //       ResourceTagValue: "STRING_VALUE",
 * //     },
 * //   ],
 * //   Status: "pending" || "available",
 * //   LockConfiguration: { // LockConfiguration
 * //     UnlockDelay: { // UnlockDelay
 * //       UnlockDelayValue: Number("int"), // required
 * //       UnlockDelayUnit: "DAYS", // required
 * //     },
 * //   },
 * //   LockState: "locked" || "pending_unlock" || "unlocked",
 * //   RuleArn: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param LockRuleCommandInput - {@link LockRuleCommandInput}
 * @returns {@link LockRuleCommandOutput}
 * @see {@link LockRuleCommandInput} for command's `input` shape.
 * @see {@link LockRuleCommandOutput} for command's `response` shape.
 * @see {@link RbinClientResolvedConfig | config} for RbinClient's `config` shape.
 *
 * @throws {@link ConflictException} (client fault)
 *  <p>The specified retention rule lock request can't be completed.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>The service could not respond to the request due to an internal problem.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The specified resource was not found.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>One or more of the parameters in the request is not valid.</p>
 *
 * @throws {@link RbinServiceException}
 * <p>Base exception class for all service exceptions from Rbin service.</p>
 *
 * @public
 */
export declare class LockRuleCommand extends LockRuleCommand_base {
}
