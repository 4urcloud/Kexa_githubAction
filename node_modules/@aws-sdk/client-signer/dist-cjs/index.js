"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AddProfilePermissionCommand: () => AddProfilePermissionCommand,
  BadRequestException: () => BadRequestException,
  CancelSigningProfileCommand: () => CancelSigningProfileCommand,
  Category: () => Category,
  ConflictException: () => ConflictException,
  DescribeSigningJobCommand: () => DescribeSigningJobCommand,
  EncryptionAlgorithm: () => EncryptionAlgorithm,
  GetRevocationStatusCommand: () => GetRevocationStatusCommand,
  GetSigningPlatformCommand: () => GetSigningPlatformCommand,
  GetSigningProfileCommand: () => GetSigningProfileCommand,
  HashAlgorithm: () => HashAlgorithm,
  ImageFormat: () => ImageFormat,
  InternalServiceErrorException: () => InternalServiceErrorException,
  ListProfilePermissionsCommand: () => ListProfilePermissionsCommand,
  ListSigningJobsCommand: () => ListSigningJobsCommand,
  ListSigningPlatformsCommand: () => ListSigningPlatformsCommand,
  ListSigningProfilesCommand: () => ListSigningProfilesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  NotFoundException: () => NotFoundException,
  PutSigningProfileCommand: () => PutSigningProfileCommand,
  RemoveProfilePermissionCommand: () => RemoveProfilePermissionCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RevokeSignatureCommand: () => RevokeSignatureCommand,
  RevokeSigningProfileCommand: () => RevokeSigningProfileCommand,
  ServiceLimitExceededException: () => ServiceLimitExceededException,
  SignPayloadCommand: () => SignPayloadCommand,
  Signer: () => Signer,
  SignerClient: () => SignerClient,
  SignerServiceException: () => SignerServiceException,
  SigningProfileStatus: () => SigningProfileStatus,
  SigningStatus: () => SigningStatus,
  StartSigningJobCommand: () => StartSigningJobCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  TooManyRequestsException: () => TooManyRequestsException,
  UntagResourceCommand: () => UntagResourceCommand,
  ValidationException: () => ValidationException,
  ValidityType: () => ValidityType,
  __Client: () => import_smithy_client.Client,
  paginateListSigningJobs: () => paginateListSigningJobs,
  paginateListSigningPlatforms: () => paginateListSigningPlatforms,
  paginateListSigningProfiles: () => paginateListSigningProfiles,
  waitForSuccessfulSigningJob: () => waitForSuccessfulSigningJob,
  waitUntilSuccessfulSigningJob: () => waitUntilSuccessfulSigningJob
});
module.exports = __toCommonJS(src_exports);

// src/SignerClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "signer"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/SignerClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/SignerClient.ts
var _SignerClient = class _SignerClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultSignerHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_SignerClient, "SignerClient");
var SignerClient = _SignerClient;

// src/Signer.ts


// src/commands/AddProfilePermissionCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



var import_uuid = require("uuid");

// src/models/SignerServiceException.ts

var _SignerServiceException = class _SignerServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _SignerServiceException.prototype);
  }
};
__name(_SignerServiceException, "SignerServiceException");
var SignerServiceException = _SignerServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.code = opts.code;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _ConflictException = class _ConflictException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.code = opts.code;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServiceErrorException = class _InternalServiceErrorException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServiceErrorException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServiceErrorException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServiceErrorException.prototype);
    this.code = opts.code;
  }
};
__name(_InternalServiceErrorException, "InternalServiceErrorException");
var InternalServiceErrorException = _InternalServiceErrorException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.code = opts.code;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceLimitExceededException = class _ServiceLimitExceededException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceLimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceLimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceLimitExceededException.prototype);
    this.code = opts.code;
  }
};
__name(_ServiceLimitExceededException, "ServiceLimitExceededException");
var ServiceLimitExceededException = _ServiceLimitExceededException;
var _TooManyRequestsException = class _TooManyRequestsException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyRequestsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
    this.code = opts.code;
  }
};
__name(_TooManyRequestsException, "TooManyRequestsException");
var TooManyRequestsException = _TooManyRequestsException;
var _ValidationException = class _ValidationException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.code = opts.code;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _BadRequestException = class _BadRequestException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "BadRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.code = opts.code;
  }
};
__name(_BadRequestException, "BadRequestException");
var BadRequestException = _BadRequestException;
var Category = {
  AWSIoT: "AWSIoT"
};
var EncryptionAlgorithm = {
  ECDSA: "ECDSA",
  RSA: "RSA"
};
var HashAlgorithm = {
  SHA1: "SHA1",
  SHA256: "SHA256"
};
var ImageFormat = {
  JSON: "JSON",
  JSONDetached: "JSONDetached",
  JSONEmbedded: "JSONEmbedded"
};
var SigningStatus = {
  Failed: "Failed",
  InProgress: "InProgress",
  Succeeded: "Succeeded"
};
var ValidityType = {
  DAYS: "DAYS",
  MONTHS: "MONTHS",
  YEARS: "YEARS"
};
var SigningProfileStatus = {
  Active: "Active",
  Canceled: "Canceled",
  Revoked: "Revoked"
};
var _NotFoundException = class _NotFoundException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.code = opts.code;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var _ThrottlingException = class _ThrottlingException extends SignerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.code = opts.code;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;

// src/protocols/Aws_restJson1.ts
var se_AddProfilePermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/signing-profiles/{profileName}/permissions");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      action: [],
      principal: [],
      profileVersion: [],
      revisionId: [],
      statementId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddProfilePermissionCommand");
var se_CancelSigningProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-profiles/{profileName}");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_CancelSigningProfileCommand");
var se_DescribeSigningJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-jobs/{jobId}");
  b.p("jobId", () => input.jobId, "{jobId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeSigningJobCommand");
var se_GetRevocationStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/revocations");
  const query = (0, import_smithy_client.map)({
    [_sT]: [
      (0, import_smithy_client.expectNonNull)(input.signatureTimestamp, `signatureTimestamp`) != null,
      () => (input[_sT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_pI]: [, (0, import_smithy_client.expectNonNull)(input[_pI], `platformId`)],
    [_pVA]: [, (0, import_smithy_client.expectNonNull)(input[_pVA], `profileVersionArn`)],
    [_jA]: [, (0, import_smithy_client.expectNonNull)(input[_jA], `jobArn`)],
    [_cH]: [
      (0, import_smithy_client.expectNonNull)(input.certificateHashes, `certificateHashes`) != null,
      () => (input[_cH] || []).map((_entry) => _entry)
    ]
  });
  let body;
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "verification." + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetRevocationStatusCommand");
var se_GetSigningPlatformCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-platforms/{platformId}");
  b.p("platformId", () => input.platformId, "{platformId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetSigningPlatformCommand");
var se_GetSigningProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-profiles/{profileName}");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  const query = (0, import_smithy_client.map)({
    [_pO]: [, input[_pO]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetSigningProfileCommand");
var se_ListProfilePermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-profiles/{profileName}/permissions");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListProfilePermissionsCommand");
var se_ListSigningJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-jobs");
  const query = (0, import_smithy_client.map)({
    [_s]: [, input[_s]],
    [_pI]: [, input[_pI]],
    [_rB]: [, input[_rB]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_iR]: [() => input.isRevoked !== void 0, () => input[_iR].toString()],
    [_sEB]: [
      () => input.signatureExpiresBefore !== void 0,
      () => (input[_sEB].toISOString().split(".")[0] + "Z").toString()
    ],
    [_sEA]: [
      () => input.signatureExpiresAfter !== void 0,
      () => (input[_sEA].toISOString().split(".")[0] + "Z").toString()
    ],
    [_jI]: [, input[_jI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSigningJobsCommand");
var se_ListSigningPlatformsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-platforms");
  const query = (0, import_smithy_client.map)({
    [_c]: [, input[_c]],
    [_p]: [, input[_p]],
    [_t]: [, input[_t]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSigningPlatformsCommand");
var se_ListSigningProfilesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-profiles");
  const query = (0, import_smithy_client.map)({
    [_iC]: [() => input.includeCanceled !== void 0, () => input[_iC].toString()],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_pI]: [, input[_pI]],
    [_st]: [() => input.statuses !== void 0, () => (input[_st] || []).map((_entry) => _entry)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSigningProfilesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PutSigningProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/signing-profiles/{profileName}");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      overrides: (_) => (0, import_smithy_client._json)(_),
      platformId: [],
      signatureValidityPeriod: (_) => (0, import_smithy_client._json)(_),
      signingMaterial: (_) => (0, import_smithy_client._json)(_),
      signingParameters: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutSigningProfileCommand");
var se_RemoveProfilePermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/signing-profiles/{profileName}/permissions/{statementId}");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  b.p("statementId", () => input.statementId, "{statementId}", false);
  const query = (0, import_smithy_client.map)({
    [_rI]: [, (0, import_smithy_client.expectNonNull)(input[_rI], `revisionId`)]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_RemoveProfilePermissionCommand");
var se_RevokeSignatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/signing-jobs/{jobId}/revoke");
  b.p("jobId", () => input.jobId, "{jobId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      jobOwner: [],
      reason: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RevokeSignatureCommand");
var se_RevokeSigningProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/signing-profiles/{profileName}/revoke");
  b.p("profileName", () => input.profileName, "{profileName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      effectiveTime: (_) => Math.round(_.getTime() / 1e3),
      profileVersion: [],
      reason: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RevokeSigningProfileCommand");
var se_SignPayloadCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/signing-jobs/with-payload");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      payload: (_) => context.base64Encoder(_),
      payloadFormat: [],
      profileName: [],
      profileOwner: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SignPayloadCommand");
var se_StartSigningJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/signing-jobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      destination: (_) => (0, import_smithy_client._json)(_),
      profileName: [],
      profileOwner: [],
      source: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartSigningJobCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var de_AddProfilePermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    revisionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AddProfilePermissionCommand");
var de_CancelSigningProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelSigningProfileCommand");
var de_DescribeSigningJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    completedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    jobId: import_smithy_client.expectString,
    jobInvoker: import_smithy_client.expectString,
    jobOwner: import_smithy_client.expectString,
    overrides: import_smithy_client._json,
    platformDisplayName: import_smithy_client.expectString,
    platformId: import_smithy_client.expectString,
    profileName: import_smithy_client.expectString,
    profileVersion: import_smithy_client.expectString,
    requestedBy: import_smithy_client.expectString,
    revocationRecord: (_) => de_SigningJobRevocationRecord(_, context),
    signatureExpiresAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    signedObject: import_smithy_client._json,
    signingMaterial: import_smithy_client._json,
    signingParameters: import_smithy_client._json,
    source: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSigningJobCommand");
var de_GetRevocationStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    revokedEntities: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRevocationStatusCommand");
var de_GetSigningPlatformCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    category: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    maxSizeInMB: import_smithy_client.expectInt32,
    partner: import_smithy_client.expectString,
    platformId: import_smithy_client.expectString,
    revocationSupported: import_smithy_client.expectBoolean,
    signingConfiguration: import_smithy_client._json,
    signingImageFormat: import_smithy_client._json,
    target: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSigningPlatformCommand");
var de_GetSigningProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    overrides: import_smithy_client._json,
    platformDisplayName: import_smithy_client.expectString,
    platformId: import_smithy_client.expectString,
    profileName: import_smithy_client.expectString,
    profileVersion: import_smithy_client.expectString,
    profileVersionArn: import_smithy_client.expectString,
    revocationRecord: (_) => de_SigningProfileRevocationRecord(_, context),
    signatureValidityPeriod: import_smithy_client._json,
    signingMaterial: import_smithy_client._json,
    signingParameters: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSigningProfileCommand");
var de_ListProfilePermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    permissions: import_smithy_client._json,
    policySizeBytes: import_smithy_client.expectInt32,
    revisionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListProfilePermissionsCommand");
var de_ListSigningJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobs: (_) => de_SigningJobs(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSigningJobsCommand");
var de_ListSigningPlatformsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    platforms: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSigningPlatformsCommand");
var de_ListSigningProfilesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    profiles: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSigningProfilesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PutSigningProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    profileVersion: import_smithy_client.expectString,
    profileVersionArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutSigningProfileCommand");
var de_RemoveProfilePermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    revisionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RemoveProfilePermissionCommand");
var de_RevokeSignatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RevokeSignatureCommand");
var de_RevokeSigningProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RevokeSigningProfileCommand");
var de_SignPayloadCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobId: import_smithy_client.expectString,
    jobOwner: import_smithy_client.expectString,
    metadata: import_smithy_client._json,
    signature: context.base64Decoder
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SignPayloadCommand");
var de_StartSigningJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobId: import_smithy_client.expectString,
    jobOwner: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartSigningJobCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.signer#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.signer#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServiceErrorException":
    case "com.amazonaws.signer#InternalServiceErrorException":
      throw await de_InternalServiceErrorExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.signer#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceLimitExceededException":
    case "com.amazonaws.signer#ServiceLimitExceededException":
      throw await de_ServiceLimitExceededExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.signer#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.signer#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "BadRequestException":
    case "com.amazonaws.signer#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.signer#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.signer#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(SignerServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServiceErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServiceErrorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServiceErrorExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceLimitExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyRequestsExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    code: import_smithy_client.expectString,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_SigningJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    isRevoked: import_smithy_client.expectBoolean,
    jobId: import_smithy_client.expectString,
    jobInvoker: import_smithy_client.expectString,
    jobOwner: import_smithy_client.expectString,
    platformDisplayName: import_smithy_client.expectString,
    platformId: import_smithy_client.expectString,
    profileName: import_smithy_client.expectString,
    profileVersion: import_smithy_client.expectString,
    signatureExpiresAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    signedObject: import_smithy_client._json,
    signingMaterial: import_smithy_client._json,
    source: import_smithy_client._json,
    status: import_smithy_client.expectString
  });
}, "de_SigningJob");
var de_SigningJobRevocationRecord = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    reason: import_smithy_client.expectString,
    revokedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    revokedBy: import_smithy_client.expectString
  });
}, "de_SigningJobRevocationRecord");
var de_SigningJobs = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SigningJob(entry, context);
  });
  return retVal;
}, "de_SigningJobs");
var de_SigningProfileRevocationRecord = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    revocationEffectiveFrom: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    revokedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    revokedBy: import_smithy_client.expectString
  });
}, "de_SigningProfileRevocationRecord");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _c = "category";
var _cH = "certificateHashes";
var _iC = "includeCanceled";
var _iR = "isRevoked";
var _jA = "jobArn";
var _jI = "jobInvoker";
var _mR = "maxResults";
var _nT = "nextToken";
var _p = "partner";
var _pI = "platformId";
var _pO = "profileOwner";
var _pVA = "profileVersionArn";
var _rB = "requestedBy";
var _rI = "revisionId";
var _s = "status";
var _sEA = "signatureExpiresAfter";
var _sEB = "signatureExpiresBefore";
var _sT = "signatureTimestamp";
var _st = "statuses";
var _t = "target";
var _tK = "tagKeys";

// src/commands/AddProfilePermissionCommand.ts
var _AddProfilePermissionCommand = class _AddProfilePermissionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "AddProfilePermission", {}).n("SignerClient", "AddProfilePermissionCommand").f(void 0, void 0).ser(se_AddProfilePermissionCommand).de(de_AddProfilePermissionCommand).build() {
};
__name(_AddProfilePermissionCommand, "AddProfilePermissionCommand");
var AddProfilePermissionCommand = _AddProfilePermissionCommand;

// src/commands/CancelSigningProfileCommand.ts




var _CancelSigningProfileCommand = class _CancelSigningProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "CancelSigningProfile", {}).n("SignerClient", "CancelSigningProfileCommand").f(void 0, void 0).ser(se_CancelSigningProfileCommand).de(de_CancelSigningProfileCommand).build() {
};
__name(_CancelSigningProfileCommand, "CancelSigningProfileCommand");
var CancelSigningProfileCommand = _CancelSigningProfileCommand;

// src/commands/DescribeSigningJobCommand.ts




var _DescribeSigningJobCommand = class _DescribeSigningJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "DescribeSigningJob", {}).n("SignerClient", "DescribeSigningJobCommand").f(void 0, void 0).ser(se_DescribeSigningJobCommand).de(de_DescribeSigningJobCommand).build() {
};
__name(_DescribeSigningJobCommand, "DescribeSigningJobCommand");
var DescribeSigningJobCommand = _DescribeSigningJobCommand;

// src/commands/GetRevocationStatusCommand.ts




var _GetRevocationStatusCommand = class _GetRevocationStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "GetRevocationStatus", {}).n("SignerClient", "GetRevocationStatusCommand").f(void 0, void 0).ser(se_GetRevocationStatusCommand).de(de_GetRevocationStatusCommand).build() {
};
__name(_GetRevocationStatusCommand, "GetRevocationStatusCommand");
var GetRevocationStatusCommand = _GetRevocationStatusCommand;

// src/commands/GetSigningPlatformCommand.ts




var _GetSigningPlatformCommand = class _GetSigningPlatformCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "GetSigningPlatform", {}).n("SignerClient", "GetSigningPlatformCommand").f(void 0, void 0).ser(se_GetSigningPlatformCommand).de(de_GetSigningPlatformCommand).build() {
};
__name(_GetSigningPlatformCommand, "GetSigningPlatformCommand");
var GetSigningPlatformCommand = _GetSigningPlatformCommand;

// src/commands/GetSigningProfileCommand.ts




var _GetSigningProfileCommand = class _GetSigningProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "GetSigningProfile", {}).n("SignerClient", "GetSigningProfileCommand").f(void 0, void 0).ser(se_GetSigningProfileCommand).de(de_GetSigningProfileCommand).build() {
};
__name(_GetSigningProfileCommand, "GetSigningProfileCommand");
var GetSigningProfileCommand = _GetSigningProfileCommand;

// src/commands/ListProfilePermissionsCommand.ts




var _ListProfilePermissionsCommand = class _ListProfilePermissionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "ListProfilePermissions", {}).n("SignerClient", "ListProfilePermissionsCommand").f(void 0, void 0).ser(se_ListProfilePermissionsCommand).de(de_ListProfilePermissionsCommand).build() {
};
__name(_ListProfilePermissionsCommand, "ListProfilePermissionsCommand");
var ListProfilePermissionsCommand = _ListProfilePermissionsCommand;

// src/commands/ListSigningJobsCommand.ts




var _ListSigningJobsCommand = class _ListSigningJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "ListSigningJobs", {}).n("SignerClient", "ListSigningJobsCommand").f(void 0, void 0).ser(se_ListSigningJobsCommand).de(de_ListSigningJobsCommand).build() {
};
__name(_ListSigningJobsCommand, "ListSigningJobsCommand");
var ListSigningJobsCommand = _ListSigningJobsCommand;

// src/commands/ListSigningPlatformsCommand.ts




var _ListSigningPlatformsCommand = class _ListSigningPlatformsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "ListSigningPlatforms", {}).n("SignerClient", "ListSigningPlatformsCommand").f(void 0, void 0).ser(se_ListSigningPlatformsCommand).de(de_ListSigningPlatformsCommand).build() {
};
__name(_ListSigningPlatformsCommand, "ListSigningPlatformsCommand");
var ListSigningPlatformsCommand = _ListSigningPlatformsCommand;

// src/commands/ListSigningProfilesCommand.ts




var _ListSigningProfilesCommand = class _ListSigningProfilesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "ListSigningProfiles", {}).n("SignerClient", "ListSigningProfilesCommand").f(void 0, void 0).ser(se_ListSigningProfilesCommand).de(de_ListSigningProfilesCommand).build() {
};
__name(_ListSigningProfilesCommand, "ListSigningProfilesCommand");
var ListSigningProfilesCommand = _ListSigningProfilesCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "ListTagsForResource", {}).n("SignerClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PutSigningProfileCommand.ts




var _PutSigningProfileCommand = class _PutSigningProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "PutSigningProfile", {}).n("SignerClient", "PutSigningProfileCommand").f(void 0, void 0).ser(se_PutSigningProfileCommand).de(de_PutSigningProfileCommand).build() {
};
__name(_PutSigningProfileCommand, "PutSigningProfileCommand");
var PutSigningProfileCommand = _PutSigningProfileCommand;

// src/commands/RemoveProfilePermissionCommand.ts




var _RemoveProfilePermissionCommand = class _RemoveProfilePermissionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "RemoveProfilePermission", {}).n("SignerClient", "RemoveProfilePermissionCommand").f(void 0, void 0).ser(se_RemoveProfilePermissionCommand).de(de_RemoveProfilePermissionCommand).build() {
};
__name(_RemoveProfilePermissionCommand, "RemoveProfilePermissionCommand");
var RemoveProfilePermissionCommand = _RemoveProfilePermissionCommand;

// src/commands/RevokeSignatureCommand.ts




var _RevokeSignatureCommand = class _RevokeSignatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "RevokeSignature", {}).n("SignerClient", "RevokeSignatureCommand").f(void 0, void 0).ser(se_RevokeSignatureCommand).de(de_RevokeSignatureCommand).build() {
};
__name(_RevokeSignatureCommand, "RevokeSignatureCommand");
var RevokeSignatureCommand = _RevokeSignatureCommand;

// src/commands/RevokeSigningProfileCommand.ts




var _RevokeSigningProfileCommand = class _RevokeSigningProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "RevokeSigningProfile", {}).n("SignerClient", "RevokeSigningProfileCommand").f(void 0, void 0).ser(se_RevokeSigningProfileCommand).de(de_RevokeSigningProfileCommand).build() {
};
__name(_RevokeSigningProfileCommand, "RevokeSigningProfileCommand");
var RevokeSigningProfileCommand = _RevokeSigningProfileCommand;

// src/commands/SignPayloadCommand.ts




var _SignPayloadCommand = class _SignPayloadCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "SignPayload", {}).n("SignerClient", "SignPayloadCommand").f(void 0, void 0).ser(se_SignPayloadCommand).de(de_SignPayloadCommand).build() {
};
__name(_SignPayloadCommand, "SignPayloadCommand");
var SignPayloadCommand = _SignPayloadCommand;

// src/commands/StartSigningJobCommand.ts




var _StartSigningJobCommand = class _StartSigningJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "StartSigningJob", {}).n("SignerClient", "StartSigningJobCommand").f(void 0, void 0).ser(se_StartSigningJobCommand).de(de_StartSigningJobCommand).build() {
};
__name(_StartSigningJobCommand, "StartSigningJobCommand");
var StartSigningJobCommand = _StartSigningJobCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "TagResource", {}).n("SignerClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("WallabyService", "UntagResource", {}).n("SignerClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/Signer.ts
var commands = {
  AddProfilePermissionCommand,
  CancelSigningProfileCommand,
  DescribeSigningJobCommand,
  GetRevocationStatusCommand,
  GetSigningPlatformCommand,
  GetSigningProfileCommand,
  ListProfilePermissionsCommand,
  ListSigningJobsCommand,
  ListSigningPlatformsCommand,
  ListSigningProfilesCommand,
  ListTagsForResourceCommand,
  PutSigningProfileCommand,
  RemoveProfilePermissionCommand,
  RevokeSignatureCommand,
  RevokeSigningProfileCommand,
  SignPayloadCommand,
  StartSigningJobCommand,
  TagResourceCommand,
  UntagResourceCommand
};
var _Signer = class _Signer extends SignerClient {
};
__name(_Signer, "Signer");
var Signer = _Signer;
(0, import_smithy_client.createAggregatedClient)(commands, Signer);

// src/pagination/ListSigningJobsPaginator.ts

var paginateListSigningJobs = (0, import_core.createPaginator)(SignerClient, ListSigningJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSigningPlatformsPaginator.ts

var paginateListSigningPlatforms = (0, import_core.createPaginator)(SignerClient, ListSigningPlatformsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSigningProfilesPaginator.ts

var paginateListSigningProfiles = (0, import_core.createPaginator)(SignerClient, ListSigningProfilesCommand, "nextToken", "nextToken", "maxResults");

// src/waiters/waitForSuccessfulSigningJob.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeSigningJobCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.status;
      }, "returnComparator");
      if (returnComparator() === "Succeeded") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.status;
      }, "returnComparator");
      if (returnComparator() === "Failed") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "ResourceNotFoundException") {
      return { state: import_util_waiter.WaiterState.FAILURE, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForSuccessfulSigningJob = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForSuccessfulSigningJob");
var waitUntilSuccessfulSigningJob = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 20, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilSuccessfulSigningJob");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  SignerServiceException,
  __Client,
  SignerClient,
  Signer,
  $Command,
  AddProfilePermissionCommand,
  CancelSigningProfileCommand,
  DescribeSigningJobCommand,
  GetRevocationStatusCommand,
  GetSigningPlatformCommand,
  GetSigningProfileCommand,
  ListProfilePermissionsCommand,
  ListSigningJobsCommand,
  ListSigningPlatformsCommand,
  ListSigningProfilesCommand,
  ListTagsForResourceCommand,
  PutSigningProfileCommand,
  RemoveProfilePermissionCommand,
  RevokeSignatureCommand,
  RevokeSigningProfileCommand,
  SignPayloadCommand,
  StartSigningJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  paginateListSigningJobs,
  paginateListSigningPlatforms,
  paginateListSigningProfiles,
  waitForSuccessfulSigningJob,
  waitUntilSuccessfulSigningJob,
  AccessDeniedException,
  ConflictException,
  InternalServiceErrorException,
  ResourceNotFoundException,
  ServiceLimitExceededException,
  TooManyRequestsException,
  ValidationException,
  BadRequestException,
  Category,
  EncryptionAlgorithm,
  HashAlgorithm,
  ImageFormat,
  SigningStatus,
  ValidityType,
  SigningProfileStatus,
  NotFoundException,
  ThrottlingException
});

