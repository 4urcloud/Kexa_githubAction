import { SignerServiceException as __BaseException } from "./SignerServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.code = opts.code;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.code = opts.code;
    }
}
export class InternalServiceErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceErrorException.prototype);
        this.code = opts.code;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.code = opts.code;
    }
}
export class ServiceLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceLimitExceededException.prototype);
        this.code = opts.code;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.code = opts.code;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.code = opts.code;
    }
}
export class BadRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.code = opts.code;
    }
}
export const Category = {
    AWSIoT: "AWSIoT",
};
export const EncryptionAlgorithm = {
    ECDSA: "ECDSA",
    RSA: "RSA",
};
export const HashAlgorithm = {
    SHA1: "SHA1",
    SHA256: "SHA256",
};
export const ImageFormat = {
    JSON: "JSON",
    JSONDetached: "JSONDetached",
    JSONEmbedded: "JSONEmbedded",
};
export const SigningStatus = {
    Failed: "Failed",
    InProgress: "InProgress",
    Succeeded: "Succeeded",
};
export const ValidityType = {
    DAYS: "DAYS",
    MONTHS: "MONTHS",
    YEARS: "YEARS",
};
export const SigningProfileStatus = {
    Active: "Active",
    Canceled: "Canceled",
    Revoked: "Revoked",
};
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.code = opts.code;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.code = opts.code;
    }
}
