import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { SignerServiceException as __BaseException } from "./SignerServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AddProfilePermissionRequest {
  profileName: string | undefined;
  profileVersion?: string;
  action: string | undefined;
  principal: string | undefined;
  revisionId?: string;
  statementId: string | undefined;
}
export interface AddProfilePermissionResponse {
  revisionId?: string;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  code?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServiceErrorException extends __BaseException {
  readonly name: "InternalServiceErrorException";
  readonly $fault: "server";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceLimitExceededException extends __BaseException {
  readonly name: "ServiceLimitExceededException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceLimitExceededException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export interface CancelSigningProfileRequest {
  profileName: string | undefined;
}
export declare const Category: {
  readonly AWSIoT: "AWSIoT";
};
export type Category = (typeof Category)[keyof typeof Category];
export interface DescribeSigningJobRequest {
  jobId: string | undefined;
}
export declare const EncryptionAlgorithm: {
  readonly ECDSA: "ECDSA";
  readonly RSA: "RSA";
};
export type EncryptionAlgorithm =
  (typeof EncryptionAlgorithm)[keyof typeof EncryptionAlgorithm];
export declare const HashAlgorithm: {
  readonly SHA1: "SHA1";
  readonly SHA256: "SHA256";
};
export type HashAlgorithm = (typeof HashAlgorithm)[keyof typeof HashAlgorithm];
export interface SigningConfigurationOverrides {
  encryptionAlgorithm?: EncryptionAlgorithm;
  hashAlgorithm?: HashAlgorithm;
}
export declare const ImageFormat: {
  readonly JSON: "JSON";
  readonly JSONDetached: "JSONDetached";
  readonly JSONEmbedded: "JSONEmbedded";
};
export type ImageFormat = (typeof ImageFormat)[keyof typeof ImageFormat];
export interface SigningPlatformOverrides {
  signingConfiguration?: SigningConfigurationOverrides;
  signingImageFormat?: ImageFormat;
}
export interface SigningJobRevocationRecord {
  reason?: string;
  revokedAt?: Date;
  revokedBy?: string;
}
export interface S3SignedObject {
  bucketName?: string;
  key?: string;
}
export interface SignedObject {
  s3?: S3SignedObject;
}
export interface SigningMaterial {
  certificateArn: string | undefined;
}
export interface S3Source {
  bucketName: string | undefined;
  key: string | undefined;
  version: string | undefined;
}
export interface Source {
  s3?: S3Source;
}
export declare const SigningStatus: {
  readonly Failed: "Failed";
  readonly InProgress: "InProgress";
  readonly Succeeded: "Succeeded";
};
export type SigningStatus = (typeof SigningStatus)[keyof typeof SigningStatus];
export interface DescribeSigningJobResponse {
  jobId?: string;
  source?: Source;
  signingMaterial?: SigningMaterial;
  platformId?: string;
  platformDisplayName?: string;
  profileName?: string;
  profileVersion?: string;
  overrides?: SigningPlatformOverrides;
  signingParameters?: Record<string, string>;
  createdAt?: Date;
  completedAt?: Date;
  signatureExpiresAt?: Date;
  requestedBy?: string;
  status?: SigningStatus;
  statusReason?: string;
  revocationRecord?: SigningJobRevocationRecord;
  signedObject?: SignedObject;
  jobOwner?: string;
  jobInvoker?: string;
}
export interface S3Destination {
  bucketName?: string;
  prefix?: string;
}
export interface Destination {
  s3?: S3Destination;
}
export interface EncryptionAlgorithmOptions {
  allowedValues: EncryptionAlgorithm[] | undefined;
  defaultValue: EncryptionAlgorithm | undefined;
}
export interface GetRevocationStatusRequest {
  signatureTimestamp: Date | undefined;
  platformId: string | undefined;
  profileVersionArn: string | undefined;
  jobArn: string | undefined;
  certificateHashes: string[] | undefined;
}
export interface GetRevocationStatusResponse {
  revokedEntities?: string[];
}
export interface GetSigningPlatformRequest {
  platformId: string | undefined;
}
export interface HashAlgorithmOptions {
  allowedValues: HashAlgorithm[] | undefined;
  defaultValue: HashAlgorithm | undefined;
}
export interface SigningConfiguration {
  encryptionAlgorithmOptions: EncryptionAlgorithmOptions | undefined;
  hashAlgorithmOptions: HashAlgorithmOptions | undefined;
}
export interface SigningImageFormat {
  supportedFormats: ImageFormat[] | undefined;
  defaultFormat: ImageFormat | undefined;
}
export interface GetSigningPlatformResponse {
  platformId?: string;
  displayName?: string;
  partner?: string;
  target?: string;
  category?: Category;
  signingConfiguration?: SigningConfiguration;
  signingImageFormat?: SigningImageFormat;
  maxSizeInMB?: number;
  revocationSupported?: boolean;
}
export interface GetSigningProfileRequest {
  profileName: string | undefined;
  profileOwner?: string;
}
export interface SigningProfileRevocationRecord {
  revocationEffectiveFrom?: Date;
  revokedAt?: Date;
  revokedBy?: string;
}
export declare const ValidityType: {
  readonly DAYS: "DAYS";
  readonly MONTHS: "MONTHS";
  readonly YEARS: "YEARS";
};
export type ValidityType = (typeof ValidityType)[keyof typeof ValidityType];
export interface SignatureValidityPeriod {
  value?: number;
  type?: ValidityType;
}
export declare const SigningProfileStatus: {
  readonly Active: "Active";
  readonly Canceled: "Canceled";
  readonly Revoked: "Revoked";
};
export type SigningProfileStatus =
  (typeof SigningProfileStatus)[keyof typeof SigningProfileStatus];
export interface GetSigningProfileResponse {
  profileName?: string;
  profileVersion?: string;
  profileVersionArn?: string;
  revocationRecord?: SigningProfileRevocationRecord;
  signingMaterial?: SigningMaterial;
  platformId?: string;
  platformDisplayName?: string;
  signatureValidityPeriod?: SignatureValidityPeriod;
  overrides?: SigningPlatformOverrides;
  signingParameters?: Record<string, string>;
  status?: SigningProfileStatus;
  statusReason?: string;
  arn?: string;
  tags?: Record<string, string>;
}
export interface ListProfilePermissionsRequest {
  profileName: string | undefined;
  nextToken?: string;
}
export interface Permission {
  action?: string;
  principal?: string;
  statementId?: string;
  profileVersion?: string;
}
export interface ListProfilePermissionsResponse {
  revisionId?: string;
  policySizeBytes?: number;
  permissions?: Permission[];
  nextToken?: string;
}
export interface ListSigningJobsRequest {
  status?: SigningStatus;
  platformId?: string;
  requestedBy?: string;
  maxResults?: number;
  nextToken?: string;
  isRevoked?: boolean;
  signatureExpiresBefore?: Date;
  signatureExpiresAfter?: Date;
  jobInvoker?: string;
}
export interface SigningJob {
  jobId?: string;
  source?: Source;
  signedObject?: SignedObject;
  signingMaterial?: SigningMaterial;
  createdAt?: Date;
  status?: SigningStatus;
  isRevoked?: boolean;
  profileName?: string;
  profileVersion?: string;
  platformId?: string;
  platformDisplayName?: string;
  signatureExpiresAt?: Date;
  jobOwner?: string;
  jobInvoker?: string;
}
export interface ListSigningJobsResponse {
  jobs?: SigningJob[];
  nextToken?: string;
}
export interface ListSigningPlatformsRequest {
  category?: string;
  partner?: string;
  target?: string;
  maxResults?: number;
  nextToken?: string;
}
export interface SigningPlatform {
  platformId?: string;
  displayName?: string;
  partner?: string;
  target?: string;
  category?: Category;
  signingConfiguration?: SigningConfiguration;
  signingImageFormat?: SigningImageFormat;
  maxSizeInMB?: number;
  revocationSupported?: boolean;
}
export interface ListSigningPlatformsResponse {
  platforms?: SigningPlatform[];
  nextToken?: string;
}
export interface ListSigningProfilesRequest {
  includeCanceled?: boolean;
  maxResults?: number;
  nextToken?: string;
  platformId?: string;
  statuses?: SigningProfileStatus[];
}
export interface SigningProfile {
  profileName?: string;
  profileVersion?: string;
  profileVersionArn?: string;
  signingMaterial?: SigningMaterial;
  signatureValidityPeriod?: SignatureValidityPeriod;
  platformId?: string;
  platformDisplayName?: string;
  signingParameters?: Record<string, string>;
  status?: SigningProfileStatus;
  arn?: string;
  tags?: Record<string, string>;
}
export interface ListSigningProfilesResponse {
  profiles?: SigningProfile[];
  nextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  code?: string;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export interface PutSigningProfileRequest {
  profileName: string | undefined;
  signingMaterial?: SigningMaterial;
  signatureValidityPeriod?: SignatureValidityPeriod;
  platformId: string | undefined;
  overrides?: SigningPlatformOverrides;
  signingParameters?: Record<string, string>;
  tags?: Record<string, string>;
}
export interface PutSigningProfileResponse {
  arn?: string;
  profileVersion?: string;
  profileVersionArn?: string;
}
export interface RemoveProfilePermissionRequest {
  profileName: string | undefined;
  revisionId: string | undefined;
  statementId: string | undefined;
}
export interface RemoveProfilePermissionResponse {
  revisionId?: string;
}
export interface RevokeSignatureRequest {
  jobId: string | undefined;
  jobOwner?: string;
  reason: string | undefined;
}
export interface RevokeSigningProfileRequest {
  profileName: string | undefined;
  profileVersion: string | undefined;
  reason: string | undefined;
  effectiveTime: Date | undefined;
}
export interface SignPayloadRequest {
  profileName: string | undefined;
  profileOwner?: string;
  payload: Uint8Array | undefined;
  payloadFormat: string | undefined;
}
export interface SignPayloadResponse {
  jobId?: string;
  jobOwner?: string;
  metadata?: Record<string, string>;
  signature?: Uint8Array;
}
export interface StartSigningJobRequest {
  source: Source | undefined;
  destination: Destination | undefined;
  profileName: string | undefined;
  clientRequestToken?: string;
  profileOwner?: string;
}
export interface StartSigningJobResponse {
  jobId?: string;
  jobOwner?: string;
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  code?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
