import {
  AwsSdkSigV4AuthInputConfig,
  AwsSdkSigV4AuthResolvedConfig,
  AwsSdkSigV4PreviouslyResolved,
} from "@aws-sdk/core";
import {
  HandlerExecutionContext,
  HttpAuthScheme,
  HttpAuthSchemeParameters,
  HttpAuthSchemeParametersProvider,
  HttpAuthSchemeProvider,
} from "@smithy/types";
import { ShieldClientResolvedConfig } from "../ShieldClient";
export interface ShieldHttpAuthSchemeParameters
  extends HttpAuthSchemeParameters {
  region?: string;
}
export interface ShieldHttpAuthSchemeParametersProvider
  extends HttpAuthSchemeParametersProvider<
    ShieldClientResolvedConfig,
    HandlerExecutionContext,
    ShieldHttpAuthSchemeParameters,
    object
  > {}
export declare const defaultShieldHttpAuthSchemeParametersProvider: (
  config: ShieldClientResolvedConfig,
  context: HandlerExecutionContext,
  input: object
) => Promise<ShieldHttpAuthSchemeParameters>;
export interface ShieldHttpAuthSchemeProvider
  extends HttpAuthSchemeProvider<ShieldHttpAuthSchemeParameters> {}
export declare const defaultShieldHttpAuthSchemeProvider: ShieldHttpAuthSchemeProvider;
export interface HttpAuthSchemeInputConfig extends AwsSdkSigV4AuthInputConfig {
  httpAuthSchemes?: HttpAuthScheme[];
  httpAuthSchemeProvider?: ShieldHttpAuthSchemeProvider;
}
export interface HttpAuthSchemeResolvedConfig
  extends AwsSdkSigV4AuthResolvedConfig {
  readonly httpAuthSchemes: HttpAuthScheme[];
  readonly httpAuthSchemeProvider: ShieldHttpAuthSchemeProvider;
}
export declare const resolveHttpAuthSchemeConfig: <T>(
  config: T & HttpAuthSchemeInputConfig & AwsSdkSigV4PreviouslyResolved
) => T & HttpAuthSchemeResolvedConfig;
