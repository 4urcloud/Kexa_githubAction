import { ShieldServiceException as __BaseException } from "./ShieldServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export class AccessDeniedForDependencyException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedForDependencyException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedForDependencyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedForDependencyException.prototype);
    }
}
export const ApplicationLayerAutomaticResponseStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class InternalErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalErrorException.prototype);
    }
}
export class InvalidOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOperationException.prototype);
    }
}
export const ValidationExceptionReason = {
    FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
    OTHER: "OTHER",
};
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.reason = opts.reason;
        this.fields = opts.fields;
    }
}
export class LimitsExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitsExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitsExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitsExceededException.prototype);
        this.Type = opts.Type;
        this.Limit = opts.Limit;
    }
}
export class NoAssociatedRoleException extends __BaseException {
    constructor(opts) {
        super({
            name: "NoAssociatedRoleException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoAssociatedRoleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoAssociatedRoleException.prototype);
    }
}
export class OptimisticLockException extends __BaseException {
    constructor(opts) {
        super({
            name: "OptimisticLockException",
            $fault: "client",
            ...opts,
        });
        this.name = "OptimisticLockException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OptimisticLockException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceType = opts.resourceType;
    }
}
export class InvalidResourceException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidResourceException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidResourceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidResourceException.prototype);
    }
}
export const AttackLayer = {
    APPLICATION: "APPLICATION",
    NETWORK: "NETWORK",
};
export const AttackPropertyIdentifier = {
    DESTINATION_URL: "DESTINATION_URL",
    REFERRER: "REFERRER",
    SOURCE_ASN: "SOURCE_ASN",
    SOURCE_COUNTRY: "SOURCE_COUNTRY",
    SOURCE_IP_ADDRESS: "SOURCE_IP_ADDRESS",
    SOURCE_USER_AGENT: "SOURCE_USER_AGENT",
    WORDPRESS_PINGBACK_REFLECTOR: "WORDPRESS_PINGBACK_REFLECTOR",
    WORDPRESS_PINGBACK_SOURCE: "WORDPRESS_PINGBACK_SOURCE",
};
export const Unit = {
    BITS: "BITS",
    BYTES: "BYTES",
    PACKETS: "PACKETS",
    REQUESTS: "REQUESTS",
};
export const SubResourceType = {
    IP: "IP",
    URL: "URL",
};
export const AutoRenew = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.resourceType = opts.resourceType;
    }
}
export const ProtectionGroupAggregation = {
    MAX: "MAX",
    MEAN: "MEAN",
    SUM: "SUM",
};
export const ProtectionGroupPattern = {
    ALL: "ALL",
    ARBITRARY: "ARBITRARY",
    BY_RESOURCE_TYPE: "BY_RESOURCE_TYPE",
};
export const ProtectedResourceType = {
    APPLICATION_LOAD_BALANCER: "APPLICATION_LOAD_BALANCER",
    CLASSIC_LOAD_BALANCER: "CLASSIC_LOAD_BALANCER",
    CLOUDFRONT_DISTRIBUTION: "CLOUDFRONT_DISTRIBUTION",
    ELASTIC_IP_ALLOCATION: "ELASTIC_IP_ALLOCATION",
    GLOBAL_ACCELERATOR: "GLOBAL_ACCELERATOR",
    ROUTE_53_HOSTED_ZONE: "ROUTE_53_HOSTED_ZONE",
};
export class LockedSubscriptionException extends __BaseException {
    constructor(opts) {
        super({
            name: "LockedSubscriptionException",
            $fault: "client",
            ...opts,
        });
        this.name = "LockedSubscriptionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LockedSubscriptionException.prototype);
    }
}
export const ProactiveEngagementStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
    PENDING: "PENDING",
};
export const SubscriptionState = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
export class InvalidPaginationTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPaginationTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPaginationTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPaginationTokenException.prototype);
    }
}
