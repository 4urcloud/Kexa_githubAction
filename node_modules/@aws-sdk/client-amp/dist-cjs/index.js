"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AlertManagerDefinitionStatusCode: () => AlertManagerDefinitionStatusCode,
  Amp: () => Amp,
  AmpClient: () => AmpClient,
  AmpServiceException: () => AmpServiceException,
  ConflictException: () => ConflictException,
  CreateAlertManagerDefinitionCommand: () => CreateAlertManagerDefinitionCommand,
  CreateLoggingConfigurationCommand: () => CreateLoggingConfigurationCommand,
  CreateRuleGroupsNamespaceCommand: () => CreateRuleGroupsNamespaceCommand,
  CreateScraperCommand: () => CreateScraperCommand,
  CreateWorkspaceCommand: () => CreateWorkspaceCommand,
  DeleteAlertManagerDefinitionCommand: () => DeleteAlertManagerDefinitionCommand,
  DeleteLoggingConfigurationCommand: () => DeleteLoggingConfigurationCommand,
  DeleteRuleGroupsNamespaceCommand: () => DeleteRuleGroupsNamespaceCommand,
  DeleteScraperCommand: () => DeleteScraperCommand,
  DeleteWorkspaceCommand: () => DeleteWorkspaceCommand,
  DescribeAlertManagerDefinitionCommand: () => DescribeAlertManagerDefinitionCommand,
  DescribeLoggingConfigurationCommand: () => DescribeLoggingConfigurationCommand,
  DescribeRuleGroupsNamespaceCommand: () => DescribeRuleGroupsNamespaceCommand,
  DescribeScraperCommand: () => DescribeScraperCommand,
  DescribeWorkspaceCommand: () => DescribeWorkspaceCommand,
  Destination: () => Destination,
  GetDefaultScraperConfigurationCommand: () => GetDefaultScraperConfigurationCommand,
  InternalServerException: () => InternalServerException,
  ListRuleGroupsNamespacesCommand: () => ListRuleGroupsNamespacesCommand,
  ListScrapersCommand: () => ListScrapersCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListWorkspacesCommand: () => ListWorkspacesCommand,
  LoggingConfigurationStatusCode: () => LoggingConfigurationStatusCode,
  PutAlertManagerDefinitionCommand: () => PutAlertManagerDefinitionCommand,
  PutRuleGroupsNamespaceCommand: () => PutRuleGroupsNamespaceCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RuleGroupsNamespaceStatusCode: () => RuleGroupsNamespaceStatusCode,
  ScrapeConfiguration: () => ScrapeConfiguration,
  ScraperStatusCode: () => ScraperStatusCode,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  Source: () => Source,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateLoggingConfigurationCommand: () => UpdateLoggingConfigurationCommand,
  UpdateWorkspaceAliasCommand: () => UpdateWorkspaceAliasCommand,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  WorkspaceStatusCode: () => WorkspaceStatusCode,
  __Client: () => import_smithy_client.Client,
  paginateListRuleGroupsNamespaces: () => paginateListRuleGroupsNamespaces,
  paginateListScrapers: () => paginateListScrapers,
  paginateListWorkspaces: () => paginateListWorkspaces,
  waitForScraperActive: () => waitForScraperActive,
  waitForScraperDeleted: () => waitForScraperDeleted,
  waitForWorkspaceActive: () => waitForWorkspaceActive,
  waitForWorkspaceDeleted: () => waitForWorkspaceDeleted,
  waitUntilScraperActive: () => waitUntilScraperActive,
  waitUntilScraperDeleted: () => waitUntilScraperDeleted,
  waitUntilWorkspaceActive: () => waitUntilWorkspaceActive,
  waitUntilWorkspaceDeleted: () => waitUntilWorkspaceDeleted
});
module.exports = __toCommonJS(src_exports);

// src/AmpClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "aps"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/AmpClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/AmpClient.ts
var _AmpClient = class _AmpClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultAmpHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_AmpClient, "AmpClient");
var AmpClient = _AmpClient;

// src/Amp.ts


// src/commands/CreateAlertManagerDefinitionCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/AmpServiceException.ts

var _AmpServiceException = class _AmpServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _AmpServiceException.prototype);
  }
};
__name(_AmpServiceException, "AmpServiceException");
var AmpServiceException = _AmpServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _ConflictException = class _ConflictException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var AlertManagerDefinitionStatusCode = {
  /**
   * Definition has been created/updated. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
   */
  ACTIVE: "ACTIVE",
  /**
   * Definition is being created. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
   */
  CREATING: "CREATING",
  /**
   * Definition creation failed.
   */
  CREATION_FAILED: "CREATION_FAILED",
  /**
   * Definition is being deleting. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
   */
  DELETING: "DELETING",
  /**
   * Definition update failed.
   */
  UPDATE_FAILED: "UPDATE_FAILED",
  /**
   * Definition is being updated. Update/Deletion is disallowed until definition is ACTIVE and workspace status is ACTIVE.
   */
  UPDATING: "UPDATING"
};
var _InternalServerException = class _InternalServerException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    this.$retryable = {};
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    this.$retryable = {};
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var ValidationExceptionReason = {
  CANNOT_PARSE: "CANNOT_PARSE",
  FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
  OTHER: "OTHER",
  UNKNOWN_OPERATION: "UNKNOWN_OPERATION"
};
var _ValidationException = class _ValidationException extends AmpServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.reason = opts.reason;
    this.fieldList = opts.fieldList;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var Destination;
((Destination3) => {
  Destination3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.ampConfiguration !== void 0)
      return visitor.ampConfiguration(value.ampConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Destination || (Destination = {}));
var ScrapeConfiguration;
((ScrapeConfiguration2) => {
  ScrapeConfiguration2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.configurationBlob !== void 0)
      return visitor.configurationBlob(value.configurationBlob);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ScrapeConfiguration || (ScrapeConfiguration = {}));
var Source;
((Source3) => {
  Source3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.eksConfiguration !== void 0)
      return visitor.eksConfiguration(value.eksConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Source || (Source = {}));
var ScraperStatusCode = {
  /**
   * Scraper has been created and is usable.
   */
  ACTIVE: "ACTIVE",
  /**
   * Scraper is being created. Deletion is disallowed until status is ACTIVE.
   */
  CREATING: "CREATING",
  /**
   * Scraper creation failed.
   */
  CREATION_FAILED: "CREATION_FAILED",
  /**
   * Scraper is being deleted. Deletions are allowed only when status is ACTIVE.
   */
  DELETING: "DELETING",
  /**
   * Scraper deletion failed.
   */
  DELETION_FAILED: "DELETION_FAILED"
};
var WorkspaceStatusCode = {
  /**
   * Workspace has been created and is usable.
   */
  ACTIVE: "ACTIVE",
  /**
   * Workspace is being created. Deletion is disallowed until status is ACTIVE.
   */
  CREATING: "CREATING",
  /**
   * Workspace creation failed. Refer to WorkspaceStatus.failureReason for more details.
   */
  CREATION_FAILED: "CREATION_FAILED",
  /**
   * Workspace is being deleted. Deletions are allowed only when status is ACTIVE.
   */
  DELETING: "DELETING",
  /**
   * Workspace is being updated. Updates are allowed only when status is ACTIVE.
   */
  UPDATING: "UPDATING"
};
var LoggingConfigurationStatusCode = {
  /**
   * Logging configuration has been created/updated. Update/Deletion is disallowed until logging configuration is ACTIVE and workspace status is ACTIVE.
   */
  ACTIVE: "ACTIVE",
  /**
   * Logging configuration is being created. Update/Deletion is disallowed until logging configuration is ACTIVE and workspace status is ACTIVE.
   */
  CREATING: "CREATING",
  /**
   * Logging configuration creation failed.
   */
  CREATION_FAILED: "CREATION_FAILED",
  /**
   * Logging configuration is being deleting. Update/Deletion is disallowed until logging configuration is ACTIVE and workspace status is ACTIVE.
   */
  DELETING: "DELETING",
  /**
   * Logging configuration update failed.
   */
  UPDATE_FAILED: "UPDATE_FAILED",
  /**
   * Logging configuration is being updated. Update/Deletion is disallowed until logging configuration is ACTIVE and workspace status is ACTIVE.
   */
  UPDATING: "UPDATING"
};
var RuleGroupsNamespaceStatusCode = {
  /**
   * Namespace has been created/updated. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
   */
  ACTIVE: "ACTIVE",
  /**
   * Namespace is being created. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
   */
  CREATING: "CREATING",
  /**
   * Namespace creation failed.
   */
  CREATION_FAILED: "CREATION_FAILED",
  /**
   * Namespace is being deleting. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
   */
  DELETING: "DELETING",
  /**
   * Namespace update failed.
   */
  UPDATE_FAILED: "UPDATE_FAILED",
  /**
   * Namespace is being updated. Update/Deletion is disallowed until namespace is ACTIVE and workspace status is ACTIVE.
   */
  UPDATING: "UPDATING"
};

// src/protocols/Aws_restJson1.ts
var se_CreateAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/alertmanager/definition");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      data: (_) => context.base64Encoder(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAlertManagerDefinitionCommand");
var se_CreateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/logging");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      logGroupArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLoggingConfigurationCommand");
var se_CreateRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/rulegroupsnamespaces");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      data: (_) => context.base64Encoder(_),
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRuleGroupsNamespaceCommand");
var se_CreateScraperCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/scrapers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      alias: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      destination: (_) => (0, import_smithy_client._json)(_),
      scrapeConfiguration: (_) => se_ScrapeConfiguration(_, context),
      source: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateScraperCommand");
var se_CreateWorkspaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      alias: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      kmsKeyArn: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateWorkspaceCommand");
var se_DeleteAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/alertmanager/definition");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteAlertManagerDefinitionCommand");
var se_DeleteLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/logging");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteLoggingConfigurationCommand");
var se_DeleteRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/rulegroupsnamespaces/{name}");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  b.p("name", () => input.name, "{name}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteRuleGroupsNamespaceCommand");
var se_DeleteScraperCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/scrapers/{scraperId}");
  b.p("scraperId", () => input.scraperId, "{scraperId}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteScraperCommand");
var se_DeleteWorkspaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteWorkspaceCommand");
var se_DescribeAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/alertmanager/definition");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeAlertManagerDefinitionCommand");
var se_DescribeLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/logging");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeLoggingConfigurationCommand");
var se_DescribeRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/rulegroupsnamespaces/{name}");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  b.p("name", () => input.name, "{name}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeRuleGroupsNamespaceCommand");
var se_DescribeScraperCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/scrapers/{scraperId}");
  b.p("scraperId", () => input.scraperId, "{scraperId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeScraperCommand");
var se_DescribeWorkspaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeWorkspaceCommand");
var se_GetDefaultScraperConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/scraperconfiguration");
  let body;
  body = "";
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDefaultScraperConfigurationCommand");
var se_ListRuleGroupsNamespacesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces/{workspaceId}/rulegroupsnamespaces");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  const query = (0, import_smithy_client.map)({
    [_n]: [, input[_n]],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRuleGroupsNamespacesCommand");
var se_ListScrapersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/scrapers");
  const query = (0, import_smithy_client.map)({
    ...(0, import_smithy_client.convertMap)(input.filters),
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListScrapersCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListWorkspacesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/workspaces");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_a]: [, input[_a]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListWorkspacesCommand");
var se_PutAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/alertmanager/definition");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      data: (_) => context.base64Encoder(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutAlertManagerDefinitionCommand");
var se_PutRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/rulegroupsnamespaces/{name}");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  b.p("name", () => input.name, "{name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      data: (_) => context.base64Encoder(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutRuleGroupsNamespaceCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/logging");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      logGroupArn: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateLoggingConfigurationCommand");
var se_UpdateWorkspaceAliasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/workspaces/{workspaceId}/alias");
  b.p("workspaceId", () => input.workspaceId, "{workspaceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      alias: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateWorkspaceAliasCommand");
var de_CreateAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAlertManagerDefinitionCommand");
var de_CreateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateLoggingConfigurationCommand");
var de_CreateRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRuleGroupsNamespaceCommand");
var de_CreateScraperCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    scraperId: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateScraperCommand");
var de_CreateWorkspaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    kmsKeyArn: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json,
    workspaceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateWorkspaceCommand");
var de_DeleteAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAlertManagerDefinitionCommand");
var de_DeleteLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLoggingConfigurationCommand");
var de_DeleteRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRuleGroupsNamespaceCommand");
var de_DeleteScraperCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    scraperId: import_smithy_client.expectString,
    status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteScraperCommand");
var de_DeleteWorkspaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteWorkspaceCommand");
var de_DescribeAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    alertManagerDefinition: (_) => de_AlertManagerDefinitionDescription(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeAlertManagerDefinitionCommand");
var de_DescribeLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    loggingConfiguration: (_) => de_LoggingConfigurationMetadata(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeLoggingConfigurationCommand");
var de_DescribeRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ruleGroupsNamespace: (_) => de_RuleGroupsNamespaceDescription(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeRuleGroupsNamespaceCommand");
var de_DescribeScraperCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    scraper: (_) => de_ScraperDescription(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeScraperCommand");
var de_DescribeWorkspaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    workspace: (_) => de_WorkspaceDescription(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeWorkspaceCommand");
var de_GetDefaultScraperConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    configuration: context.base64Decoder
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDefaultScraperConfigurationCommand");
var de_ListRuleGroupsNamespacesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    ruleGroupsNamespaces: (_) => de_RuleGroupsNamespaceSummaryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRuleGroupsNamespacesCommand");
var de_ListScrapersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    scrapers: (_) => de_ScraperSummaryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListScrapersCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListWorkspacesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    workspaces: (_) => de_WorkspaceSummaryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWorkspacesCommand");
var de_PutAlertManagerDefinitionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutAlertManagerDefinitionCommand");
var de_PutRuleGroupsNamespaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutRuleGroupsNamespaceCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLoggingConfigurationCommand");
var de_UpdateWorkspaceAliasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateWorkspaceAliasCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.amp#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.amp#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.amp#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.amp#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.amp#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.amp#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.amp#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(AmpServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    fieldList: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_ScrapeConfiguration = /* @__PURE__ */ __name((input, context) => {
  return ScrapeConfiguration.visit(input, {
    configurationBlob: (value) => ({ configurationBlob: context.base64Encoder(value) }),
    _: (name, value) => ({ name: value })
  });
}, "se_ScrapeConfiguration");
var de_AlertManagerDefinitionDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    data: context.base64Decoder,
    modifiedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client._json
  });
}, "de_AlertManagerDefinitionDescription");
var de_LoggingConfigurationMetadata = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    logGroupArn: import_smithy_client.expectString,
    modifiedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client._json,
    workspace: import_smithy_client.expectString
  });
}, "de_LoggingConfigurationMetadata");
var de_RuleGroupsNamespaceDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    data: context.base64Decoder,
    modifiedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json
  });
}, "de_RuleGroupsNamespaceDescription");
var de_RuleGroupsNamespaceSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    modifiedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json
  });
}, "de_RuleGroupsNamespaceSummary");
var de_RuleGroupsNamespaceSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RuleGroupsNamespaceSummary(entry, context);
  });
  return retVal;
}, "de_RuleGroupsNamespaceSummaryList");
var de_ScrapeConfiguration = /* @__PURE__ */ __name((output, context) => {
  if (output.configurationBlob != null) {
    return {
      configurationBlob: context.base64Decoder(output.configurationBlob)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_ScrapeConfiguration");
var de_ScraperDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alias: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    destination: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    lastModifiedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    roleArn: import_smithy_client.expectString,
    scrapeConfiguration: (_) => de_ScrapeConfiguration((0, import_core2.awsExpectUnion)(_), context),
    scraperId: import_smithy_client.expectString,
    source: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    status: import_smithy_client._json,
    statusReason: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_ScraperDescription");
var de_ScraperSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alias: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    destination: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    lastModifiedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    roleArn: import_smithy_client.expectString,
    scraperId: import_smithy_client.expectString,
    source: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    status: import_smithy_client._json,
    statusReason: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_ScraperSummary");
var de_ScraperSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ScraperSummary(entry, context);
  });
  return retVal;
}, "de_ScraperSummaryList");
var de_WorkspaceDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alias: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    kmsKeyArn: import_smithy_client.expectString,
    prometheusEndpoint: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json,
    workspaceId: import_smithy_client.expectString
  });
}, "de_WorkspaceDescription");
var de_WorkspaceSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alias: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    kmsKeyArn: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json,
    workspaceId: import_smithy_client.expectString
  });
}, "de_WorkspaceSummary");
var de_WorkspaceSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_WorkspaceSummary(entry, context);
  });
  return retVal;
}, "de_WorkspaceSummaryList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _a = "alias";
var _cT = "clientToken";
var _mR = "maxResults";
var _n = "name";
var _nT = "nextToken";
var _rAS = "retryAfterSeconds";
var _ra = "retry-after";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateAlertManagerDefinitionCommand.ts
var _CreateAlertManagerDefinitionCommand = class _CreateAlertManagerDefinitionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "CreateAlertManagerDefinition", {}).n("AmpClient", "CreateAlertManagerDefinitionCommand").f(void 0, void 0).ser(se_CreateAlertManagerDefinitionCommand).de(de_CreateAlertManagerDefinitionCommand).build() {
};
__name(_CreateAlertManagerDefinitionCommand, "CreateAlertManagerDefinitionCommand");
var CreateAlertManagerDefinitionCommand = _CreateAlertManagerDefinitionCommand;

// src/commands/CreateLoggingConfigurationCommand.ts




var _CreateLoggingConfigurationCommand = class _CreateLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "CreateLoggingConfiguration", {}).n("AmpClient", "CreateLoggingConfigurationCommand").f(void 0, void 0).ser(se_CreateLoggingConfigurationCommand).de(de_CreateLoggingConfigurationCommand).build() {
};
__name(_CreateLoggingConfigurationCommand, "CreateLoggingConfigurationCommand");
var CreateLoggingConfigurationCommand = _CreateLoggingConfigurationCommand;

// src/commands/CreateRuleGroupsNamespaceCommand.ts




var _CreateRuleGroupsNamespaceCommand = class _CreateRuleGroupsNamespaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "CreateRuleGroupsNamespace", {}).n("AmpClient", "CreateRuleGroupsNamespaceCommand").f(void 0, void 0).ser(se_CreateRuleGroupsNamespaceCommand).de(de_CreateRuleGroupsNamespaceCommand).build() {
};
__name(_CreateRuleGroupsNamespaceCommand, "CreateRuleGroupsNamespaceCommand");
var CreateRuleGroupsNamespaceCommand = _CreateRuleGroupsNamespaceCommand;

// src/commands/CreateScraperCommand.ts




var _CreateScraperCommand = class _CreateScraperCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "CreateScraper", {}).n("AmpClient", "CreateScraperCommand").f(void 0, void 0).ser(se_CreateScraperCommand).de(de_CreateScraperCommand).build() {
};
__name(_CreateScraperCommand, "CreateScraperCommand");
var CreateScraperCommand = _CreateScraperCommand;

// src/commands/CreateWorkspaceCommand.ts




var _CreateWorkspaceCommand = class _CreateWorkspaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "CreateWorkspace", {}).n("AmpClient", "CreateWorkspaceCommand").f(void 0, void 0).ser(se_CreateWorkspaceCommand).de(de_CreateWorkspaceCommand).build() {
};
__name(_CreateWorkspaceCommand, "CreateWorkspaceCommand");
var CreateWorkspaceCommand = _CreateWorkspaceCommand;

// src/commands/DeleteAlertManagerDefinitionCommand.ts




var _DeleteAlertManagerDefinitionCommand = class _DeleteAlertManagerDefinitionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DeleteAlertManagerDefinition", {}).n("AmpClient", "DeleteAlertManagerDefinitionCommand").f(void 0, void 0).ser(se_DeleteAlertManagerDefinitionCommand).de(de_DeleteAlertManagerDefinitionCommand).build() {
};
__name(_DeleteAlertManagerDefinitionCommand, "DeleteAlertManagerDefinitionCommand");
var DeleteAlertManagerDefinitionCommand = _DeleteAlertManagerDefinitionCommand;

// src/commands/DeleteLoggingConfigurationCommand.ts




var _DeleteLoggingConfigurationCommand = class _DeleteLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DeleteLoggingConfiguration", {}).n("AmpClient", "DeleteLoggingConfigurationCommand").f(void 0, void 0).ser(se_DeleteLoggingConfigurationCommand).de(de_DeleteLoggingConfigurationCommand).build() {
};
__name(_DeleteLoggingConfigurationCommand, "DeleteLoggingConfigurationCommand");
var DeleteLoggingConfigurationCommand = _DeleteLoggingConfigurationCommand;

// src/commands/DeleteRuleGroupsNamespaceCommand.ts




var _DeleteRuleGroupsNamespaceCommand = class _DeleteRuleGroupsNamespaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DeleteRuleGroupsNamespace", {}).n("AmpClient", "DeleteRuleGroupsNamespaceCommand").f(void 0, void 0).ser(se_DeleteRuleGroupsNamespaceCommand).de(de_DeleteRuleGroupsNamespaceCommand).build() {
};
__name(_DeleteRuleGroupsNamespaceCommand, "DeleteRuleGroupsNamespaceCommand");
var DeleteRuleGroupsNamespaceCommand = _DeleteRuleGroupsNamespaceCommand;

// src/commands/DeleteScraperCommand.ts




var _DeleteScraperCommand = class _DeleteScraperCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DeleteScraper", {}).n("AmpClient", "DeleteScraperCommand").f(void 0, void 0).ser(se_DeleteScraperCommand).de(de_DeleteScraperCommand).build() {
};
__name(_DeleteScraperCommand, "DeleteScraperCommand");
var DeleteScraperCommand = _DeleteScraperCommand;

// src/commands/DeleteWorkspaceCommand.ts




var _DeleteWorkspaceCommand = class _DeleteWorkspaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DeleteWorkspace", {}).n("AmpClient", "DeleteWorkspaceCommand").f(void 0, void 0).ser(se_DeleteWorkspaceCommand).de(de_DeleteWorkspaceCommand).build() {
};
__name(_DeleteWorkspaceCommand, "DeleteWorkspaceCommand");
var DeleteWorkspaceCommand = _DeleteWorkspaceCommand;

// src/commands/DescribeAlertManagerDefinitionCommand.ts




var _DescribeAlertManagerDefinitionCommand = class _DescribeAlertManagerDefinitionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DescribeAlertManagerDefinition", {}).n("AmpClient", "DescribeAlertManagerDefinitionCommand").f(void 0, void 0).ser(se_DescribeAlertManagerDefinitionCommand).de(de_DescribeAlertManagerDefinitionCommand).build() {
};
__name(_DescribeAlertManagerDefinitionCommand, "DescribeAlertManagerDefinitionCommand");
var DescribeAlertManagerDefinitionCommand = _DescribeAlertManagerDefinitionCommand;

// src/commands/DescribeLoggingConfigurationCommand.ts




var _DescribeLoggingConfigurationCommand = class _DescribeLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DescribeLoggingConfiguration", {}).n("AmpClient", "DescribeLoggingConfigurationCommand").f(void 0, void 0).ser(se_DescribeLoggingConfigurationCommand).de(de_DescribeLoggingConfigurationCommand).build() {
};
__name(_DescribeLoggingConfigurationCommand, "DescribeLoggingConfigurationCommand");
var DescribeLoggingConfigurationCommand = _DescribeLoggingConfigurationCommand;

// src/commands/DescribeRuleGroupsNamespaceCommand.ts




var _DescribeRuleGroupsNamespaceCommand = class _DescribeRuleGroupsNamespaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DescribeRuleGroupsNamespace", {}).n("AmpClient", "DescribeRuleGroupsNamespaceCommand").f(void 0, void 0).ser(se_DescribeRuleGroupsNamespaceCommand).de(de_DescribeRuleGroupsNamespaceCommand).build() {
};
__name(_DescribeRuleGroupsNamespaceCommand, "DescribeRuleGroupsNamespaceCommand");
var DescribeRuleGroupsNamespaceCommand = _DescribeRuleGroupsNamespaceCommand;

// src/commands/DescribeScraperCommand.ts




var _DescribeScraperCommand = class _DescribeScraperCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DescribeScraper", {}).n("AmpClient", "DescribeScraperCommand").f(void 0, void 0).ser(se_DescribeScraperCommand).de(de_DescribeScraperCommand).build() {
};
__name(_DescribeScraperCommand, "DescribeScraperCommand");
var DescribeScraperCommand = _DescribeScraperCommand;

// src/commands/DescribeWorkspaceCommand.ts




var _DescribeWorkspaceCommand = class _DescribeWorkspaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "DescribeWorkspace", {}).n("AmpClient", "DescribeWorkspaceCommand").f(void 0, void 0).ser(se_DescribeWorkspaceCommand).de(de_DescribeWorkspaceCommand).build() {
};
__name(_DescribeWorkspaceCommand, "DescribeWorkspaceCommand");
var DescribeWorkspaceCommand = _DescribeWorkspaceCommand;

// src/commands/GetDefaultScraperConfigurationCommand.ts




var _GetDefaultScraperConfigurationCommand = class _GetDefaultScraperConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "GetDefaultScraperConfiguration", {}).n("AmpClient", "GetDefaultScraperConfigurationCommand").f(void 0, void 0).ser(se_GetDefaultScraperConfigurationCommand).de(de_GetDefaultScraperConfigurationCommand).build() {
};
__name(_GetDefaultScraperConfigurationCommand, "GetDefaultScraperConfigurationCommand");
var GetDefaultScraperConfigurationCommand = _GetDefaultScraperConfigurationCommand;

// src/commands/ListRuleGroupsNamespacesCommand.ts




var _ListRuleGroupsNamespacesCommand = class _ListRuleGroupsNamespacesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "ListRuleGroupsNamespaces", {}).n("AmpClient", "ListRuleGroupsNamespacesCommand").f(void 0, void 0).ser(se_ListRuleGroupsNamespacesCommand).de(de_ListRuleGroupsNamespacesCommand).build() {
};
__name(_ListRuleGroupsNamespacesCommand, "ListRuleGroupsNamespacesCommand");
var ListRuleGroupsNamespacesCommand = _ListRuleGroupsNamespacesCommand;

// src/commands/ListScrapersCommand.ts




var _ListScrapersCommand = class _ListScrapersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "ListScrapers", {}).n("AmpClient", "ListScrapersCommand").f(void 0, void 0).ser(se_ListScrapersCommand).de(de_ListScrapersCommand).build() {
};
__name(_ListScrapersCommand, "ListScrapersCommand");
var ListScrapersCommand = _ListScrapersCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "ListTagsForResource", {}).n("AmpClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListWorkspacesCommand.ts




var _ListWorkspacesCommand = class _ListWorkspacesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "ListWorkspaces", {}).n("AmpClient", "ListWorkspacesCommand").f(void 0, void 0).ser(se_ListWorkspacesCommand).de(de_ListWorkspacesCommand).build() {
};
__name(_ListWorkspacesCommand, "ListWorkspacesCommand");
var ListWorkspacesCommand = _ListWorkspacesCommand;

// src/commands/PutAlertManagerDefinitionCommand.ts




var _PutAlertManagerDefinitionCommand = class _PutAlertManagerDefinitionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "PutAlertManagerDefinition", {}).n("AmpClient", "PutAlertManagerDefinitionCommand").f(void 0, void 0).ser(se_PutAlertManagerDefinitionCommand).de(de_PutAlertManagerDefinitionCommand).build() {
};
__name(_PutAlertManagerDefinitionCommand, "PutAlertManagerDefinitionCommand");
var PutAlertManagerDefinitionCommand = _PutAlertManagerDefinitionCommand;

// src/commands/PutRuleGroupsNamespaceCommand.ts




var _PutRuleGroupsNamespaceCommand = class _PutRuleGroupsNamespaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "PutRuleGroupsNamespace", {}).n("AmpClient", "PutRuleGroupsNamespaceCommand").f(void 0, void 0).ser(se_PutRuleGroupsNamespaceCommand).de(de_PutRuleGroupsNamespaceCommand).build() {
};
__name(_PutRuleGroupsNamespaceCommand, "PutRuleGroupsNamespaceCommand");
var PutRuleGroupsNamespaceCommand = _PutRuleGroupsNamespaceCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "TagResource", {}).n("AmpClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "UntagResource", {}).n("AmpClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateLoggingConfigurationCommand.ts




var _UpdateLoggingConfigurationCommand = class _UpdateLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "UpdateLoggingConfiguration", {}).n("AmpClient", "UpdateLoggingConfigurationCommand").f(void 0, void 0).ser(se_UpdateLoggingConfigurationCommand).de(de_UpdateLoggingConfigurationCommand).build() {
};
__name(_UpdateLoggingConfigurationCommand, "UpdateLoggingConfigurationCommand");
var UpdateLoggingConfigurationCommand = _UpdateLoggingConfigurationCommand;

// src/commands/UpdateWorkspaceAliasCommand.ts




var _UpdateWorkspaceAliasCommand = class _UpdateWorkspaceAliasCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonPrometheusService", "UpdateWorkspaceAlias", {}).n("AmpClient", "UpdateWorkspaceAliasCommand").f(void 0, void 0).ser(se_UpdateWorkspaceAliasCommand).de(de_UpdateWorkspaceAliasCommand).build() {
};
__name(_UpdateWorkspaceAliasCommand, "UpdateWorkspaceAliasCommand");
var UpdateWorkspaceAliasCommand = _UpdateWorkspaceAliasCommand;

// src/Amp.ts
var commands = {
  CreateAlertManagerDefinitionCommand,
  CreateLoggingConfigurationCommand,
  CreateRuleGroupsNamespaceCommand,
  CreateScraperCommand,
  CreateWorkspaceCommand,
  DeleteAlertManagerDefinitionCommand,
  DeleteLoggingConfigurationCommand,
  DeleteRuleGroupsNamespaceCommand,
  DeleteScraperCommand,
  DeleteWorkspaceCommand,
  DescribeAlertManagerDefinitionCommand,
  DescribeLoggingConfigurationCommand,
  DescribeRuleGroupsNamespaceCommand,
  DescribeScraperCommand,
  DescribeWorkspaceCommand,
  GetDefaultScraperConfigurationCommand,
  ListRuleGroupsNamespacesCommand,
  ListScrapersCommand,
  ListTagsForResourceCommand,
  ListWorkspacesCommand,
  PutAlertManagerDefinitionCommand,
  PutRuleGroupsNamespaceCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateLoggingConfigurationCommand,
  UpdateWorkspaceAliasCommand
};
var _Amp = class _Amp extends AmpClient {
};
__name(_Amp, "Amp");
var Amp = _Amp;
(0, import_smithy_client.createAggregatedClient)(commands, Amp);

// src/pagination/ListRuleGroupsNamespacesPaginator.ts

var paginateListRuleGroupsNamespaces = (0, import_core.createPaginator)(AmpClient, ListRuleGroupsNamespacesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListScrapersPaginator.ts

var paginateListScrapers = (0, import_core.createPaginator)(AmpClient, ListScrapersCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWorkspacesPaginator.ts

var paginateListWorkspaces = (0, import_core.createPaginator)(AmpClient, ListWorkspacesCommand, "nextToken", "nextToken", "maxResults");

// src/waiters/waitForScraperActive.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeScraperCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.scraper.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "ACTIVE") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.scraper.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "CREATION_FAILED") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForScraperActive = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForScraperActive");
var waitUntilScraperActive = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilScraperActive");

// src/waiters/waitForScraperDeleted.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeScraperCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.scraper.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "DELETION_FAILED") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "ResourceNotFoundException") {
      return { state: import_util_waiter.WaiterState.SUCCESS, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForScraperDeleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForScraperDeleted");
var waitUntilScraperDeleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilScraperDeleted");

// src/waiters/waitForWorkspaceActive.ts

var checkState3 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeWorkspaceCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.workspace.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "ACTIVE") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.workspace.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "UPDATING") {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.workspace.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "CREATING") {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForWorkspaceActive = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
}, "waitForWorkspaceActive");
var waitUntilWorkspaceActive = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilWorkspaceActive");

// src/waiters/waitForWorkspaceDeleted.ts

var checkState4 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeWorkspaceCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.workspace.status.statusCode;
      }, "returnComparator");
      if (returnComparator() === "DELETING") {
        return { state: import_util_waiter.WaiterState.RETRY, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "ResourceNotFoundException") {
      return { state: import_util_waiter.WaiterState.SUCCESS, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForWorkspaceDeleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
}, "waitForWorkspaceDeleted");
var waitUntilWorkspaceDeleted = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 2, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilWorkspaceDeleted");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  AmpServiceException,
  __Client,
  AmpClient,
  Amp,
  $Command,
  CreateAlertManagerDefinitionCommand,
  CreateLoggingConfigurationCommand,
  CreateRuleGroupsNamespaceCommand,
  CreateScraperCommand,
  CreateWorkspaceCommand,
  DeleteAlertManagerDefinitionCommand,
  DeleteLoggingConfigurationCommand,
  DeleteRuleGroupsNamespaceCommand,
  DeleteScraperCommand,
  DeleteWorkspaceCommand,
  DescribeAlertManagerDefinitionCommand,
  DescribeLoggingConfigurationCommand,
  DescribeRuleGroupsNamespaceCommand,
  DescribeScraperCommand,
  DescribeWorkspaceCommand,
  GetDefaultScraperConfigurationCommand,
  ListRuleGroupsNamespacesCommand,
  ListScrapersCommand,
  ListTagsForResourceCommand,
  ListWorkspacesCommand,
  PutAlertManagerDefinitionCommand,
  PutRuleGroupsNamespaceCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateLoggingConfigurationCommand,
  UpdateWorkspaceAliasCommand,
  paginateListRuleGroupsNamespaces,
  paginateListScrapers,
  paginateListWorkspaces,
  waitForScraperActive,
  waitUntilScraperActive,
  waitForScraperDeleted,
  waitUntilScraperDeleted,
  waitForWorkspaceActive,
  waitUntilWorkspaceActive,
  waitForWorkspaceDeleted,
  waitUntilWorkspaceDeleted,
  AccessDeniedException,
  ConflictException,
  AlertManagerDefinitionStatusCode,
  InternalServerException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationExceptionReason,
  ValidationException,
  Destination,
  ScrapeConfiguration,
  Source,
  ScraperStatusCode,
  WorkspaceStatusCode,
  LoggingConfigurationStatusCode,
  RuleGroupsNamespaceStatusCode
});

