import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { KinesisAnalyticsServiceException as __BaseException } from "./KinesisAnalyticsServiceException";
export interface CloudWatchLoggingOption {
  LogStreamARN: string | undefined;
  RoleARN: string | undefined;
}
export interface AddApplicationCloudWatchLoggingOptionRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  CloudWatchLoggingOption: CloudWatchLoggingOption | undefined;
}
export interface AddApplicationCloudWatchLoggingOptionResponse {}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class InvalidArgumentException extends __BaseException {
  readonly name: "InvalidArgumentException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidArgumentException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class UnsupportedOperationException extends __BaseException {
  readonly name: "UnsupportedOperationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnsupportedOperationException, __BaseException>
  );
}
export interface InputParallelism {
  Count?: number;
}
export interface InputLambdaProcessor {
  ResourceARN: string | undefined;
  RoleARN: string | undefined;
}
export interface InputProcessingConfiguration {
  InputLambdaProcessor: InputLambdaProcessor | undefined;
}
export interface RecordColumn {
  Name: string | undefined;
  Mapping?: string;
  SqlType: string | undefined;
}
export interface CSVMappingParameters {
  RecordRowDelimiter: string | undefined;
  RecordColumnDelimiter: string | undefined;
}
export interface JSONMappingParameters {
  RecordRowPath: string | undefined;
}
export interface MappingParameters {
  JSONMappingParameters?: JSONMappingParameters;
  CSVMappingParameters?: CSVMappingParameters;
}
export declare const RecordFormatType: {
  readonly CSV: "CSV";
  readonly JSON: "JSON";
};
export type RecordFormatType =
  (typeof RecordFormatType)[keyof typeof RecordFormatType];
export interface RecordFormat {
  RecordFormatType: RecordFormatType | undefined;
  MappingParameters?: MappingParameters;
}
export interface SourceSchema {
  RecordFormat: RecordFormat | undefined;
  RecordEncoding?: string;
  RecordColumns: RecordColumn[] | undefined;
}
export interface KinesisFirehoseInput {
  ResourceARN: string | undefined;
  RoleARN: string | undefined;
}
export interface KinesisStreamsInput {
  ResourceARN: string | undefined;
  RoleARN: string | undefined;
}
export interface Input {
  NamePrefix: string | undefined;
  InputProcessingConfiguration?: InputProcessingConfiguration;
  KinesisStreamsInput?: KinesisStreamsInput;
  KinesisFirehoseInput?: KinesisFirehoseInput;
  InputParallelism?: InputParallelism;
  InputSchema: SourceSchema | undefined;
}
export interface AddApplicationInputRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  Input: Input | undefined;
}
export interface AddApplicationInputResponse {}
export declare class CodeValidationException extends __BaseException {
  readonly name: "CodeValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CodeValidationException, __BaseException>
  );
}
export interface AddApplicationInputProcessingConfigurationRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  InputId: string | undefined;
  InputProcessingConfiguration: InputProcessingConfiguration | undefined;
}
export interface AddApplicationInputProcessingConfigurationResponse {}
export interface DestinationSchema {
  RecordFormatType: RecordFormatType | undefined;
}
export interface KinesisFirehoseOutput {
  ResourceARN: string | undefined;
  RoleARN: string | undefined;
}
export interface KinesisStreamsOutput {
  ResourceARN: string | undefined;
  RoleARN: string | undefined;
}
export interface LambdaOutput {
  ResourceARN: string | undefined;
  RoleARN: string | undefined;
}
export interface Output {
  Name: string | undefined;
  KinesisStreamsOutput?: KinesisStreamsOutput;
  KinesisFirehoseOutput?: KinesisFirehoseOutput;
  LambdaOutput?: LambdaOutput;
  DestinationSchema: DestinationSchema | undefined;
}
export interface AddApplicationOutputRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  Output: Output | undefined;
}
export interface AddApplicationOutputResponse {}
export interface S3ReferenceDataSource {
  BucketARN: string | undefined;
  FileKey: string | undefined;
  ReferenceRoleARN: string | undefined;
}
export interface ReferenceDataSource {
  TableName: string | undefined;
  S3ReferenceDataSource?: S3ReferenceDataSource;
  ReferenceSchema: SourceSchema | undefined;
}
export interface AddApplicationReferenceDataSourceRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  ReferenceDataSource: ReferenceDataSource | undefined;
}
export interface AddApplicationReferenceDataSourceResponse {}
export declare const ApplicationStatus: {
  readonly DELETING: "DELETING";
  readonly READY: "READY";
  readonly RUNNING: "RUNNING";
  readonly STARTING: "STARTING";
  readonly STOPPING: "STOPPING";
  readonly UPDATING: "UPDATING";
};
export type ApplicationStatus =
  (typeof ApplicationStatus)[keyof typeof ApplicationStatus];
export interface CloudWatchLoggingOptionDescription {
  CloudWatchLoggingOptionId?: string;
  LogStreamARN: string | undefined;
  RoleARN: string | undefined;
}
export interface InputLambdaProcessorDescription {
  ResourceARN?: string;
  RoleARN?: string;
}
export interface InputProcessingConfigurationDescription {
  InputLambdaProcessorDescription?: InputLambdaProcessorDescription;
}
export declare const InputStartingPosition: {
  readonly LAST_STOPPED_POINT: "LAST_STOPPED_POINT";
  readonly NOW: "NOW";
  readonly TRIM_HORIZON: "TRIM_HORIZON";
};
export type InputStartingPosition =
  (typeof InputStartingPosition)[keyof typeof InputStartingPosition];
export interface InputStartingPositionConfiguration {
  InputStartingPosition?: InputStartingPosition;
}
export interface KinesisFirehoseInputDescription {
  ResourceARN?: string;
  RoleARN?: string;
}
export interface KinesisStreamsInputDescription {
  ResourceARN?: string;
  RoleARN?: string;
}
export interface InputDescription {
  InputId?: string;
  NamePrefix?: string;
  InAppStreamNames?: string[];
  InputProcessingConfigurationDescription?: InputProcessingConfigurationDescription;
  KinesisStreamsInputDescription?: KinesisStreamsInputDescription;
  KinesisFirehoseInputDescription?: KinesisFirehoseInputDescription;
  InputSchema?: SourceSchema;
  InputParallelism?: InputParallelism;
  InputStartingPositionConfiguration?: InputStartingPositionConfiguration;
}
export interface KinesisFirehoseOutputDescription {
  ResourceARN?: string;
  RoleARN?: string;
}
export interface KinesisStreamsOutputDescription {
  ResourceARN?: string;
  RoleARN?: string;
}
export interface LambdaOutputDescription {
  ResourceARN?: string;
  RoleARN?: string;
}
export interface OutputDescription {
  OutputId?: string;
  Name?: string;
  KinesisStreamsOutputDescription?: KinesisStreamsOutputDescription;
  KinesisFirehoseOutputDescription?: KinesisFirehoseOutputDescription;
  LambdaOutputDescription?: LambdaOutputDescription;
  DestinationSchema?: DestinationSchema;
}
export interface S3ReferenceDataSourceDescription {
  BucketARN: string | undefined;
  FileKey: string | undefined;
  ReferenceRoleARN: string | undefined;
}
export interface ReferenceDataSourceDescription {
  ReferenceId: string | undefined;
  TableName: string | undefined;
  S3ReferenceDataSourceDescription:
    | S3ReferenceDataSourceDescription
    | undefined;
  ReferenceSchema?: SourceSchema;
}
export interface ApplicationDetail {
  ApplicationName: string | undefined;
  ApplicationDescription?: string;
  ApplicationARN: string | undefined;
  ApplicationStatus: ApplicationStatus | undefined;
  CreateTimestamp?: Date;
  LastUpdateTimestamp?: Date;
  InputDescriptions?: InputDescription[];
  OutputDescriptions?: OutputDescription[];
  ReferenceDataSourceDescriptions?: ReferenceDataSourceDescription[];
  CloudWatchLoggingOptionDescriptions?: CloudWatchLoggingOptionDescription[];
  ApplicationCode?: string;
  ApplicationVersionId: number | undefined;
}
export interface ApplicationSummary {
  ApplicationName: string | undefined;
  ApplicationARN: string | undefined;
  ApplicationStatus: ApplicationStatus | undefined;
}
export interface CloudWatchLoggingOptionUpdate {
  CloudWatchLoggingOptionId: string | undefined;
  LogStreamARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface InputParallelismUpdate {
  CountUpdate?: number;
}
export interface InputLambdaProcessorUpdate {
  ResourceARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface InputProcessingConfigurationUpdate {
  InputLambdaProcessorUpdate: InputLambdaProcessorUpdate | undefined;
}
export interface InputSchemaUpdate {
  RecordFormatUpdate?: RecordFormat;
  RecordEncodingUpdate?: string;
  RecordColumnUpdates?: RecordColumn[];
}
export interface KinesisFirehoseInputUpdate {
  ResourceARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface KinesisStreamsInputUpdate {
  ResourceARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface InputUpdate {
  InputId: string | undefined;
  NamePrefixUpdate?: string;
  InputProcessingConfigurationUpdate?: InputProcessingConfigurationUpdate;
  KinesisStreamsInputUpdate?: KinesisStreamsInputUpdate;
  KinesisFirehoseInputUpdate?: KinesisFirehoseInputUpdate;
  InputSchemaUpdate?: InputSchemaUpdate;
  InputParallelismUpdate?: InputParallelismUpdate;
}
export interface KinesisFirehoseOutputUpdate {
  ResourceARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface KinesisStreamsOutputUpdate {
  ResourceARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface LambdaOutputUpdate {
  ResourceARNUpdate?: string;
  RoleARNUpdate?: string;
}
export interface OutputUpdate {
  OutputId: string | undefined;
  NameUpdate?: string;
  KinesisStreamsOutputUpdate?: KinesisStreamsOutputUpdate;
  KinesisFirehoseOutputUpdate?: KinesisFirehoseOutputUpdate;
  LambdaOutputUpdate?: LambdaOutputUpdate;
  DestinationSchemaUpdate?: DestinationSchema;
}
export interface S3ReferenceDataSourceUpdate {
  BucketARNUpdate?: string;
  FileKeyUpdate?: string;
  ReferenceRoleARNUpdate?: string;
}
export interface ReferenceDataSourceUpdate {
  ReferenceId: string | undefined;
  TableNameUpdate?: string;
  S3ReferenceDataSourceUpdate?: S3ReferenceDataSourceUpdate;
  ReferenceSchemaUpdate?: SourceSchema;
}
export interface ApplicationUpdate {
  InputUpdates?: InputUpdate[];
  ApplicationCodeUpdate?: string;
  OutputUpdates?: OutputUpdate[];
  ReferenceDataSourceUpdates?: ReferenceDataSourceUpdate[];
  CloudWatchLoggingOptionUpdates?: CloudWatchLoggingOptionUpdate[];
}
export interface Tag {
  Key: string | undefined;
  Value?: string;
}
export interface CreateApplicationRequest {
  ApplicationName: string | undefined;
  ApplicationDescription?: string;
  Inputs?: Input[];
  Outputs?: Output[];
  CloudWatchLoggingOptions?: CloudWatchLoggingOption[];
  ApplicationCode?: string;
  Tags?: Tag[];
}
export interface CreateApplicationResponse {
  ApplicationSummary: ApplicationSummary | undefined;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface DeleteApplicationRequest {
  ApplicationName: string | undefined;
  CreateTimestamp: Date | undefined;
}
export interface DeleteApplicationResponse {}
export interface DeleteApplicationCloudWatchLoggingOptionRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  CloudWatchLoggingOptionId: string | undefined;
}
export interface DeleteApplicationCloudWatchLoggingOptionResponse {}
export interface DeleteApplicationInputProcessingConfigurationRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  InputId: string | undefined;
}
export interface DeleteApplicationInputProcessingConfigurationResponse {}
export interface DeleteApplicationOutputRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  OutputId: string | undefined;
}
export interface DeleteApplicationOutputResponse {}
export interface DeleteApplicationReferenceDataSourceRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  ReferenceId: string | undefined;
}
export interface DeleteApplicationReferenceDataSourceResponse {}
export interface DescribeApplicationRequest {
  ApplicationName: string | undefined;
}
export interface DescribeApplicationResponse {
  ApplicationDetail: ApplicationDetail | undefined;
}
export interface S3Configuration {
  RoleARN: string | undefined;
  BucketARN: string | undefined;
  FileKey: string | undefined;
}
export interface DiscoverInputSchemaRequest {
  ResourceARN?: string;
  RoleARN?: string;
  InputStartingPositionConfiguration?: InputStartingPositionConfiguration;
  S3Configuration?: S3Configuration;
  InputProcessingConfiguration?: InputProcessingConfiguration;
}
export interface DiscoverInputSchemaResponse {
  InputSchema?: SourceSchema;
  ParsedInputRecords?: string[][];
  ProcessedInputRecords?: string[];
  RawInputRecords?: string[];
}
export declare class ResourceProvisionedThroughputExceededException extends __BaseException {
  readonly name: "ResourceProvisionedThroughputExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceProvisionedThroughputExceededException,
      __BaseException
    >
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class UnableToDetectSchemaException extends __BaseException {
  readonly name: "UnableToDetectSchemaException";
  readonly $fault: "client";
  RawInputRecords?: string[];
  ProcessedInputRecords?: string[];
  constructor(
    opts: __ExceptionOptionType<UnableToDetectSchemaException, __BaseException>
  );
}
export interface InputConfiguration {
  Id: string | undefined;
  InputStartingPositionConfiguration:
    | InputStartingPositionConfiguration
    | undefined;
}
export declare class InvalidApplicationConfigurationException extends __BaseException {
  readonly name: "InvalidApplicationConfigurationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidApplicationConfigurationException,
      __BaseException
    >
  );
}
export interface ListApplicationsRequest {
  Limit?: number;
  ExclusiveStartApplicationName?: string;
}
export interface ListApplicationsResponse {
  ApplicationSummaries: ApplicationSummary[] | undefined;
  HasMoreApplications: boolean | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface StartApplicationRequest {
  ApplicationName: string | undefined;
  InputConfigurations: InputConfiguration[] | undefined;
}
export interface StartApplicationResponse {}
export interface StopApplicationRequest {
  ApplicationName: string | undefined;
}
export interface StopApplicationResponse {}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateApplicationRequest {
  ApplicationName: string | undefined;
  CurrentApplicationVersionId: number | undefined;
  ApplicationUpdate: ApplicationUpdate | undefined;
}
export interface UpdateApplicationResponse {}
