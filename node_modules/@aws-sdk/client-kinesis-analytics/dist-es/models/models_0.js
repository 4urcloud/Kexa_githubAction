import { KinesisAnalyticsServiceException as __BaseException } from "./KinesisAnalyticsServiceException";
export class ConcurrentModificationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
    }
}
export class InvalidArgumentException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidArgumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgumentException.prototype);
    }
}
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class UnsupportedOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperationException.prototype);
    }
}
export const RecordFormatType = {
    CSV: "CSV",
    JSON: "JSON",
};
export class CodeValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "CodeValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeValidationException.prototype);
    }
}
export const ApplicationStatus = {
    DELETING: "DELETING",
    READY: "READY",
    RUNNING: "RUNNING",
    STARTING: "STARTING",
    STOPPING: "STOPPING",
    UPDATING: "UPDATING",
};
export const InputStartingPosition = {
    LAST_STOPPED_POINT: "LAST_STOPPED_POINT",
    NOW: "NOW",
    TRIM_HORIZON: "TRIM_HORIZON",
};
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
    }
}
export class ResourceProvisionedThroughputExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceProvisionedThroughputExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceProvisionedThroughputExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceProvisionedThroughputExceededException.prototype);
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
export class UnableToDetectSchemaException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnableToDetectSchemaException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnableToDetectSchemaException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnableToDetectSchemaException.prototype);
        this.RawInputRecords = opts.RawInputRecords;
        this.ProcessedInputRecords = opts.ProcessedInputRecords;
    }
}
export class InvalidApplicationConfigurationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidApplicationConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidApplicationConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidApplicationConfigurationException.prototype);
    }
}
