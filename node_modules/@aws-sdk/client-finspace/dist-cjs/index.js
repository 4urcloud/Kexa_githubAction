"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AutoScalingMetric: () => AutoScalingMetric,
  ChangeType: () => ChangeType,
  ChangesetStatus: () => ChangesetStatus,
  ConflictException: () => ConflictException,
  CreateEnvironmentCommand: () => CreateEnvironmentCommand,
  CreateEnvironmentRequestFilterSensitiveLog: () => CreateEnvironmentRequestFilterSensitiveLog,
  CreateKxChangesetCommand: () => CreateKxChangesetCommand,
  CreateKxClusterCommand: () => CreateKxClusterCommand,
  CreateKxDatabaseCommand: () => CreateKxDatabaseCommand,
  CreateKxDataviewCommand: () => CreateKxDataviewCommand,
  CreateKxEnvironmentCommand: () => CreateKxEnvironmentCommand,
  CreateKxScalingGroupCommand: () => CreateKxScalingGroupCommand,
  CreateKxUserCommand: () => CreateKxUserCommand,
  CreateKxVolumeCommand: () => CreateKxVolumeCommand,
  DeleteEnvironmentCommand: () => DeleteEnvironmentCommand,
  DeleteKxClusterCommand: () => DeleteKxClusterCommand,
  DeleteKxDatabaseCommand: () => DeleteKxDatabaseCommand,
  DeleteKxDataviewCommand: () => DeleteKxDataviewCommand,
  DeleteKxEnvironmentCommand: () => DeleteKxEnvironmentCommand,
  DeleteKxScalingGroupCommand: () => DeleteKxScalingGroupCommand,
  DeleteKxUserCommand: () => DeleteKxUserCommand,
  DeleteKxVolumeCommand: () => DeleteKxVolumeCommand,
  DnsStatus: () => DnsStatus,
  EnvironmentStatus: () => EnvironmentStatus,
  ErrorDetails: () => ErrorDetails,
  FederationMode: () => FederationMode,
  Finspace: () => Finspace,
  FinspaceClient: () => FinspaceClient,
  FinspaceServiceException: () => FinspaceServiceException,
  GetEnvironmentCommand: () => GetEnvironmentCommand,
  GetKxChangesetCommand: () => GetKxChangesetCommand,
  GetKxClusterCommand: () => GetKxClusterCommand,
  GetKxConnectionStringCommand: () => GetKxConnectionStringCommand,
  GetKxConnectionStringResponseFilterSensitiveLog: () => GetKxConnectionStringResponseFilterSensitiveLog,
  GetKxDatabaseCommand: () => GetKxDatabaseCommand,
  GetKxDataviewCommand: () => GetKxDataviewCommand,
  GetKxEnvironmentCommand: () => GetKxEnvironmentCommand,
  GetKxScalingGroupCommand: () => GetKxScalingGroupCommand,
  GetKxUserCommand: () => GetKxUserCommand,
  GetKxVolumeCommand: () => GetKxVolumeCommand,
  IPAddressType: () => IPAddressType,
  InternalServerException: () => InternalServerException,
  InvalidRequestException: () => InvalidRequestException,
  KxAzMode: () => KxAzMode,
  KxClusterCodeDeploymentStrategy: () => KxClusterCodeDeploymentStrategy,
  KxClusterStatus: () => KxClusterStatus,
  KxClusterType: () => KxClusterType,
  KxDataviewStatus: () => KxDataviewStatus,
  KxDeploymentStrategy: () => KxDeploymentStrategy,
  KxNAS1Type: () => KxNAS1Type,
  KxSavedownStorageType: () => KxSavedownStorageType,
  KxScalingGroupStatus: () => KxScalingGroupStatus,
  KxVolumeStatus: () => KxVolumeStatus,
  KxVolumeType: () => KxVolumeType,
  LimitExceededException: () => LimitExceededException,
  ListEnvironmentsCommand: () => ListEnvironmentsCommand,
  ListKxChangesetsCommand: () => ListKxChangesetsCommand,
  ListKxClusterNodesCommand: () => ListKxClusterNodesCommand,
  ListKxClustersCommand: () => ListKxClustersCommand,
  ListKxDatabasesCommand: () => ListKxDatabasesCommand,
  ListKxDataviewsCommand: () => ListKxDataviewsCommand,
  ListKxEnvironmentsCommand: () => ListKxEnvironmentsCommand,
  ListKxScalingGroupsCommand: () => ListKxScalingGroupsCommand,
  ListKxUsersCommand: () => ListKxUsersCommand,
  ListKxVolumesCommand: () => ListKxVolumesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RuleAction: () => RuleAction,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SuperuserParametersFilterSensitiveLog: () => SuperuserParametersFilterSensitiveLog,
  TagResourceCommand: () => TagResourceCommand,
  TgwStatus: () => TgwStatus,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateEnvironmentCommand: () => UpdateEnvironmentCommand,
  UpdateKxClusterCodeConfigurationCommand: () => UpdateKxClusterCodeConfigurationCommand,
  UpdateKxClusterDatabasesCommand: () => UpdateKxClusterDatabasesCommand,
  UpdateKxDatabaseCommand: () => UpdateKxDatabaseCommand,
  UpdateKxDataviewCommand: () => UpdateKxDataviewCommand,
  UpdateKxEnvironmentCommand: () => UpdateKxEnvironmentCommand,
  UpdateKxEnvironmentNetworkCommand: () => UpdateKxEnvironmentNetworkCommand,
  UpdateKxUserCommand: () => UpdateKxUserCommand,
  UpdateKxVolumeCommand: () => UpdateKxVolumeCommand,
  ValidationException: () => ValidationException,
  VolumeType: () => VolumeType,
  __Client: () => import_smithy_client.Client,
  paginateListKxChangesets: () => paginateListKxChangesets,
  paginateListKxClusterNodes: () => paginateListKxClusterNodes,
  paginateListKxDatabases: () => paginateListKxDatabases,
  paginateListKxDataviews: () => paginateListKxDataviews,
  paginateListKxEnvironments: () => paginateListKxEnvironments,
  paginateListKxScalingGroups: () => paginateListKxScalingGroups
});
module.exports = __toCommonJS(src_exports);

// src/FinspaceClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "finspace"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/FinspaceClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/FinspaceClient.ts
var _FinspaceClient = class _FinspaceClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultFinspaceHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_FinspaceClient, "FinspaceClient");
var FinspaceClient = _FinspaceClient;

// src/Finspace.ts


// src/commands/CreateEnvironmentCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/models/models_0.ts


// src/models/FinspaceServiceException.ts

var _FinspaceServiceException = class _FinspaceServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _FinspaceServiceException.prototype);
  }
};
__name(_FinspaceServiceException, "FinspaceServiceException");
var FinspaceServiceException = _FinspaceServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AutoScalingMetric = {
  CPU_UTILIZATION_PERCENTAGE: "CPU_UTILIZATION_PERCENTAGE"
};
var FederationMode = {
  FEDERATED: "FEDERATED",
  LOCAL: "LOCAL"
};
var _InternalServerException = class _InternalServerException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _LimitExceededException = class _LimitExceededException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _ConflictException = class _ConflictException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.reason = opts.reason;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var ChangeType = {
  DELETE: "DELETE",
  PUT: "PUT"
};
var ErrorDetails = {
  ACCESS_DENIED: "Missing required permission to perform this request.",
  CANCELLED: "Cancelled",
  INTERNAL_SERVICE_EXCEPTION: "An internal error has occurred.",
  RESOURCE_NOT_FOUND: "One or more inputs to this request were not found.",
  SERVICE_QUOTA_EXCEEDED: "Service limits have been exceeded.",
  THROTTLING: "The system temporarily lacks sufficient resources to process the request.",
  USER_RECOVERABLE: "A user recoverable error has occurred",
  VALIDATION: "The inputs to this request are invalid."
};
var ChangesetStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  PENDING: "PENDING",
  PROCESSING: "PROCESSING"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var KxAzMode = {
  MULTI: "MULTI",
  SINGLE: "SINGLE"
};
var KxClusterType = {
  GATEWAY: "GATEWAY",
  GP: "GP",
  HDB: "HDB",
  RDB: "RDB",
  TICKERPLANT: "TICKERPLANT"
};
var KxSavedownStorageType = {
  SDS01: "SDS01"
};
var IPAddressType = {
  IP_V4: "IP_V4"
};
var KxClusterStatus = {
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETED: "DELETED",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  PENDING: "PENDING",
  RUNNING: "RUNNING",
  UPDATING: "UPDATING"
};
var VolumeType = {
  NAS_1: "NAS_1"
};
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var KxDataviewStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var EnvironmentStatus = {
  CREATED: "CREATED",
  CREATE_REQUESTED: "CREATE_REQUESTED",
  CREATING: "CREATING",
  DELETED: "DELETED",
  DELETE_REQUESTED: "DELETE_REQUESTED",
  DELETING: "DELETING",
  FAILED_CREATION: "FAILED_CREATION",
  FAILED_DELETION: "FAILED_DELETION",
  FAILED_UPDATING_NETWORK: "FAILED_UPDATING_NETWORK",
  RETRY_DELETION: "RETRY_DELETION",
  SUSPENDED: "SUSPENDED",
  UPDATE_NETWORK_REQUESTED: "UPDATE_NETWORK_REQUESTED",
  UPDATING_NETWORK: "UPDATING_NETWORK"
};
var KxScalingGroupStatus = {
  ACTIVE: "ACTIVE",
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETED: "DELETED",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING"
};
var KxNAS1Type = {
  HDD_12: "HDD_12",
  SSD_1000: "SSD_1000",
  SSD_250: "SSD_250"
};
var KxVolumeType = {
  NAS_1: "NAS_1"
};
var KxVolumeStatus = {
  ACTIVE: "ACTIVE",
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETED: "DELETED",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  UPDATED: "UPDATED",
  UPDATE_FAILED: "UPDATE_FAILED",
  UPDATING: "UPDATING"
};
var DnsStatus = {
  FAILED_UPDATE: "FAILED_UPDATE",
  NONE: "NONE",
  SUCCESSFULLY_UPDATED: "SUCCESSFULLY_UPDATED",
  UPDATE_REQUESTED: "UPDATE_REQUESTED",
  UPDATING: "UPDATING"
};
var TgwStatus = {
  FAILED_UPDATE: "FAILED_UPDATE",
  NONE: "NONE",
  SUCCESSFULLY_UPDATED: "SUCCESSFULLY_UPDATED",
  UPDATE_REQUESTED: "UPDATE_REQUESTED",
  UPDATING: "UPDATING"
};
var RuleAction = {
  ALLOW: "allow",
  DENY: "deny"
};
var _InvalidRequestException = class _InvalidRequestException extends FinspaceServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRequestException.prototype);
  }
};
__name(_InvalidRequestException, "InvalidRequestException");
var InvalidRequestException = _InvalidRequestException;
var KxClusterCodeDeploymentStrategy = {
  FORCE: "FORCE",
  NO_RESTART: "NO_RESTART",
  ROLLING: "ROLLING"
};
var KxDeploymentStrategy = {
  NO_RESTART: "NO_RESTART",
  ROLLING: "ROLLING"
};
var SuperuserParametersFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.emailAddress && { emailAddress: import_smithy_client.SENSITIVE_STRING }
}), "SuperuserParametersFilterSensitiveLog");
var CreateEnvironmentRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.superuserParameters && {
    superuserParameters: SuperuserParametersFilterSensitiveLog(obj.superuserParameters)
  }
}), "CreateEnvironmentRequestFilterSensitiveLog");
var GetKxConnectionStringResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.signedConnectionString && { signedConnectionString: import_smithy_client.SENSITIVE_STRING }
}), "GetKxConnectionStringResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts


var import_uuid = require("uuid");
var se_CreateEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/environment");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dataBundles: (_) => (0, import_smithy_client._json)(_),
      description: [],
      federationMode: [],
      federationParameters: (_) => (0, import_smithy_client._json)(_),
      kmsKeyId: [],
      name: [],
      superuserParameters: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateEnvironmentCommand");
var se_CreateKxChangesetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/changesets");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      changeRequests: (_) => (0, import_smithy_client._json)(_),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxChangesetCommand");
var se_CreateKxClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/clusters");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      autoScalingConfiguration: (_) => se_AutoScalingConfiguration(_, context),
      availabilityZoneId: [],
      azMode: [],
      cacheStorageConfigurations: (_) => (0, import_smithy_client._json)(_),
      capacityConfiguration: (_) => (0, import_smithy_client._json)(_),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      clusterDescription: [],
      clusterName: [],
      clusterType: [],
      code: (_) => (0, import_smithy_client._json)(_),
      commandLineArguments: (_) => (0, import_smithy_client._json)(_),
      databases: (_) => (0, import_smithy_client._json)(_),
      executionRole: [],
      initializationScript: [],
      releaseLabel: [],
      savedownStorageConfiguration: (_) => (0, import_smithy_client._json)(_),
      scalingGroupConfiguration: (_) => se_KxScalingGroupConfiguration(_, context),
      tags: (_) => (0, import_smithy_client._json)(_),
      tickerplantLogConfiguration: (_) => (0, import_smithy_client._json)(_),
      vpcConfiguration: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxClusterCommand");
var se_CreateKxDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/databases");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      databaseName: [],
      description: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxDatabaseCommand");
var se_CreateKxDataviewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/dataviews");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      autoUpdate: [],
      availabilityZoneId: [],
      azMode: [],
      changesetId: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      dataviewName: [],
      description: [],
      segmentConfigurations: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxDataviewCommand");
var se_CreateKxEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      kmsKeyId: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxEnvironmentCommand");
var se_CreateKxScalingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/scalingGroups");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      availabilityZoneId: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      hostType: [],
      scalingGroupName: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxScalingGroupCommand");
var se_CreateKxUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/users");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      iamRole: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      userName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxUserCommand");
var se_CreateKxVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/kxvolumes");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      availabilityZoneIds: (_) => (0, import_smithy_client._json)(_),
      azMode: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      nas1Configuration: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      volumeName: [],
      volumeType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateKxVolumeCommand");
var se_DeleteEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/environment/{environmentId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteEnvironmentCommand");
var se_DeleteKxClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/clusters/{clusterName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("clusterName", () => input.clusterName, "{clusterName}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxClusterCommand");
var se_DeleteKxDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, (0, import_smithy_client.expectNonNull)(input[_cT], `clientToken`)]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxDatabaseCommand");
var se_DeleteKxDataviewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/dataviews/{dataviewName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  b.p("dataviewName", () => input.dataviewName, "{dataviewName}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, (0, import_smithy_client.expectNonNull)(input[_cT], `clientToken`)]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxDataviewCommand");
var se_DeleteKxEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxEnvironmentCommand");
var se_DeleteKxScalingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/scalingGroups/{scalingGroupName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("scalingGroupName", () => input.scalingGroupName, "{scalingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxScalingGroupCommand");
var se_DeleteKxUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/users/{userName}");
  b.p("userName", () => input.userName, "{userName}", false);
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxUserCommand");
var se_DeleteKxVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/kxvolumes/{volumeName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("volumeName", () => input.volumeName, "{volumeName}", false);
  const query = (0, import_smithy_client.map)({
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteKxVolumeCommand");
var se_GetEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/environment/{environmentId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetEnvironmentCommand");
var se_GetKxChangesetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/changesets/{changesetId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  b.p("changesetId", () => input.changesetId, "{changesetId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxChangesetCommand");
var se_GetKxClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/clusters/{clusterName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("clusterName", () => input.clusterName, "{clusterName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxClusterCommand");
var se_GetKxConnectionStringCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/connectionString");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_uA]: [, (0, import_smithy_client.expectNonNull)(input[_uA], `userArn`)],
    [_cN]: [, (0, import_smithy_client.expectNonNull)(input[_cN], `clusterName`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetKxConnectionStringCommand");
var se_GetKxDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxDatabaseCommand");
var se_GetKxDataviewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/dataviews/{dataviewName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  b.p("dataviewName", () => input.dataviewName, "{dataviewName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxDataviewCommand");
var se_GetKxEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxEnvironmentCommand");
var se_GetKxScalingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/scalingGroups/{scalingGroupName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("scalingGroupName", () => input.scalingGroupName, "{scalingGroupName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxScalingGroupCommand");
var se_GetKxUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/users/{userName}");
  b.p("userName", () => input.userName, "{userName}", false);
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxUserCommand");
var se_GetKxVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/kxvolumes/{volumeName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("volumeName", () => input.volumeName, "{volumeName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetKxVolumeCommand");
var se_ListEnvironmentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/environment");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListEnvironmentsCommand");
var se_ListKxChangesetsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/changesets");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxChangesetsCommand");
var se_ListKxClusterNodesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/clusters/{clusterName}/nodes");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("clusterName", () => input.clusterName, "{clusterName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxClusterNodesCommand");
var se_ListKxClustersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/clusters");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_cTl]: [, input[_cTl]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxClustersCommand");
var se_ListKxDatabasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxDatabasesCommand");
var se_ListKxDataviewsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/dataviews");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxDataviewsCommand");
var se_ListKxEnvironmentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxEnvironmentsCommand");
var se_ListKxScalingGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/scalingGroups");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxScalingGroupsCommand");
var se_ListKxUsersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/users");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxUsersCommand");
var se_ListKxVolumesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/kx/environments/{environmentId}/kxvolumes");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_vT]: [, input[_vT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListKxVolumesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/environment/{environmentId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      federationMode: [],
      federationParameters: (_) => (0, import_smithy_client._json)(_),
      name: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateEnvironmentCommand");
var se_UpdateKxClusterCodeConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/clusters/{clusterName}/configuration/code");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("clusterName", () => input.clusterName, "{clusterName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      code: (_) => (0, import_smithy_client._json)(_),
      commandLineArguments: (_) => (0, import_smithy_client._json)(_),
      deploymentConfiguration: (_) => (0, import_smithy_client._json)(_),
      initializationScript: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxClusterCodeConfigurationCommand");
var se_UpdateKxClusterDatabasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/clusters/{clusterName}/configuration/databases");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("clusterName", () => input.clusterName, "{clusterName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      databases: (_) => (0, import_smithy_client._json)(_),
      deploymentConfiguration: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxClusterDatabasesCommand");
var se_UpdateKxDatabaseCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxDatabaseCommand");
var se_UpdateKxDataviewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/databases/{databaseName}/dataviews/{dataviewName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("databaseName", () => input.databaseName, "{databaseName}", false);
  b.p("dataviewName", () => input.dataviewName, "{dataviewName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      changesetId: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      segmentConfigurations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxDataviewCommand");
var se_UpdateKxEnvironmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      name: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxEnvironmentCommand");
var se_UpdateKxEnvironmentNetworkCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/network");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      customDNSConfiguration: (_) => (0, import_smithy_client._json)(_),
      transitGatewayConfiguration: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxEnvironmentNetworkCommand");
var se_UpdateKxUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/users/{userName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("userName", () => input.userName, "{userName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      iamRole: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateKxUserCommand");
var se_UpdateKxVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/kx/environments/{environmentId}/kxvolumes/{volumeName}");
  b.p("environmentId", () => input.environmentId, "{environmentId}", false);
  b.p("volumeName", () => input.volumeName, "{volumeName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      nas1Configuration: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateKxVolumeCommand");
var de_CreateEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environmentArn: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    environmentUrl: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateEnvironmentCommand");
var de_CreateKxChangesetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    changeRequests: import_smithy_client._json,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    errorInfo: import_smithy_client._json,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxChangesetCommand");
var de_CreateKxClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    autoScalingConfiguration: (_) => de_AutoScalingConfiguration(_, context),
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    cacheStorageConfigurations: import_smithy_client._json,
    capacityConfiguration: import_smithy_client._json,
    clusterDescription: import_smithy_client.expectString,
    clusterName: import_smithy_client.expectString,
    clusterType: import_smithy_client.expectString,
    code: import_smithy_client._json,
    commandLineArguments: import_smithy_client._json,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databases: import_smithy_client._json,
    environmentId: import_smithy_client.expectString,
    executionRole: import_smithy_client.expectString,
    initializationScript: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    releaseLabel: import_smithy_client.expectString,
    savedownStorageConfiguration: import_smithy_client._json,
    scalingGroupConfiguration: (_) => de_KxScalingGroupConfiguration(_, context),
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    tickerplantLogConfiguration: import_smithy_client._json,
    volumes: import_smithy_client._json,
    vpcConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxClusterCommand");
var de_CreateKxDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseArn: import_smithy_client.expectString,
    databaseName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxDatabaseCommand");
var de_CreateKxDataviewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    autoUpdate: import_smithy_client.expectBoolean,
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    dataviewName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    segmentConfigurations: import_smithy_client._json,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxDataviewCommand");
var de_CreateKxEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    environmentArn: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    kmsKeyId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxEnvironmentCommand");
var de_CreateKxScalingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    availabilityZoneId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    environmentId: import_smithy_client.expectString,
    hostType: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    scalingGroupName: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxScalingGroupCommand");
var de_CreateKxUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environmentId: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    userArn: import_smithy_client.expectString,
    userName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxUserCommand");
var de_CreateKxVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    availabilityZoneIds: import_smithy_client._json,
    azMode: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    nas1Configuration: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    volumeArn: import_smithy_client.expectString,
    volumeName: import_smithy_client.expectString,
    volumeType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateKxVolumeCommand");
var de_DeleteEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteEnvironmentCommand");
var de_DeleteKxClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxClusterCommand");
var de_DeleteKxDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxDatabaseCommand");
var de_DeleteKxDataviewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxDataviewCommand");
var de_DeleteKxEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxEnvironmentCommand");
var de_DeleteKxScalingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxScalingGroupCommand");
var de_DeleteKxUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxUserCommand");
var de_DeleteKxVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteKxVolumeCommand");
var de_GetEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environment: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetEnvironmentCommand");
var de_GetKxChangesetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    activeFromTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    changeRequests: import_smithy_client._json,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    errorInfo: import_smithy_client._json,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxChangesetCommand");
var de_GetKxClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    autoScalingConfiguration: (_) => de_AutoScalingConfiguration(_, context),
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    cacheStorageConfigurations: import_smithy_client._json,
    capacityConfiguration: import_smithy_client._json,
    clusterDescription: import_smithy_client.expectString,
    clusterName: import_smithy_client.expectString,
    clusterType: import_smithy_client.expectString,
    code: import_smithy_client._json,
    commandLineArguments: import_smithy_client._json,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databases: import_smithy_client._json,
    executionRole: import_smithy_client.expectString,
    initializationScript: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    releaseLabel: import_smithy_client.expectString,
    savedownStorageConfiguration: import_smithy_client._json,
    scalingGroupConfiguration: (_) => de_KxScalingGroupConfiguration(_, context),
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    tickerplantLogConfiguration: import_smithy_client._json,
    volumes: import_smithy_client._json,
    vpcConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxClusterCommand");
var de_GetKxConnectionStringCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    signedConnectionString: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxConnectionStringCommand");
var de_GetKxDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseArn: import_smithy_client.expectString,
    databaseName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastCompletedChangesetId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    numBytes: import_smithy_client.expectLong,
    numChangesets: import_smithy_client.expectInt32,
    numFiles: import_smithy_client.expectInt32
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxDatabaseCommand");
var de_GetKxDataviewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    activeVersions: (_) => de_KxDataviewActiveVersionList(_, context),
    autoUpdate: import_smithy_client.expectBoolean,
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    dataviewName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    segmentConfigurations: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxDataviewCommand");
var de_GetKxEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    availabilityZoneIds: import_smithy_client._json,
    awsAccountId: import_smithy_client.expectString,
    certificateAuthorityArn: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customDNSConfiguration: import_smithy_client._json,
    dedicatedServiceAccountId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    dnsStatus: import_smithy_client.expectString,
    environmentArn: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    errorMessage: import_smithy_client.expectString,
    kmsKeyId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tgwStatus: import_smithy_client.expectString,
    transitGatewayConfiguration: import_smithy_client._json,
    updateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxEnvironmentCommand");
var de_GetKxScalingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    availabilityZoneId: import_smithy_client.expectString,
    clusters: import_smithy_client._json,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    hostType: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    scalingGroupArn: import_smithy_client.expectString,
    scalingGroupName: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxScalingGroupCommand");
var de_GetKxUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environmentId: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    userArn: import_smithy_client.expectString,
    userName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxUserCommand");
var de_GetKxVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    attachedClusters: import_smithy_client._json,
    availabilityZoneIds: import_smithy_client._json,
    azMode: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    nas1Configuration: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    volumeArn: import_smithy_client.expectString,
    volumeName: import_smithy_client.expectString,
    volumeType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetKxVolumeCommand");
var de_ListEnvironmentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environments: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListEnvironmentsCommand");
var de_ListKxChangesetsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    kxChangesets: (_) => de_KxChangesets(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxChangesetsCommand");
var de_ListKxClusterNodesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    nodes: (_) => de_KxNodeSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxClusterNodesCommand");
var de_ListKxClustersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    kxClusterSummaries: (_) => de_KxClusters(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxClustersCommand");
var de_ListKxDatabasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    kxDatabases: (_) => de_KxDatabases(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxDatabasesCommand");
var de_ListKxDataviewsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    kxDataviews: (_) => de_KxDataviews(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxDataviewsCommand");
var de_ListKxEnvironmentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environments: (_) => de_KxEnvironmentList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxEnvironmentsCommand");
var de_ListKxScalingGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    scalingGroups: (_) => de_KxScalingGroupList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxScalingGroupsCommand");
var de_ListKxUsersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    users: (_) => de_KxUserList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxUsersCommand");
var de_ListKxVolumesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    kxVolumeSummaries: (_) => de_KxVolumes(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListKxVolumesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environment: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateEnvironmentCommand");
var de_UpdateKxClusterCodeConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateKxClusterCodeConfigurationCommand");
var de_UpdateKxClusterDatabasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateKxClusterDatabasesCommand");
var de_UpdateKxDatabaseCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    databaseName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKxDatabaseCommand");
var de_UpdateKxDataviewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    activeVersions: (_) => de_KxDataviewActiveVersionList(_, context),
    autoUpdate: import_smithy_client.expectBoolean,
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    dataviewName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    segmentConfigurations: import_smithy_client._json,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKxDataviewCommand");
var de_UpdateKxEnvironmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    availabilityZoneIds: import_smithy_client._json,
    awsAccountId: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customDNSConfiguration: import_smithy_client._json,
    dedicatedServiceAccountId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    dnsStatus: import_smithy_client.expectString,
    environmentArn: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    errorMessage: import_smithy_client.expectString,
    kmsKeyId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tgwStatus: import_smithy_client.expectString,
    transitGatewayConfiguration: import_smithy_client._json,
    updateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKxEnvironmentCommand");
var de_UpdateKxEnvironmentNetworkCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    availabilityZoneIds: import_smithy_client._json,
    awsAccountId: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customDNSConfiguration: import_smithy_client._json,
    dedicatedServiceAccountId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    dnsStatus: import_smithy_client.expectString,
    environmentArn: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    errorMessage: import_smithy_client.expectString,
    kmsKeyId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tgwStatus: import_smithy_client.expectString,
    transitGatewayConfiguration: import_smithy_client._json,
    updateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKxEnvironmentNetworkCommand");
var de_UpdateKxUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    environmentId: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    userArn: import_smithy_client.expectString,
    userName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKxUserCommand");
var de_UpdateKxVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    attachedClusters: import_smithy_client._json,
    availabilityZoneIds: import_smithy_client._json,
    azMode: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    nas1Configuration: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    volumeArn: import_smithy_client.expectString,
    volumeName: import_smithy_client.expectString,
    volumeType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateKxVolumeCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.finspace#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.finspace#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.finspace#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.finspace#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.finspace#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.finspace#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.finspace#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.finspace#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.finspace#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "InvalidRequestException":
    case "com.amazonaws.finspace#InvalidRequestException":
      throw await de_InvalidRequestExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(FinspaceServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidRequestExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_AutoScalingConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    autoScalingMetric: [],
    maxNodeCount: [],
    metricTarget: import_smithy_client.serializeFloat,
    minNodeCount: [],
    scaleInCooldownSeconds: import_smithy_client.serializeFloat,
    scaleOutCooldownSeconds: import_smithy_client.serializeFloat
  });
}, "se_AutoScalingConfiguration");
var se_KxScalingGroupConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    cpu: import_smithy_client.serializeFloat,
    memoryLimit: [],
    memoryReservation: [],
    nodeCount: [],
    scalingGroupName: []
  });
}, "se_KxScalingGroupConfiguration");
var de_AutoScalingConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    autoScalingMetric: import_smithy_client.expectString,
    maxNodeCount: import_smithy_client.expectInt32,
    metricTarget: import_smithy_client.limitedParseDouble,
    minNodeCount: import_smithy_client.expectInt32,
    scaleInCooldownSeconds: import_smithy_client.limitedParseDouble,
    scaleOutCooldownSeconds: import_smithy_client.limitedParseDouble
  });
}, "de_AutoScalingConfiguration");
var de_KxChangesetListEntry = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    activeFromTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
}, "de_KxChangesetListEntry");
var de_KxChangesets = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxChangesetListEntry(entry, context);
  });
  return retVal;
}, "de_KxChangesets");
var de_KxCluster = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    clusterDescription: import_smithy_client.expectString,
    clusterName: import_smithy_client.expectString,
    clusterType: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    executionRole: import_smithy_client.expectString,
    initializationScript: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    releaseLabel: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    volumes: import_smithy_client._json
  });
}, "de_KxCluster");
var de_KxClusters = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxCluster(entry, context);
  });
  return retVal;
}, "de_KxClusters");
var de_KxDatabaseListEntry = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_KxDatabaseListEntry");
var de_KxDatabases = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxDatabaseListEntry(entry, context);
  });
  return retVal;
}, "de_KxDatabases");
var de_KxDataviewActiveVersion = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    attachedClusters: import_smithy_client._json,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    segmentConfigurations: import_smithy_client._json,
    versionId: import_smithy_client.expectString
  });
}, "de_KxDataviewActiveVersion");
var de_KxDataviewActiveVersionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxDataviewActiveVersion(entry, context);
  });
  return retVal;
}, "de_KxDataviewActiveVersionList");
var de_KxDataviewListEntry = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    activeVersions: (_) => de_KxDataviewActiveVersionList(_, context),
    autoUpdate: import_smithy_client.expectBoolean,
    availabilityZoneId: import_smithy_client.expectString,
    azMode: import_smithy_client.expectString,
    changesetId: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    databaseName: import_smithy_client.expectString,
    dataviewName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    segmentConfigurations: import_smithy_client._json,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString
  });
}, "de_KxDataviewListEntry");
var de_KxDataviews = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxDataviewListEntry(entry, context);
  });
  return retVal;
}, "de_KxDataviews");
var de_KxEnvironment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    availabilityZoneIds: import_smithy_client._json,
    awsAccountId: import_smithy_client.expectString,
    certificateAuthorityArn: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    customDNSConfiguration: import_smithy_client._json,
    dedicatedServiceAccountId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    dnsStatus: import_smithy_client.expectString,
    environmentArn: import_smithy_client.expectString,
    environmentId: import_smithy_client.expectString,
    errorMessage: import_smithy_client.expectString,
    kmsKeyId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tgwStatus: import_smithy_client.expectString,
    transitGatewayConfiguration: import_smithy_client._json,
    updateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_KxEnvironment");
var de_KxEnvironmentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxEnvironment(entry, context);
  });
  return retVal;
}, "de_KxEnvironmentList");
var de_KxNode = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    availabilityZoneId: import_smithy_client.expectString,
    launchTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    nodeId: import_smithy_client.expectString
  });
}, "de_KxNode");
var de_KxNodeSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxNode(entry, context);
  });
  return retVal;
}, "de_KxNodeSummaries");
var de_KxScalingGroup = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    availabilityZoneId: import_smithy_client.expectString,
    clusters: import_smithy_client._json,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    hostType: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    scalingGroupName: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString
  });
}, "de_KxScalingGroup");
var de_KxScalingGroupConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cpu: import_smithy_client.limitedParseDouble,
    memoryLimit: import_smithy_client.expectInt32,
    memoryReservation: import_smithy_client.expectInt32,
    nodeCount: import_smithy_client.expectInt32,
    scalingGroupName: import_smithy_client.expectString
  });
}, "de_KxScalingGroupConfiguration");
var de_KxScalingGroupList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxScalingGroup(entry, context);
  });
  return retVal;
}, "de_KxScalingGroupList");
var de_KxUser = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    iamRole: import_smithy_client.expectString,
    updateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    userArn: import_smithy_client.expectString,
    userName: import_smithy_client.expectString
  });
}, "de_KxUser");
var de_KxUserList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxUser(entry, context);
  });
  return retVal;
}, "de_KxUserList");
var de_KxVolume = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    availabilityZoneIds: import_smithy_client._json,
    azMode: import_smithy_client.expectString,
    createdTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    lastModifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    volumeName: import_smithy_client.expectString,
    volumeType: import_smithy_client.expectString
  });
}, "de_KxVolume");
var de_KxVolumes = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_KxVolume(entry, context);
  });
  return retVal;
}, "de_KxVolumes");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _cN = "clusterName";
var _cT = "clientToken";
var _cTl = "clusterType";
var _mR = "maxResults";
var _nT = "nextToken";
var _tK = "tagKeys";
var _uA = "userArn";
var _vT = "volumeType";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateEnvironmentCommand.ts
var _CreateEnvironmentCommand = class _CreateEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateEnvironment", {}).n("FinspaceClient", "CreateEnvironmentCommand").f(CreateEnvironmentRequestFilterSensitiveLog, void 0).ser(se_CreateEnvironmentCommand).de(de_CreateEnvironmentCommand).build() {
};
__name(_CreateEnvironmentCommand, "CreateEnvironmentCommand");
var CreateEnvironmentCommand = _CreateEnvironmentCommand;

// src/commands/CreateKxChangesetCommand.ts




var _CreateKxChangesetCommand = class _CreateKxChangesetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxChangeset", {}).n("FinspaceClient", "CreateKxChangesetCommand").f(void 0, void 0).ser(se_CreateKxChangesetCommand).de(de_CreateKxChangesetCommand).build() {
};
__name(_CreateKxChangesetCommand, "CreateKxChangesetCommand");
var CreateKxChangesetCommand = _CreateKxChangesetCommand;

// src/commands/CreateKxClusterCommand.ts




var _CreateKxClusterCommand = class _CreateKxClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxCluster", {}).n("FinspaceClient", "CreateKxClusterCommand").f(void 0, void 0).ser(se_CreateKxClusterCommand).de(de_CreateKxClusterCommand).build() {
};
__name(_CreateKxClusterCommand, "CreateKxClusterCommand");
var CreateKxClusterCommand = _CreateKxClusterCommand;

// src/commands/CreateKxDatabaseCommand.ts




var _CreateKxDatabaseCommand = class _CreateKxDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxDatabase", {}).n("FinspaceClient", "CreateKxDatabaseCommand").f(void 0, void 0).ser(se_CreateKxDatabaseCommand).de(de_CreateKxDatabaseCommand).build() {
};
__name(_CreateKxDatabaseCommand, "CreateKxDatabaseCommand");
var CreateKxDatabaseCommand = _CreateKxDatabaseCommand;

// src/commands/CreateKxDataviewCommand.ts




var _CreateKxDataviewCommand = class _CreateKxDataviewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxDataview", {}).n("FinspaceClient", "CreateKxDataviewCommand").f(void 0, void 0).ser(se_CreateKxDataviewCommand).de(de_CreateKxDataviewCommand).build() {
};
__name(_CreateKxDataviewCommand, "CreateKxDataviewCommand");
var CreateKxDataviewCommand = _CreateKxDataviewCommand;

// src/commands/CreateKxEnvironmentCommand.ts




var _CreateKxEnvironmentCommand = class _CreateKxEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxEnvironment", {}).n("FinspaceClient", "CreateKxEnvironmentCommand").f(void 0, void 0).ser(se_CreateKxEnvironmentCommand).de(de_CreateKxEnvironmentCommand).build() {
};
__name(_CreateKxEnvironmentCommand, "CreateKxEnvironmentCommand");
var CreateKxEnvironmentCommand = _CreateKxEnvironmentCommand;

// src/commands/CreateKxScalingGroupCommand.ts




var _CreateKxScalingGroupCommand = class _CreateKxScalingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxScalingGroup", {}).n("FinspaceClient", "CreateKxScalingGroupCommand").f(void 0, void 0).ser(se_CreateKxScalingGroupCommand).de(de_CreateKxScalingGroupCommand).build() {
};
__name(_CreateKxScalingGroupCommand, "CreateKxScalingGroupCommand");
var CreateKxScalingGroupCommand = _CreateKxScalingGroupCommand;

// src/commands/CreateKxUserCommand.ts




var _CreateKxUserCommand = class _CreateKxUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxUser", {}).n("FinspaceClient", "CreateKxUserCommand").f(void 0, void 0).ser(se_CreateKxUserCommand).de(de_CreateKxUserCommand).build() {
};
__name(_CreateKxUserCommand, "CreateKxUserCommand");
var CreateKxUserCommand = _CreateKxUserCommand;

// src/commands/CreateKxVolumeCommand.ts




var _CreateKxVolumeCommand = class _CreateKxVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "CreateKxVolume", {}).n("FinspaceClient", "CreateKxVolumeCommand").f(void 0, void 0).ser(se_CreateKxVolumeCommand).de(de_CreateKxVolumeCommand).build() {
};
__name(_CreateKxVolumeCommand, "CreateKxVolumeCommand");
var CreateKxVolumeCommand = _CreateKxVolumeCommand;

// src/commands/DeleteEnvironmentCommand.ts




var _DeleteEnvironmentCommand = class _DeleteEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteEnvironment", {}).n("FinspaceClient", "DeleteEnvironmentCommand").f(void 0, void 0).ser(se_DeleteEnvironmentCommand).de(de_DeleteEnvironmentCommand).build() {
};
__name(_DeleteEnvironmentCommand, "DeleteEnvironmentCommand");
var DeleteEnvironmentCommand = _DeleteEnvironmentCommand;

// src/commands/DeleteKxClusterCommand.ts




var _DeleteKxClusterCommand = class _DeleteKxClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxCluster", {}).n("FinspaceClient", "DeleteKxClusterCommand").f(void 0, void 0).ser(se_DeleteKxClusterCommand).de(de_DeleteKxClusterCommand).build() {
};
__name(_DeleteKxClusterCommand, "DeleteKxClusterCommand");
var DeleteKxClusterCommand = _DeleteKxClusterCommand;

// src/commands/DeleteKxDatabaseCommand.ts




var _DeleteKxDatabaseCommand = class _DeleteKxDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxDatabase", {}).n("FinspaceClient", "DeleteKxDatabaseCommand").f(void 0, void 0).ser(se_DeleteKxDatabaseCommand).de(de_DeleteKxDatabaseCommand).build() {
};
__name(_DeleteKxDatabaseCommand, "DeleteKxDatabaseCommand");
var DeleteKxDatabaseCommand = _DeleteKxDatabaseCommand;

// src/commands/DeleteKxDataviewCommand.ts




var _DeleteKxDataviewCommand = class _DeleteKxDataviewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxDataview", {}).n("FinspaceClient", "DeleteKxDataviewCommand").f(void 0, void 0).ser(se_DeleteKxDataviewCommand).de(de_DeleteKxDataviewCommand).build() {
};
__name(_DeleteKxDataviewCommand, "DeleteKxDataviewCommand");
var DeleteKxDataviewCommand = _DeleteKxDataviewCommand;

// src/commands/DeleteKxEnvironmentCommand.ts




var _DeleteKxEnvironmentCommand = class _DeleteKxEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxEnvironment", {}).n("FinspaceClient", "DeleteKxEnvironmentCommand").f(void 0, void 0).ser(se_DeleteKxEnvironmentCommand).de(de_DeleteKxEnvironmentCommand).build() {
};
__name(_DeleteKxEnvironmentCommand, "DeleteKxEnvironmentCommand");
var DeleteKxEnvironmentCommand = _DeleteKxEnvironmentCommand;

// src/commands/DeleteKxScalingGroupCommand.ts




var _DeleteKxScalingGroupCommand = class _DeleteKxScalingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxScalingGroup", {}).n("FinspaceClient", "DeleteKxScalingGroupCommand").f(void 0, void 0).ser(se_DeleteKxScalingGroupCommand).de(de_DeleteKxScalingGroupCommand).build() {
};
__name(_DeleteKxScalingGroupCommand, "DeleteKxScalingGroupCommand");
var DeleteKxScalingGroupCommand = _DeleteKxScalingGroupCommand;

// src/commands/DeleteKxUserCommand.ts




var _DeleteKxUserCommand = class _DeleteKxUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxUser", {}).n("FinspaceClient", "DeleteKxUserCommand").f(void 0, void 0).ser(se_DeleteKxUserCommand).de(de_DeleteKxUserCommand).build() {
};
__name(_DeleteKxUserCommand, "DeleteKxUserCommand");
var DeleteKxUserCommand = _DeleteKxUserCommand;

// src/commands/DeleteKxVolumeCommand.ts




var _DeleteKxVolumeCommand = class _DeleteKxVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "DeleteKxVolume", {}).n("FinspaceClient", "DeleteKxVolumeCommand").f(void 0, void 0).ser(se_DeleteKxVolumeCommand).de(de_DeleteKxVolumeCommand).build() {
};
__name(_DeleteKxVolumeCommand, "DeleteKxVolumeCommand");
var DeleteKxVolumeCommand = _DeleteKxVolumeCommand;

// src/commands/GetEnvironmentCommand.ts




var _GetEnvironmentCommand = class _GetEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetEnvironment", {}).n("FinspaceClient", "GetEnvironmentCommand").f(void 0, void 0).ser(se_GetEnvironmentCommand).de(de_GetEnvironmentCommand).build() {
};
__name(_GetEnvironmentCommand, "GetEnvironmentCommand");
var GetEnvironmentCommand = _GetEnvironmentCommand;

// src/commands/GetKxChangesetCommand.ts




var _GetKxChangesetCommand = class _GetKxChangesetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxChangeset", {}).n("FinspaceClient", "GetKxChangesetCommand").f(void 0, void 0).ser(se_GetKxChangesetCommand).de(de_GetKxChangesetCommand).build() {
};
__name(_GetKxChangesetCommand, "GetKxChangesetCommand");
var GetKxChangesetCommand = _GetKxChangesetCommand;

// src/commands/GetKxClusterCommand.ts




var _GetKxClusterCommand = class _GetKxClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxCluster", {}).n("FinspaceClient", "GetKxClusterCommand").f(void 0, void 0).ser(se_GetKxClusterCommand).de(de_GetKxClusterCommand).build() {
};
__name(_GetKxClusterCommand, "GetKxClusterCommand");
var GetKxClusterCommand = _GetKxClusterCommand;

// src/commands/GetKxConnectionStringCommand.ts




var _GetKxConnectionStringCommand = class _GetKxConnectionStringCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxConnectionString", {}).n("FinspaceClient", "GetKxConnectionStringCommand").f(void 0, GetKxConnectionStringResponseFilterSensitiveLog).ser(se_GetKxConnectionStringCommand).de(de_GetKxConnectionStringCommand).build() {
};
__name(_GetKxConnectionStringCommand, "GetKxConnectionStringCommand");
var GetKxConnectionStringCommand = _GetKxConnectionStringCommand;

// src/commands/GetKxDatabaseCommand.ts




var _GetKxDatabaseCommand = class _GetKxDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxDatabase", {}).n("FinspaceClient", "GetKxDatabaseCommand").f(void 0, void 0).ser(se_GetKxDatabaseCommand).de(de_GetKxDatabaseCommand).build() {
};
__name(_GetKxDatabaseCommand, "GetKxDatabaseCommand");
var GetKxDatabaseCommand = _GetKxDatabaseCommand;

// src/commands/GetKxDataviewCommand.ts




var _GetKxDataviewCommand = class _GetKxDataviewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxDataview", {}).n("FinspaceClient", "GetKxDataviewCommand").f(void 0, void 0).ser(se_GetKxDataviewCommand).de(de_GetKxDataviewCommand).build() {
};
__name(_GetKxDataviewCommand, "GetKxDataviewCommand");
var GetKxDataviewCommand = _GetKxDataviewCommand;

// src/commands/GetKxEnvironmentCommand.ts




var _GetKxEnvironmentCommand = class _GetKxEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxEnvironment", {}).n("FinspaceClient", "GetKxEnvironmentCommand").f(void 0, void 0).ser(se_GetKxEnvironmentCommand).de(de_GetKxEnvironmentCommand).build() {
};
__name(_GetKxEnvironmentCommand, "GetKxEnvironmentCommand");
var GetKxEnvironmentCommand = _GetKxEnvironmentCommand;

// src/commands/GetKxScalingGroupCommand.ts




var _GetKxScalingGroupCommand = class _GetKxScalingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxScalingGroup", {}).n("FinspaceClient", "GetKxScalingGroupCommand").f(void 0, void 0).ser(se_GetKxScalingGroupCommand).de(de_GetKxScalingGroupCommand).build() {
};
__name(_GetKxScalingGroupCommand, "GetKxScalingGroupCommand");
var GetKxScalingGroupCommand = _GetKxScalingGroupCommand;

// src/commands/GetKxUserCommand.ts




var _GetKxUserCommand = class _GetKxUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxUser", {}).n("FinspaceClient", "GetKxUserCommand").f(void 0, void 0).ser(se_GetKxUserCommand).de(de_GetKxUserCommand).build() {
};
__name(_GetKxUserCommand, "GetKxUserCommand");
var GetKxUserCommand = _GetKxUserCommand;

// src/commands/GetKxVolumeCommand.ts




var _GetKxVolumeCommand = class _GetKxVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "GetKxVolume", {}).n("FinspaceClient", "GetKxVolumeCommand").f(void 0, void 0).ser(se_GetKxVolumeCommand).de(de_GetKxVolumeCommand).build() {
};
__name(_GetKxVolumeCommand, "GetKxVolumeCommand");
var GetKxVolumeCommand = _GetKxVolumeCommand;

// src/commands/ListEnvironmentsCommand.ts




var _ListEnvironmentsCommand = class _ListEnvironmentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListEnvironments", {}).n("FinspaceClient", "ListEnvironmentsCommand").f(void 0, void 0).ser(se_ListEnvironmentsCommand).de(de_ListEnvironmentsCommand).build() {
};
__name(_ListEnvironmentsCommand, "ListEnvironmentsCommand");
var ListEnvironmentsCommand = _ListEnvironmentsCommand;

// src/commands/ListKxChangesetsCommand.ts




var _ListKxChangesetsCommand = class _ListKxChangesetsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxChangesets", {}).n("FinspaceClient", "ListKxChangesetsCommand").f(void 0, void 0).ser(se_ListKxChangesetsCommand).de(de_ListKxChangesetsCommand).build() {
};
__name(_ListKxChangesetsCommand, "ListKxChangesetsCommand");
var ListKxChangesetsCommand = _ListKxChangesetsCommand;

// src/commands/ListKxClusterNodesCommand.ts




var _ListKxClusterNodesCommand = class _ListKxClusterNodesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxClusterNodes", {}).n("FinspaceClient", "ListKxClusterNodesCommand").f(void 0, void 0).ser(se_ListKxClusterNodesCommand).de(de_ListKxClusterNodesCommand).build() {
};
__name(_ListKxClusterNodesCommand, "ListKxClusterNodesCommand");
var ListKxClusterNodesCommand = _ListKxClusterNodesCommand;

// src/commands/ListKxClustersCommand.ts




var _ListKxClustersCommand = class _ListKxClustersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxClusters", {}).n("FinspaceClient", "ListKxClustersCommand").f(void 0, void 0).ser(se_ListKxClustersCommand).de(de_ListKxClustersCommand).build() {
};
__name(_ListKxClustersCommand, "ListKxClustersCommand");
var ListKxClustersCommand = _ListKxClustersCommand;

// src/commands/ListKxDatabasesCommand.ts




var _ListKxDatabasesCommand = class _ListKxDatabasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxDatabases", {}).n("FinspaceClient", "ListKxDatabasesCommand").f(void 0, void 0).ser(se_ListKxDatabasesCommand).de(de_ListKxDatabasesCommand).build() {
};
__name(_ListKxDatabasesCommand, "ListKxDatabasesCommand");
var ListKxDatabasesCommand = _ListKxDatabasesCommand;

// src/commands/ListKxDataviewsCommand.ts




var _ListKxDataviewsCommand = class _ListKxDataviewsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxDataviews", {}).n("FinspaceClient", "ListKxDataviewsCommand").f(void 0, void 0).ser(se_ListKxDataviewsCommand).de(de_ListKxDataviewsCommand).build() {
};
__name(_ListKxDataviewsCommand, "ListKxDataviewsCommand");
var ListKxDataviewsCommand = _ListKxDataviewsCommand;

// src/commands/ListKxEnvironmentsCommand.ts




var _ListKxEnvironmentsCommand = class _ListKxEnvironmentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxEnvironments", {}).n("FinspaceClient", "ListKxEnvironmentsCommand").f(void 0, void 0).ser(se_ListKxEnvironmentsCommand).de(de_ListKxEnvironmentsCommand).build() {
};
__name(_ListKxEnvironmentsCommand, "ListKxEnvironmentsCommand");
var ListKxEnvironmentsCommand = _ListKxEnvironmentsCommand;

// src/commands/ListKxScalingGroupsCommand.ts




var _ListKxScalingGroupsCommand = class _ListKxScalingGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxScalingGroups", {}).n("FinspaceClient", "ListKxScalingGroupsCommand").f(void 0, void 0).ser(se_ListKxScalingGroupsCommand).de(de_ListKxScalingGroupsCommand).build() {
};
__name(_ListKxScalingGroupsCommand, "ListKxScalingGroupsCommand");
var ListKxScalingGroupsCommand = _ListKxScalingGroupsCommand;

// src/commands/ListKxUsersCommand.ts




var _ListKxUsersCommand = class _ListKxUsersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxUsers", {}).n("FinspaceClient", "ListKxUsersCommand").f(void 0, void 0).ser(se_ListKxUsersCommand).de(de_ListKxUsersCommand).build() {
};
__name(_ListKxUsersCommand, "ListKxUsersCommand");
var ListKxUsersCommand = _ListKxUsersCommand;

// src/commands/ListKxVolumesCommand.ts




var _ListKxVolumesCommand = class _ListKxVolumesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListKxVolumes", {}).n("FinspaceClient", "ListKxVolumesCommand").f(void 0, void 0).ser(se_ListKxVolumesCommand).de(de_ListKxVolumesCommand).build() {
};
__name(_ListKxVolumesCommand, "ListKxVolumesCommand");
var ListKxVolumesCommand = _ListKxVolumesCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "ListTagsForResource", {}).n("FinspaceClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "TagResource", {}).n("FinspaceClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UntagResource", {}).n("FinspaceClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateEnvironmentCommand.ts




var _UpdateEnvironmentCommand = class _UpdateEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateEnvironment", {}).n("FinspaceClient", "UpdateEnvironmentCommand").f(void 0, void 0).ser(se_UpdateEnvironmentCommand).de(de_UpdateEnvironmentCommand).build() {
};
__name(_UpdateEnvironmentCommand, "UpdateEnvironmentCommand");
var UpdateEnvironmentCommand = _UpdateEnvironmentCommand;

// src/commands/UpdateKxClusterCodeConfigurationCommand.ts




var _UpdateKxClusterCodeConfigurationCommand = class _UpdateKxClusterCodeConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxClusterCodeConfiguration", {}).n("FinspaceClient", "UpdateKxClusterCodeConfigurationCommand").f(void 0, void 0).ser(se_UpdateKxClusterCodeConfigurationCommand).de(de_UpdateKxClusterCodeConfigurationCommand).build() {
};
__name(_UpdateKxClusterCodeConfigurationCommand, "UpdateKxClusterCodeConfigurationCommand");
var UpdateKxClusterCodeConfigurationCommand = _UpdateKxClusterCodeConfigurationCommand;

// src/commands/UpdateKxClusterDatabasesCommand.ts




var _UpdateKxClusterDatabasesCommand = class _UpdateKxClusterDatabasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxClusterDatabases", {}).n("FinspaceClient", "UpdateKxClusterDatabasesCommand").f(void 0, void 0).ser(se_UpdateKxClusterDatabasesCommand).de(de_UpdateKxClusterDatabasesCommand).build() {
};
__name(_UpdateKxClusterDatabasesCommand, "UpdateKxClusterDatabasesCommand");
var UpdateKxClusterDatabasesCommand = _UpdateKxClusterDatabasesCommand;

// src/commands/UpdateKxDatabaseCommand.ts




var _UpdateKxDatabaseCommand = class _UpdateKxDatabaseCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxDatabase", {}).n("FinspaceClient", "UpdateKxDatabaseCommand").f(void 0, void 0).ser(se_UpdateKxDatabaseCommand).de(de_UpdateKxDatabaseCommand).build() {
};
__name(_UpdateKxDatabaseCommand, "UpdateKxDatabaseCommand");
var UpdateKxDatabaseCommand = _UpdateKxDatabaseCommand;

// src/commands/UpdateKxDataviewCommand.ts




var _UpdateKxDataviewCommand = class _UpdateKxDataviewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxDataview", {}).n("FinspaceClient", "UpdateKxDataviewCommand").f(void 0, void 0).ser(se_UpdateKxDataviewCommand).de(de_UpdateKxDataviewCommand).build() {
};
__name(_UpdateKxDataviewCommand, "UpdateKxDataviewCommand");
var UpdateKxDataviewCommand = _UpdateKxDataviewCommand;

// src/commands/UpdateKxEnvironmentCommand.ts




var _UpdateKxEnvironmentCommand = class _UpdateKxEnvironmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxEnvironment", {}).n("FinspaceClient", "UpdateKxEnvironmentCommand").f(void 0, void 0).ser(se_UpdateKxEnvironmentCommand).de(de_UpdateKxEnvironmentCommand).build() {
};
__name(_UpdateKxEnvironmentCommand, "UpdateKxEnvironmentCommand");
var UpdateKxEnvironmentCommand = _UpdateKxEnvironmentCommand;

// src/commands/UpdateKxEnvironmentNetworkCommand.ts




var _UpdateKxEnvironmentNetworkCommand = class _UpdateKxEnvironmentNetworkCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxEnvironmentNetwork", {}).n("FinspaceClient", "UpdateKxEnvironmentNetworkCommand").f(void 0, void 0).ser(se_UpdateKxEnvironmentNetworkCommand).de(de_UpdateKxEnvironmentNetworkCommand).build() {
};
__name(_UpdateKxEnvironmentNetworkCommand, "UpdateKxEnvironmentNetworkCommand");
var UpdateKxEnvironmentNetworkCommand = _UpdateKxEnvironmentNetworkCommand;

// src/commands/UpdateKxUserCommand.ts




var _UpdateKxUserCommand = class _UpdateKxUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxUser", {}).n("FinspaceClient", "UpdateKxUserCommand").f(void 0, void 0).ser(se_UpdateKxUserCommand).de(de_UpdateKxUserCommand).build() {
};
__name(_UpdateKxUserCommand, "UpdateKxUserCommand");
var UpdateKxUserCommand = _UpdateKxUserCommand;

// src/commands/UpdateKxVolumeCommand.ts




var _UpdateKxVolumeCommand = class _UpdateKxVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSHabaneroManagementService", "UpdateKxVolume", {}).n("FinspaceClient", "UpdateKxVolumeCommand").f(void 0, void 0).ser(se_UpdateKxVolumeCommand).de(de_UpdateKxVolumeCommand).build() {
};
__name(_UpdateKxVolumeCommand, "UpdateKxVolumeCommand");
var UpdateKxVolumeCommand = _UpdateKxVolumeCommand;

// src/Finspace.ts
var commands = {
  CreateEnvironmentCommand,
  CreateKxChangesetCommand,
  CreateKxClusterCommand,
  CreateKxDatabaseCommand,
  CreateKxDataviewCommand,
  CreateKxEnvironmentCommand,
  CreateKxScalingGroupCommand,
  CreateKxUserCommand,
  CreateKxVolumeCommand,
  DeleteEnvironmentCommand,
  DeleteKxClusterCommand,
  DeleteKxDatabaseCommand,
  DeleteKxDataviewCommand,
  DeleteKxEnvironmentCommand,
  DeleteKxScalingGroupCommand,
  DeleteKxUserCommand,
  DeleteKxVolumeCommand,
  GetEnvironmentCommand,
  GetKxChangesetCommand,
  GetKxClusterCommand,
  GetKxConnectionStringCommand,
  GetKxDatabaseCommand,
  GetKxDataviewCommand,
  GetKxEnvironmentCommand,
  GetKxScalingGroupCommand,
  GetKxUserCommand,
  GetKxVolumeCommand,
  ListEnvironmentsCommand,
  ListKxChangesetsCommand,
  ListKxClusterNodesCommand,
  ListKxClustersCommand,
  ListKxDatabasesCommand,
  ListKxDataviewsCommand,
  ListKxEnvironmentsCommand,
  ListKxScalingGroupsCommand,
  ListKxUsersCommand,
  ListKxVolumesCommand,
  ListTagsForResourceCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateEnvironmentCommand,
  UpdateKxClusterCodeConfigurationCommand,
  UpdateKxClusterDatabasesCommand,
  UpdateKxDatabaseCommand,
  UpdateKxDataviewCommand,
  UpdateKxEnvironmentCommand,
  UpdateKxEnvironmentNetworkCommand,
  UpdateKxUserCommand,
  UpdateKxVolumeCommand
};
var _Finspace = class _Finspace extends FinspaceClient {
};
__name(_Finspace, "Finspace");
var Finspace = _Finspace;
(0, import_smithy_client.createAggregatedClient)(commands, Finspace);

// src/pagination/ListKxChangesetsPaginator.ts

var paginateListKxChangesets = (0, import_core.createPaginator)(FinspaceClient, ListKxChangesetsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKxClusterNodesPaginator.ts

var paginateListKxClusterNodes = (0, import_core.createPaginator)(FinspaceClient, ListKxClusterNodesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKxDatabasesPaginator.ts

var paginateListKxDatabases = (0, import_core.createPaginator)(FinspaceClient, ListKxDatabasesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKxDataviewsPaginator.ts

var paginateListKxDataviews = (0, import_core.createPaginator)(FinspaceClient, ListKxDataviewsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKxEnvironmentsPaginator.ts

var paginateListKxEnvironments = (0, import_core.createPaginator)(FinspaceClient, ListKxEnvironmentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListKxScalingGroupsPaginator.ts

var paginateListKxScalingGroups = (0, import_core.createPaginator)(FinspaceClient, ListKxScalingGroupsCommand, "nextToken", "nextToken", "maxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  FinspaceServiceException,
  __Client,
  FinspaceClient,
  Finspace,
  $Command,
  CreateEnvironmentCommand,
  CreateKxChangesetCommand,
  CreateKxClusterCommand,
  CreateKxDatabaseCommand,
  CreateKxDataviewCommand,
  CreateKxEnvironmentCommand,
  CreateKxScalingGroupCommand,
  CreateKxUserCommand,
  CreateKxVolumeCommand,
  DeleteEnvironmentCommand,
  DeleteKxClusterCommand,
  DeleteKxDatabaseCommand,
  DeleteKxDataviewCommand,
  DeleteKxEnvironmentCommand,
  DeleteKxScalingGroupCommand,
  DeleteKxUserCommand,
  DeleteKxVolumeCommand,
  GetEnvironmentCommand,
  GetKxChangesetCommand,
  GetKxClusterCommand,
  GetKxConnectionStringCommand,
  GetKxDatabaseCommand,
  GetKxDataviewCommand,
  GetKxEnvironmentCommand,
  GetKxScalingGroupCommand,
  GetKxUserCommand,
  GetKxVolumeCommand,
  ListEnvironmentsCommand,
  ListKxChangesetsCommand,
  ListKxClusterNodesCommand,
  ListKxClustersCommand,
  ListKxDatabasesCommand,
  ListKxDataviewsCommand,
  ListKxEnvironmentsCommand,
  ListKxScalingGroupsCommand,
  ListKxUsersCommand,
  ListKxVolumesCommand,
  ListTagsForResourceCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateEnvironmentCommand,
  UpdateKxClusterCodeConfigurationCommand,
  UpdateKxClusterDatabasesCommand,
  UpdateKxDatabaseCommand,
  UpdateKxDataviewCommand,
  UpdateKxEnvironmentCommand,
  UpdateKxEnvironmentNetworkCommand,
  UpdateKxUserCommand,
  UpdateKxVolumeCommand,
  paginateListKxChangesets,
  paginateListKxClusterNodes,
  paginateListKxDatabases,
  paginateListKxDataviews,
  paginateListKxEnvironments,
  paginateListKxScalingGroups,
  AccessDeniedException,
  AutoScalingMetric,
  FederationMode,
  InternalServerException,
  LimitExceededException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  ConflictException,
  ChangeType,
  ErrorDetails,
  ChangesetStatus,
  ResourceNotFoundException,
  KxAzMode,
  KxClusterType,
  KxSavedownStorageType,
  IPAddressType,
  KxClusterStatus,
  VolumeType,
  ResourceAlreadyExistsException,
  KxDataviewStatus,
  EnvironmentStatus,
  KxScalingGroupStatus,
  KxNAS1Type,
  KxVolumeType,
  KxVolumeStatus,
  DnsStatus,
  TgwStatus,
  RuleAction,
  InvalidRequestException,
  KxClusterCodeDeploymentStrategy,
  KxDeploymentStrategy,
  SuperuserParametersFilterSensitiveLog,
  CreateEnvironmentRequestFilterSensitiveLog,
  GetKxConnectionStringResponseFilterSensitiveLog
});

