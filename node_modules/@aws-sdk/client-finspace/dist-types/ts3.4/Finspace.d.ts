import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateEnvironmentCommandInput,
  CreateEnvironmentCommandOutput,
} from "./commands/CreateEnvironmentCommand";
import {
  CreateKxChangesetCommandInput,
  CreateKxChangesetCommandOutput,
} from "./commands/CreateKxChangesetCommand";
import {
  CreateKxClusterCommandInput,
  CreateKxClusterCommandOutput,
} from "./commands/CreateKxClusterCommand";
import {
  CreateKxDatabaseCommandInput,
  CreateKxDatabaseCommandOutput,
} from "./commands/CreateKxDatabaseCommand";
import {
  CreateKxDataviewCommandInput,
  CreateKxDataviewCommandOutput,
} from "./commands/CreateKxDataviewCommand";
import {
  CreateKxEnvironmentCommandInput,
  CreateKxEnvironmentCommandOutput,
} from "./commands/CreateKxEnvironmentCommand";
import {
  CreateKxScalingGroupCommandInput,
  CreateKxScalingGroupCommandOutput,
} from "./commands/CreateKxScalingGroupCommand";
import {
  CreateKxUserCommandInput,
  CreateKxUserCommandOutput,
} from "./commands/CreateKxUserCommand";
import {
  CreateKxVolumeCommandInput,
  CreateKxVolumeCommandOutput,
} from "./commands/CreateKxVolumeCommand";
import {
  DeleteEnvironmentCommandInput,
  DeleteEnvironmentCommandOutput,
} from "./commands/DeleteEnvironmentCommand";
import {
  DeleteKxClusterCommandInput,
  DeleteKxClusterCommandOutput,
} from "./commands/DeleteKxClusterCommand";
import {
  DeleteKxClusterNodeCommandInput,
  DeleteKxClusterNodeCommandOutput,
} from "./commands/DeleteKxClusterNodeCommand";
import {
  DeleteKxDatabaseCommandInput,
  DeleteKxDatabaseCommandOutput,
} from "./commands/DeleteKxDatabaseCommand";
import {
  DeleteKxDataviewCommandInput,
  DeleteKxDataviewCommandOutput,
} from "./commands/DeleteKxDataviewCommand";
import {
  DeleteKxEnvironmentCommandInput,
  DeleteKxEnvironmentCommandOutput,
} from "./commands/DeleteKxEnvironmentCommand";
import {
  DeleteKxScalingGroupCommandInput,
  DeleteKxScalingGroupCommandOutput,
} from "./commands/DeleteKxScalingGroupCommand";
import {
  DeleteKxUserCommandInput,
  DeleteKxUserCommandOutput,
} from "./commands/DeleteKxUserCommand";
import {
  DeleteKxVolumeCommandInput,
  DeleteKxVolumeCommandOutput,
} from "./commands/DeleteKxVolumeCommand";
import {
  GetEnvironmentCommandInput,
  GetEnvironmentCommandOutput,
} from "./commands/GetEnvironmentCommand";
import {
  GetKxChangesetCommandInput,
  GetKxChangesetCommandOutput,
} from "./commands/GetKxChangesetCommand";
import {
  GetKxClusterCommandInput,
  GetKxClusterCommandOutput,
} from "./commands/GetKxClusterCommand";
import {
  GetKxConnectionStringCommandInput,
  GetKxConnectionStringCommandOutput,
} from "./commands/GetKxConnectionStringCommand";
import {
  GetKxDatabaseCommandInput,
  GetKxDatabaseCommandOutput,
} from "./commands/GetKxDatabaseCommand";
import {
  GetKxDataviewCommandInput,
  GetKxDataviewCommandOutput,
} from "./commands/GetKxDataviewCommand";
import {
  GetKxEnvironmentCommandInput,
  GetKxEnvironmentCommandOutput,
} from "./commands/GetKxEnvironmentCommand";
import {
  GetKxScalingGroupCommandInput,
  GetKxScalingGroupCommandOutput,
} from "./commands/GetKxScalingGroupCommand";
import {
  GetKxUserCommandInput,
  GetKxUserCommandOutput,
} from "./commands/GetKxUserCommand";
import {
  GetKxVolumeCommandInput,
  GetKxVolumeCommandOutput,
} from "./commands/GetKxVolumeCommand";
import {
  ListEnvironmentsCommandInput,
  ListEnvironmentsCommandOutput,
} from "./commands/ListEnvironmentsCommand";
import {
  ListKxChangesetsCommandInput,
  ListKxChangesetsCommandOutput,
} from "./commands/ListKxChangesetsCommand";
import {
  ListKxClusterNodesCommandInput,
  ListKxClusterNodesCommandOutput,
} from "./commands/ListKxClusterNodesCommand";
import {
  ListKxClustersCommandInput,
  ListKxClustersCommandOutput,
} from "./commands/ListKxClustersCommand";
import {
  ListKxDatabasesCommandInput,
  ListKxDatabasesCommandOutput,
} from "./commands/ListKxDatabasesCommand";
import {
  ListKxDataviewsCommandInput,
  ListKxDataviewsCommandOutput,
} from "./commands/ListKxDataviewsCommand";
import {
  ListKxEnvironmentsCommandInput,
  ListKxEnvironmentsCommandOutput,
} from "./commands/ListKxEnvironmentsCommand";
import {
  ListKxScalingGroupsCommandInput,
  ListKxScalingGroupsCommandOutput,
} from "./commands/ListKxScalingGroupsCommand";
import {
  ListKxUsersCommandInput,
  ListKxUsersCommandOutput,
} from "./commands/ListKxUsersCommand";
import {
  ListKxVolumesCommandInput,
  ListKxVolumesCommandOutput,
} from "./commands/ListKxVolumesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateEnvironmentCommandInput,
  UpdateEnvironmentCommandOutput,
} from "./commands/UpdateEnvironmentCommand";
import {
  UpdateKxClusterCodeConfigurationCommandInput,
  UpdateKxClusterCodeConfigurationCommandOutput,
} from "./commands/UpdateKxClusterCodeConfigurationCommand";
import {
  UpdateKxClusterDatabasesCommandInput,
  UpdateKxClusterDatabasesCommandOutput,
} from "./commands/UpdateKxClusterDatabasesCommand";
import {
  UpdateKxDatabaseCommandInput,
  UpdateKxDatabaseCommandOutput,
} from "./commands/UpdateKxDatabaseCommand";
import {
  UpdateKxDataviewCommandInput,
  UpdateKxDataviewCommandOutput,
} from "./commands/UpdateKxDataviewCommand";
import {
  UpdateKxEnvironmentCommandInput,
  UpdateKxEnvironmentCommandOutput,
} from "./commands/UpdateKxEnvironmentCommand";
import {
  UpdateKxEnvironmentNetworkCommandInput,
  UpdateKxEnvironmentNetworkCommandOutput,
} from "./commands/UpdateKxEnvironmentNetworkCommand";
import {
  UpdateKxUserCommandInput,
  UpdateKxUserCommandOutput,
} from "./commands/UpdateKxUserCommand";
import {
  UpdateKxVolumeCommandInput,
  UpdateKxVolumeCommandOutput,
} from "./commands/UpdateKxVolumeCommand";
import { FinspaceClient } from "./FinspaceClient";
export interface Finspace {
  createEnvironment(
    args: CreateEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateEnvironmentCommandOutput>;
  createEnvironment(
    args: CreateEnvironmentCommandInput,
    cb: (err: any, data?: CreateEnvironmentCommandOutput) => void
  ): void;
  createEnvironment(
    args: CreateEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateEnvironmentCommandOutput) => void
  ): void;
  createKxChangeset(
    args: CreateKxChangesetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxChangesetCommandOutput>;
  createKxChangeset(
    args: CreateKxChangesetCommandInput,
    cb: (err: any, data?: CreateKxChangesetCommandOutput) => void
  ): void;
  createKxChangeset(
    args: CreateKxChangesetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxChangesetCommandOutput) => void
  ): void;
  createKxCluster(
    args: CreateKxClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxClusterCommandOutput>;
  createKxCluster(
    args: CreateKxClusterCommandInput,
    cb: (err: any, data?: CreateKxClusterCommandOutput) => void
  ): void;
  createKxCluster(
    args: CreateKxClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxClusterCommandOutput) => void
  ): void;
  createKxDatabase(
    args: CreateKxDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxDatabaseCommandOutput>;
  createKxDatabase(
    args: CreateKxDatabaseCommandInput,
    cb: (err: any, data?: CreateKxDatabaseCommandOutput) => void
  ): void;
  createKxDatabase(
    args: CreateKxDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxDatabaseCommandOutput) => void
  ): void;
  createKxDataview(
    args: CreateKxDataviewCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxDataviewCommandOutput>;
  createKxDataview(
    args: CreateKxDataviewCommandInput,
    cb: (err: any, data?: CreateKxDataviewCommandOutput) => void
  ): void;
  createKxDataview(
    args: CreateKxDataviewCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxDataviewCommandOutput) => void
  ): void;
  createKxEnvironment(
    args: CreateKxEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxEnvironmentCommandOutput>;
  createKxEnvironment(
    args: CreateKxEnvironmentCommandInput,
    cb: (err: any, data?: CreateKxEnvironmentCommandOutput) => void
  ): void;
  createKxEnvironment(
    args: CreateKxEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxEnvironmentCommandOutput) => void
  ): void;
  createKxScalingGroup(
    args: CreateKxScalingGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxScalingGroupCommandOutput>;
  createKxScalingGroup(
    args: CreateKxScalingGroupCommandInput,
    cb: (err: any, data?: CreateKxScalingGroupCommandOutput) => void
  ): void;
  createKxScalingGroup(
    args: CreateKxScalingGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxScalingGroupCommandOutput) => void
  ): void;
  createKxUser(
    args: CreateKxUserCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxUserCommandOutput>;
  createKxUser(
    args: CreateKxUserCommandInput,
    cb: (err: any, data?: CreateKxUserCommandOutput) => void
  ): void;
  createKxUser(
    args: CreateKxUserCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxUserCommandOutput) => void
  ): void;
  createKxVolume(
    args: CreateKxVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKxVolumeCommandOutput>;
  createKxVolume(
    args: CreateKxVolumeCommandInput,
    cb: (err: any, data?: CreateKxVolumeCommandOutput) => void
  ): void;
  createKxVolume(
    args: CreateKxVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKxVolumeCommandOutput) => void
  ): void;
  deleteEnvironment(
    args: DeleteEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEnvironmentCommandOutput>;
  deleteEnvironment(
    args: DeleteEnvironmentCommandInput,
    cb: (err: any, data?: DeleteEnvironmentCommandOutput) => void
  ): void;
  deleteEnvironment(
    args: DeleteEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEnvironmentCommandOutput) => void
  ): void;
  deleteKxCluster(
    args: DeleteKxClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxClusterCommandOutput>;
  deleteKxCluster(
    args: DeleteKxClusterCommandInput,
    cb: (err: any, data?: DeleteKxClusterCommandOutput) => void
  ): void;
  deleteKxCluster(
    args: DeleteKxClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxClusterCommandOutput) => void
  ): void;
  deleteKxClusterNode(
    args: DeleteKxClusterNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxClusterNodeCommandOutput>;
  deleteKxClusterNode(
    args: DeleteKxClusterNodeCommandInput,
    cb: (err: any, data?: DeleteKxClusterNodeCommandOutput) => void
  ): void;
  deleteKxClusterNode(
    args: DeleteKxClusterNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxClusterNodeCommandOutput) => void
  ): void;
  deleteKxDatabase(
    args: DeleteKxDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxDatabaseCommandOutput>;
  deleteKxDatabase(
    args: DeleteKxDatabaseCommandInput,
    cb: (err: any, data?: DeleteKxDatabaseCommandOutput) => void
  ): void;
  deleteKxDatabase(
    args: DeleteKxDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxDatabaseCommandOutput) => void
  ): void;
  deleteKxDataview(
    args: DeleteKxDataviewCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxDataviewCommandOutput>;
  deleteKxDataview(
    args: DeleteKxDataviewCommandInput,
    cb: (err: any, data?: DeleteKxDataviewCommandOutput) => void
  ): void;
  deleteKxDataview(
    args: DeleteKxDataviewCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxDataviewCommandOutput) => void
  ): void;
  deleteKxEnvironment(
    args: DeleteKxEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxEnvironmentCommandOutput>;
  deleteKxEnvironment(
    args: DeleteKxEnvironmentCommandInput,
    cb: (err: any, data?: DeleteKxEnvironmentCommandOutput) => void
  ): void;
  deleteKxEnvironment(
    args: DeleteKxEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxEnvironmentCommandOutput) => void
  ): void;
  deleteKxScalingGroup(
    args: DeleteKxScalingGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxScalingGroupCommandOutput>;
  deleteKxScalingGroup(
    args: DeleteKxScalingGroupCommandInput,
    cb: (err: any, data?: DeleteKxScalingGroupCommandOutput) => void
  ): void;
  deleteKxScalingGroup(
    args: DeleteKxScalingGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxScalingGroupCommandOutput) => void
  ): void;
  deleteKxUser(
    args: DeleteKxUserCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxUserCommandOutput>;
  deleteKxUser(
    args: DeleteKxUserCommandInput,
    cb: (err: any, data?: DeleteKxUserCommandOutput) => void
  ): void;
  deleteKxUser(
    args: DeleteKxUserCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxUserCommandOutput) => void
  ): void;
  deleteKxVolume(
    args: DeleteKxVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKxVolumeCommandOutput>;
  deleteKxVolume(
    args: DeleteKxVolumeCommandInput,
    cb: (err: any, data?: DeleteKxVolumeCommandOutput) => void
  ): void;
  deleteKxVolume(
    args: DeleteKxVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKxVolumeCommandOutput) => void
  ): void;
  getEnvironment(
    args: GetEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEnvironmentCommandOutput>;
  getEnvironment(
    args: GetEnvironmentCommandInput,
    cb: (err: any, data?: GetEnvironmentCommandOutput) => void
  ): void;
  getEnvironment(
    args: GetEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEnvironmentCommandOutput) => void
  ): void;
  getKxChangeset(
    args: GetKxChangesetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxChangesetCommandOutput>;
  getKxChangeset(
    args: GetKxChangesetCommandInput,
    cb: (err: any, data?: GetKxChangesetCommandOutput) => void
  ): void;
  getKxChangeset(
    args: GetKxChangesetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxChangesetCommandOutput) => void
  ): void;
  getKxCluster(
    args: GetKxClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxClusterCommandOutput>;
  getKxCluster(
    args: GetKxClusterCommandInput,
    cb: (err: any, data?: GetKxClusterCommandOutput) => void
  ): void;
  getKxCluster(
    args: GetKxClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxClusterCommandOutput) => void
  ): void;
  getKxConnectionString(
    args: GetKxConnectionStringCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxConnectionStringCommandOutput>;
  getKxConnectionString(
    args: GetKxConnectionStringCommandInput,
    cb: (err: any, data?: GetKxConnectionStringCommandOutput) => void
  ): void;
  getKxConnectionString(
    args: GetKxConnectionStringCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxConnectionStringCommandOutput) => void
  ): void;
  getKxDatabase(
    args: GetKxDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxDatabaseCommandOutput>;
  getKxDatabase(
    args: GetKxDatabaseCommandInput,
    cb: (err: any, data?: GetKxDatabaseCommandOutput) => void
  ): void;
  getKxDatabase(
    args: GetKxDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxDatabaseCommandOutput) => void
  ): void;
  getKxDataview(
    args: GetKxDataviewCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxDataviewCommandOutput>;
  getKxDataview(
    args: GetKxDataviewCommandInput,
    cb: (err: any, data?: GetKxDataviewCommandOutput) => void
  ): void;
  getKxDataview(
    args: GetKxDataviewCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxDataviewCommandOutput) => void
  ): void;
  getKxEnvironment(
    args: GetKxEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxEnvironmentCommandOutput>;
  getKxEnvironment(
    args: GetKxEnvironmentCommandInput,
    cb: (err: any, data?: GetKxEnvironmentCommandOutput) => void
  ): void;
  getKxEnvironment(
    args: GetKxEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxEnvironmentCommandOutput) => void
  ): void;
  getKxScalingGroup(
    args: GetKxScalingGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxScalingGroupCommandOutput>;
  getKxScalingGroup(
    args: GetKxScalingGroupCommandInput,
    cb: (err: any, data?: GetKxScalingGroupCommandOutput) => void
  ): void;
  getKxScalingGroup(
    args: GetKxScalingGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxScalingGroupCommandOutput) => void
  ): void;
  getKxUser(
    args: GetKxUserCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxUserCommandOutput>;
  getKxUser(
    args: GetKxUserCommandInput,
    cb: (err: any, data?: GetKxUserCommandOutput) => void
  ): void;
  getKxUser(
    args: GetKxUserCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxUserCommandOutput) => void
  ): void;
  getKxVolume(
    args: GetKxVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKxVolumeCommandOutput>;
  getKxVolume(
    args: GetKxVolumeCommandInput,
    cb: (err: any, data?: GetKxVolumeCommandOutput) => void
  ): void;
  getKxVolume(
    args: GetKxVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKxVolumeCommandOutput) => void
  ): void;
  listEnvironments(): Promise<ListEnvironmentsCommandOutput>;
  listEnvironments(
    args: ListEnvironmentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListEnvironmentsCommandOutput>;
  listEnvironments(
    args: ListEnvironmentsCommandInput,
    cb: (err: any, data?: ListEnvironmentsCommandOutput) => void
  ): void;
  listEnvironments(
    args: ListEnvironmentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListEnvironmentsCommandOutput) => void
  ): void;
  listKxChangesets(
    args: ListKxChangesetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxChangesetsCommandOutput>;
  listKxChangesets(
    args: ListKxChangesetsCommandInput,
    cb: (err: any, data?: ListKxChangesetsCommandOutput) => void
  ): void;
  listKxChangesets(
    args: ListKxChangesetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxChangesetsCommandOutput) => void
  ): void;
  listKxClusterNodes(
    args: ListKxClusterNodesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxClusterNodesCommandOutput>;
  listKxClusterNodes(
    args: ListKxClusterNodesCommandInput,
    cb: (err: any, data?: ListKxClusterNodesCommandOutput) => void
  ): void;
  listKxClusterNodes(
    args: ListKxClusterNodesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxClusterNodesCommandOutput) => void
  ): void;
  listKxClusters(
    args: ListKxClustersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxClustersCommandOutput>;
  listKxClusters(
    args: ListKxClustersCommandInput,
    cb: (err: any, data?: ListKxClustersCommandOutput) => void
  ): void;
  listKxClusters(
    args: ListKxClustersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxClustersCommandOutput) => void
  ): void;
  listKxDatabases(
    args: ListKxDatabasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxDatabasesCommandOutput>;
  listKxDatabases(
    args: ListKxDatabasesCommandInput,
    cb: (err: any, data?: ListKxDatabasesCommandOutput) => void
  ): void;
  listKxDatabases(
    args: ListKxDatabasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxDatabasesCommandOutput) => void
  ): void;
  listKxDataviews(
    args: ListKxDataviewsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxDataviewsCommandOutput>;
  listKxDataviews(
    args: ListKxDataviewsCommandInput,
    cb: (err: any, data?: ListKxDataviewsCommandOutput) => void
  ): void;
  listKxDataviews(
    args: ListKxDataviewsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxDataviewsCommandOutput) => void
  ): void;
  listKxEnvironments(): Promise<ListKxEnvironmentsCommandOutput>;
  listKxEnvironments(
    args: ListKxEnvironmentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxEnvironmentsCommandOutput>;
  listKxEnvironments(
    args: ListKxEnvironmentsCommandInput,
    cb: (err: any, data?: ListKxEnvironmentsCommandOutput) => void
  ): void;
  listKxEnvironments(
    args: ListKxEnvironmentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxEnvironmentsCommandOutput) => void
  ): void;
  listKxScalingGroups(
    args: ListKxScalingGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxScalingGroupsCommandOutput>;
  listKxScalingGroups(
    args: ListKxScalingGroupsCommandInput,
    cb: (err: any, data?: ListKxScalingGroupsCommandOutput) => void
  ): void;
  listKxScalingGroups(
    args: ListKxScalingGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxScalingGroupsCommandOutput) => void
  ): void;
  listKxUsers(
    args: ListKxUsersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxUsersCommandOutput>;
  listKxUsers(
    args: ListKxUsersCommandInput,
    cb: (err: any, data?: ListKxUsersCommandOutput) => void
  ): void;
  listKxUsers(
    args: ListKxUsersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxUsersCommandOutput) => void
  ): void;
  listKxVolumes(
    args: ListKxVolumesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKxVolumesCommandOutput>;
  listKxVolumes(
    args: ListKxVolumesCommandInput,
    cb: (err: any, data?: ListKxVolumesCommandOutput) => void
  ): void;
  listKxVolumes(
    args: ListKxVolumesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKxVolumesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateEnvironment(
    args: UpdateEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateEnvironmentCommandOutput>;
  updateEnvironment(
    args: UpdateEnvironmentCommandInput,
    cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void
  ): void;
  updateEnvironment(
    args: UpdateEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateEnvironmentCommandOutput) => void
  ): void;
  updateKxClusterCodeConfiguration(
    args: UpdateKxClusterCodeConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxClusterCodeConfigurationCommandOutput>;
  updateKxClusterCodeConfiguration(
    args: UpdateKxClusterCodeConfigurationCommandInput,
    cb: (err: any, data?: UpdateKxClusterCodeConfigurationCommandOutput) => void
  ): void;
  updateKxClusterCodeConfiguration(
    args: UpdateKxClusterCodeConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxClusterCodeConfigurationCommandOutput) => void
  ): void;
  updateKxClusterDatabases(
    args: UpdateKxClusterDatabasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxClusterDatabasesCommandOutput>;
  updateKxClusterDatabases(
    args: UpdateKxClusterDatabasesCommandInput,
    cb: (err: any, data?: UpdateKxClusterDatabasesCommandOutput) => void
  ): void;
  updateKxClusterDatabases(
    args: UpdateKxClusterDatabasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxClusterDatabasesCommandOutput) => void
  ): void;
  updateKxDatabase(
    args: UpdateKxDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxDatabaseCommandOutput>;
  updateKxDatabase(
    args: UpdateKxDatabaseCommandInput,
    cb: (err: any, data?: UpdateKxDatabaseCommandOutput) => void
  ): void;
  updateKxDatabase(
    args: UpdateKxDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxDatabaseCommandOutput) => void
  ): void;
  updateKxDataview(
    args: UpdateKxDataviewCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxDataviewCommandOutput>;
  updateKxDataview(
    args: UpdateKxDataviewCommandInput,
    cb: (err: any, data?: UpdateKxDataviewCommandOutput) => void
  ): void;
  updateKxDataview(
    args: UpdateKxDataviewCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxDataviewCommandOutput) => void
  ): void;
  updateKxEnvironment(
    args: UpdateKxEnvironmentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxEnvironmentCommandOutput>;
  updateKxEnvironment(
    args: UpdateKxEnvironmentCommandInput,
    cb: (err: any, data?: UpdateKxEnvironmentCommandOutput) => void
  ): void;
  updateKxEnvironment(
    args: UpdateKxEnvironmentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxEnvironmentCommandOutput) => void
  ): void;
  updateKxEnvironmentNetwork(
    args: UpdateKxEnvironmentNetworkCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxEnvironmentNetworkCommandOutput>;
  updateKxEnvironmentNetwork(
    args: UpdateKxEnvironmentNetworkCommandInput,
    cb: (err: any, data?: UpdateKxEnvironmentNetworkCommandOutput) => void
  ): void;
  updateKxEnvironmentNetwork(
    args: UpdateKxEnvironmentNetworkCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxEnvironmentNetworkCommandOutput) => void
  ): void;
  updateKxUser(
    args: UpdateKxUserCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxUserCommandOutput>;
  updateKxUser(
    args: UpdateKxUserCommandInput,
    cb: (err: any, data?: UpdateKxUserCommandOutput) => void
  ): void;
  updateKxUser(
    args: UpdateKxUserCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxUserCommandOutput) => void
  ): void;
  updateKxVolume(
    args: UpdateKxVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKxVolumeCommandOutput>;
  updateKxVolume(
    args: UpdateKxVolumeCommandInput,
    cb: (err: any, data?: UpdateKxVolumeCommandOutput) => void
  ): void;
  updateKxVolume(
    args: UpdateKxVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKxVolumeCommandOutput) => void
  ): void;
}
export declare class Finspace extends FinspaceClient implements Finspace {}
