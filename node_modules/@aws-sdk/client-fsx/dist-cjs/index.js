"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ActiveDirectoryError: () => ActiveDirectoryError,
  ActiveDirectoryErrorType: () => ActiveDirectoryErrorType,
  AdministrativeActionFilterSensitiveLog: () => AdministrativeActionFilterSensitiveLog,
  AdministrativeActionType: () => AdministrativeActionType,
  AliasLifecycle: () => AliasLifecycle,
  AssociateFileSystemAliasesCommand: () => AssociateFileSystemAliasesCommand,
  AutoImportPolicyType: () => AutoImportPolicyType,
  AutocommitPeriodType: () => AutocommitPeriodType,
  BackupBeingCopied: () => BackupBeingCopied,
  BackupFilterSensitiveLog: () => BackupFilterSensitiveLog,
  BackupInProgress: () => BackupInProgress,
  BackupLifecycle: () => BackupLifecycle,
  BackupNotFound: () => BackupNotFound,
  BackupRestoring: () => BackupRestoring,
  BackupType: () => BackupType,
  BadRequest: () => BadRequest,
  CancelDataRepositoryTaskCommand: () => CancelDataRepositoryTaskCommand,
  CopyBackupCommand: () => CopyBackupCommand,
  CopyBackupResponseFilterSensitiveLog: () => CopyBackupResponseFilterSensitiveLog,
  CopySnapshotAndUpdateVolumeCommand: () => CopySnapshotAndUpdateVolumeCommand,
  CopySnapshotAndUpdateVolumeResponseFilterSensitiveLog: () => CopySnapshotAndUpdateVolumeResponseFilterSensitiveLog,
  CreateBackupCommand: () => CreateBackupCommand,
  CreateBackupResponseFilterSensitiveLog: () => CreateBackupResponseFilterSensitiveLog,
  CreateDataRepositoryAssociationCommand: () => CreateDataRepositoryAssociationCommand,
  CreateDataRepositoryTaskCommand: () => CreateDataRepositoryTaskCommand,
  CreateFileCacheCommand: () => CreateFileCacheCommand,
  CreateFileSystemCommand: () => CreateFileSystemCommand,
  CreateFileSystemFromBackupCommand: () => CreateFileSystemFromBackupCommand,
  CreateFileSystemFromBackupRequestFilterSensitiveLog: () => CreateFileSystemFromBackupRequestFilterSensitiveLog,
  CreateFileSystemFromBackupResponseFilterSensitiveLog: () => CreateFileSystemFromBackupResponseFilterSensitiveLog,
  CreateFileSystemOntapConfigurationFilterSensitiveLog: () => CreateFileSystemOntapConfigurationFilterSensitiveLog,
  CreateFileSystemRequestFilterSensitiveLog: () => CreateFileSystemRequestFilterSensitiveLog,
  CreateFileSystemResponseFilterSensitiveLog: () => CreateFileSystemResponseFilterSensitiveLog,
  CreateFileSystemWindowsConfigurationFilterSensitiveLog: () => CreateFileSystemWindowsConfigurationFilterSensitiveLog,
  CreateSnapshotCommand: () => CreateSnapshotCommand,
  CreateSnapshotResponseFilterSensitiveLog: () => CreateSnapshotResponseFilterSensitiveLog,
  CreateStorageVirtualMachineCommand: () => CreateStorageVirtualMachineCommand,
  CreateStorageVirtualMachineRequestFilterSensitiveLog: () => CreateStorageVirtualMachineRequestFilterSensitiveLog,
  CreateSvmActiveDirectoryConfigurationFilterSensitiveLog: () => CreateSvmActiveDirectoryConfigurationFilterSensitiveLog,
  CreateVolumeCommand: () => CreateVolumeCommand,
  CreateVolumeFromBackupCommand: () => CreateVolumeFromBackupCommand,
  CreateVolumeFromBackupResponseFilterSensitiveLog: () => CreateVolumeFromBackupResponseFilterSensitiveLog,
  CreateVolumeResponseFilterSensitiveLog: () => CreateVolumeResponseFilterSensitiveLog,
  DataCompressionType: () => DataCompressionType,
  DataRepositoryAssociationNotFound: () => DataRepositoryAssociationNotFound,
  DataRepositoryLifecycle: () => DataRepositoryLifecycle,
  DataRepositoryTaskEnded: () => DataRepositoryTaskEnded,
  DataRepositoryTaskExecuting: () => DataRepositoryTaskExecuting,
  DataRepositoryTaskFilterName: () => DataRepositoryTaskFilterName,
  DataRepositoryTaskLifecycle: () => DataRepositoryTaskLifecycle,
  DataRepositoryTaskNotFound: () => DataRepositoryTaskNotFound,
  DataRepositoryTaskType: () => DataRepositoryTaskType,
  DeleteBackupCommand: () => DeleteBackupCommand,
  DeleteDataRepositoryAssociationCommand: () => DeleteDataRepositoryAssociationCommand,
  DeleteFileCacheCommand: () => DeleteFileCacheCommand,
  DeleteFileSystemCommand: () => DeleteFileSystemCommand,
  DeleteFileSystemOpenZFSOption: () => DeleteFileSystemOpenZFSOption,
  DeleteOpenZFSVolumeOption: () => DeleteOpenZFSVolumeOption,
  DeleteSnapshotCommand: () => DeleteSnapshotCommand,
  DeleteStorageVirtualMachineCommand: () => DeleteStorageVirtualMachineCommand,
  DeleteVolumeCommand: () => DeleteVolumeCommand,
  DescribeBackupsCommand: () => DescribeBackupsCommand,
  DescribeBackupsResponseFilterSensitiveLog: () => DescribeBackupsResponseFilterSensitiveLog,
  DescribeDataRepositoryAssociationsCommand: () => DescribeDataRepositoryAssociationsCommand,
  DescribeDataRepositoryTasksCommand: () => DescribeDataRepositoryTasksCommand,
  DescribeFileCachesCommand: () => DescribeFileCachesCommand,
  DescribeFileSystemAliasesCommand: () => DescribeFileSystemAliasesCommand,
  DescribeFileSystemsCommand: () => DescribeFileSystemsCommand,
  DescribeFileSystemsResponseFilterSensitiveLog: () => DescribeFileSystemsResponseFilterSensitiveLog,
  DescribeSharedVpcConfigurationCommand: () => DescribeSharedVpcConfigurationCommand,
  DescribeSnapshotsCommand: () => DescribeSnapshotsCommand,
  DescribeSnapshotsResponseFilterSensitiveLog: () => DescribeSnapshotsResponseFilterSensitiveLog,
  DescribeStorageVirtualMachinesCommand: () => DescribeStorageVirtualMachinesCommand,
  DescribeVolumesCommand: () => DescribeVolumesCommand,
  DescribeVolumesResponseFilterSensitiveLog: () => DescribeVolumesResponseFilterSensitiveLog,
  DisassociateFileSystemAliasesCommand: () => DisassociateFileSystemAliasesCommand,
  DiskIopsConfigurationMode: () => DiskIopsConfigurationMode,
  DriveCacheType: () => DriveCacheType,
  EventType: () => EventType,
  FSx: () => FSx,
  FSxClient: () => FSxClient,
  FSxServiceException: () => FSxServiceException,
  FileCacheLifecycle: () => FileCacheLifecycle,
  FileCacheLustreDeploymentType: () => FileCacheLustreDeploymentType,
  FileCacheNotFound: () => FileCacheNotFound,
  FileCacheType: () => FileCacheType,
  FileSystemFilterSensitiveLog: () => FileSystemFilterSensitiveLog,
  FileSystemLifecycle: () => FileSystemLifecycle,
  FileSystemMaintenanceOperation: () => FileSystemMaintenanceOperation,
  FileSystemNotFound: () => FileSystemNotFound,
  FileSystemType: () => FileSystemType,
  FilterName: () => FilterName,
  FlexCacheEndpointType: () => FlexCacheEndpointType,
  IncompatibleParameterError: () => IncompatibleParameterError,
  IncompatibleRegionForMultiAZ: () => IncompatibleRegionForMultiAZ,
  InputOntapVolumeType: () => InputOntapVolumeType,
  InternalServerError: () => InternalServerError,
  InvalidDataRepositoryType: () => InvalidDataRepositoryType,
  InvalidDestinationKmsKey: () => InvalidDestinationKmsKey,
  InvalidExportPath: () => InvalidExportPath,
  InvalidImportPath: () => InvalidImportPath,
  InvalidNetworkSettings: () => InvalidNetworkSettings,
  InvalidPerUnitStorageThroughput: () => InvalidPerUnitStorageThroughput,
  InvalidRegion: () => InvalidRegion,
  InvalidSourceKmsKey: () => InvalidSourceKmsKey,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  LustreAccessAuditLogLevel: () => LustreAccessAuditLogLevel,
  LustreDeploymentType: () => LustreDeploymentType,
  MissingFileCacheConfiguration: () => MissingFileCacheConfiguration,
  MissingFileSystemConfiguration: () => MissingFileSystemConfiguration,
  MissingVolumeConfiguration: () => MissingVolumeConfiguration,
  NfsVersion: () => NfsVersion,
  NotServiceResourceError: () => NotServiceResourceError,
  OntapDeploymentType: () => OntapDeploymentType,
  OntapFileSystemConfigurationFilterSensitiveLog: () => OntapFileSystemConfigurationFilterSensitiveLog,
  OntapVolumeType: () => OntapVolumeType,
  OpenZFSCopyStrategy: () => OpenZFSCopyStrategy,
  OpenZFSDataCompressionType: () => OpenZFSDataCompressionType,
  OpenZFSDeploymentType: () => OpenZFSDeploymentType,
  OpenZFSQuotaType: () => OpenZFSQuotaType,
  PrivilegedDelete: () => PrivilegedDelete,
  ReleaseFileSystemNfsV3LocksCommand: () => ReleaseFileSystemNfsV3LocksCommand,
  ReleaseFileSystemNfsV3LocksResponseFilterSensitiveLog: () => ReleaseFileSystemNfsV3LocksResponseFilterSensitiveLog,
  ReportFormat: () => ReportFormat,
  ReportScope: () => ReportScope,
  ResourceDoesNotSupportTagging: () => ResourceDoesNotSupportTagging,
  ResourceNotFound: () => ResourceNotFound,
  ResourceType: () => ResourceType,
  RestoreOpenZFSVolumeOption: () => RestoreOpenZFSVolumeOption,
  RestoreVolumeFromSnapshotCommand: () => RestoreVolumeFromSnapshotCommand,
  RestoreVolumeFromSnapshotResponseFilterSensitiveLog: () => RestoreVolumeFromSnapshotResponseFilterSensitiveLog,
  RetentionPeriodType: () => RetentionPeriodType,
  SecurityStyle: () => SecurityStyle,
  SelfManagedActiveDirectoryConfigurationFilterSensitiveLog: () => SelfManagedActiveDirectoryConfigurationFilterSensitiveLog,
  SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog: () => SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog,
  ServiceLimit: () => ServiceLimit,
  ServiceLimitExceeded: () => ServiceLimitExceeded,
  SnaplockType: () => SnaplockType,
  SnapshotFilterName: () => SnapshotFilterName,
  SnapshotFilterSensitiveLog: () => SnapshotFilterSensitiveLog,
  SnapshotLifecycle: () => SnapshotLifecycle,
  SnapshotNotFound: () => SnapshotNotFound,
  SourceBackupUnavailable: () => SourceBackupUnavailable,
  StartMisconfiguredStateRecoveryCommand: () => StartMisconfiguredStateRecoveryCommand,
  StartMisconfiguredStateRecoveryResponseFilterSensitiveLog: () => StartMisconfiguredStateRecoveryResponseFilterSensitiveLog,
  Status: () => Status,
  StorageType: () => StorageType,
  StorageVirtualMachineFilterName: () => StorageVirtualMachineFilterName,
  StorageVirtualMachineLifecycle: () => StorageVirtualMachineLifecycle,
  StorageVirtualMachineNotFound: () => StorageVirtualMachineNotFound,
  StorageVirtualMachineRootVolumeSecurityStyle: () => StorageVirtualMachineRootVolumeSecurityStyle,
  StorageVirtualMachineSubtype: () => StorageVirtualMachineSubtype,
  TagResourceCommand: () => TagResourceCommand,
  TieringPolicyName: () => TieringPolicyName,
  Unit: () => Unit,
  UnsupportedOperation: () => UnsupportedOperation,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateDataRepositoryAssociationCommand: () => UpdateDataRepositoryAssociationCommand,
  UpdateFileCacheCommand: () => UpdateFileCacheCommand,
  UpdateFileSystemCommand: () => UpdateFileSystemCommand,
  UpdateFileSystemOntapConfigurationFilterSensitiveLog: () => UpdateFileSystemOntapConfigurationFilterSensitiveLog,
  UpdateFileSystemRequestFilterSensitiveLog: () => UpdateFileSystemRequestFilterSensitiveLog,
  UpdateFileSystemResponseFilterSensitiveLog: () => UpdateFileSystemResponseFilterSensitiveLog,
  UpdateFileSystemWindowsConfigurationFilterSensitiveLog: () => UpdateFileSystemWindowsConfigurationFilterSensitiveLog,
  UpdateOpenZFSVolumeOption: () => UpdateOpenZFSVolumeOption,
  UpdateSharedVpcConfigurationCommand: () => UpdateSharedVpcConfigurationCommand,
  UpdateSnapshotCommand: () => UpdateSnapshotCommand,
  UpdateSnapshotResponseFilterSensitiveLog: () => UpdateSnapshotResponseFilterSensitiveLog,
  UpdateStorageVirtualMachineCommand: () => UpdateStorageVirtualMachineCommand,
  UpdateStorageVirtualMachineRequestFilterSensitiveLog: () => UpdateStorageVirtualMachineRequestFilterSensitiveLog,
  UpdateSvmActiveDirectoryConfigurationFilterSensitiveLog: () => UpdateSvmActiveDirectoryConfigurationFilterSensitiveLog,
  UpdateVolumeCommand: () => UpdateVolumeCommand,
  UpdateVolumeResponseFilterSensitiveLog: () => UpdateVolumeResponseFilterSensitiveLog,
  VolumeFilterName: () => VolumeFilterName,
  VolumeFilterSensitiveLog: () => VolumeFilterSensitiveLog,
  VolumeLifecycle: () => VolumeLifecycle,
  VolumeNotFound: () => VolumeNotFound,
  VolumeStyle: () => VolumeStyle,
  VolumeType: () => VolumeType,
  WindowsAccessAuditLogLevel: () => WindowsAccessAuditLogLevel,
  WindowsDeploymentType: () => WindowsDeploymentType,
  __Client: () => import_smithy_client.Client,
  paginateDescribeBackups: () => paginateDescribeBackups,
  paginateDescribeDataRepositoryAssociations: () => paginateDescribeDataRepositoryAssociations,
  paginateDescribeDataRepositoryTasks: () => paginateDescribeDataRepositoryTasks,
  paginateDescribeFileCaches: () => paginateDescribeFileCaches,
  paginateDescribeFileSystemAliases: () => paginateDescribeFileSystemAliases,
  paginateDescribeFileSystems: () => paginateDescribeFileSystems,
  paginateDescribeSnapshots: () => paginateDescribeSnapshots,
  paginateDescribeStorageVirtualMachines: () => paginateDescribeStorageVirtualMachines,
  paginateDescribeVolumes: () => paginateDescribeVolumes,
  paginateListTagsForResource: () => paginateListTagsForResource
});
module.exports = __toCommonJS(src_exports);

// src/FSxClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "fsx"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/FSxClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/FSxClient.ts
var _FSxClient = class _FSxClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultFSxHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_FSxClient, "FSxClient");
var FSxClient = _FSxClient;

// src/FSx.ts


// src/commands/AssociateFileSystemAliasesCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts


var import_uuid = require("uuid");

// src/models/FSxServiceException.ts

var _FSxServiceException = class _FSxServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _FSxServiceException.prototype);
  }
};
__name(_FSxServiceException, "FSxServiceException");
var FSxServiceException = _FSxServiceException;

// src/models/models_0.ts

var ActiveDirectoryErrorType = {
  DOMAIN_NOT_FOUND: "DOMAIN_NOT_FOUND",
  INCOMPATIBLE_DOMAIN_MODE: "INCOMPATIBLE_DOMAIN_MODE",
  INVALID_DOMAIN_STAGE: "INVALID_DOMAIN_STAGE",
  WRONG_VPC: "WRONG_VPC"
};
var _ActiveDirectoryError = class _ActiveDirectoryError extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ActiveDirectoryError",
      $fault: "client",
      ...opts
    });
    this.name = "ActiveDirectoryError";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ActiveDirectoryError.prototype);
    this.ActiveDirectoryId = opts.ActiveDirectoryId;
    this.Type = opts.Type;
    this.Message = opts.Message;
  }
};
__name(_ActiveDirectoryError, "ActiveDirectoryError");
var ActiveDirectoryError = _ActiveDirectoryError;
var AdministrativeActionType = {
  FILE_SYSTEM_ALIAS_ASSOCIATION: "FILE_SYSTEM_ALIAS_ASSOCIATION",
  FILE_SYSTEM_ALIAS_DISASSOCIATION: "FILE_SYSTEM_ALIAS_DISASSOCIATION",
  FILE_SYSTEM_UPDATE: "FILE_SYSTEM_UPDATE",
  IOPS_OPTIMIZATION: "IOPS_OPTIMIZATION",
  MISCONFIGURED_STATE_RECOVERY: "MISCONFIGURED_STATE_RECOVERY",
  RELEASE_NFS_V3_LOCKS: "RELEASE_NFS_V3_LOCKS",
  SNAPSHOT_UPDATE: "SNAPSHOT_UPDATE",
  STORAGE_OPTIMIZATION: "STORAGE_OPTIMIZATION",
  STORAGE_TYPE_OPTIMIZATION: "STORAGE_TYPE_OPTIMIZATION",
  THROUGHPUT_OPTIMIZATION: "THROUGHPUT_OPTIMIZATION",
  VOLUME_INITIALIZE_WITH_SNAPSHOT: "VOLUME_INITIALIZE_WITH_SNAPSHOT",
  VOLUME_RESTORE: "VOLUME_RESTORE",
  VOLUME_UPDATE: "VOLUME_UPDATE",
  VOLUME_UPDATE_WITH_SNAPSHOT: "VOLUME_UPDATE_WITH_SNAPSHOT"
};
var Status = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING: "PENDING",
  UPDATED_OPTIMIZING: "UPDATED_OPTIMIZING"
};
var FileSystemType = {
  LUSTRE: "LUSTRE",
  ONTAP: "ONTAP",
  OPENZFS: "OPENZFS",
  WINDOWS: "WINDOWS"
};
var FileSystemLifecycle = {
  AVAILABLE: "AVAILABLE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  MISCONFIGURED: "MISCONFIGURED",
  MISCONFIGURED_UNAVAILABLE: "MISCONFIGURED_UNAVAILABLE",
  UPDATING: "UPDATING"
};
var DataCompressionType = {
  LZ4: "LZ4",
  NONE: "NONE"
};
var AutoImportPolicyType = {
  NEW: "NEW",
  NEW_CHANGED: "NEW_CHANGED",
  NEW_CHANGED_DELETED: "NEW_CHANGED_DELETED",
  NONE: "NONE"
};
var DataRepositoryLifecycle = {
  AVAILABLE: "AVAILABLE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  MISCONFIGURED: "MISCONFIGURED",
  UPDATING: "UPDATING"
};
var LustreDeploymentType = {
  PERSISTENT_1: "PERSISTENT_1",
  PERSISTENT_2: "PERSISTENT_2",
  SCRATCH_1: "SCRATCH_1",
  SCRATCH_2: "SCRATCH_2"
};
var DriveCacheType = {
  NONE: "NONE",
  READ: "READ"
};
var LustreAccessAuditLogLevel = {
  DISABLED: "DISABLED",
  ERROR_ONLY: "ERROR_ONLY",
  WARN_ERROR: "WARN_ERROR",
  WARN_ONLY: "WARN_ONLY"
};
var OntapDeploymentType = {
  MULTI_AZ_1: "MULTI_AZ_1",
  SINGLE_AZ_1: "SINGLE_AZ_1",
  SINGLE_AZ_2: "SINGLE_AZ_2"
};
var DiskIopsConfigurationMode = {
  AUTOMATIC: "AUTOMATIC",
  USER_PROVISIONED: "USER_PROVISIONED"
};
var OpenZFSDeploymentType = {
  MULTI_AZ_1: "MULTI_AZ_1",
  SINGLE_AZ_1: "SINGLE_AZ_1",
  SINGLE_AZ_2: "SINGLE_AZ_2"
};
var StorageType = {
  HDD: "HDD",
  SSD: "SSD"
};
var AliasLifecycle = {
  AVAILABLE: "AVAILABLE",
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING"
};
var WindowsAccessAuditLogLevel = {
  DISABLED: "DISABLED",
  FAILURE_ONLY: "FAILURE_ONLY",
  SUCCESS_AND_FAILURE: "SUCCESS_AND_FAILURE",
  SUCCESS_ONLY: "SUCCESS_ONLY"
};
var WindowsDeploymentType = {
  MULTI_AZ_1: "MULTI_AZ_1",
  SINGLE_AZ_1: "SINGLE_AZ_1",
  SINGLE_AZ_2: "SINGLE_AZ_2"
};
var FileSystemMaintenanceOperation = {
  BACKING_UP: "BACKING_UP",
  PATCHING: "PATCHING"
};
var SnapshotLifecycle = {
  AVAILABLE: "AVAILABLE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  PENDING: "PENDING"
};
var VolumeLifecycle = {
  AVAILABLE: "AVAILABLE",
  CREATED: "CREATED",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  MISCONFIGURED: "MISCONFIGURED",
  PENDING: "PENDING"
};
var FlexCacheEndpointType = {
  CACHE: "CACHE",
  NONE: "NONE",
  ORIGIN: "ORIGIN"
};
var OntapVolumeType = {
  DP: "DP",
  LS: "LS",
  RW: "RW"
};
var SecurityStyle = {
  MIXED: "MIXED",
  NTFS: "NTFS",
  UNIX: "UNIX"
};
var AutocommitPeriodType = {
  DAYS: "DAYS",
  HOURS: "HOURS",
  MINUTES: "MINUTES",
  MONTHS: "MONTHS",
  NONE: "NONE",
  YEARS: "YEARS"
};
var PrivilegedDelete = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED",
  PERMANENTLY_DISABLED: "PERMANENTLY_DISABLED"
};
var RetentionPeriodType = {
  DAYS: "DAYS",
  HOURS: "HOURS",
  INFINITE: "INFINITE",
  MINUTES: "MINUTES",
  MONTHS: "MONTHS",
  SECONDS: "SECONDS",
  UNSPECIFIED: "UNSPECIFIED",
  YEARS: "YEARS"
};
var SnaplockType = {
  COMPLIANCE: "COMPLIANCE",
  ENTERPRISE: "ENTERPRISE"
};
var TieringPolicyName = {
  ALL: "ALL",
  AUTO: "AUTO",
  NONE: "NONE",
  SNAPSHOT_ONLY: "SNAPSHOT_ONLY"
};
var VolumeStyle = {
  FLEXGROUP: "FLEXGROUP",
  FLEXVOL: "FLEXVOL"
};
var OpenZFSCopyStrategy = {
  CLONE: "CLONE",
  FULL_COPY: "FULL_COPY",
  INCREMENTAL_COPY: "INCREMENTAL_COPY"
};
var OpenZFSDataCompressionType = {
  LZ4: "LZ4",
  NONE: "NONE",
  ZSTD: "ZSTD"
};
var OpenZFSQuotaType = {
  GROUP: "GROUP",
  USER: "USER"
};
var VolumeType = {
  ONTAP: "ONTAP",
  OPENZFS: "OPENZFS"
};
var _BadRequest = class _BadRequest extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequest",
      $fault: "client",
      ...opts
    });
    this.name = "BadRequest";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BadRequest.prototype);
    this.Message = opts.Message;
  }
};
__name(_BadRequest, "BadRequest");
var BadRequest = _BadRequest;
var _FileSystemNotFound = class _FileSystemNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "FileSystemNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "FileSystemNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _FileSystemNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_FileSystemNotFound, "FileSystemNotFound");
var FileSystemNotFound = _FileSystemNotFound;
var _InternalServerError = class _InternalServerError extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerError",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerError";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerError.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerError, "InternalServerError");
var InternalServerError = _InternalServerError;
var EventType = {
  CHANGED: "CHANGED",
  DELETED: "DELETED",
  NEW: "NEW"
};
var DataRepositoryTaskLifecycle = {
  CANCELED: "CANCELED",
  CANCELING: "CANCELING",
  EXECUTING: "EXECUTING",
  FAILED: "FAILED",
  PENDING: "PENDING",
  SUCCEEDED: "SUCCEEDED"
};
var _DataRepositoryTaskEnded = class _DataRepositoryTaskEnded extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DataRepositoryTaskEnded",
      $fault: "client",
      ...opts
    });
    this.name = "DataRepositoryTaskEnded";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DataRepositoryTaskEnded.prototype);
    this.Message = opts.Message;
  }
};
__name(_DataRepositoryTaskEnded, "DataRepositoryTaskEnded");
var DataRepositoryTaskEnded = _DataRepositoryTaskEnded;
var _DataRepositoryTaskNotFound = class _DataRepositoryTaskNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DataRepositoryTaskNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "DataRepositoryTaskNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DataRepositoryTaskNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_DataRepositoryTaskNotFound, "DataRepositoryTaskNotFound");
var DataRepositoryTaskNotFound = _DataRepositoryTaskNotFound;
var _UnsupportedOperation = class _UnsupportedOperation extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedOperation",
      $fault: "client",
      ...opts
    });
    this.name = "UnsupportedOperation";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnsupportedOperation.prototype);
    this.Message = opts.Message;
  }
};
__name(_UnsupportedOperation, "UnsupportedOperation");
var UnsupportedOperation = _UnsupportedOperation;
var _BackupNotFound = class _BackupNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BackupNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "BackupNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BackupNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_BackupNotFound, "BackupNotFound");
var BackupNotFound = _BackupNotFound;
var BackupLifecycle = {
  AVAILABLE: "AVAILABLE",
  COPYING: "COPYING",
  CREATING: "CREATING",
  DELETED: "DELETED",
  FAILED: "FAILED",
  PENDING: "PENDING",
  TRANSFERRING: "TRANSFERRING"
};
var ResourceType = {
  FILE_SYSTEM: "FILE_SYSTEM",
  VOLUME: "VOLUME"
};
var BackupType = {
  AUTOMATIC: "AUTOMATIC",
  AWS_BACKUP: "AWS_BACKUP",
  USER_INITIATED: "USER_INITIATED"
};
var _IncompatibleParameterError = class _IncompatibleParameterError extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "IncompatibleParameterError",
      $fault: "client",
      ...opts
    });
    this.name = "IncompatibleParameterError";
    this.$fault = "client";
    Object.setPrototypeOf(this, _IncompatibleParameterError.prototype);
    this.Parameter = opts.Parameter;
    this.Message = opts.Message;
  }
};
__name(_IncompatibleParameterError, "IncompatibleParameterError");
var IncompatibleParameterError = _IncompatibleParameterError;
var _IncompatibleRegionForMultiAZ = class _IncompatibleRegionForMultiAZ extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "IncompatibleRegionForMultiAZ",
      $fault: "client",
      ...opts
    });
    this.name = "IncompatibleRegionForMultiAZ";
    this.$fault = "client";
    Object.setPrototypeOf(this, _IncompatibleRegionForMultiAZ.prototype);
    this.Message = opts.Message;
  }
};
__name(_IncompatibleRegionForMultiAZ, "IncompatibleRegionForMultiAZ");
var IncompatibleRegionForMultiAZ = _IncompatibleRegionForMultiAZ;
var _InvalidDestinationKmsKey = class _InvalidDestinationKmsKey extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidDestinationKmsKey",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidDestinationKmsKey";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidDestinationKmsKey.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidDestinationKmsKey, "InvalidDestinationKmsKey");
var InvalidDestinationKmsKey = _InvalidDestinationKmsKey;
var _InvalidRegion = class _InvalidRegion extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRegion",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRegion";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRegion.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidRegion, "InvalidRegion");
var InvalidRegion = _InvalidRegion;
var _InvalidSourceKmsKey = class _InvalidSourceKmsKey extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidSourceKmsKey",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidSourceKmsKey";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidSourceKmsKey.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidSourceKmsKey, "InvalidSourceKmsKey");
var InvalidSourceKmsKey = _InvalidSourceKmsKey;
var ServiceLimit = {
  FILE_CACHE_COUNT: "FILE_CACHE_COUNT",
  FILE_SYSTEM_COUNT: "FILE_SYSTEM_COUNT",
  STORAGE_VIRTUAL_MACHINES_PER_FILE_SYSTEM: "STORAGE_VIRTUAL_MACHINES_PER_FILE_SYSTEM",
  TOTAL_IN_PROGRESS_COPY_BACKUPS: "TOTAL_IN_PROGRESS_COPY_BACKUPS",
  TOTAL_SSD_IOPS: "TOTAL_SSD_IOPS",
  TOTAL_STORAGE: "TOTAL_STORAGE",
  TOTAL_THROUGHPUT_CAPACITY: "TOTAL_THROUGHPUT_CAPACITY",
  TOTAL_USER_INITIATED_BACKUPS: "TOTAL_USER_INITIATED_BACKUPS",
  TOTAL_USER_TAGS: "TOTAL_USER_TAGS",
  VOLUMES_PER_FILE_SYSTEM: "VOLUMES_PER_FILE_SYSTEM"
};
var _ServiceLimitExceeded = class _ServiceLimitExceeded extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceLimitExceeded",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceLimitExceeded";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceLimitExceeded.prototype);
    this.Limit = opts.Limit;
    this.Message = opts.Message;
  }
};
__name(_ServiceLimitExceeded, "ServiceLimitExceeded");
var ServiceLimitExceeded = _ServiceLimitExceeded;
var _SourceBackupUnavailable = class _SourceBackupUnavailable extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SourceBackupUnavailable",
      $fault: "client",
      ...opts
    });
    this.name = "SourceBackupUnavailable";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SourceBackupUnavailable.prototype);
    this.Message = opts.Message;
    this.BackupId = opts.BackupId;
  }
};
__name(_SourceBackupUnavailable, "SourceBackupUnavailable");
var SourceBackupUnavailable = _SourceBackupUnavailable;
var UpdateOpenZFSVolumeOption = {
  DELETE_CLONED_VOLUMES: "DELETE_CLONED_VOLUMES",
  DELETE_INTERMEDIATE_DATA: "DELETE_INTERMEDIATE_DATA",
  DELETE_INTERMEDIATE_SNAPSHOTS: "DELETE_INTERMEDIATE_SNAPSHOTS"
};
var _BackupInProgress = class _BackupInProgress extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BackupInProgress",
      $fault: "client",
      ...opts
    });
    this.name = "BackupInProgress";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BackupInProgress.prototype);
    this.Message = opts.Message;
  }
};
__name(_BackupInProgress, "BackupInProgress");
var BackupInProgress = _BackupInProgress;
var _VolumeNotFound = class _VolumeNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "VolumeNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "VolumeNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _VolumeNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_VolumeNotFound, "VolumeNotFound");
var VolumeNotFound = _VolumeNotFound;
var NfsVersion = {
  NFS3: "NFS3"
};
var Unit = {
  DAYS: "DAYS"
};
var ReportFormat = {
  REPORT_CSV_20191124: "REPORT_CSV_20191124"
};
var ReportScope = {
  FAILED_FILES_ONLY: "FAILED_FILES_ONLY"
};
var DataRepositoryTaskType = {
  AUTO_TRIGGERED_EVICTION: "AUTO_RELEASE_DATA",
  EVICTION: "RELEASE_DATA_FROM_FILESYSTEM",
  EXPORT: "EXPORT_TO_REPOSITORY",
  IMPORT: "IMPORT_METADATA_FROM_REPOSITORY"
};
var _DataRepositoryTaskExecuting = class _DataRepositoryTaskExecuting extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DataRepositoryTaskExecuting",
      $fault: "client",
      ...opts
    });
    this.name = "DataRepositoryTaskExecuting";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DataRepositoryTaskExecuting.prototype);
    this.Message = opts.Message;
  }
};
__name(_DataRepositoryTaskExecuting, "DataRepositoryTaskExecuting");
var DataRepositoryTaskExecuting = _DataRepositoryTaskExecuting;
var FileCacheType = {
  LUSTRE: "LUSTRE"
};
var FileCacheLustreDeploymentType = {
  CACHE_1: "CACHE_1"
};
var FileCacheLifecycle = {
  AVAILABLE: "AVAILABLE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var _InvalidNetworkSettings = class _InvalidNetworkSettings extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidNetworkSettings",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidNetworkSettings";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidNetworkSettings.prototype);
    this.Message = opts.Message;
    this.InvalidSubnetId = opts.InvalidSubnetId;
    this.InvalidSecurityGroupId = opts.InvalidSecurityGroupId;
    this.InvalidRouteTableId = opts.InvalidRouteTableId;
  }
};
__name(_InvalidNetworkSettings, "InvalidNetworkSettings");
var InvalidNetworkSettings = _InvalidNetworkSettings;
var _InvalidPerUnitStorageThroughput = class _InvalidPerUnitStorageThroughput extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidPerUnitStorageThroughput",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidPerUnitStorageThroughput";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidPerUnitStorageThroughput.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidPerUnitStorageThroughput, "InvalidPerUnitStorageThroughput");
var InvalidPerUnitStorageThroughput = _InvalidPerUnitStorageThroughput;
var _MissingFileCacheConfiguration = class _MissingFileCacheConfiguration extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "MissingFileCacheConfiguration",
      $fault: "client",
      ...opts
    });
    this.name = "MissingFileCacheConfiguration";
    this.$fault = "client";
    Object.setPrototypeOf(this, _MissingFileCacheConfiguration.prototype);
    this.Message = opts.Message;
  }
};
__name(_MissingFileCacheConfiguration, "MissingFileCacheConfiguration");
var MissingFileCacheConfiguration = _MissingFileCacheConfiguration;
var _InvalidExportPath = class _InvalidExportPath extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidExportPath",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidExportPath";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidExportPath.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidExportPath, "InvalidExportPath");
var InvalidExportPath = _InvalidExportPath;
var _InvalidImportPath = class _InvalidImportPath extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidImportPath",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidImportPath";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidImportPath.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidImportPath, "InvalidImportPath");
var InvalidImportPath = _InvalidImportPath;
var _MissingFileSystemConfiguration = class _MissingFileSystemConfiguration extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "MissingFileSystemConfiguration",
      $fault: "client",
      ...opts
    });
    this.name = "MissingFileSystemConfiguration";
    this.$fault = "client";
    Object.setPrototypeOf(this, _MissingFileSystemConfiguration.prototype);
    this.Message = opts.Message;
  }
};
__name(_MissingFileSystemConfiguration, "MissingFileSystemConfiguration");
var MissingFileSystemConfiguration = _MissingFileSystemConfiguration;
var StorageVirtualMachineRootVolumeSecurityStyle = {
  MIXED: "MIXED",
  NTFS: "NTFS",
  UNIX: "UNIX"
};
var StorageVirtualMachineLifecycle = {
  CREATED: "CREATED",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  MISCONFIGURED: "MISCONFIGURED",
  PENDING: "PENDING"
};
var StorageVirtualMachineSubtype = {
  DEFAULT: "DEFAULT",
  DP_DESTINATION: "DP_DESTINATION",
  SYNC_DESTINATION: "SYNC_DESTINATION",
  SYNC_SOURCE: "SYNC_SOURCE"
};
var InputOntapVolumeType = {
  DP: "DP",
  RW: "RW"
};
var _MissingVolumeConfiguration = class _MissingVolumeConfiguration extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "MissingVolumeConfiguration",
      $fault: "client",
      ...opts
    });
    this.name = "MissingVolumeConfiguration";
    this.$fault = "client";
    Object.setPrototypeOf(this, _MissingVolumeConfiguration.prototype);
    this.Message = opts.Message;
  }
};
__name(_MissingVolumeConfiguration, "MissingVolumeConfiguration");
var MissingVolumeConfiguration = _MissingVolumeConfiguration;
var _StorageVirtualMachineNotFound = class _StorageVirtualMachineNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "StorageVirtualMachineNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "StorageVirtualMachineNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _StorageVirtualMachineNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_StorageVirtualMachineNotFound, "StorageVirtualMachineNotFound");
var StorageVirtualMachineNotFound = _StorageVirtualMachineNotFound;
var _BackupBeingCopied = class _BackupBeingCopied extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BackupBeingCopied",
      $fault: "client",
      ...opts
    });
    this.name = "BackupBeingCopied";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BackupBeingCopied.prototype);
    this.Message = opts.Message;
    this.BackupId = opts.BackupId;
  }
};
__name(_BackupBeingCopied, "BackupBeingCopied");
var BackupBeingCopied = _BackupBeingCopied;
var _BackupRestoring = class _BackupRestoring extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BackupRestoring",
      $fault: "client",
      ...opts
    });
    this.name = "BackupRestoring";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BackupRestoring.prototype);
    this.Message = opts.Message;
    this.FileSystemId = opts.FileSystemId;
  }
};
__name(_BackupRestoring, "BackupRestoring");
var BackupRestoring = _BackupRestoring;
var _DataRepositoryAssociationNotFound = class _DataRepositoryAssociationNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DataRepositoryAssociationNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "DataRepositoryAssociationNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DataRepositoryAssociationNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_DataRepositoryAssociationNotFound, "DataRepositoryAssociationNotFound");
var DataRepositoryAssociationNotFound = _DataRepositoryAssociationNotFound;
var _FileCacheNotFound = class _FileCacheNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "FileCacheNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "FileCacheNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _FileCacheNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_FileCacheNotFound, "FileCacheNotFound");
var FileCacheNotFound = _FileCacheNotFound;
var DeleteFileSystemOpenZFSOption = {
  DELETE_CHILD_VOLUMES_AND_SNAPSHOTS: "DELETE_CHILD_VOLUMES_AND_SNAPSHOTS"
};
var _SnapshotNotFound = class _SnapshotNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotNotFound.prototype);
    this.Message = opts.Message;
  }
};
__name(_SnapshotNotFound, "SnapshotNotFound");
var SnapshotNotFound = _SnapshotNotFound;
var DeleteOpenZFSVolumeOption = {
  DELETE_CHILD_VOLUMES_AND_SNAPSHOTS: "DELETE_CHILD_VOLUMES_AND_SNAPSHOTS"
};
var FilterName = {
  BACKUP_TYPE: "backup-type",
  DATA_REPOSITORY_TYPE: "data-repository-type",
  FILE_CACHE_ID: "file-cache-id",
  FILE_CACHE_TYPE: "file-cache-type",
  FILE_SYSTEM_ID: "file-system-id",
  FILE_SYSTEM_TYPE: "file-system-type",
  VOLUME_ID: "volume-id"
};
var _InvalidDataRepositoryType = class _InvalidDataRepositoryType extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidDataRepositoryType",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidDataRepositoryType";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidDataRepositoryType.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidDataRepositoryType, "InvalidDataRepositoryType");
var InvalidDataRepositoryType = _InvalidDataRepositoryType;
var DataRepositoryTaskFilterName = {
  DATA_REPO_ASSOCIATION_ID: "data-repository-association-id",
  FILE_CACHE_ID: "file-cache-id",
  FILE_SYSTEM_ID: "file-system-id",
  TASK_LIFECYCLE: "task-lifecycle"
};
var SnapshotFilterName = {
  FILE_SYSTEM_ID: "file-system-id",
  VOLUME_ID: "volume-id"
};
var StorageVirtualMachineFilterName = {
  FILE_SYSTEM_ID: "file-system-id"
};
var VolumeFilterName = {
  FILE_SYSTEM_ID: "file-system-id",
  STORAGE_VIRTUAL_MACHINE_ID: "storage-virtual-machine-id"
};
var _NotServiceResourceError = class _NotServiceResourceError extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotServiceResourceError",
      $fault: "client",
      ...opts
    });
    this.name = "NotServiceResourceError";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotServiceResourceError.prototype);
    this.ResourceARN = opts.ResourceARN;
    this.Message = opts.Message;
  }
};
__name(_NotServiceResourceError, "NotServiceResourceError");
var NotServiceResourceError = _NotServiceResourceError;
var _ResourceDoesNotSupportTagging = class _ResourceDoesNotSupportTagging extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceDoesNotSupportTagging",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceDoesNotSupportTagging";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceDoesNotSupportTagging.prototype);
    this.ResourceARN = opts.ResourceARN;
    this.Message = opts.Message;
  }
};
__name(_ResourceDoesNotSupportTagging, "ResourceDoesNotSupportTagging");
var ResourceDoesNotSupportTagging = _ResourceDoesNotSupportTagging;
var _ResourceNotFound = class _ResourceNotFound extends FSxServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFound",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFound";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFound.prototype);
    this.ResourceARN = opts.ResourceARN;
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFound, "ResourceNotFound");
var ResourceNotFound = _ResourceNotFound;
var RestoreOpenZFSVolumeOption = {
  DELETE_CLONED_VOLUMES: "DELETE_CLONED_VOLUMES",
  DELETE_INTERMEDIATE_SNAPSHOTS: "DELETE_INTERMEDIATE_SNAPSHOTS"
};
var OntapFileSystemConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FsxAdminPassword && { FsxAdminPassword: import_smithy_client.SENSITIVE_STRING }
}), "OntapFileSystemConfigurationFilterSensitiveLog");
var CreateFileSystemOntapConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FsxAdminPassword && { FsxAdminPassword: import_smithy_client.SENSITIVE_STRING }
}), "CreateFileSystemOntapConfigurationFilterSensitiveLog");
var SelfManagedActiveDirectoryConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "SelfManagedActiveDirectoryConfigurationFilterSensitiveLog");
var CreateFileSystemWindowsConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SelfManagedActiveDirectoryConfiguration && {
    SelfManagedActiveDirectoryConfiguration: SelfManagedActiveDirectoryConfigurationFilterSensitiveLog(
      obj.SelfManagedActiveDirectoryConfiguration
    )
  }
}), "CreateFileSystemWindowsConfigurationFilterSensitiveLog");
var CreateFileSystemRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.WindowsConfiguration && {
    WindowsConfiguration: CreateFileSystemWindowsConfigurationFilterSensitiveLog(obj.WindowsConfiguration)
  },
  ...obj.OntapConfiguration && {
    OntapConfiguration: CreateFileSystemOntapConfigurationFilterSensitiveLog(obj.OntapConfiguration)
  }
}), "CreateFileSystemRequestFilterSensitiveLog");
var CreateFileSystemFromBackupRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.WindowsConfiguration && {
    WindowsConfiguration: CreateFileSystemWindowsConfigurationFilterSensitiveLog(obj.WindowsConfiguration)
  }
}), "CreateFileSystemFromBackupRequestFilterSensitiveLog");
var CreateSvmActiveDirectoryConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SelfManagedActiveDirectoryConfiguration && {
    SelfManagedActiveDirectoryConfiguration: SelfManagedActiveDirectoryConfigurationFilterSensitiveLog(
      obj.SelfManagedActiveDirectoryConfiguration
    )
  }
}), "CreateSvmActiveDirectoryConfigurationFilterSensitiveLog");
var CreateStorageVirtualMachineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ActiveDirectoryConfiguration && {
    ActiveDirectoryConfiguration: CreateSvmActiveDirectoryConfigurationFilterSensitiveLog(
      obj.ActiveDirectoryConfiguration
    )
  },
  ...obj.SvmAdminPassword && { SvmAdminPassword: import_smithy_client.SENSITIVE_STRING }
}), "CreateStorageVirtualMachineRequestFilterSensitiveLog");
var UpdateFileSystemOntapConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FsxAdminPassword && { FsxAdminPassword: import_smithy_client.SENSITIVE_STRING }
}), "UpdateFileSystemOntapConfigurationFilterSensitiveLog");
var SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog");
var UpdateFileSystemWindowsConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SelfManagedActiveDirectoryConfiguration && {
    SelfManagedActiveDirectoryConfiguration: SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog(
      obj.SelfManagedActiveDirectoryConfiguration
    )
  }
}), "UpdateFileSystemWindowsConfigurationFilterSensitiveLog");
var UpdateFileSystemRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.WindowsConfiguration && {
    WindowsConfiguration: UpdateFileSystemWindowsConfigurationFilterSensitiveLog(obj.WindowsConfiguration)
  },
  ...obj.OntapConfiguration && {
    OntapConfiguration: UpdateFileSystemOntapConfigurationFilterSensitiveLog(obj.OntapConfiguration)
  }
}), "UpdateFileSystemRequestFilterSensitiveLog");
var UpdateSvmActiveDirectoryConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SelfManagedActiveDirectoryConfiguration && {
    SelfManagedActiveDirectoryConfiguration: SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog(
      obj.SelfManagedActiveDirectoryConfiguration
    )
  }
}), "UpdateSvmActiveDirectoryConfigurationFilterSensitiveLog");
var UpdateStorageVirtualMachineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ActiveDirectoryConfiguration && {
    ActiveDirectoryConfiguration: UpdateSvmActiveDirectoryConfigurationFilterSensitiveLog(
      obj.ActiveDirectoryConfiguration
    )
  },
  ...obj.SvmAdminPassword && { SvmAdminPassword: import_smithy_client.SENSITIVE_STRING }
}), "UpdateStorageVirtualMachineRequestFilterSensitiveLog");
var AdministrativeActionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TargetFileSystemValues && {
    TargetFileSystemValues: FileSystemFilterSensitiveLog(obj.TargetFileSystemValues)
  }
}), "AdministrativeActionFilterSensitiveLog");
var FileSystemFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdministrativeActions && {
    AdministrativeActions: obj.AdministrativeActions.map((item) => AdministrativeActionFilterSensitiveLog(item))
  },
  ...obj.OntapConfiguration && {
    OntapConfiguration: OntapFileSystemConfigurationFilterSensitiveLog(obj.OntapConfiguration)
  }
}), "FileSystemFilterSensitiveLog");
var SnapshotFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdministrativeActions && {
    AdministrativeActions: obj.AdministrativeActions.map((item) => AdministrativeActionFilterSensitiveLog(item))
  }
}), "SnapshotFilterSensitiveLog");
var VolumeFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdministrativeActions && {
    AdministrativeActions: obj.AdministrativeActions.map((item) => AdministrativeActionFilterSensitiveLog(item))
  }
}), "VolumeFilterSensitiveLog");
var CopySnapshotAndUpdateVolumeResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdministrativeActions && {
    AdministrativeActions: obj.AdministrativeActions.map((item) => AdministrativeActionFilterSensitiveLog(item))
  }
}), "CopySnapshotAndUpdateVolumeResponseFilterSensitiveLog");
var RestoreVolumeFromSnapshotResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdministrativeActions && {
    AdministrativeActions: obj.AdministrativeActions.map((item) => AdministrativeActionFilterSensitiveLog(item))
  }
}), "RestoreVolumeFromSnapshotResponseFilterSensitiveLog");
var CreateFileSystemFromBackupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystem && { FileSystem: FileSystemFilterSensitiveLog(obj.FileSystem) }
}), "CreateFileSystemFromBackupResponseFilterSensitiveLog");
var CreateFileSystemResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystem && { FileSystem: FileSystemFilterSensitiveLog(obj.FileSystem) }
}), "CreateFileSystemResponseFilterSensitiveLog");
var CreateSnapshotResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "CreateSnapshotResponseFilterSensitiveLog");
var CreateVolumeFromBackupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "CreateVolumeFromBackupResponseFilterSensitiveLog");
var CreateVolumeResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "CreateVolumeResponseFilterSensitiveLog");
var ReleaseFileSystemNfsV3LocksResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystem && { FileSystem: FileSystemFilterSensitiveLog(obj.FileSystem) }
}), "ReleaseFileSystemNfsV3LocksResponseFilterSensitiveLog");
var StartMisconfiguredStateRecoveryResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystem && { FileSystem: FileSystemFilterSensitiveLog(obj.FileSystem) }
}), "StartMisconfiguredStateRecoveryResponseFilterSensitiveLog");
var UpdateFileSystemResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystem && { FileSystem: FileSystemFilterSensitiveLog(obj.FileSystem) }
}), "UpdateFileSystemResponseFilterSensitiveLog");
var UpdateSnapshotResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "UpdateSnapshotResponseFilterSensitiveLog");
var UpdateVolumeResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "UpdateVolumeResponseFilterSensitiveLog");
var DescribeFileSystemsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystems && { FileSystems: obj.FileSystems.map((item) => FileSystemFilterSensitiveLog(item)) }
}), "DescribeFileSystemsResponseFilterSensitiveLog");
var DescribeSnapshotsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "DescribeSnapshotsResponseFilterSensitiveLog");
var DescribeVolumesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "DescribeVolumesResponseFilterSensitiveLog");
var BackupFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.FileSystem && { FileSystem: FileSystemFilterSensitiveLog(obj.FileSystem) }
}), "BackupFilterSensitiveLog");
var CopyBackupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Backup && { Backup: BackupFilterSensitiveLog(obj.Backup) }
}), "CopyBackupResponseFilterSensitiveLog");
var CreateBackupResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Backup && { Backup: BackupFilterSensitiveLog(obj.Backup) }
}), "CreateBackupResponseFilterSensitiveLog");
var DescribeBackupsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Backups && { Backups: obj.Backups.map((item) => BackupFilterSensitiveLog(item)) }
}), "DescribeBackupsResponseFilterSensitiveLog");

// src/protocols/Aws_json1_1.ts
var se_AssociateFileSystemAliasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AssociateFileSystemAliases");
  let body;
  body = JSON.stringify(se_AssociateFileSystemAliasesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssociateFileSystemAliasesCommand");
var se_CancelDataRepositoryTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CancelDataRepositoryTask");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CancelDataRepositoryTaskCommand");
var se_CopyBackupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CopyBackup");
  let body;
  body = JSON.stringify(se_CopyBackupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CopyBackupCommand");
var se_CopySnapshotAndUpdateVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CopySnapshotAndUpdateVolume");
  let body;
  body = JSON.stringify(se_CopySnapshotAndUpdateVolumeRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CopySnapshotAndUpdateVolumeCommand");
var se_CreateBackupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateBackup");
  let body;
  body = JSON.stringify(se_CreateBackupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateBackupCommand");
var se_CreateDataRepositoryAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDataRepositoryAssociation");
  let body;
  body = JSON.stringify(se_CreateDataRepositoryAssociationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDataRepositoryAssociationCommand");
var se_CreateDataRepositoryTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDataRepositoryTask");
  let body;
  body = JSON.stringify(se_CreateDataRepositoryTaskRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDataRepositoryTaskCommand");
var se_CreateFileCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateFileCache");
  let body;
  body = JSON.stringify(se_CreateFileCacheRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateFileCacheCommand");
var se_CreateFileSystemCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateFileSystem");
  let body;
  body = JSON.stringify(se_CreateFileSystemRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateFileSystemCommand");
var se_CreateFileSystemFromBackupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateFileSystemFromBackup");
  let body;
  body = JSON.stringify(se_CreateFileSystemFromBackupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateFileSystemFromBackupCommand");
var se_CreateSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateSnapshot");
  let body;
  body = JSON.stringify(se_CreateSnapshotRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSnapshotCommand");
var se_CreateStorageVirtualMachineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateStorageVirtualMachine");
  let body;
  body = JSON.stringify(se_CreateStorageVirtualMachineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateStorageVirtualMachineCommand");
var se_CreateVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateVolume");
  let body;
  body = JSON.stringify(se_CreateVolumeRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateVolumeCommand");
var se_CreateVolumeFromBackupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateVolumeFromBackup");
  let body;
  body = JSON.stringify(se_CreateVolumeFromBackupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateVolumeFromBackupCommand");
var se_DeleteBackupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteBackup");
  let body;
  body = JSON.stringify(se_DeleteBackupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteBackupCommand");
var se_DeleteDataRepositoryAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteDataRepositoryAssociation");
  let body;
  body = JSON.stringify(se_DeleteDataRepositoryAssociationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteDataRepositoryAssociationCommand");
var se_DeleteFileCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteFileCache");
  let body;
  body = JSON.stringify(se_DeleteFileCacheRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteFileCacheCommand");
var se_DeleteFileSystemCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteFileSystem");
  let body;
  body = JSON.stringify(se_DeleteFileSystemRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteFileSystemCommand");
var se_DeleteSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteSnapshot");
  let body;
  body = JSON.stringify(se_DeleteSnapshotRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSnapshotCommand");
var se_DeleteStorageVirtualMachineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteStorageVirtualMachine");
  let body;
  body = JSON.stringify(se_DeleteStorageVirtualMachineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteStorageVirtualMachineCommand");
var se_DeleteVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteVolume");
  let body;
  body = JSON.stringify(se_DeleteVolumeRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteVolumeCommand");
var se_DescribeBackupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeBackups");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeBackupsCommand");
var se_DescribeDataRepositoryAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeDataRepositoryAssociations");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDataRepositoryAssociationsCommand");
var se_DescribeDataRepositoryTasksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeDataRepositoryTasks");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDataRepositoryTasksCommand");
var se_DescribeFileCachesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeFileCaches");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeFileCachesCommand");
var se_DescribeFileSystemAliasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeFileSystemAliases");
  let body;
  body = JSON.stringify(se_DescribeFileSystemAliasesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeFileSystemAliasesCommand");
var se_DescribeFileSystemsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeFileSystems");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeFileSystemsCommand");
var se_DescribeSharedVpcConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeSharedVpcConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSharedVpcConfigurationCommand");
var se_DescribeSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeSnapshots");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSnapshotsCommand");
var se_DescribeStorageVirtualMachinesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeStorageVirtualMachines");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeStorageVirtualMachinesCommand");
var se_DescribeVolumesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeVolumes");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeVolumesCommand");
var se_DisassociateFileSystemAliasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DisassociateFileSystemAliases");
  let body;
  body = JSON.stringify(se_DisassociateFileSystemAliasesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisassociateFileSystemAliasesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_ReleaseFileSystemNfsV3LocksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ReleaseFileSystemNfsV3Locks");
  let body;
  body = JSON.stringify(se_ReleaseFileSystemNfsV3LocksRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ReleaseFileSystemNfsV3LocksCommand");
var se_RestoreVolumeFromSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RestoreVolumeFromSnapshot");
  let body;
  body = JSON.stringify(se_RestoreVolumeFromSnapshotRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RestoreVolumeFromSnapshotCommand");
var se_StartMisconfiguredStateRecoveryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartMisconfiguredStateRecovery");
  let body;
  body = JSON.stringify(se_StartMisconfiguredStateRecoveryRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartMisconfiguredStateRecoveryCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateDataRepositoryAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateDataRepositoryAssociation");
  let body;
  body = JSON.stringify(se_UpdateDataRepositoryAssociationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateDataRepositoryAssociationCommand");
var se_UpdateFileCacheCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateFileCache");
  let body;
  body = JSON.stringify(se_UpdateFileCacheRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateFileCacheCommand");
var se_UpdateFileSystemCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateFileSystem");
  let body;
  body = JSON.stringify(se_UpdateFileSystemRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateFileSystemCommand");
var se_UpdateSharedVpcConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateSharedVpcConfiguration");
  let body;
  body = JSON.stringify(se_UpdateSharedVpcConfigurationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSharedVpcConfigurationCommand");
var se_UpdateSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateSnapshot");
  let body;
  body = JSON.stringify(se_UpdateSnapshotRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSnapshotCommand");
var se_UpdateStorageVirtualMachineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateStorageVirtualMachine");
  let body;
  body = JSON.stringify(se_UpdateStorageVirtualMachineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateStorageVirtualMachineCommand");
var se_UpdateVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateVolume");
  let body;
  body = JSON.stringify(se_UpdateVolumeRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateVolumeCommand");
var de_AssociateFileSystemAliasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AssociateFileSystemAliasesCommand");
var de_CancelDataRepositoryTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CancelDataRepositoryTaskCommand");
var de_CopyBackupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CopyBackupResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CopyBackupCommand");
var de_CopySnapshotAndUpdateVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CopySnapshotAndUpdateVolumeResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CopySnapshotAndUpdateVolumeCommand");
var de_CreateBackupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateBackupResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateBackupCommand");
var de_CreateDataRepositoryAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDataRepositoryAssociationResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDataRepositoryAssociationCommand");
var de_CreateDataRepositoryTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateDataRepositoryTaskResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDataRepositoryTaskCommand");
var de_CreateFileCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateFileCacheResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateFileCacheCommand");
var de_CreateFileSystemCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateFileSystemResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateFileSystemCommand");
var de_CreateFileSystemFromBackupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateFileSystemFromBackupResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateFileSystemFromBackupCommand");
var de_CreateSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateSnapshotResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSnapshotCommand");
var de_CreateStorageVirtualMachineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateStorageVirtualMachineResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateStorageVirtualMachineCommand");
var de_CreateVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateVolumeResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateVolumeCommand");
var de_CreateVolumeFromBackupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateVolumeFromBackupResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateVolumeFromBackupCommand");
var de_DeleteBackupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteBackupCommand");
var de_DeleteDataRepositoryAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteDataRepositoryAssociationCommand");
var de_DeleteFileCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteFileCacheCommand");
var de_DeleteFileSystemCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteFileSystemCommand");
var de_DeleteSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteSnapshotCommand");
var de_DeleteStorageVirtualMachineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteStorageVirtualMachineCommand");
var de_DeleteVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteVolumeCommand");
var de_DescribeBackupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeBackupsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeBackupsCommand");
var de_DescribeDataRepositoryAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeDataRepositoryAssociationsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDataRepositoryAssociationsCommand");
var de_DescribeDataRepositoryTasksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeDataRepositoryTasksResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDataRepositoryTasksCommand");
var de_DescribeFileCachesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeFileCachesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeFileCachesCommand");
var de_DescribeFileSystemAliasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeFileSystemAliasesCommand");
var de_DescribeFileSystemsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeFileSystemsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeFileSystemsCommand");
var de_DescribeSharedVpcConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSharedVpcConfigurationCommand");
var de_DescribeSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeSnapshotsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSnapshotsCommand");
var de_DescribeStorageVirtualMachinesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeStorageVirtualMachinesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeStorageVirtualMachinesCommand");
var de_DescribeVolumesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeVolumesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeVolumesCommand");
var de_DisassociateFileSystemAliasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisassociateFileSystemAliasesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_ReleaseFileSystemNfsV3LocksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ReleaseFileSystemNfsV3LocksResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ReleaseFileSystemNfsV3LocksCommand");
var de_RestoreVolumeFromSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_RestoreVolumeFromSnapshotResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RestoreVolumeFromSnapshotCommand");
var de_StartMisconfiguredStateRecoveryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_StartMisconfiguredStateRecoveryResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartMisconfiguredStateRecoveryCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateDataRepositoryAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateDataRepositoryAssociationResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateDataRepositoryAssociationCommand");
var de_UpdateFileCacheCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateFileCacheResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateFileCacheCommand");
var de_UpdateFileSystemCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateFileSystemResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateFileSystemCommand");
var de_UpdateSharedVpcConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateSharedVpcConfigurationCommand");
var de_UpdateSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateSnapshotResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateSnapshotCommand");
var de_UpdateStorageVirtualMachineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateStorageVirtualMachineResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateStorageVirtualMachineCommand");
var de_UpdateVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateVolumeResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateVolumeCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequest":
    case "com.amazonaws.fsx#BadRequest":
      throw await de_BadRequestRes(parsedOutput, context);
    case "FileSystemNotFound":
    case "com.amazonaws.fsx#FileSystemNotFound":
      throw await de_FileSystemNotFoundRes(parsedOutput, context);
    case "InternalServerError":
    case "com.amazonaws.fsx#InternalServerError":
      throw await de_InternalServerErrorRes(parsedOutput, context);
    case "DataRepositoryTaskEnded":
    case "com.amazonaws.fsx#DataRepositoryTaskEnded":
      throw await de_DataRepositoryTaskEndedRes(parsedOutput, context);
    case "DataRepositoryTaskNotFound":
    case "com.amazonaws.fsx#DataRepositoryTaskNotFound":
      throw await de_DataRepositoryTaskNotFoundRes(parsedOutput, context);
    case "UnsupportedOperation":
    case "com.amazonaws.fsx#UnsupportedOperation":
      throw await de_UnsupportedOperationRes(parsedOutput, context);
    case "BackupNotFound":
    case "com.amazonaws.fsx#BackupNotFound":
      throw await de_BackupNotFoundRes(parsedOutput, context);
    case "IncompatibleParameterError":
    case "com.amazonaws.fsx#IncompatibleParameterError":
      throw await de_IncompatibleParameterErrorRes(parsedOutput, context);
    case "IncompatibleRegionForMultiAZ":
    case "com.amazonaws.fsx#IncompatibleRegionForMultiAZ":
      throw await de_IncompatibleRegionForMultiAZRes(parsedOutput, context);
    case "InvalidDestinationKmsKey":
    case "com.amazonaws.fsx#InvalidDestinationKmsKey":
      throw await de_InvalidDestinationKmsKeyRes(parsedOutput, context);
    case "InvalidRegion":
    case "com.amazonaws.fsx#InvalidRegion":
      throw await de_InvalidRegionRes(parsedOutput, context);
    case "InvalidSourceKmsKey":
    case "com.amazonaws.fsx#InvalidSourceKmsKey":
      throw await de_InvalidSourceKmsKeyRes(parsedOutput, context);
    case "ServiceLimitExceeded":
    case "com.amazonaws.fsx#ServiceLimitExceeded":
      throw await de_ServiceLimitExceededRes(parsedOutput, context);
    case "SourceBackupUnavailable":
    case "com.amazonaws.fsx#SourceBackupUnavailable":
      throw await de_SourceBackupUnavailableRes(parsedOutput, context);
    case "BackupInProgress":
    case "com.amazonaws.fsx#BackupInProgress":
      throw await de_BackupInProgressRes(parsedOutput, context);
    case "VolumeNotFound":
    case "com.amazonaws.fsx#VolumeNotFound":
      throw await de_VolumeNotFoundRes(parsedOutput, context);
    case "DataRepositoryTaskExecuting":
    case "com.amazonaws.fsx#DataRepositoryTaskExecuting":
      throw await de_DataRepositoryTaskExecutingRes(parsedOutput, context);
    case "InvalidNetworkSettings":
    case "com.amazonaws.fsx#InvalidNetworkSettings":
      throw await de_InvalidNetworkSettingsRes(parsedOutput, context);
    case "InvalidPerUnitStorageThroughput":
    case "com.amazonaws.fsx#InvalidPerUnitStorageThroughput":
      throw await de_InvalidPerUnitStorageThroughputRes(parsedOutput, context);
    case "MissingFileCacheConfiguration":
    case "com.amazonaws.fsx#MissingFileCacheConfiguration":
      throw await de_MissingFileCacheConfigurationRes(parsedOutput, context);
    case "ActiveDirectoryError":
    case "com.amazonaws.fsx#ActiveDirectoryError":
      throw await de_ActiveDirectoryErrorRes(parsedOutput, context);
    case "InvalidExportPath":
    case "com.amazonaws.fsx#InvalidExportPath":
      throw await de_InvalidExportPathRes(parsedOutput, context);
    case "InvalidImportPath":
    case "com.amazonaws.fsx#InvalidImportPath":
      throw await de_InvalidImportPathRes(parsedOutput, context);
    case "MissingFileSystemConfiguration":
    case "com.amazonaws.fsx#MissingFileSystemConfiguration":
      throw await de_MissingFileSystemConfigurationRes(parsedOutput, context);
    case "MissingVolumeConfiguration":
    case "com.amazonaws.fsx#MissingVolumeConfiguration":
      throw await de_MissingVolumeConfigurationRes(parsedOutput, context);
    case "StorageVirtualMachineNotFound":
    case "com.amazonaws.fsx#StorageVirtualMachineNotFound":
      throw await de_StorageVirtualMachineNotFoundRes(parsedOutput, context);
    case "BackupBeingCopied":
    case "com.amazonaws.fsx#BackupBeingCopied":
      throw await de_BackupBeingCopiedRes(parsedOutput, context);
    case "BackupRestoring":
    case "com.amazonaws.fsx#BackupRestoring":
      throw await de_BackupRestoringRes(parsedOutput, context);
    case "DataRepositoryAssociationNotFound":
    case "com.amazonaws.fsx#DataRepositoryAssociationNotFound":
      throw await de_DataRepositoryAssociationNotFoundRes(parsedOutput, context);
    case "FileCacheNotFound":
    case "com.amazonaws.fsx#FileCacheNotFound":
      throw await de_FileCacheNotFoundRes(parsedOutput, context);
    case "SnapshotNotFound":
    case "com.amazonaws.fsx#SnapshotNotFound":
      throw await de_SnapshotNotFoundRes(parsedOutput, context);
    case "InvalidDataRepositoryType":
    case "com.amazonaws.fsx#InvalidDataRepositoryType":
      throw await de_InvalidDataRepositoryTypeRes(parsedOutput, context);
    case "NotServiceResourceError":
    case "com.amazonaws.fsx#NotServiceResourceError":
      throw await de_NotServiceResourceErrorRes(parsedOutput, context);
    case "ResourceDoesNotSupportTagging":
    case "com.amazonaws.fsx#ResourceDoesNotSupportTagging":
      throw await de_ResourceDoesNotSupportTaggingRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.fsx#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_ActiveDirectoryErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ActiveDirectoryError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ActiveDirectoryErrorRes");
var de_BackupBeingCopiedRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BackupBeingCopied({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BackupBeingCopiedRes");
var de_BackupInProgressRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BackupInProgress({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BackupInProgressRes");
var de_BackupNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BackupNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BackupNotFoundRes");
var de_BackupRestoringRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BackupRestoring({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BackupRestoringRes");
var de_BadRequestRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BadRequest({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BadRequestRes");
var de_DataRepositoryAssociationNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DataRepositoryAssociationNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DataRepositoryAssociationNotFoundRes");
var de_DataRepositoryTaskEndedRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DataRepositoryTaskEnded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DataRepositoryTaskEndedRes");
var de_DataRepositoryTaskExecutingRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DataRepositoryTaskExecuting({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DataRepositoryTaskExecutingRes");
var de_DataRepositoryTaskNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DataRepositoryTaskNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DataRepositoryTaskNotFoundRes");
var de_FileCacheNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new FileCacheNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_FileCacheNotFoundRes");
var de_FileSystemNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new FileSystemNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_FileSystemNotFoundRes");
var de_IncompatibleParameterErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new IncompatibleParameterError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_IncompatibleParameterErrorRes");
var de_IncompatibleRegionForMultiAZRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new IncompatibleRegionForMultiAZ({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_IncompatibleRegionForMultiAZRes");
var de_InternalServerErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerErrorRes");
var de_InvalidDataRepositoryTypeRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidDataRepositoryType({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidDataRepositoryTypeRes");
var de_InvalidDestinationKmsKeyRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidDestinationKmsKey({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidDestinationKmsKeyRes");
var de_InvalidExportPathRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidExportPath({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidExportPathRes");
var de_InvalidImportPathRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidImportPath({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidImportPathRes");
var de_InvalidNetworkSettingsRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidNetworkSettings({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidNetworkSettingsRes");
var de_InvalidPerUnitStorageThroughputRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidPerUnitStorageThroughput({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidPerUnitStorageThroughputRes");
var de_InvalidRegionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidRegion({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidRegionRes");
var de_InvalidSourceKmsKeyRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidSourceKmsKey({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidSourceKmsKeyRes");
var de_MissingFileCacheConfigurationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new MissingFileCacheConfiguration({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_MissingFileCacheConfigurationRes");
var de_MissingFileSystemConfigurationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new MissingFileSystemConfiguration({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_MissingFileSystemConfigurationRes");
var de_MissingVolumeConfigurationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new MissingVolumeConfiguration({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_MissingVolumeConfigurationRes");
var de_NotServiceResourceErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new NotServiceResourceError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NotServiceResourceErrorRes");
var de_ResourceDoesNotSupportTaggingRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceDoesNotSupportTagging({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceDoesNotSupportTaggingRes");
var de_ResourceNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundRes");
var de_ServiceLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceLimitExceededRes");
var de_SnapshotNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SnapshotNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotNotFoundRes");
var de_SourceBackupUnavailableRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SourceBackupUnavailable({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SourceBackupUnavailableRes");
var de_StorageVirtualMachineNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new StorageVirtualMachineNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_StorageVirtualMachineNotFoundRes");
var de_UnsupportedOperationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UnsupportedOperation({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UnsupportedOperationRes");
var de_VolumeNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new VolumeNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_VolumeNotFoundRes");
var se_AssociateFileSystemAliasesRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Aliases: import_smithy_client._json,
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: []
  });
}, "se_AssociateFileSystemAliasesRequest");
var se_CopyBackupRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    CopyTags: [],
    KmsKeyId: [],
    SourceBackupId: [],
    SourceRegion: [],
    Tags: import_smithy_client._json
  });
}, "se_CopyBackupRequest");
var se_CopySnapshotAndUpdateVolumeRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    CopyStrategy: [],
    Options: import_smithy_client._json,
    SourceSnapshotARN: [],
    VolumeId: []
  });
}, "se_CopySnapshotAndUpdateVolumeRequest");
var se_CreateBackupRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: [],
    Tags: import_smithy_client._json,
    VolumeId: []
  });
}, "se_CreateBackupRequest");
var se_CreateDataRepositoryAssociationRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    BatchImportMetaDataOnCreate: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataRepositoryPath: [],
    FileSystemId: [],
    FileSystemPath: [],
    ImportedFileChunkSize: [],
    S3: import_smithy_client._json,
    Tags: import_smithy_client._json
  });
}, "se_CreateDataRepositoryAssociationRequest");
var se_CreateDataRepositoryTaskRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CapacityToRelease: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: [],
    Paths: import_smithy_client._json,
    ReleaseConfiguration: import_smithy_client._json,
    Report: import_smithy_client._json,
    Tags: import_smithy_client._json,
    Type: []
  });
}, "se_CreateDataRepositoryTaskRequest");
var se_CreateFileCacheRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    CopyTagsToDataRepositoryAssociations: [],
    DataRepositoryAssociations: import_smithy_client._json,
    FileCacheType: [],
    FileCacheTypeVersion: [],
    KmsKeyId: [],
    LustreConfiguration: import_smithy_client._json,
    SecurityGroupIds: import_smithy_client._json,
    StorageCapacity: [],
    SubnetIds: import_smithy_client._json,
    Tags: import_smithy_client._json
  });
}, "se_CreateFileCacheRequest");
var se_CreateFileSystemFromBackupRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    BackupId: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemTypeVersion: [],
    KmsKeyId: [],
    LustreConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    SecurityGroupIds: import_smithy_client._json,
    StorageCapacity: [],
    StorageType: [],
    SubnetIds: import_smithy_client._json,
    Tags: import_smithy_client._json,
    WindowsConfiguration: import_smithy_client._json
  });
}, "se_CreateFileSystemFromBackupRequest");
var se_CreateFileSystemRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemType: [],
    FileSystemTypeVersion: [],
    KmsKeyId: [],
    LustreConfiguration: import_smithy_client._json,
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    SecurityGroupIds: import_smithy_client._json,
    StorageCapacity: [],
    StorageType: [],
    SubnetIds: import_smithy_client._json,
    Tags: import_smithy_client._json,
    WindowsConfiguration: import_smithy_client._json
  });
}, "se_CreateFileSystemRequest");
var se_CreateSnapshotRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    Name: [],
    Tags: import_smithy_client._json,
    VolumeId: []
  });
}, "se_CreateSnapshotRequest");
var se_CreateStorageVirtualMachineRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ActiveDirectoryConfiguration: import_smithy_client._json,
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: [],
    Name: [],
    RootVolumeSecurityStyle: [],
    SvmAdminPassword: [],
    Tags: import_smithy_client._json
  });
}, "se_CreateStorageVirtualMachineRequest");
var se_CreateVolumeFromBackupRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    BackupId: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    Name: [],
    OntapConfiguration: import_smithy_client._json,
    Tags: import_smithy_client._json
  });
}, "se_CreateVolumeFromBackupRequest");
var se_CreateVolumeRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    Name: [],
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    Tags: import_smithy_client._json,
    VolumeType: []
  });
}, "se_CreateVolumeRequest");
var se_DeleteBackupRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    BackupId: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()]
  });
}, "se_DeleteBackupRequest");
var se_DeleteDataRepositoryAssociationRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    AssociationId: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DeleteDataInFileSystem: []
  });
}, "se_DeleteDataRepositoryAssociationRequest");
var se_DeleteFileCacheRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileCacheId: []
  });
}, "se_DeleteFileCacheRequest");
var se_DeleteFileSystemRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: [],
    LustreConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    WindowsConfiguration: import_smithy_client._json
  });
}, "se_DeleteFileSystemRequest");
var se_DeleteSnapshotRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    SnapshotId: []
  });
}, "se_DeleteSnapshotRequest");
var se_DeleteStorageVirtualMachineRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    StorageVirtualMachineId: []
  });
}, "se_DeleteStorageVirtualMachineRequest");
var se_DeleteVolumeRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    VolumeId: []
  });
}, "se_DeleteVolumeRequest");
var se_DescribeFileSystemAliasesRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: [],
    MaxResults: [],
    NextToken: []
  });
}, "se_DescribeFileSystemAliasesRequest");
var se_DisassociateFileSystemAliasesRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Aliases: import_smithy_client._json,
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: []
  });
}, "se_DisassociateFileSystemAliasesRequest");
var se_ReleaseFileSystemNfsV3LocksRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: []
  });
}, "se_ReleaseFileSystemNfsV3LocksRequest");
var se_RestoreVolumeFromSnapshotRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    Options: import_smithy_client._json,
    SnapshotId: [],
    VolumeId: []
  });
}, "se_RestoreVolumeFromSnapshotRequest");
var se_StartMisconfiguredStateRecoveryRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: []
  });
}, "se_StartMisconfiguredStateRecoveryRequest");
var se_UpdateDataRepositoryAssociationRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    AssociationId: [],
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    ImportedFileChunkSize: [],
    S3: import_smithy_client._json
  });
}, "se_UpdateDataRepositoryAssociationRequest");
var se_UpdateFileCacheRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileCacheId: [],
    LustreConfiguration: import_smithy_client._json
  });
}, "se_UpdateFileCacheRequest");
var se_UpdateFileSystemRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    FileSystemId: [],
    LustreConfiguration: import_smithy_client._json,
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    StorageCapacity: [],
    StorageType: [],
    WindowsConfiguration: import_smithy_client._json
  });
}, "se_UpdateFileSystemRequest");
var se_UpdateSharedVpcConfigurationRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    EnableFsxRouteTableUpdatesFromParticipantAccounts: []
  });
}, "se_UpdateSharedVpcConfigurationRequest");
var se_UpdateSnapshotRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    Name: [],
    SnapshotId: []
  });
}, "se_UpdateSnapshotRequest");
var se_UpdateStorageVirtualMachineRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ActiveDirectoryConfiguration: import_smithy_client._json,
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    StorageVirtualMachineId: [],
    SvmAdminPassword: []
  });
}, "se_UpdateStorageVirtualMachineRequest");
var se_UpdateVolumeRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    Name: [],
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    VolumeId: []
  });
}, "se_UpdateVolumeRequest");
var de_AdministrativeAction = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdministrativeActionType: import_smithy_client.expectString,
    FailureDetails: import_smithy_client._json,
    ProgressPercent: import_smithy_client.expectInt32,
    RemainingTransferBytes: import_smithy_client.expectLong,
    RequestTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    TargetFileSystemValues: (_) => de_FileSystem(_, context),
    TargetSnapshotValues: (_) => de_Snapshot(_, context),
    TargetVolumeValues: (_) => de_Volume(_, context),
    TotalTransferBytes: import_smithy_client.expectLong
  });
}, "de_AdministrativeAction");
var de_AdministrativeActions = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AdministrativeAction(entry, context);
  });
  return retVal;
}, "de_AdministrativeActions");
var de_Backup = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BackupId: import_smithy_client.expectString,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DirectoryInformation: import_smithy_client._json,
    FailureDetails: import_smithy_client._json,
    FileSystem: (_) => de_FileSystem(_, context),
    KmsKeyId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    OwnerId: import_smithy_client.expectString,
    ProgressPercent: import_smithy_client.expectInt32,
    ResourceARN: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString,
    SourceBackupId: import_smithy_client.expectString,
    SourceBackupRegion: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    Type: import_smithy_client.expectString,
    Volume: (_) => de_Volume(_, context)
  });
}, "de_Backup");
var de_Backups = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Backup(entry, context);
  });
  return retVal;
}, "de_Backups");
var de_CopyBackupResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Backup: (_) => de_Backup(_, context)
  });
}, "de_CopyBackupResponse");
var de_CopySnapshotAndUpdateVolumeResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdministrativeActions: (_) => de_AdministrativeActions(_, context),
    Lifecycle: import_smithy_client.expectString,
    VolumeId: import_smithy_client.expectString
  });
}, "de_CopySnapshotAndUpdateVolumeResponse");
var de_CreateBackupResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Backup: (_) => de_Backup(_, context)
  });
}, "de_CreateBackupResponse");
var de_CreateDataRepositoryAssociationResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Association: (_) => de_DataRepositoryAssociation(_, context)
  });
}, "de_CreateDataRepositoryAssociationResponse");
var de_CreateDataRepositoryTaskResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataRepositoryTask: (_) => de_DataRepositoryTask(_, context)
  });
}, "de_CreateDataRepositoryTaskResponse");
var de_CreateFileCacheResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileCache: (_) => de_FileCacheCreating(_, context)
  });
}, "de_CreateFileCacheResponse");
var de_CreateFileSystemFromBackupResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileSystem: (_) => de_FileSystem(_, context)
  });
}, "de_CreateFileSystemFromBackupResponse");
var de_CreateFileSystemResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileSystem: (_) => de_FileSystem(_, context)
  });
}, "de_CreateFileSystemResponse");
var de_CreateSnapshotResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Snapshot: (_) => de_Snapshot(_, context)
  });
}, "de_CreateSnapshotResponse");
var de_CreateStorageVirtualMachineResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    StorageVirtualMachine: (_) => de_StorageVirtualMachine(_, context)
  });
}, "de_CreateStorageVirtualMachineResponse");
var de_CreateVolumeFromBackupResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Volume: (_) => de_Volume(_, context)
  });
}, "de_CreateVolumeFromBackupResponse");
var de_CreateVolumeResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Volume: (_) => de_Volume(_, context)
  });
}, "de_CreateVolumeResponse");
var de_DataRepositoryAssociation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AssociationId: import_smithy_client.expectString,
    BatchImportMetaDataOnCreate: import_smithy_client.expectBoolean,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataRepositoryPath: import_smithy_client.expectString,
    DataRepositorySubdirectories: import_smithy_client._json,
    FailureDetails: import_smithy_client._json,
    FileCacheId: import_smithy_client.expectString,
    FileCachePath: import_smithy_client.expectString,
    FileSystemId: import_smithy_client.expectString,
    FileSystemPath: import_smithy_client.expectString,
    ImportedFileChunkSize: import_smithy_client.expectInt32,
    Lifecycle: import_smithy_client.expectString,
    NFS: import_smithy_client._json,
    ResourceARN: import_smithy_client.expectString,
    S3: import_smithy_client._json,
    Tags: import_smithy_client._json
  });
}, "de_DataRepositoryAssociation");
var de_DataRepositoryAssociations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataRepositoryAssociation(entry, context);
  });
  return retVal;
}, "de_DataRepositoryAssociations");
var de_DataRepositoryTask = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CapacityToRelease: import_smithy_client.expectLong,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    FailureDetails: import_smithy_client._json,
    FileCacheId: import_smithy_client.expectString,
    FileSystemId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    Paths: import_smithy_client._json,
    ReleaseConfiguration: import_smithy_client._json,
    Report: import_smithy_client._json,
    ResourceARN: import_smithy_client.expectString,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: (_) => de_DataRepositoryTaskStatus(_, context),
    Tags: import_smithy_client._json,
    TaskId: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_DataRepositoryTask");
var de_DataRepositoryTasks = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataRepositoryTask(entry, context);
  });
  return retVal;
}, "de_DataRepositoryTasks");
var de_DataRepositoryTaskStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FailedCount: import_smithy_client.expectLong,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ReleasedCapacity: import_smithy_client.expectLong,
    SucceededCount: import_smithy_client.expectLong,
    TotalCount: import_smithy_client.expectLong
  });
}, "de_DataRepositoryTaskStatus");
var de_DescribeBackupsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Backups: (_) => de_Backups(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeBackupsResponse");
var de_DescribeDataRepositoryAssociationsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Associations: (_) => de_DataRepositoryAssociations(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeDataRepositoryAssociationsResponse");
var de_DescribeDataRepositoryTasksResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataRepositoryTasks: (_) => de_DataRepositoryTasks(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeDataRepositoryTasksResponse");
var de_DescribeFileCachesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileCaches: (_) => de_FileCaches(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeFileCachesResponse");
var de_DescribeFileSystemsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileSystems: (_) => de_FileSystems(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeFileSystemsResponse");
var de_DescribeSnapshotsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Snapshots: (_) => de_Snapshots(_, context)
  });
}, "de_DescribeSnapshotsResponse");
var de_DescribeStorageVirtualMachinesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    StorageVirtualMachines: (_) => de_StorageVirtualMachines(_, context)
  });
}, "de_DescribeStorageVirtualMachinesResponse");
var de_DescribeVolumesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Volumes: (_) => de_Volumes(_, context)
  });
}, "de_DescribeVolumesResponse");
var de_FileCache = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DNSName: import_smithy_client.expectString,
    DataRepositoryAssociationIds: import_smithy_client._json,
    FailureDetails: import_smithy_client._json,
    FileCacheId: import_smithy_client.expectString,
    FileCacheType: import_smithy_client.expectString,
    FileCacheTypeVersion: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    LustreConfiguration: import_smithy_client._json,
    NetworkInterfaceIds: import_smithy_client._json,
    OwnerId: import_smithy_client.expectString,
    ResourceARN: import_smithy_client.expectString,
    StorageCapacity: import_smithy_client.expectInt32,
    SubnetIds: import_smithy_client._json,
    VpcId: import_smithy_client.expectString
  });
}, "de_FileCache");
var de_FileCacheCreating = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CopyTagsToDataRepositoryAssociations: import_smithy_client.expectBoolean,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DNSName: import_smithy_client.expectString,
    DataRepositoryAssociationIds: import_smithy_client._json,
    FailureDetails: import_smithy_client._json,
    FileCacheId: import_smithy_client.expectString,
    FileCacheType: import_smithy_client.expectString,
    FileCacheTypeVersion: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    LustreConfiguration: import_smithy_client._json,
    NetworkInterfaceIds: import_smithy_client._json,
    OwnerId: import_smithy_client.expectString,
    ResourceARN: import_smithy_client.expectString,
    StorageCapacity: import_smithy_client.expectInt32,
    SubnetIds: import_smithy_client._json,
    Tags: import_smithy_client._json,
    VpcId: import_smithy_client.expectString
  });
}, "de_FileCacheCreating");
var de_FileCaches = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FileCache(entry, context);
  });
  return retVal;
}, "de_FileCaches");
var de_FileSystem = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdministrativeActions: (_) => de_AdministrativeActions(_, context),
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DNSName: import_smithy_client.expectString,
    FailureDetails: import_smithy_client._json,
    FileSystemId: import_smithy_client.expectString,
    FileSystemType: import_smithy_client.expectString,
    FileSystemTypeVersion: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    LustreConfiguration: import_smithy_client._json,
    NetworkInterfaceIds: import_smithy_client._json,
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    OwnerId: import_smithy_client.expectString,
    ResourceARN: import_smithy_client.expectString,
    StorageCapacity: import_smithy_client.expectInt32,
    StorageType: import_smithy_client.expectString,
    SubnetIds: import_smithy_client._json,
    Tags: import_smithy_client._json,
    VpcId: import_smithy_client.expectString,
    WindowsConfiguration: import_smithy_client._json
  });
}, "de_FileSystem");
var de_FileSystems = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FileSystem(entry, context);
  });
  return retVal;
}, "de_FileSystems");
var de_ReleaseFileSystemNfsV3LocksResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileSystem: (_) => de_FileSystem(_, context)
  });
}, "de_ReleaseFileSystemNfsV3LocksResponse");
var de_RestoreVolumeFromSnapshotResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdministrativeActions: (_) => de_AdministrativeActions(_, context),
    Lifecycle: import_smithy_client.expectString,
    VolumeId: import_smithy_client.expectString
  });
}, "de_RestoreVolumeFromSnapshotResponse");
var de_Snapshot = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdministrativeActions: (_) => de_AdministrativeActions(_, context),
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Lifecycle: import_smithy_client.expectString,
    LifecycleTransitionReason: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    ResourceARN: import_smithy_client.expectString,
    SnapshotId: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    VolumeId: import_smithy_client.expectString
  });
}, "de_Snapshot");
var de_Snapshots = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Snapshot(entry, context);
  });
  return retVal;
}, "de_Snapshots");
var de_StartMisconfiguredStateRecoveryResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileSystem: (_) => de_FileSystem(_, context)
  });
}, "de_StartMisconfiguredStateRecoveryResponse");
var de_StorageVirtualMachine = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ActiveDirectoryConfiguration: import_smithy_client._json,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Endpoints: import_smithy_client._json,
    FileSystemId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    LifecycleTransitionReason: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    ResourceARN: import_smithy_client.expectString,
    RootVolumeSecurityStyle: import_smithy_client.expectString,
    StorageVirtualMachineId: import_smithy_client.expectString,
    Subtype: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    UUID: import_smithy_client.expectString
  });
}, "de_StorageVirtualMachine");
var de_StorageVirtualMachines = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_StorageVirtualMachine(entry, context);
  });
  return retVal;
}, "de_StorageVirtualMachines");
var de_UpdateDataRepositoryAssociationResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Association: (_) => de_DataRepositoryAssociation(_, context)
  });
}, "de_UpdateDataRepositoryAssociationResponse");
var de_UpdateFileCacheResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileCache: (_) => de_FileCache(_, context)
  });
}, "de_UpdateFileCacheResponse");
var de_UpdateFileSystemResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FileSystem: (_) => de_FileSystem(_, context)
  });
}, "de_UpdateFileSystemResponse");
var de_UpdateSnapshotResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Snapshot: (_) => de_Snapshot(_, context)
  });
}, "de_UpdateSnapshotResponse");
var de_UpdateStorageVirtualMachineResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    StorageVirtualMachine: (_) => de_StorageVirtualMachine(_, context)
  });
}, "de_UpdateStorageVirtualMachineResponse");
var de_UpdateVolumeResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Volume: (_) => de_Volume(_, context)
  });
}, "de_UpdateVolumeResponse");
var de_Volume = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdministrativeActions: (_) => de_AdministrativeActions(_, context),
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    FileSystemId: import_smithy_client.expectString,
    Lifecycle: import_smithy_client.expectString,
    LifecycleTransitionReason: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    OntapConfiguration: import_smithy_client._json,
    OpenZFSConfiguration: import_smithy_client._json,
    ResourceARN: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    VolumeId: import_smithy_client.expectString,
    VolumeType: import_smithy_client.expectString
  });
}, "de_Volume");
var de_Volumes = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Volume(entry, context);
  });
  return retVal;
}, "de_Volumes");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(FSxServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `AWSSimbaAPIService_v20180301.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/AssociateFileSystemAliasesCommand.ts
var _AssociateFileSystemAliasesCommand = class _AssociateFileSystemAliasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "AssociateFileSystemAliases", {}).n("FSxClient", "AssociateFileSystemAliasesCommand").f(void 0, void 0).ser(se_AssociateFileSystemAliasesCommand).de(de_AssociateFileSystemAliasesCommand).build() {
};
__name(_AssociateFileSystemAliasesCommand, "AssociateFileSystemAliasesCommand");
var AssociateFileSystemAliasesCommand = _AssociateFileSystemAliasesCommand;

// src/commands/CancelDataRepositoryTaskCommand.ts




var _CancelDataRepositoryTaskCommand = class _CancelDataRepositoryTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CancelDataRepositoryTask", {}).n("FSxClient", "CancelDataRepositoryTaskCommand").f(void 0, void 0).ser(se_CancelDataRepositoryTaskCommand).de(de_CancelDataRepositoryTaskCommand).build() {
};
__name(_CancelDataRepositoryTaskCommand, "CancelDataRepositoryTaskCommand");
var CancelDataRepositoryTaskCommand = _CancelDataRepositoryTaskCommand;

// src/commands/CopyBackupCommand.ts




var _CopyBackupCommand = class _CopyBackupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CopyBackup", {}).n("FSxClient", "CopyBackupCommand").f(void 0, CopyBackupResponseFilterSensitiveLog).ser(se_CopyBackupCommand).de(de_CopyBackupCommand).build() {
};
__name(_CopyBackupCommand, "CopyBackupCommand");
var CopyBackupCommand = _CopyBackupCommand;

// src/commands/CopySnapshotAndUpdateVolumeCommand.ts




var _CopySnapshotAndUpdateVolumeCommand = class _CopySnapshotAndUpdateVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CopySnapshotAndUpdateVolume", {}).n("FSxClient", "CopySnapshotAndUpdateVolumeCommand").f(void 0, CopySnapshotAndUpdateVolumeResponseFilterSensitiveLog).ser(se_CopySnapshotAndUpdateVolumeCommand).de(de_CopySnapshotAndUpdateVolumeCommand).build() {
};
__name(_CopySnapshotAndUpdateVolumeCommand, "CopySnapshotAndUpdateVolumeCommand");
var CopySnapshotAndUpdateVolumeCommand = _CopySnapshotAndUpdateVolumeCommand;

// src/commands/CreateBackupCommand.ts




var _CreateBackupCommand = class _CreateBackupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateBackup", {}).n("FSxClient", "CreateBackupCommand").f(void 0, CreateBackupResponseFilterSensitiveLog).ser(se_CreateBackupCommand).de(de_CreateBackupCommand).build() {
};
__name(_CreateBackupCommand, "CreateBackupCommand");
var CreateBackupCommand = _CreateBackupCommand;

// src/commands/CreateDataRepositoryAssociationCommand.ts




var _CreateDataRepositoryAssociationCommand = class _CreateDataRepositoryAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateDataRepositoryAssociation", {}).n("FSxClient", "CreateDataRepositoryAssociationCommand").f(void 0, void 0).ser(se_CreateDataRepositoryAssociationCommand).de(de_CreateDataRepositoryAssociationCommand).build() {
};
__name(_CreateDataRepositoryAssociationCommand, "CreateDataRepositoryAssociationCommand");
var CreateDataRepositoryAssociationCommand = _CreateDataRepositoryAssociationCommand;

// src/commands/CreateDataRepositoryTaskCommand.ts




var _CreateDataRepositoryTaskCommand = class _CreateDataRepositoryTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateDataRepositoryTask", {}).n("FSxClient", "CreateDataRepositoryTaskCommand").f(void 0, void 0).ser(se_CreateDataRepositoryTaskCommand).de(de_CreateDataRepositoryTaskCommand).build() {
};
__name(_CreateDataRepositoryTaskCommand, "CreateDataRepositoryTaskCommand");
var CreateDataRepositoryTaskCommand = _CreateDataRepositoryTaskCommand;

// src/commands/CreateFileCacheCommand.ts




var _CreateFileCacheCommand = class _CreateFileCacheCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateFileCache", {}).n("FSxClient", "CreateFileCacheCommand").f(void 0, void 0).ser(se_CreateFileCacheCommand).de(de_CreateFileCacheCommand).build() {
};
__name(_CreateFileCacheCommand, "CreateFileCacheCommand");
var CreateFileCacheCommand = _CreateFileCacheCommand;

// src/commands/CreateFileSystemCommand.ts




var _CreateFileSystemCommand = class _CreateFileSystemCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateFileSystem", {}).n("FSxClient", "CreateFileSystemCommand").f(CreateFileSystemRequestFilterSensitiveLog, CreateFileSystemResponseFilterSensitiveLog).ser(se_CreateFileSystemCommand).de(de_CreateFileSystemCommand).build() {
};
__name(_CreateFileSystemCommand, "CreateFileSystemCommand");
var CreateFileSystemCommand = _CreateFileSystemCommand;

// src/commands/CreateFileSystemFromBackupCommand.ts




var _CreateFileSystemFromBackupCommand = class _CreateFileSystemFromBackupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateFileSystemFromBackup", {}).n("FSxClient", "CreateFileSystemFromBackupCommand").f(CreateFileSystemFromBackupRequestFilterSensitiveLog, CreateFileSystemFromBackupResponseFilterSensitiveLog).ser(se_CreateFileSystemFromBackupCommand).de(de_CreateFileSystemFromBackupCommand).build() {
};
__name(_CreateFileSystemFromBackupCommand, "CreateFileSystemFromBackupCommand");
var CreateFileSystemFromBackupCommand = _CreateFileSystemFromBackupCommand;

// src/commands/CreateSnapshotCommand.ts




var _CreateSnapshotCommand = class _CreateSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateSnapshot", {}).n("FSxClient", "CreateSnapshotCommand").f(void 0, CreateSnapshotResponseFilterSensitiveLog).ser(se_CreateSnapshotCommand).de(de_CreateSnapshotCommand).build() {
};
__name(_CreateSnapshotCommand, "CreateSnapshotCommand");
var CreateSnapshotCommand = _CreateSnapshotCommand;

// src/commands/CreateStorageVirtualMachineCommand.ts




var _CreateStorageVirtualMachineCommand = class _CreateStorageVirtualMachineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateStorageVirtualMachine", {}).n("FSxClient", "CreateStorageVirtualMachineCommand").f(CreateStorageVirtualMachineRequestFilterSensitiveLog, void 0).ser(se_CreateStorageVirtualMachineCommand).de(de_CreateStorageVirtualMachineCommand).build() {
};
__name(_CreateStorageVirtualMachineCommand, "CreateStorageVirtualMachineCommand");
var CreateStorageVirtualMachineCommand = _CreateStorageVirtualMachineCommand;

// src/commands/CreateVolumeCommand.ts




var _CreateVolumeCommand = class _CreateVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateVolume", {}).n("FSxClient", "CreateVolumeCommand").f(void 0, CreateVolumeResponseFilterSensitiveLog).ser(se_CreateVolumeCommand).de(de_CreateVolumeCommand).build() {
};
__name(_CreateVolumeCommand, "CreateVolumeCommand");
var CreateVolumeCommand = _CreateVolumeCommand;

// src/commands/CreateVolumeFromBackupCommand.ts




var _CreateVolumeFromBackupCommand = class _CreateVolumeFromBackupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "CreateVolumeFromBackup", {}).n("FSxClient", "CreateVolumeFromBackupCommand").f(void 0, CreateVolumeFromBackupResponseFilterSensitiveLog).ser(se_CreateVolumeFromBackupCommand).de(de_CreateVolumeFromBackupCommand).build() {
};
__name(_CreateVolumeFromBackupCommand, "CreateVolumeFromBackupCommand");
var CreateVolumeFromBackupCommand = _CreateVolumeFromBackupCommand;

// src/commands/DeleteBackupCommand.ts




var _DeleteBackupCommand = class _DeleteBackupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteBackup", {}).n("FSxClient", "DeleteBackupCommand").f(void 0, void 0).ser(se_DeleteBackupCommand).de(de_DeleteBackupCommand).build() {
};
__name(_DeleteBackupCommand, "DeleteBackupCommand");
var DeleteBackupCommand = _DeleteBackupCommand;

// src/commands/DeleteDataRepositoryAssociationCommand.ts




var _DeleteDataRepositoryAssociationCommand = class _DeleteDataRepositoryAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteDataRepositoryAssociation", {}).n("FSxClient", "DeleteDataRepositoryAssociationCommand").f(void 0, void 0).ser(se_DeleteDataRepositoryAssociationCommand).de(de_DeleteDataRepositoryAssociationCommand).build() {
};
__name(_DeleteDataRepositoryAssociationCommand, "DeleteDataRepositoryAssociationCommand");
var DeleteDataRepositoryAssociationCommand = _DeleteDataRepositoryAssociationCommand;

// src/commands/DeleteFileCacheCommand.ts




var _DeleteFileCacheCommand = class _DeleteFileCacheCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteFileCache", {}).n("FSxClient", "DeleteFileCacheCommand").f(void 0, void 0).ser(se_DeleteFileCacheCommand).de(de_DeleteFileCacheCommand).build() {
};
__name(_DeleteFileCacheCommand, "DeleteFileCacheCommand");
var DeleteFileCacheCommand = _DeleteFileCacheCommand;

// src/commands/DeleteFileSystemCommand.ts




var _DeleteFileSystemCommand = class _DeleteFileSystemCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteFileSystem", {}).n("FSxClient", "DeleteFileSystemCommand").f(void 0, void 0).ser(se_DeleteFileSystemCommand).de(de_DeleteFileSystemCommand).build() {
};
__name(_DeleteFileSystemCommand, "DeleteFileSystemCommand");
var DeleteFileSystemCommand = _DeleteFileSystemCommand;

// src/commands/DeleteSnapshotCommand.ts




var _DeleteSnapshotCommand = class _DeleteSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteSnapshot", {}).n("FSxClient", "DeleteSnapshotCommand").f(void 0, void 0).ser(se_DeleteSnapshotCommand).de(de_DeleteSnapshotCommand).build() {
};
__name(_DeleteSnapshotCommand, "DeleteSnapshotCommand");
var DeleteSnapshotCommand = _DeleteSnapshotCommand;

// src/commands/DeleteStorageVirtualMachineCommand.ts




var _DeleteStorageVirtualMachineCommand = class _DeleteStorageVirtualMachineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteStorageVirtualMachine", {}).n("FSxClient", "DeleteStorageVirtualMachineCommand").f(void 0, void 0).ser(se_DeleteStorageVirtualMachineCommand).de(de_DeleteStorageVirtualMachineCommand).build() {
};
__name(_DeleteStorageVirtualMachineCommand, "DeleteStorageVirtualMachineCommand");
var DeleteStorageVirtualMachineCommand = _DeleteStorageVirtualMachineCommand;

// src/commands/DeleteVolumeCommand.ts




var _DeleteVolumeCommand = class _DeleteVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DeleteVolume", {}).n("FSxClient", "DeleteVolumeCommand").f(void 0, void 0).ser(se_DeleteVolumeCommand).de(de_DeleteVolumeCommand).build() {
};
__name(_DeleteVolumeCommand, "DeleteVolumeCommand");
var DeleteVolumeCommand = _DeleteVolumeCommand;

// src/commands/DescribeBackupsCommand.ts




var _DescribeBackupsCommand = class _DescribeBackupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeBackups", {}).n("FSxClient", "DescribeBackupsCommand").f(void 0, DescribeBackupsResponseFilterSensitiveLog).ser(se_DescribeBackupsCommand).de(de_DescribeBackupsCommand).build() {
};
__name(_DescribeBackupsCommand, "DescribeBackupsCommand");
var DescribeBackupsCommand = _DescribeBackupsCommand;

// src/commands/DescribeDataRepositoryAssociationsCommand.ts




var _DescribeDataRepositoryAssociationsCommand = class _DescribeDataRepositoryAssociationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeDataRepositoryAssociations", {}).n("FSxClient", "DescribeDataRepositoryAssociationsCommand").f(void 0, void 0).ser(se_DescribeDataRepositoryAssociationsCommand).de(de_DescribeDataRepositoryAssociationsCommand).build() {
};
__name(_DescribeDataRepositoryAssociationsCommand, "DescribeDataRepositoryAssociationsCommand");
var DescribeDataRepositoryAssociationsCommand = _DescribeDataRepositoryAssociationsCommand;

// src/commands/DescribeDataRepositoryTasksCommand.ts




var _DescribeDataRepositoryTasksCommand = class _DescribeDataRepositoryTasksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeDataRepositoryTasks", {}).n("FSxClient", "DescribeDataRepositoryTasksCommand").f(void 0, void 0).ser(se_DescribeDataRepositoryTasksCommand).de(de_DescribeDataRepositoryTasksCommand).build() {
};
__name(_DescribeDataRepositoryTasksCommand, "DescribeDataRepositoryTasksCommand");
var DescribeDataRepositoryTasksCommand = _DescribeDataRepositoryTasksCommand;

// src/commands/DescribeFileCachesCommand.ts




var _DescribeFileCachesCommand = class _DescribeFileCachesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeFileCaches", {}).n("FSxClient", "DescribeFileCachesCommand").f(void 0, void 0).ser(se_DescribeFileCachesCommand).de(de_DescribeFileCachesCommand).build() {
};
__name(_DescribeFileCachesCommand, "DescribeFileCachesCommand");
var DescribeFileCachesCommand = _DescribeFileCachesCommand;

// src/commands/DescribeFileSystemAliasesCommand.ts




var _DescribeFileSystemAliasesCommand = class _DescribeFileSystemAliasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeFileSystemAliases", {}).n("FSxClient", "DescribeFileSystemAliasesCommand").f(void 0, void 0).ser(se_DescribeFileSystemAliasesCommand).de(de_DescribeFileSystemAliasesCommand).build() {
};
__name(_DescribeFileSystemAliasesCommand, "DescribeFileSystemAliasesCommand");
var DescribeFileSystemAliasesCommand = _DescribeFileSystemAliasesCommand;

// src/commands/DescribeFileSystemsCommand.ts




var _DescribeFileSystemsCommand = class _DescribeFileSystemsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeFileSystems", {}).n("FSxClient", "DescribeFileSystemsCommand").f(void 0, DescribeFileSystemsResponseFilterSensitiveLog).ser(se_DescribeFileSystemsCommand).de(de_DescribeFileSystemsCommand).build() {
};
__name(_DescribeFileSystemsCommand, "DescribeFileSystemsCommand");
var DescribeFileSystemsCommand = _DescribeFileSystemsCommand;

// src/commands/DescribeSharedVpcConfigurationCommand.ts




var _DescribeSharedVpcConfigurationCommand = class _DescribeSharedVpcConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeSharedVpcConfiguration", {}).n("FSxClient", "DescribeSharedVpcConfigurationCommand").f(void 0, void 0).ser(se_DescribeSharedVpcConfigurationCommand).de(de_DescribeSharedVpcConfigurationCommand).build() {
};
__name(_DescribeSharedVpcConfigurationCommand, "DescribeSharedVpcConfigurationCommand");
var DescribeSharedVpcConfigurationCommand = _DescribeSharedVpcConfigurationCommand;

// src/commands/DescribeSnapshotsCommand.ts




var _DescribeSnapshotsCommand = class _DescribeSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeSnapshots", {}).n("FSxClient", "DescribeSnapshotsCommand").f(void 0, DescribeSnapshotsResponseFilterSensitiveLog).ser(se_DescribeSnapshotsCommand).de(de_DescribeSnapshotsCommand).build() {
};
__name(_DescribeSnapshotsCommand, "DescribeSnapshotsCommand");
var DescribeSnapshotsCommand = _DescribeSnapshotsCommand;

// src/commands/DescribeStorageVirtualMachinesCommand.ts




var _DescribeStorageVirtualMachinesCommand = class _DescribeStorageVirtualMachinesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeStorageVirtualMachines", {}).n("FSxClient", "DescribeStorageVirtualMachinesCommand").f(void 0, void 0).ser(se_DescribeStorageVirtualMachinesCommand).de(de_DescribeStorageVirtualMachinesCommand).build() {
};
__name(_DescribeStorageVirtualMachinesCommand, "DescribeStorageVirtualMachinesCommand");
var DescribeStorageVirtualMachinesCommand = _DescribeStorageVirtualMachinesCommand;

// src/commands/DescribeVolumesCommand.ts




var _DescribeVolumesCommand = class _DescribeVolumesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DescribeVolumes", {}).n("FSxClient", "DescribeVolumesCommand").f(void 0, DescribeVolumesResponseFilterSensitiveLog).ser(se_DescribeVolumesCommand).de(de_DescribeVolumesCommand).build() {
};
__name(_DescribeVolumesCommand, "DescribeVolumesCommand");
var DescribeVolumesCommand = _DescribeVolumesCommand;

// src/commands/DisassociateFileSystemAliasesCommand.ts




var _DisassociateFileSystemAliasesCommand = class _DisassociateFileSystemAliasesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "DisassociateFileSystemAliases", {}).n("FSxClient", "DisassociateFileSystemAliasesCommand").f(void 0, void 0).ser(se_DisassociateFileSystemAliasesCommand).de(de_DisassociateFileSystemAliasesCommand).build() {
};
__name(_DisassociateFileSystemAliasesCommand, "DisassociateFileSystemAliasesCommand");
var DisassociateFileSystemAliasesCommand = _DisassociateFileSystemAliasesCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "ListTagsForResource", {}).n("FSxClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ReleaseFileSystemNfsV3LocksCommand.ts




var _ReleaseFileSystemNfsV3LocksCommand = class _ReleaseFileSystemNfsV3LocksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "ReleaseFileSystemNfsV3Locks", {}).n("FSxClient", "ReleaseFileSystemNfsV3LocksCommand").f(void 0, ReleaseFileSystemNfsV3LocksResponseFilterSensitiveLog).ser(se_ReleaseFileSystemNfsV3LocksCommand).de(de_ReleaseFileSystemNfsV3LocksCommand).build() {
};
__name(_ReleaseFileSystemNfsV3LocksCommand, "ReleaseFileSystemNfsV3LocksCommand");
var ReleaseFileSystemNfsV3LocksCommand = _ReleaseFileSystemNfsV3LocksCommand;

// src/commands/RestoreVolumeFromSnapshotCommand.ts




var _RestoreVolumeFromSnapshotCommand = class _RestoreVolumeFromSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "RestoreVolumeFromSnapshot", {}).n("FSxClient", "RestoreVolumeFromSnapshotCommand").f(void 0, RestoreVolumeFromSnapshotResponseFilterSensitiveLog).ser(se_RestoreVolumeFromSnapshotCommand).de(de_RestoreVolumeFromSnapshotCommand).build() {
};
__name(_RestoreVolumeFromSnapshotCommand, "RestoreVolumeFromSnapshotCommand");
var RestoreVolumeFromSnapshotCommand = _RestoreVolumeFromSnapshotCommand;

// src/commands/StartMisconfiguredStateRecoveryCommand.ts




var _StartMisconfiguredStateRecoveryCommand = class _StartMisconfiguredStateRecoveryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "StartMisconfiguredStateRecovery", {}).n("FSxClient", "StartMisconfiguredStateRecoveryCommand").f(void 0, StartMisconfiguredStateRecoveryResponseFilterSensitiveLog).ser(se_StartMisconfiguredStateRecoveryCommand).de(de_StartMisconfiguredStateRecoveryCommand).build() {
};
__name(_StartMisconfiguredStateRecoveryCommand, "StartMisconfiguredStateRecoveryCommand");
var StartMisconfiguredStateRecoveryCommand = _StartMisconfiguredStateRecoveryCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "TagResource", {}).n("FSxClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UntagResource", {}).n("FSxClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateDataRepositoryAssociationCommand.ts




var _UpdateDataRepositoryAssociationCommand = class _UpdateDataRepositoryAssociationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateDataRepositoryAssociation", {}).n("FSxClient", "UpdateDataRepositoryAssociationCommand").f(void 0, void 0).ser(se_UpdateDataRepositoryAssociationCommand).de(de_UpdateDataRepositoryAssociationCommand).build() {
};
__name(_UpdateDataRepositoryAssociationCommand, "UpdateDataRepositoryAssociationCommand");
var UpdateDataRepositoryAssociationCommand = _UpdateDataRepositoryAssociationCommand;

// src/commands/UpdateFileCacheCommand.ts




var _UpdateFileCacheCommand = class _UpdateFileCacheCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateFileCache", {}).n("FSxClient", "UpdateFileCacheCommand").f(void 0, void 0).ser(se_UpdateFileCacheCommand).de(de_UpdateFileCacheCommand).build() {
};
__name(_UpdateFileCacheCommand, "UpdateFileCacheCommand");
var UpdateFileCacheCommand = _UpdateFileCacheCommand;

// src/commands/UpdateFileSystemCommand.ts




var _UpdateFileSystemCommand = class _UpdateFileSystemCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateFileSystem", {}).n("FSxClient", "UpdateFileSystemCommand").f(UpdateFileSystemRequestFilterSensitiveLog, UpdateFileSystemResponseFilterSensitiveLog).ser(se_UpdateFileSystemCommand).de(de_UpdateFileSystemCommand).build() {
};
__name(_UpdateFileSystemCommand, "UpdateFileSystemCommand");
var UpdateFileSystemCommand = _UpdateFileSystemCommand;

// src/commands/UpdateSharedVpcConfigurationCommand.ts




var _UpdateSharedVpcConfigurationCommand = class _UpdateSharedVpcConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateSharedVpcConfiguration", {}).n("FSxClient", "UpdateSharedVpcConfigurationCommand").f(void 0, void 0).ser(se_UpdateSharedVpcConfigurationCommand).de(de_UpdateSharedVpcConfigurationCommand).build() {
};
__name(_UpdateSharedVpcConfigurationCommand, "UpdateSharedVpcConfigurationCommand");
var UpdateSharedVpcConfigurationCommand = _UpdateSharedVpcConfigurationCommand;

// src/commands/UpdateSnapshotCommand.ts




var _UpdateSnapshotCommand = class _UpdateSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateSnapshot", {}).n("FSxClient", "UpdateSnapshotCommand").f(void 0, UpdateSnapshotResponseFilterSensitiveLog).ser(se_UpdateSnapshotCommand).de(de_UpdateSnapshotCommand).build() {
};
__name(_UpdateSnapshotCommand, "UpdateSnapshotCommand");
var UpdateSnapshotCommand = _UpdateSnapshotCommand;

// src/commands/UpdateStorageVirtualMachineCommand.ts




var _UpdateStorageVirtualMachineCommand = class _UpdateStorageVirtualMachineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateStorageVirtualMachine", {}).n("FSxClient", "UpdateStorageVirtualMachineCommand").f(UpdateStorageVirtualMachineRequestFilterSensitiveLog, void 0).ser(se_UpdateStorageVirtualMachineCommand).de(de_UpdateStorageVirtualMachineCommand).build() {
};
__name(_UpdateStorageVirtualMachineCommand, "UpdateStorageVirtualMachineCommand");
var UpdateStorageVirtualMachineCommand = _UpdateStorageVirtualMachineCommand;

// src/commands/UpdateVolumeCommand.ts




var _UpdateVolumeCommand = class _UpdateVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSSimbaAPIService_v20180301", "UpdateVolume", {}).n("FSxClient", "UpdateVolumeCommand").f(void 0, UpdateVolumeResponseFilterSensitiveLog).ser(se_UpdateVolumeCommand).de(de_UpdateVolumeCommand).build() {
};
__name(_UpdateVolumeCommand, "UpdateVolumeCommand");
var UpdateVolumeCommand = _UpdateVolumeCommand;

// src/FSx.ts
var commands = {
  AssociateFileSystemAliasesCommand,
  CancelDataRepositoryTaskCommand,
  CopyBackupCommand,
  CopySnapshotAndUpdateVolumeCommand,
  CreateBackupCommand,
  CreateDataRepositoryAssociationCommand,
  CreateDataRepositoryTaskCommand,
  CreateFileCacheCommand,
  CreateFileSystemCommand,
  CreateFileSystemFromBackupCommand,
  CreateSnapshotCommand,
  CreateStorageVirtualMachineCommand,
  CreateVolumeCommand,
  CreateVolumeFromBackupCommand,
  DeleteBackupCommand,
  DeleteDataRepositoryAssociationCommand,
  DeleteFileCacheCommand,
  DeleteFileSystemCommand,
  DeleteSnapshotCommand,
  DeleteStorageVirtualMachineCommand,
  DeleteVolumeCommand,
  DescribeBackupsCommand,
  DescribeDataRepositoryAssociationsCommand,
  DescribeDataRepositoryTasksCommand,
  DescribeFileCachesCommand,
  DescribeFileSystemAliasesCommand,
  DescribeFileSystemsCommand,
  DescribeSharedVpcConfigurationCommand,
  DescribeSnapshotsCommand,
  DescribeStorageVirtualMachinesCommand,
  DescribeVolumesCommand,
  DisassociateFileSystemAliasesCommand,
  ListTagsForResourceCommand,
  ReleaseFileSystemNfsV3LocksCommand,
  RestoreVolumeFromSnapshotCommand,
  StartMisconfiguredStateRecoveryCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateDataRepositoryAssociationCommand,
  UpdateFileCacheCommand,
  UpdateFileSystemCommand,
  UpdateSharedVpcConfigurationCommand,
  UpdateSnapshotCommand,
  UpdateStorageVirtualMachineCommand,
  UpdateVolumeCommand
};
var _FSx = class _FSx extends FSxClient {
};
__name(_FSx, "FSx");
var FSx = _FSx;
(0, import_smithy_client.createAggregatedClient)(commands, FSx);

// src/pagination/DescribeBackupsPaginator.ts

var paginateDescribeBackups = (0, import_core.createPaginator)(FSxClient, DescribeBackupsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeDataRepositoryAssociationsPaginator.ts

var paginateDescribeDataRepositoryAssociations = (0, import_core.createPaginator)(FSxClient, DescribeDataRepositoryAssociationsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeDataRepositoryTasksPaginator.ts

var paginateDescribeDataRepositoryTasks = (0, import_core.createPaginator)(FSxClient, DescribeDataRepositoryTasksCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeFileCachesPaginator.ts

var paginateDescribeFileCaches = (0, import_core.createPaginator)(FSxClient, DescribeFileCachesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeFileSystemAliasesPaginator.ts

var paginateDescribeFileSystemAliases = (0, import_core.createPaginator)(FSxClient, DescribeFileSystemAliasesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeFileSystemsPaginator.ts

var paginateDescribeFileSystems = (0, import_core.createPaginator)(FSxClient, DescribeFileSystemsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeSnapshotsPaginator.ts

var paginateDescribeSnapshots = (0, import_core.createPaginator)(FSxClient, DescribeSnapshotsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeStorageVirtualMachinesPaginator.ts

var paginateDescribeStorageVirtualMachines = (0, import_core.createPaginator)(FSxClient, DescribeStorageVirtualMachinesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeVolumesPaginator.ts

var paginateDescribeVolumes = (0, import_core.createPaginator)(FSxClient, DescribeVolumesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTagsForResourcePaginator.ts

var paginateListTagsForResource = (0, import_core.createPaginator)(FSxClient, ListTagsForResourceCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  FSxServiceException,
  __Client,
  FSxClient,
  FSx,
  $Command,
  AssociateFileSystemAliasesCommand,
  CancelDataRepositoryTaskCommand,
  CopyBackupCommand,
  CopySnapshotAndUpdateVolumeCommand,
  CreateBackupCommand,
  CreateDataRepositoryAssociationCommand,
  CreateDataRepositoryTaskCommand,
  CreateFileCacheCommand,
  CreateFileSystemCommand,
  CreateFileSystemFromBackupCommand,
  CreateSnapshotCommand,
  CreateStorageVirtualMachineCommand,
  CreateVolumeCommand,
  CreateVolumeFromBackupCommand,
  DeleteBackupCommand,
  DeleteDataRepositoryAssociationCommand,
  DeleteFileCacheCommand,
  DeleteFileSystemCommand,
  DeleteSnapshotCommand,
  DeleteStorageVirtualMachineCommand,
  DeleteVolumeCommand,
  DescribeBackupsCommand,
  DescribeDataRepositoryAssociationsCommand,
  DescribeDataRepositoryTasksCommand,
  DescribeFileCachesCommand,
  DescribeFileSystemAliasesCommand,
  DescribeFileSystemsCommand,
  DescribeSharedVpcConfigurationCommand,
  DescribeSnapshotsCommand,
  DescribeStorageVirtualMachinesCommand,
  DescribeVolumesCommand,
  DisassociateFileSystemAliasesCommand,
  ListTagsForResourceCommand,
  ReleaseFileSystemNfsV3LocksCommand,
  RestoreVolumeFromSnapshotCommand,
  StartMisconfiguredStateRecoveryCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateDataRepositoryAssociationCommand,
  UpdateFileCacheCommand,
  UpdateFileSystemCommand,
  UpdateSharedVpcConfigurationCommand,
  UpdateSnapshotCommand,
  UpdateStorageVirtualMachineCommand,
  UpdateVolumeCommand,
  paginateDescribeBackups,
  paginateDescribeDataRepositoryAssociations,
  paginateDescribeDataRepositoryTasks,
  paginateDescribeFileCaches,
  paginateDescribeFileSystemAliases,
  paginateDescribeFileSystems,
  paginateDescribeSnapshots,
  paginateDescribeStorageVirtualMachines,
  paginateDescribeVolumes,
  paginateListTagsForResource,
  ActiveDirectoryErrorType,
  ActiveDirectoryError,
  AdministrativeActionType,
  Status,
  FileSystemType,
  FileSystemLifecycle,
  DataCompressionType,
  AutoImportPolicyType,
  DataRepositoryLifecycle,
  LustreDeploymentType,
  DriveCacheType,
  LustreAccessAuditLogLevel,
  OntapDeploymentType,
  DiskIopsConfigurationMode,
  OpenZFSDeploymentType,
  StorageType,
  AliasLifecycle,
  WindowsAccessAuditLogLevel,
  WindowsDeploymentType,
  FileSystemMaintenanceOperation,
  SnapshotLifecycle,
  VolumeLifecycle,
  FlexCacheEndpointType,
  OntapVolumeType,
  SecurityStyle,
  AutocommitPeriodType,
  PrivilegedDelete,
  RetentionPeriodType,
  SnaplockType,
  TieringPolicyName,
  VolumeStyle,
  OpenZFSCopyStrategy,
  OpenZFSDataCompressionType,
  OpenZFSQuotaType,
  VolumeType,
  BadRequest,
  FileSystemNotFound,
  InternalServerError,
  EventType,
  DataRepositoryTaskLifecycle,
  DataRepositoryTaskEnded,
  DataRepositoryTaskNotFound,
  UnsupportedOperation,
  BackupNotFound,
  BackupLifecycle,
  ResourceType,
  BackupType,
  IncompatibleParameterError,
  IncompatibleRegionForMultiAZ,
  InvalidDestinationKmsKey,
  InvalidRegion,
  InvalidSourceKmsKey,
  ServiceLimit,
  ServiceLimitExceeded,
  SourceBackupUnavailable,
  UpdateOpenZFSVolumeOption,
  BackupInProgress,
  VolumeNotFound,
  NfsVersion,
  Unit,
  ReportFormat,
  ReportScope,
  DataRepositoryTaskType,
  DataRepositoryTaskExecuting,
  FileCacheType,
  FileCacheLustreDeploymentType,
  FileCacheLifecycle,
  InvalidNetworkSettings,
  InvalidPerUnitStorageThroughput,
  MissingFileCacheConfiguration,
  InvalidExportPath,
  InvalidImportPath,
  MissingFileSystemConfiguration,
  StorageVirtualMachineRootVolumeSecurityStyle,
  StorageVirtualMachineLifecycle,
  StorageVirtualMachineSubtype,
  InputOntapVolumeType,
  MissingVolumeConfiguration,
  StorageVirtualMachineNotFound,
  BackupBeingCopied,
  BackupRestoring,
  DataRepositoryAssociationNotFound,
  FileCacheNotFound,
  DeleteFileSystemOpenZFSOption,
  SnapshotNotFound,
  DeleteOpenZFSVolumeOption,
  FilterName,
  InvalidDataRepositoryType,
  DataRepositoryTaskFilterName,
  SnapshotFilterName,
  StorageVirtualMachineFilterName,
  VolumeFilterName,
  NotServiceResourceError,
  ResourceDoesNotSupportTagging,
  ResourceNotFound,
  RestoreOpenZFSVolumeOption,
  OntapFileSystemConfigurationFilterSensitiveLog,
  CreateFileSystemOntapConfigurationFilterSensitiveLog,
  SelfManagedActiveDirectoryConfigurationFilterSensitiveLog,
  CreateFileSystemWindowsConfigurationFilterSensitiveLog,
  CreateFileSystemRequestFilterSensitiveLog,
  CreateFileSystemFromBackupRequestFilterSensitiveLog,
  CreateSvmActiveDirectoryConfigurationFilterSensitiveLog,
  CreateStorageVirtualMachineRequestFilterSensitiveLog,
  UpdateFileSystemOntapConfigurationFilterSensitiveLog,
  SelfManagedActiveDirectoryConfigurationUpdatesFilterSensitiveLog,
  UpdateFileSystemWindowsConfigurationFilterSensitiveLog,
  UpdateFileSystemRequestFilterSensitiveLog,
  UpdateSvmActiveDirectoryConfigurationFilterSensitiveLog,
  UpdateStorageVirtualMachineRequestFilterSensitiveLog,
  AdministrativeActionFilterSensitiveLog,
  FileSystemFilterSensitiveLog,
  SnapshotFilterSensitiveLog,
  VolumeFilterSensitiveLog,
  CopySnapshotAndUpdateVolumeResponseFilterSensitiveLog,
  RestoreVolumeFromSnapshotResponseFilterSensitiveLog,
  CreateFileSystemFromBackupResponseFilterSensitiveLog,
  CreateFileSystemResponseFilterSensitiveLog,
  CreateSnapshotResponseFilterSensitiveLog,
  CreateVolumeFromBackupResponseFilterSensitiveLog,
  CreateVolumeResponseFilterSensitiveLog,
  ReleaseFileSystemNfsV3LocksResponseFilterSensitiveLog,
  StartMisconfiguredStateRecoveryResponseFilterSensitiveLog,
  UpdateFileSystemResponseFilterSensitiveLog,
  UpdateSnapshotResponseFilterSensitiveLog,
  UpdateVolumeResponseFilterSensitiveLog,
  DescribeFileSystemsResponseFilterSensitiveLog,
  DescribeSnapshotsResponseFilterSensitiveLog,
  DescribeVolumesResponseFilterSensitiveLog,
  BackupFilterSensitiveLog,
  CopyBackupResponseFilterSensitiveLog,
  CreateBackupResponseFilterSensitiveLog,
  DescribeBackupsResponseFilterSensitiveLog
});

