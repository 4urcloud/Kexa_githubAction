import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateFileSystemAliasesCommandInput,
  AssociateFileSystemAliasesCommandOutput,
} from "./commands/AssociateFileSystemAliasesCommand";
import {
  CancelDataRepositoryTaskCommandInput,
  CancelDataRepositoryTaskCommandOutput,
} from "./commands/CancelDataRepositoryTaskCommand";
import {
  CopyBackupCommandInput,
  CopyBackupCommandOutput,
} from "./commands/CopyBackupCommand";
import {
  CopySnapshotAndUpdateVolumeCommandInput,
  CopySnapshotAndUpdateVolumeCommandOutput,
} from "./commands/CopySnapshotAndUpdateVolumeCommand";
import {
  CreateBackupCommandInput,
  CreateBackupCommandOutput,
} from "./commands/CreateBackupCommand";
import {
  CreateDataRepositoryAssociationCommandInput,
  CreateDataRepositoryAssociationCommandOutput,
} from "./commands/CreateDataRepositoryAssociationCommand";
import {
  CreateDataRepositoryTaskCommandInput,
  CreateDataRepositoryTaskCommandOutput,
} from "./commands/CreateDataRepositoryTaskCommand";
import {
  CreateFileCacheCommandInput,
  CreateFileCacheCommandOutput,
} from "./commands/CreateFileCacheCommand";
import {
  CreateFileSystemCommandInput,
  CreateFileSystemCommandOutput,
} from "./commands/CreateFileSystemCommand";
import {
  CreateFileSystemFromBackupCommandInput,
  CreateFileSystemFromBackupCommandOutput,
} from "./commands/CreateFileSystemFromBackupCommand";
import {
  CreateSnapshotCommandInput,
  CreateSnapshotCommandOutput,
} from "./commands/CreateSnapshotCommand";
import {
  CreateStorageVirtualMachineCommandInput,
  CreateStorageVirtualMachineCommandOutput,
} from "./commands/CreateStorageVirtualMachineCommand";
import {
  CreateVolumeCommandInput,
  CreateVolumeCommandOutput,
} from "./commands/CreateVolumeCommand";
import {
  CreateVolumeFromBackupCommandInput,
  CreateVolumeFromBackupCommandOutput,
} from "./commands/CreateVolumeFromBackupCommand";
import {
  DeleteBackupCommandInput,
  DeleteBackupCommandOutput,
} from "./commands/DeleteBackupCommand";
import {
  DeleteDataRepositoryAssociationCommandInput,
  DeleteDataRepositoryAssociationCommandOutput,
} from "./commands/DeleteDataRepositoryAssociationCommand";
import {
  DeleteFileCacheCommandInput,
  DeleteFileCacheCommandOutput,
} from "./commands/DeleteFileCacheCommand";
import {
  DeleteFileSystemCommandInput,
  DeleteFileSystemCommandOutput,
} from "./commands/DeleteFileSystemCommand";
import {
  DeleteSnapshotCommandInput,
  DeleteSnapshotCommandOutput,
} from "./commands/DeleteSnapshotCommand";
import {
  DeleteStorageVirtualMachineCommandInput,
  DeleteStorageVirtualMachineCommandOutput,
} from "./commands/DeleteStorageVirtualMachineCommand";
import {
  DeleteVolumeCommandInput,
  DeleteVolumeCommandOutput,
} from "./commands/DeleteVolumeCommand";
import {
  DescribeBackupsCommandInput,
  DescribeBackupsCommandOutput,
} from "./commands/DescribeBackupsCommand";
import {
  DescribeDataRepositoryAssociationsCommandInput,
  DescribeDataRepositoryAssociationsCommandOutput,
} from "./commands/DescribeDataRepositoryAssociationsCommand";
import {
  DescribeDataRepositoryTasksCommandInput,
  DescribeDataRepositoryTasksCommandOutput,
} from "./commands/DescribeDataRepositoryTasksCommand";
import {
  DescribeFileCachesCommandInput,
  DescribeFileCachesCommandOutput,
} from "./commands/DescribeFileCachesCommand";
import {
  DescribeFileSystemAliasesCommandInput,
  DescribeFileSystemAliasesCommandOutput,
} from "./commands/DescribeFileSystemAliasesCommand";
import {
  DescribeFileSystemsCommandInput,
  DescribeFileSystemsCommandOutput,
} from "./commands/DescribeFileSystemsCommand";
import {
  DescribeSharedVpcConfigurationCommandInput,
  DescribeSharedVpcConfigurationCommandOutput,
} from "./commands/DescribeSharedVpcConfigurationCommand";
import {
  DescribeSnapshotsCommandInput,
  DescribeSnapshotsCommandOutput,
} from "./commands/DescribeSnapshotsCommand";
import {
  DescribeStorageVirtualMachinesCommandInput,
  DescribeStorageVirtualMachinesCommandOutput,
} from "./commands/DescribeStorageVirtualMachinesCommand";
import {
  DescribeVolumesCommandInput,
  DescribeVolumesCommandOutput,
} from "./commands/DescribeVolumesCommand";
import {
  DisassociateFileSystemAliasesCommandInput,
  DisassociateFileSystemAliasesCommandOutput,
} from "./commands/DisassociateFileSystemAliasesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ReleaseFileSystemNfsV3LocksCommandInput,
  ReleaseFileSystemNfsV3LocksCommandOutput,
} from "./commands/ReleaseFileSystemNfsV3LocksCommand";
import {
  RestoreVolumeFromSnapshotCommandInput,
  RestoreVolumeFromSnapshotCommandOutput,
} from "./commands/RestoreVolumeFromSnapshotCommand";
import {
  StartMisconfiguredStateRecoveryCommandInput,
  StartMisconfiguredStateRecoveryCommandOutput,
} from "./commands/StartMisconfiguredStateRecoveryCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateDataRepositoryAssociationCommandInput,
  UpdateDataRepositoryAssociationCommandOutput,
} from "./commands/UpdateDataRepositoryAssociationCommand";
import {
  UpdateFileCacheCommandInput,
  UpdateFileCacheCommandOutput,
} from "./commands/UpdateFileCacheCommand";
import {
  UpdateFileSystemCommandInput,
  UpdateFileSystemCommandOutput,
} from "./commands/UpdateFileSystemCommand";
import {
  UpdateSharedVpcConfigurationCommandInput,
  UpdateSharedVpcConfigurationCommandOutput,
} from "./commands/UpdateSharedVpcConfigurationCommand";
import {
  UpdateSnapshotCommandInput,
  UpdateSnapshotCommandOutput,
} from "./commands/UpdateSnapshotCommand";
import {
  UpdateStorageVirtualMachineCommandInput,
  UpdateStorageVirtualMachineCommandOutput,
} from "./commands/UpdateStorageVirtualMachineCommand";
import {
  UpdateVolumeCommandInput,
  UpdateVolumeCommandOutput,
} from "./commands/UpdateVolumeCommand";
import { FSxClient } from "./FSxClient";
export interface FSx {
  associateFileSystemAliases(
    args: AssociateFileSystemAliasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateFileSystemAliasesCommandOutput>;
  associateFileSystemAliases(
    args: AssociateFileSystemAliasesCommandInput,
    cb: (err: any, data?: AssociateFileSystemAliasesCommandOutput) => void
  ): void;
  associateFileSystemAliases(
    args: AssociateFileSystemAliasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateFileSystemAliasesCommandOutput) => void
  ): void;
  cancelDataRepositoryTask(
    args: CancelDataRepositoryTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelDataRepositoryTaskCommandOutput>;
  cancelDataRepositoryTask(
    args: CancelDataRepositoryTaskCommandInput,
    cb: (err: any, data?: CancelDataRepositoryTaskCommandOutput) => void
  ): void;
  cancelDataRepositoryTask(
    args: CancelDataRepositoryTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelDataRepositoryTaskCommandOutput) => void
  ): void;
  copyBackup(
    args: CopyBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CopyBackupCommandOutput>;
  copyBackup(
    args: CopyBackupCommandInput,
    cb: (err: any, data?: CopyBackupCommandOutput) => void
  ): void;
  copyBackup(
    args: CopyBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CopyBackupCommandOutput) => void
  ): void;
  copySnapshotAndUpdateVolume(
    args: CopySnapshotAndUpdateVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CopySnapshotAndUpdateVolumeCommandOutput>;
  copySnapshotAndUpdateVolume(
    args: CopySnapshotAndUpdateVolumeCommandInput,
    cb: (err: any, data?: CopySnapshotAndUpdateVolumeCommandOutput) => void
  ): void;
  copySnapshotAndUpdateVolume(
    args: CopySnapshotAndUpdateVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CopySnapshotAndUpdateVolumeCommandOutput) => void
  ): void;
  createBackup(): Promise<CreateBackupCommandOutput>;
  createBackup(
    args: CreateBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBackupCommandOutput>;
  createBackup(
    args: CreateBackupCommandInput,
    cb: (err: any, data?: CreateBackupCommandOutput) => void
  ): void;
  createBackup(
    args: CreateBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBackupCommandOutput) => void
  ): void;
  createDataRepositoryAssociation(
    args: CreateDataRepositoryAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDataRepositoryAssociationCommandOutput>;
  createDataRepositoryAssociation(
    args: CreateDataRepositoryAssociationCommandInput,
    cb: (err: any, data?: CreateDataRepositoryAssociationCommandOutput) => void
  ): void;
  createDataRepositoryAssociation(
    args: CreateDataRepositoryAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDataRepositoryAssociationCommandOutput) => void
  ): void;
  createDataRepositoryTask(
    args: CreateDataRepositoryTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDataRepositoryTaskCommandOutput>;
  createDataRepositoryTask(
    args: CreateDataRepositoryTaskCommandInput,
    cb: (err: any, data?: CreateDataRepositoryTaskCommandOutput) => void
  ): void;
  createDataRepositoryTask(
    args: CreateDataRepositoryTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDataRepositoryTaskCommandOutput) => void
  ): void;
  createFileCache(
    args: CreateFileCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFileCacheCommandOutput>;
  createFileCache(
    args: CreateFileCacheCommandInput,
    cb: (err: any, data?: CreateFileCacheCommandOutput) => void
  ): void;
  createFileCache(
    args: CreateFileCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFileCacheCommandOutput) => void
  ): void;
  createFileSystem(
    args: CreateFileSystemCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFileSystemCommandOutput>;
  createFileSystem(
    args: CreateFileSystemCommandInput,
    cb: (err: any, data?: CreateFileSystemCommandOutput) => void
  ): void;
  createFileSystem(
    args: CreateFileSystemCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFileSystemCommandOutput) => void
  ): void;
  createFileSystemFromBackup(
    args: CreateFileSystemFromBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFileSystemFromBackupCommandOutput>;
  createFileSystemFromBackup(
    args: CreateFileSystemFromBackupCommandInput,
    cb: (err: any, data?: CreateFileSystemFromBackupCommandOutput) => void
  ): void;
  createFileSystemFromBackup(
    args: CreateFileSystemFromBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFileSystemFromBackupCommandOutput) => void
  ): void;
  createSnapshot(
    args: CreateSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSnapshotCommandOutput>;
  createSnapshot(
    args: CreateSnapshotCommandInput,
    cb: (err: any, data?: CreateSnapshotCommandOutput) => void
  ): void;
  createSnapshot(
    args: CreateSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSnapshotCommandOutput) => void
  ): void;
  createStorageVirtualMachine(
    args: CreateStorageVirtualMachineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateStorageVirtualMachineCommandOutput>;
  createStorageVirtualMachine(
    args: CreateStorageVirtualMachineCommandInput,
    cb: (err: any, data?: CreateStorageVirtualMachineCommandOutput) => void
  ): void;
  createStorageVirtualMachine(
    args: CreateStorageVirtualMachineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateStorageVirtualMachineCommandOutput) => void
  ): void;
  createVolume(
    args: CreateVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVolumeCommandOutput>;
  createVolume(
    args: CreateVolumeCommandInput,
    cb: (err: any, data?: CreateVolumeCommandOutput) => void
  ): void;
  createVolume(
    args: CreateVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVolumeCommandOutput) => void
  ): void;
  createVolumeFromBackup(
    args: CreateVolumeFromBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVolumeFromBackupCommandOutput>;
  createVolumeFromBackup(
    args: CreateVolumeFromBackupCommandInput,
    cb: (err: any, data?: CreateVolumeFromBackupCommandOutput) => void
  ): void;
  createVolumeFromBackup(
    args: CreateVolumeFromBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVolumeFromBackupCommandOutput) => void
  ): void;
  deleteBackup(
    args: DeleteBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBackupCommandOutput>;
  deleteBackup(
    args: DeleteBackupCommandInput,
    cb: (err: any, data?: DeleteBackupCommandOutput) => void
  ): void;
  deleteBackup(
    args: DeleteBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBackupCommandOutput) => void
  ): void;
  deleteDataRepositoryAssociation(
    args: DeleteDataRepositoryAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDataRepositoryAssociationCommandOutput>;
  deleteDataRepositoryAssociation(
    args: DeleteDataRepositoryAssociationCommandInput,
    cb: (err: any, data?: DeleteDataRepositoryAssociationCommandOutput) => void
  ): void;
  deleteDataRepositoryAssociation(
    args: DeleteDataRepositoryAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDataRepositoryAssociationCommandOutput) => void
  ): void;
  deleteFileCache(
    args: DeleteFileCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFileCacheCommandOutput>;
  deleteFileCache(
    args: DeleteFileCacheCommandInput,
    cb: (err: any, data?: DeleteFileCacheCommandOutput) => void
  ): void;
  deleteFileCache(
    args: DeleteFileCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFileCacheCommandOutput) => void
  ): void;
  deleteFileSystem(
    args: DeleteFileSystemCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFileSystemCommandOutput>;
  deleteFileSystem(
    args: DeleteFileSystemCommandInput,
    cb: (err: any, data?: DeleteFileSystemCommandOutput) => void
  ): void;
  deleteFileSystem(
    args: DeleteFileSystemCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFileSystemCommandOutput) => void
  ): void;
  deleteSnapshot(
    args: DeleteSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSnapshotCommandOutput>;
  deleteSnapshot(
    args: DeleteSnapshotCommandInput,
    cb: (err: any, data?: DeleteSnapshotCommandOutput) => void
  ): void;
  deleteSnapshot(
    args: DeleteSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSnapshotCommandOutput) => void
  ): void;
  deleteStorageVirtualMachine(
    args: DeleteStorageVirtualMachineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteStorageVirtualMachineCommandOutput>;
  deleteStorageVirtualMachine(
    args: DeleteStorageVirtualMachineCommandInput,
    cb: (err: any, data?: DeleteStorageVirtualMachineCommandOutput) => void
  ): void;
  deleteStorageVirtualMachine(
    args: DeleteStorageVirtualMachineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteStorageVirtualMachineCommandOutput) => void
  ): void;
  deleteVolume(
    args: DeleteVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVolumeCommandOutput>;
  deleteVolume(
    args: DeleteVolumeCommandInput,
    cb: (err: any, data?: DeleteVolumeCommandOutput) => void
  ): void;
  deleteVolume(
    args: DeleteVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVolumeCommandOutput) => void
  ): void;
  describeBackups(): Promise<DescribeBackupsCommandOutput>;
  describeBackups(
    args: DescribeBackupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBackupsCommandOutput>;
  describeBackups(
    args: DescribeBackupsCommandInput,
    cb: (err: any, data?: DescribeBackupsCommandOutput) => void
  ): void;
  describeBackups(
    args: DescribeBackupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBackupsCommandOutput) => void
  ): void;
  describeDataRepositoryAssociations(): Promise<DescribeDataRepositoryAssociationsCommandOutput>;
  describeDataRepositoryAssociations(
    args: DescribeDataRepositoryAssociationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDataRepositoryAssociationsCommandOutput>;
  describeDataRepositoryAssociations(
    args: DescribeDataRepositoryAssociationsCommandInput,
    cb: (
      err: any,
      data?: DescribeDataRepositoryAssociationsCommandOutput
    ) => void
  ): void;
  describeDataRepositoryAssociations(
    args: DescribeDataRepositoryAssociationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeDataRepositoryAssociationsCommandOutput
    ) => void
  ): void;
  describeDataRepositoryTasks(): Promise<DescribeDataRepositoryTasksCommandOutput>;
  describeDataRepositoryTasks(
    args: DescribeDataRepositoryTasksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDataRepositoryTasksCommandOutput>;
  describeDataRepositoryTasks(
    args: DescribeDataRepositoryTasksCommandInput,
    cb: (err: any, data?: DescribeDataRepositoryTasksCommandOutput) => void
  ): void;
  describeDataRepositoryTasks(
    args: DescribeDataRepositoryTasksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDataRepositoryTasksCommandOutput) => void
  ): void;
  describeFileCaches(): Promise<DescribeFileCachesCommandOutput>;
  describeFileCaches(
    args: DescribeFileCachesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFileCachesCommandOutput>;
  describeFileCaches(
    args: DescribeFileCachesCommandInput,
    cb: (err: any, data?: DescribeFileCachesCommandOutput) => void
  ): void;
  describeFileCaches(
    args: DescribeFileCachesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFileCachesCommandOutput) => void
  ): void;
  describeFileSystemAliases(
    args: DescribeFileSystemAliasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFileSystemAliasesCommandOutput>;
  describeFileSystemAliases(
    args: DescribeFileSystemAliasesCommandInput,
    cb: (err: any, data?: DescribeFileSystemAliasesCommandOutput) => void
  ): void;
  describeFileSystemAliases(
    args: DescribeFileSystemAliasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFileSystemAliasesCommandOutput) => void
  ): void;
  describeFileSystems(): Promise<DescribeFileSystemsCommandOutput>;
  describeFileSystems(
    args: DescribeFileSystemsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFileSystemsCommandOutput>;
  describeFileSystems(
    args: DescribeFileSystemsCommandInput,
    cb: (err: any, data?: DescribeFileSystemsCommandOutput) => void
  ): void;
  describeFileSystems(
    args: DescribeFileSystemsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFileSystemsCommandOutput) => void
  ): void;
  describeSharedVpcConfiguration(): Promise<DescribeSharedVpcConfigurationCommandOutput>;
  describeSharedVpcConfiguration(
    args: DescribeSharedVpcConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSharedVpcConfigurationCommandOutput>;
  describeSharedVpcConfiguration(
    args: DescribeSharedVpcConfigurationCommandInput,
    cb: (err: any, data?: DescribeSharedVpcConfigurationCommandOutput) => void
  ): void;
  describeSharedVpcConfiguration(
    args: DescribeSharedVpcConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSharedVpcConfigurationCommandOutput) => void
  ): void;
  describeSnapshots(): Promise<DescribeSnapshotsCommandOutput>;
  describeSnapshots(
    args: DescribeSnapshotsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSnapshotsCommandOutput>;
  describeSnapshots(
    args: DescribeSnapshotsCommandInput,
    cb: (err: any, data?: DescribeSnapshotsCommandOutput) => void
  ): void;
  describeSnapshots(
    args: DescribeSnapshotsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSnapshotsCommandOutput) => void
  ): void;
  describeStorageVirtualMachines(): Promise<DescribeStorageVirtualMachinesCommandOutput>;
  describeStorageVirtualMachines(
    args: DescribeStorageVirtualMachinesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeStorageVirtualMachinesCommandOutput>;
  describeStorageVirtualMachines(
    args: DescribeStorageVirtualMachinesCommandInput,
    cb: (err: any, data?: DescribeStorageVirtualMachinesCommandOutput) => void
  ): void;
  describeStorageVirtualMachines(
    args: DescribeStorageVirtualMachinesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeStorageVirtualMachinesCommandOutput) => void
  ): void;
  describeVolumes(): Promise<DescribeVolumesCommandOutput>;
  describeVolumes(
    args: DescribeVolumesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVolumesCommandOutput>;
  describeVolumes(
    args: DescribeVolumesCommandInput,
    cb: (err: any, data?: DescribeVolumesCommandOutput) => void
  ): void;
  describeVolumes(
    args: DescribeVolumesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVolumesCommandOutput) => void
  ): void;
  disassociateFileSystemAliases(
    args: DisassociateFileSystemAliasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateFileSystemAliasesCommandOutput>;
  disassociateFileSystemAliases(
    args: DisassociateFileSystemAliasesCommandInput,
    cb: (err: any, data?: DisassociateFileSystemAliasesCommandOutput) => void
  ): void;
  disassociateFileSystemAliases(
    args: DisassociateFileSystemAliasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateFileSystemAliasesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  releaseFileSystemNfsV3Locks(
    args: ReleaseFileSystemNfsV3LocksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ReleaseFileSystemNfsV3LocksCommandOutput>;
  releaseFileSystemNfsV3Locks(
    args: ReleaseFileSystemNfsV3LocksCommandInput,
    cb: (err: any, data?: ReleaseFileSystemNfsV3LocksCommandOutput) => void
  ): void;
  releaseFileSystemNfsV3Locks(
    args: ReleaseFileSystemNfsV3LocksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ReleaseFileSystemNfsV3LocksCommandOutput) => void
  ): void;
  restoreVolumeFromSnapshot(
    args: RestoreVolumeFromSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RestoreVolumeFromSnapshotCommandOutput>;
  restoreVolumeFromSnapshot(
    args: RestoreVolumeFromSnapshotCommandInput,
    cb: (err: any, data?: RestoreVolumeFromSnapshotCommandOutput) => void
  ): void;
  restoreVolumeFromSnapshot(
    args: RestoreVolumeFromSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RestoreVolumeFromSnapshotCommandOutput) => void
  ): void;
  startMisconfiguredStateRecovery(
    args: StartMisconfiguredStateRecoveryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartMisconfiguredStateRecoveryCommandOutput>;
  startMisconfiguredStateRecovery(
    args: StartMisconfiguredStateRecoveryCommandInput,
    cb: (err: any, data?: StartMisconfiguredStateRecoveryCommandOutput) => void
  ): void;
  startMisconfiguredStateRecovery(
    args: StartMisconfiguredStateRecoveryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartMisconfiguredStateRecoveryCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateDataRepositoryAssociation(
    args: UpdateDataRepositoryAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDataRepositoryAssociationCommandOutput>;
  updateDataRepositoryAssociation(
    args: UpdateDataRepositoryAssociationCommandInput,
    cb: (err: any, data?: UpdateDataRepositoryAssociationCommandOutput) => void
  ): void;
  updateDataRepositoryAssociation(
    args: UpdateDataRepositoryAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDataRepositoryAssociationCommandOutput) => void
  ): void;
  updateFileCache(
    args: UpdateFileCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFileCacheCommandOutput>;
  updateFileCache(
    args: UpdateFileCacheCommandInput,
    cb: (err: any, data?: UpdateFileCacheCommandOutput) => void
  ): void;
  updateFileCache(
    args: UpdateFileCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFileCacheCommandOutput) => void
  ): void;
  updateFileSystem(
    args: UpdateFileSystemCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFileSystemCommandOutput>;
  updateFileSystem(
    args: UpdateFileSystemCommandInput,
    cb: (err: any, data?: UpdateFileSystemCommandOutput) => void
  ): void;
  updateFileSystem(
    args: UpdateFileSystemCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFileSystemCommandOutput) => void
  ): void;
  updateSharedVpcConfiguration(): Promise<UpdateSharedVpcConfigurationCommandOutput>;
  updateSharedVpcConfiguration(
    args: UpdateSharedVpcConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSharedVpcConfigurationCommandOutput>;
  updateSharedVpcConfiguration(
    args: UpdateSharedVpcConfigurationCommandInput,
    cb: (err: any, data?: UpdateSharedVpcConfigurationCommandOutput) => void
  ): void;
  updateSharedVpcConfiguration(
    args: UpdateSharedVpcConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSharedVpcConfigurationCommandOutput) => void
  ): void;
  updateSnapshot(
    args: UpdateSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSnapshotCommandOutput>;
  updateSnapshot(
    args: UpdateSnapshotCommandInput,
    cb: (err: any, data?: UpdateSnapshotCommandOutput) => void
  ): void;
  updateSnapshot(
    args: UpdateSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSnapshotCommandOutput) => void
  ): void;
  updateStorageVirtualMachine(
    args: UpdateStorageVirtualMachineCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateStorageVirtualMachineCommandOutput>;
  updateStorageVirtualMachine(
    args: UpdateStorageVirtualMachineCommandInput,
    cb: (err: any, data?: UpdateStorageVirtualMachineCommandOutput) => void
  ): void;
  updateStorageVirtualMachine(
    args: UpdateStorageVirtualMachineCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateStorageVirtualMachineCommandOutput) => void
  ): void;
  updateVolume(
    args: UpdateVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVolumeCommandOutput>;
  updateVolume(
    args: UpdateVolumeCommandInput,
    cb: (err: any, data?: UpdateVolumeCommandOutput) => void
  ): void;
  updateVolume(
    args: UpdateVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVolumeCommandOutput) => void
  ): void;
}
export declare class FSx extends FSxClient implements FSx {}
