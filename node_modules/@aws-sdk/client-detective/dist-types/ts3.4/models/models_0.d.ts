import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DetectiveServiceException as __BaseException } from "./DetectiveServiceException";
export interface AcceptInvitationRequest {
  GraphArn: string | undefined;
}
export declare const ErrorCode: {
  readonly InternalError: "INTERNAL_ERROR";
  readonly InvalidGraphArn: "INVALID_GRAPH_ARN";
  readonly InvalidRequestBody: "INVALID_REQUEST_BODY";
};
export type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  ErrorCode?: ErrorCode;
  ErrorCodeReason?: string;
  SubErrorCode?: ErrorCode;
  SubErrorCodeReason?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  ErrorCode?: ErrorCode;
  ErrorCodeReason?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface Account {
  AccountId: string | undefined;
  EmailAddress: string | undefined;
}
export interface Administrator {
  AccountId?: string;
  GraphArn?: string;
  DelegationTime?: Date;
}
export interface BatchGetGraphMemberDatasourcesRequest {
  GraphArn: string | undefined;
  AccountIds: string[] | undefined;
}
export declare const DatasourcePackage: {
  readonly ASFF_SECURITYHUB_FINDING: "ASFF_SECURITYHUB_FINDING";
  readonly DETECTIVE_CORE: "DETECTIVE_CORE";
  readonly EKS_AUDIT: "EKS_AUDIT";
};
export type DatasourcePackage =
  (typeof DatasourcePackage)[keyof typeof DatasourcePackage];
export declare const DatasourcePackageIngestState: {
  readonly DISABLED: "DISABLED";
  readonly STARTED: "STARTED";
  readonly STOPPED: "STOPPED";
};
export type DatasourcePackageIngestState =
  (typeof DatasourcePackageIngestState)[keyof typeof DatasourcePackageIngestState];
export interface TimestampForCollection {
  Timestamp?: Date;
}
export interface MembershipDatasources {
  AccountId?: string;
  GraphArn?: string;
  DatasourcePackageIngestHistory?: Partial<
    Record<
      DatasourcePackage,
      Partial<Record<DatasourcePackageIngestState, TimestampForCollection>>
    >
  >;
}
export interface UnprocessedAccount {
  AccountId?: string;
  Reason?: string;
}
export interface BatchGetGraphMemberDatasourcesResponse {
  MemberDatasources?: MembershipDatasources[];
  UnprocessedAccounts?: UnprocessedAccount[];
}
export interface BatchGetMembershipDatasourcesRequest {
  GraphArns: string[] | undefined;
}
export interface UnprocessedGraph {
  GraphArn?: string;
  Reason?: string;
}
export interface BatchGetMembershipDatasourcesResponse {
  MembershipDatasources?: MembershipDatasources[];
  UnprocessedGraphs?: UnprocessedGraph[];
}
export interface CreateGraphRequest {
  Tags?: Record<string, string>;
}
export interface CreateGraphResponse {
  GraphArn?: string;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  Resources?: string[];
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface CreateMembersRequest {
  GraphArn: string | undefined;
  Message?: string;
  DisableEmailNotification?: boolean;
  Accounts: Account[] | undefined;
}
export declare const MemberDisabledReason: {
  readonly VOLUME_TOO_HIGH: "VOLUME_TOO_HIGH";
  readonly VOLUME_UNKNOWN: "VOLUME_UNKNOWN";
};
export type MemberDisabledReason =
  (typeof MemberDisabledReason)[keyof typeof MemberDisabledReason];
export declare const InvitationType: {
  readonly INVITATION: "INVITATION";
  readonly ORGANIZATION: "ORGANIZATION";
};
export type InvitationType =
  (typeof InvitationType)[keyof typeof InvitationType];
export declare const MemberStatus: {
  readonly ACCEPTED_BUT_DISABLED: "ACCEPTED_BUT_DISABLED";
  readonly ENABLED: "ENABLED";
  readonly INVITED: "INVITED";
  readonly VERIFICATION_FAILED: "VERIFICATION_FAILED";
  readonly VERIFICATION_IN_PROGRESS: "VERIFICATION_IN_PROGRESS";
};
export type MemberStatus = (typeof MemberStatus)[keyof typeof MemberStatus];
export interface DatasourcePackageUsageInfo {
  VolumeUsageInBytes?: number;
  VolumeUsageUpdateTime?: Date;
}
export interface MemberDetail {
  AccountId?: string;
  EmailAddress?: string;
  GraphArn?: string;
  MasterId?: string;
  AdministratorId?: string;
  Status?: MemberStatus;
  DisabledReason?: MemberDisabledReason;
  InvitedTime?: Date;
  UpdatedTime?: Date;
  VolumeUsageInBytes?: number;
  VolumeUsageUpdatedTime?: Date;
  PercentOfGraphUtilization?: number;
  PercentOfGraphUtilizationUpdatedTime?: Date;
  InvitationType?: InvitationType;
  VolumeUsageByDatasourcePackage?: Partial<
    Record<DatasourcePackage, DatasourcePackageUsageInfo>
  >;
  DatasourcePackageIngestStates?: Partial<
    Record<DatasourcePackage, DatasourcePackageIngestState>
  >;
}
export interface CreateMembersResponse {
  Members?: MemberDetail[];
  UnprocessedAccounts?: UnprocessedAccount[];
}
export interface DeleteGraphRequest {
  GraphArn: string | undefined;
}
export interface DeleteMembersRequest {
  GraphArn: string | undefined;
  AccountIds: string[] | undefined;
}
export interface DeleteMembersResponse {
  AccountIds?: string[];
  UnprocessedAccounts?: UnprocessedAccount[];
}
export interface DescribeOrganizationConfigurationRequest {
  GraphArn: string | undefined;
}
export interface DescribeOrganizationConfigurationResponse {
  AutoEnable?: boolean;
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface DisassociateMembershipRequest {
  GraphArn: string | undefined;
}
export interface EnableOrganizationAdminAccountRequest {
  AccountId: string | undefined;
}
export interface GetInvestigationRequest {
  GraphArn: string | undefined;
  InvestigationId: string | undefined;
}
export declare const EntityType: {
  readonly IAM_ROLE: "IAM_ROLE";
  readonly IAM_USER: "IAM_USER";
};
export type EntityType = (typeof EntityType)[keyof typeof EntityType];
export declare const Severity: {
  readonly CRITICAL: "CRITICAL";
  readonly HIGH: "HIGH";
  readonly INFORMATIONAL: "INFORMATIONAL";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
};
export type Severity = (typeof Severity)[keyof typeof Severity];
export declare const State: {
  readonly ACTIVE: "ACTIVE";
  readonly ARCHIVED: "ARCHIVED";
};
export type State = (typeof State)[keyof typeof State];
export declare const Status: {
  readonly FAILED: "FAILED";
  readonly RUNNING: "RUNNING";
  readonly SUCCESSFUL: "SUCCESSFUL";
};
export type Status = (typeof Status)[keyof typeof Status];
export interface GetInvestigationResponse {
  GraphArn?: string;
  InvestigationId?: string;
  EntityArn?: string;
  EntityType?: EntityType;
  CreatedTime?: Date;
  ScopeStartTime?: Date;
  ScopeEndTime?: Date;
  Status?: Status;
  Severity?: Severity;
  State?: State;
}
export interface GetMembersRequest {
  GraphArn: string | undefined;
  AccountIds: string[] | undefined;
}
export interface GetMembersResponse {
  MemberDetails?: MemberDetail[];
  UnprocessedAccounts?: UnprocessedAccount[];
}
export interface ListDatasourcePackagesRequest {
  GraphArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface DatasourcePackageIngestDetail {
  DatasourcePackageIngestState?: DatasourcePackageIngestState;
  LastIngestStateChange?: Partial<
    Record<DatasourcePackageIngestState, TimestampForCollection>
  >;
}
export interface ListDatasourcePackagesResponse {
  DatasourcePackages?: Partial<
    Record<DatasourcePackage, DatasourcePackageIngestDetail>
  >;
  NextToken?: string;
}
export interface ListGraphsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface Graph {
  Arn?: string;
  CreatedTime?: Date;
}
export interface ListGraphsResponse {
  GraphList?: Graph[];
  NextToken?: string;
}
export declare const IndicatorType: {
  readonly FLAGGED_IP_ADDRESS: "FLAGGED_IP_ADDRESS";
  readonly IMPOSSIBLE_TRAVEL: "IMPOSSIBLE_TRAVEL";
  readonly NEW_ASO: "NEW_ASO";
  readonly NEW_GEOLOCATION: "NEW_GEOLOCATION";
  readonly NEW_USER_AGENT: "NEW_USER_AGENT";
  readonly RELATED_FINDING: "RELATED_FINDING";
  readonly RELATED_FINDING_GROUP: "RELATED_FINDING_GROUP";
  readonly TTP_OBSERVED: "TTP_OBSERVED";
};
export type IndicatorType = (typeof IndicatorType)[keyof typeof IndicatorType];
export interface ListIndicatorsRequest {
  GraphArn: string | undefined;
  InvestigationId: string | undefined;
  IndicatorType?: IndicatorType;
  NextToken?: string;
  MaxResults?: number;
}
export declare const Reason: {
  readonly AWS_THREAT_INTELLIGENCE: "AWS_THREAT_INTELLIGENCE";
};
export type Reason = (typeof Reason)[keyof typeof Reason];
export interface FlaggedIpAddressDetail {
  IpAddress?: string;
  Reason?: Reason;
}
export interface ImpossibleTravelDetail {
  StartingIpAddress?: string;
  EndingIpAddress?: string;
  StartingLocation?: string;
  EndingLocation?: string;
  HourlyTimeDelta?: number;
}
export interface NewAsoDetail {
  Aso?: string;
  IsNewForEntireAccount?: boolean;
}
export interface NewGeolocationDetail {
  Location?: string;
  IpAddress?: string;
  IsNewForEntireAccount?: boolean;
}
export interface NewUserAgentDetail {
  UserAgent?: string;
  IsNewForEntireAccount?: boolean;
}
export interface RelatedFindingDetail {
  Arn?: string;
  Type?: string;
  IpAddress?: string;
}
export interface RelatedFindingGroupDetail {
  Id?: string;
}
export interface TTPsObservedDetail {
  Tactic?: string;
  Technique?: string;
  Procedure?: string;
  IpAddress?: string;
  APIName?: string;
  APISuccessCount?: number;
  APIFailureCount?: number;
}
export interface IndicatorDetail {
  TTPsObservedDetail?: TTPsObservedDetail;
  ImpossibleTravelDetail?: ImpossibleTravelDetail;
  FlaggedIpAddressDetail?: FlaggedIpAddressDetail;
  NewGeolocationDetail?: NewGeolocationDetail;
  NewAsoDetail?: NewAsoDetail;
  NewUserAgentDetail?: NewUserAgentDetail;
  RelatedFindingDetail?: RelatedFindingDetail;
  RelatedFindingGroupDetail?: RelatedFindingGroupDetail;
}
export interface Indicator {
  IndicatorType?: IndicatorType;
  IndicatorDetail?: IndicatorDetail;
}
export interface ListIndicatorsResponse {
  GraphArn?: string;
  InvestigationId?: string;
  NextToken?: string;
  Indicators?: Indicator[];
}
export interface DateFilter {
  StartInclusive: Date | undefined;
  EndInclusive: Date | undefined;
}
export interface StringFilter {
  Value: string | undefined;
}
export interface FilterCriteria {
  Severity?: StringFilter;
  Status?: StringFilter;
  State?: StringFilter;
  EntityArn?: StringFilter;
  CreatedTime?: DateFilter;
}
export declare const Field: {
  readonly CREATED_TIME: "CREATED_TIME";
  readonly SEVERITY: "SEVERITY";
  readonly STATUS: "STATUS";
};
export type Field = (typeof Field)[keyof typeof Field];
export declare const SortOrder: {
  readonly ASC: "ASC";
  readonly DESC: "DESC";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface SortCriteria {
  Field?: Field;
  SortOrder?: SortOrder;
}
export interface ListInvestigationsRequest {
  GraphArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  FilterCriteria?: FilterCriteria;
  SortCriteria?: SortCriteria;
}
export interface InvestigationDetail {
  InvestigationId?: string;
  Severity?: Severity;
  Status?: Status;
  State?: State;
  CreatedTime?: Date;
  EntityArn?: string;
  EntityType?: EntityType;
}
export interface ListInvestigationsResponse {
  InvestigationDetails?: InvestigationDetail[];
  NextToken?: string;
}
export interface ListInvitationsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListInvitationsResponse {
  Invitations?: MemberDetail[];
  NextToken?: string;
}
export interface ListMembersRequest {
  GraphArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListMembersResponse {
  MemberDetails?: MemberDetail[];
  NextToken?: string;
}
export interface ListOrganizationAdminAccountsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListOrganizationAdminAccountsResponse {
  Administrators?: Administrator[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface RejectInvitationRequest {
  GraphArn: string | undefined;
}
export interface StartInvestigationRequest {
  GraphArn: string | undefined;
  EntityArn: string | undefined;
  ScopeStartTime: Date | undefined;
  ScopeEndTime: Date | undefined;
}
export interface StartInvestigationResponse {
  InvestigationId?: string;
}
export interface StartMonitoringMemberRequest {
  GraphArn: string | undefined;
  AccountId: string | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDatasourcePackagesRequest {
  GraphArn: string | undefined;
  DatasourcePackages: DatasourcePackage[] | undefined;
}
export interface UpdateInvestigationStateRequest {
  GraphArn: string | undefined;
  InvestigationId: string | undefined;
  State: State | undefined;
}
export interface UpdateOrganizationConfigurationRequest {
  GraphArn: string | undefined;
  AutoEnable?: boolean;
}
export declare const AccountFilterSensitiveLog: (obj: Account) => any;
export declare const CreateMembersRequestFilterSensitiveLog: (
  obj: CreateMembersRequest
) => any;
export declare const MemberDetailFilterSensitiveLog: (obj: MemberDetail) => any;
export declare const CreateMembersResponseFilterSensitiveLog: (
  obj: CreateMembersResponse
) => any;
export declare const GetMembersResponseFilterSensitiveLog: (
  obj: GetMembersResponse
) => any;
export declare const ListInvitationsResponseFilterSensitiveLog: (
  obj: ListInvitationsResponse
) => any;
export declare const ListMembersResponseFilterSensitiveLog: (
  obj: ListMembersResponse
) => any;
