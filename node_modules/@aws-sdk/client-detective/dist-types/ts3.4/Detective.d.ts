import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AcceptInvitationCommandInput,
  AcceptInvitationCommandOutput,
} from "./commands/AcceptInvitationCommand";
import {
  BatchGetGraphMemberDatasourcesCommandInput,
  BatchGetGraphMemberDatasourcesCommandOutput,
} from "./commands/BatchGetGraphMemberDatasourcesCommand";
import {
  BatchGetMembershipDatasourcesCommandInput,
  BatchGetMembershipDatasourcesCommandOutput,
} from "./commands/BatchGetMembershipDatasourcesCommand";
import {
  CreateGraphCommandInput,
  CreateGraphCommandOutput,
} from "./commands/CreateGraphCommand";
import {
  CreateMembersCommandInput,
  CreateMembersCommandOutput,
} from "./commands/CreateMembersCommand";
import {
  DeleteGraphCommandInput,
  DeleteGraphCommandOutput,
} from "./commands/DeleteGraphCommand";
import {
  DeleteMembersCommandInput,
  DeleteMembersCommandOutput,
} from "./commands/DeleteMembersCommand";
import {
  DescribeOrganizationConfigurationCommandInput,
  DescribeOrganizationConfigurationCommandOutput,
} from "./commands/DescribeOrganizationConfigurationCommand";
import {
  DisableOrganizationAdminAccountCommandInput,
  DisableOrganizationAdminAccountCommandOutput,
} from "./commands/DisableOrganizationAdminAccountCommand";
import {
  DisassociateMembershipCommandInput,
  DisassociateMembershipCommandOutput,
} from "./commands/DisassociateMembershipCommand";
import {
  EnableOrganizationAdminAccountCommandInput,
  EnableOrganizationAdminAccountCommandOutput,
} from "./commands/EnableOrganizationAdminAccountCommand";
import {
  GetInvestigationCommandInput,
  GetInvestigationCommandOutput,
} from "./commands/GetInvestigationCommand";
import {
  GetMembersCommandInput,
  GetMembersCommandOutput,
} from "./commands/GetMembersCommand";
import {
  ListDatasourcePackagesCommandInput,
  ListDatasourcePackagesCommandOutput,
} from "./commands/ListDatasourcePackagesCommand";
import {
  ListGraphsCommandInput,
  ListGraphsCommandOutput,
} from "./commands/ListGraphsCommand";
import {
  ListIndicatorsCommandInput,
  ListIndicatorsCommandOutput,
} from "./commands/ListIndicatorsCommand";
import {
  ListInvestigationsCommandInput,
  ListInvestigationsCommandOutput,
} from "./commands/ListInvestigationsCommand";
import {
  ListInvitationsCommandInput,
  ListInvitationsCommandOutput,
} from "./commands/ListInvitationsCommand";
import {
  ListMembersCommandInput,
  ListMembersCommandOutput,
} from "./commands/ListMembersCommand";
import {
  ListOrganizationAdminAccountsCommandInput,
  ListOrganizationAdminAccountsCommandOutput,
} from "./commands/ListOrganizationAdminAccountsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  RejectInvitationCommandInput,
  RejectInvitationCommandOutput,
} from "./commands/RejectInvitationCommand";
import {
  StartInvestigationCommandInput,
  StartInvestigationCommandOutput,
} from "./commands/StartInvestigationCommand";
import {
  StartMonitoringMemberCommandInput,
  StartMonitoringMemberCommandOutput,
} from "./commands/StartMonitoringMemberCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateDatasourcePackagesCommandInput,
  UpdateDatasourcePackagesCommandOutput,
} from "./commands/UpdateDatasourcePackagesCommand";
import {
  UpdateInvestigationStateCommandInput,
  UpdateInvestigationStateCommandOutput,
} from "./commands/UpdateInvestigationStateCommand";
import {
  UpdateOrganizationConfigurationCommandInput,
  UpdateOrganizationConfigurationCommandOutput,
} from "./commands/UpdateOrganizationConfigurationCommand";
import { DetectiveClient } from "./DetectiveClient";
export interface Detective {
  acceptInvitation(
    args: AcceptInvitationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AcceptInvitationCommandOutput>;
  acceptInvitation(
    args: AcceptInvitationCommandInput,
    cb: (err: any, data?: AcceptInvitationCommandOutput) => void
  ): void;
  acceptInvitation(
    args: AcceptInvitationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AcceptInvitationCommandOutput) => void
  ): void;
  batchGetGraphMemberDatasources(
    args: BatchGetGraphMemberDatasourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchGetGraphMemberDatasourcesCommandOutput>;
  batchGetGraphMemberDatasources(
    args: BatchGetGraphMemberDatasourcesCommandInput,
    cb: (err: any, data?: BatchGetGraphMemberDatasourcesCommandOutput) => void
  ): void;
  batchGetGraphMemberDatasources(
    args: BatchGetGraphMemberDatasourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchGetGraphMemberDatasourcesCommandOutput) => void
  ): void;
  batchGetMembershipDatasources(
    args: BatchGetMembershipDatasourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchGetMembershipDatasourcesCommandOutput>;
  batchGetMembershipDatasources(
    args: BatchGetMembershipDatasourcesCommandInput,
    cb: (err: any, data?: BatchGetMembershipDatasourcesCommandOutput) => void
  ): void;
  batchGetMembershipDatasources(
    args: BatchGetMembershipDatasourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchGetMembershipDatasourcesCommandOutput) => void
  ): void;
  createGraph(): Promise<CreateGraphCommandOutput>;
  createGraph(
    args: CreateGraphCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGraphCommandOutput>;
  createGraph(
    args: CreateGraphCommandInput,
    cb: (err: any, data?: CreateGraphCommandOutput) => void
  ): void;
  createGraph(
    args: CreateGraphCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGraphCommandOutput) => void
  ): void;
  createMembers(
    args: CreateMembersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateMembersCommandOutput>;
  createMembers(
    args: CreateMembersCommandInput,
    cb: (err: any, data?: CreateMembersCommandOutput) => void
  ): void;
  createMembers(
    args: CreateMembersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateMembersCommandOutput) => void
  ): void;
  deleteGraph(
    args: DeleteGraphCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGraphCommandOutput>;
  deleteGraph(
    args: DeleteGraphCommandInput,
    cb: (err: any, data?: DeleteGraphCommandOutput) => void
  ): void;
  deleteGraph(
    args: DeleteGraphCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGraphCommandOutput) => void
  ): void;
  deleteMembers(
    args: DeleteMembersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteMembersCommandOutput>;
  deleteMembers(
    args: DeleteMembersCommandInput,
    cb: (err: any, data?: DeleteMembersCommandOutput) => void
  ): void;
  deleteMembers(
    args: DeleteMembersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteMembersCommandOutput) => void
  ): void;
  describeOrganizationConfiguration(
    args: DescribeOrganizationConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeOrganizationConfigurationCommandOutput>;
  describeOrganizationConfiguration(
    args: DescribeOrganizationConfigurationCommandInput,
    cb: (
      err: any,
      data?: DescribeOrganizationConfigurationCommandOutput
    ) => void
  ): void;
  describeOrganizationConfiguration(
    args: DescribeOrganizationConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeOrganizationConfigurationCommandOutput
    ) => void
  ): void;
  disableOrganizationAdminAccount(): Promise<DisableOrganizationAdminAccountCommandOutput>;
  disableOrganizationAdminAccount(
    args: DisableOrganizationAdminAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisableOrganizationAdminAccountCommandOutput>;
  disableOrganizationAdminAccount(
    args: DisableOrganizationAdminAccountCommandInput,
    cb: (err: any, data?: DisableOrganizationAdminAccountCommandOutput) => void
  ): void;
  disableOrganizationAdminAccount(
    args: DisableOrganizationAdminAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisableOrganizationAdminAccountCommandOutput) => void
  ): void;
  disassociateMembership(
    args: DisassociateMembershipCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateMembershipCommandOutput>;
  disassociateMembership(
    args: DisassociateMembershipCommandInput,
    cb: (err: any, data?: DisassociateMembershipCommandOutput) => void
  ): void;
  disassociateMembership(
    args: DisassociateMembershipCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateMembershipCommandOutput) => void
  ): void;
  enableOrganizationAdminAccount(
    args: EnableOrganizationAdminAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<EnableOrganizationAdminAccountCommandOutput>;
  enableOrganizationAdminAccount(
    args: EnableOrganizationAdminAccountCommandInput,
    cb: (err: any, data?: EnableOrganizationAdminAccountCommandOutput) => void
  ): void;
  enableOrganizationAdminAccount(
    args: EnableOrganizationAdminAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: EnableOrganizationAdminAccountCommandOutput) => void
  ): void;
  getInvestigation(
    args: GetInvestigationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInvestigationCommandOutput>;
  getInvestigation(
    args: GetInvestigationCommandInput,
    cb: (err: any, data?: GetInvestigationCommandOutput) => void
  ): void;
  getInvestigation(
    args: GetInvestigationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInvestigationCommandOutput) => void
  ): void;
  getMembers(
    args: GetMembersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetMembersCommandOutput>;
  getMembers(
    args: GetMembersCommandInput,
    cb: (err: any, data?: GetMembersCommandOutput) => void
  ): void;
  getMembers(
    args: GetMembersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetMembersCommandOutput) => void
  ): void;
  listDatasourcePackages(
    args: ListDatasourcePackagesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasourcePackagesCommandOutput>;
  listDatasourcePackages(
    args: ListDatasourcePackagesCommandInput,
    cb: (err: any, data?: ListDatasourcePackagesCommandOutput) => void
  ): void;
  listDatasourcePackages(
    args: ListDatasourcePackagesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasourcePackagesCommandOutput) => void
  ): void;
  listGraphs(): Promise<ListGraphsCommandOutput>;
  listGraphs(
    args: ListGraphsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGraphsCommandOutput>;
  listGraphs(
    args: ListGraphsCommandInput,
    cb: (err: any, data?: ListGraphsCommandOutput) => void
  ): void;
  listGraphs(
    args: ListGraphsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGraphsCommandOutput) => void
  ): void;
  listIndicators(
    args: ListIndicatorsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIndicatorsCommandOutput>;
  listIndicators(
    args: ListIndicatorsCommandInput,
    cb: (err: any, data?: ListIndicatorsCommandOutput) => void
  ): void;
  listIndicators(
    args: ListIndicatorsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIndicatorsCommandOutput) => void
  ): void;
  listInvestigations(
    args: ListInvestigationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListInvestigationsCommandOutput>;
  listInvestigations(
    args: ListInvestigationsCommandInput,
    cb: (err: any, data?: ListInvestigationsCommandOutput) => void
  ): void;
  listInvestigations(
    args: ListInvestigationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListInvestigationsCommandOutput) => void
  ): void;
  listInvitations(): Promise<ListInvitationsCommandOutput>;
  listInvitations(
    args: ListInvitationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListInvitationsCommandOutput>;
  listInvitations(
    args: ListInvitationsCommandInput,
    cb: (err: any, data?: ListInvitationsCommandOutput) => void
  ): void;
  listInvitations(
    args: ListInvitationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListInvitationsCommandOutput) => void
  ): void;
  listMembers(
    args: ListMembersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListMembersCommandOutput>;
  listMembers(
    args: ListMembersCommandInput,
    cb: (err: any, data?: ListMembersCommandOutput) => void
  ): void;
  listMembers(
    args: ListMembersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListMembersCommandOutput) => void
  ): void;
  listOrganizationAdminAccounts(): Promise<ListOrganizationAdminAccountsCommandOutput>;
  listOrganizationAdminAccounts(
    args: ListOrganizationAdminAccountsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListOrganizationAdminAccountsCommandOutput>;
  listOrganizationAdminAccounts(
    args: ListOrganizationAdminAccountsCommandInput,
    cb: (err: any, data?: ListOrganizationAdminAccountsCommandOutput) => void
  ): void;
  listOrganizationAdminAccounts(
    args: ListOrganizationAdminAccountsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListOrganizationAdminAccountsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  rejectInvitation(
    args: RejectInvitationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RejectInvitationCommandOutput>;
  rejectInvitation(
    args: RejectInvitationCommandInput,
    cb: (err: any, data?: RejectInvitationCommandOutput) => void
  ): void;
  rejectInvitation(
    args: RejectInvitationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RejectInvitationCommandOutput) => void
  ): void;
  startInvestigation(
    args: StartInvestigationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartInvestigationCommandOutput>;
  startInvestigation(
    args: StartInvestigationCommandInput,
    cb: (err: any, data?: StartInvestigationCommandOutput) => void
  ): void;
  startInvestigation(
    args: StartInvestigationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartInvestigationCommandOutput) => void
  ): void;
  startMonitoringMember(
    args: StartMonitoringMemberCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartMonitoringMemberCommandOutput>;
  startMonitoringMember(
    args: StartMonitoringMemberCommandInput,
    cb: (err: any, data?: StartMonitoringMemberCommandOutput) => void
  ): void;
  startMonitoringMember(
    args: StartMonitoringMemberCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartMonitoringMemberCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateDatasourcePackages(
    args: UpdateDatasourcePackagesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDatasourcePackagesCommandOutput>;
  updateDatasourcePackages(
    args: UpdateDatasourcePackagesCommandInput,
    cb: (err: any, data?: UpdateDatasourcePackagesCommandOutput) => void
  ): void;
  updateDatasourcePackages(
    args: UpdateDatasourcePackagesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDatasourcePackagesCommandOutput) => void
  ): void;
  updateInvestigationState(
    args: UpdateInvestigationStateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateInvestigationStateCommandOutput>;
  updateInvestigationState(
    args: UpdateInvestigationStateCommandInput,
    cb: (err: any, data?: UpdateInvestigationStateCommandOutput) => void
  ): void;
  updateInvestigationState(
    args: UpdateInvestigationStateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateInvestigationStateCommandOutput) => void
  ): void;
  updateOrganizationConfiguration(
    args: UpdateOrganizationConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateOrganizationConfigurationCommandOutput>;
  updateOrganizationConfiguration(
    args: UpdateOrganizationConfigurationCommandInput,
    cb: (err: any, data?: UpdateOrganizationConfigurationCommandOutput) => void
  ): void;
  updateOrganizationConfiguration(
    args: UpdateOrganizationConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateOrganizationConfigurationCommandOutput) => void
  ): void;
}
export declare class Detective extends DetectiveClient implements Detective {}
