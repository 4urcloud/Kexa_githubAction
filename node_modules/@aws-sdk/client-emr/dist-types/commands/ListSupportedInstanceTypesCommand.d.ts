import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { EMRClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EMRClient";
import { ListSupportedInstanceTypesInput, ListSupportedInstanceTypesOutput } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link ListSupportedInstanceTypesCommand}.
 */
export interface ListSupportedInstanceTypesCommandInput extends ListSupportedInstanceTypesInput {
}
/**
 * @public
 *
 * The output of {@link ListSupportedInstanceTypesCommand}.
 */
export interface ListSupportedInstanceTypesCommandOutput extends ListSupportedInstanceTypesOutput, __MetadataBearer {
}
declare const ListSupportedInstanceTypesCommand_base: {
    new (input: ListSupportedInstanceTypesCommandInput): import("@smithy/smithy-client").CommandImpl<ListSupportedInstanceTypesCommandInput, ListSupportedInstanceTypesCommandOutput, EMRClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: ListSupportedInstanceTypesCommandInput): import("@smithy/smithy-client").CommandImpl<ListSupportedInstanceTypesCommandInput, ListSupportedInstanceTypesCommandOutput, EMRClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>A list of the instance types that Amazon EMR supports. You can filter the
 *          list by Amazon Web Services Region and Amazon EMR release. </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { EMRClient, ListSupportedInstanceTypesCommand } from "@aws-sdk/client-emr"; // ES Modules import
 * // const { EMRClient, ListSupportedInstanceTypesCommand } = require("@aws-sdk/client-emr"); // CommonJS import
 * const client = new EMRClient(config);
 * const input = { // ListSupportedInstanceTypesInput
 *   ReleaseLabel: "STRING_VALUE", // required
 *   Marker: "STRING_VALUE",
 * };
 * const command = new ListSupportedInstanceTypesCommand(input);
 * const response = await client.send(command);
 * // { // ListSupportedInstanceTypesOutput
 * //   SupportedInstanceTypes: [ // SupportedInstanceTypesList
 * //     { // SupportedInstanceType
 * //       Type: "STRING_VALUE",
 * //       MemoryGB: Number("float"),
 * //       StorageGB: Number("int"),
 * //       VCPU: Number("int"),
 * //       Is64BitsOnly: true || false,
 * //       InstanceFamilyId: "STRING_VALUE",
 * //       EbsOptimizedAvailable: true || false,
 * //       EbsOptimizedByDefault: true || false,
 * //       NumberOfDisks: Number("int"),
 * //       EbsStorageOnly: true || false,
 * //       Architecture: "STRING_VALUE",
 * //     },
 * //   ],
 * //   Marker: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListSupportedInstanceTypesCommandInput - {@link ListSupportedInstanceTypesCommandInput}
 * @returns {@link ListSupportedInstanceTypesCommandOutput}
 * @see {@link ListSupportedInstanceTypesCommandInput} for command's `input` shape.
 * @see {@link ListSupportedInstanceTypesCommandOutput} for command's `response` shape.
 * @see {@link EMRClientResolvedConfig | config} for EMRClient's `config` shape.
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>This exception occurs when there is an internal failure in the Amazon EMR
 *          service.</p>
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>This exception occurs when there is something wrong with user input.</p>
 *
 * @throws {@link EMRServiceException}
 * <p>Base exception class for all service exceptions from EMR service.</p>
 *
 * @public
 */
export declare class ListSupportedInstanceTypesCommand extends ListSupportedInstanceTypesCommand_base {
}
