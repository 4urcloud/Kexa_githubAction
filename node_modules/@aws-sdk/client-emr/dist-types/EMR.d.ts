import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { AddInstanceFleetCommandInput, AddInstanceFleetCommandOutput } from "./commands/AddInstanceFleetCommand";
import { AddInstanceGroupsCommandInput, AddInstanceGroupsCommandOutput } from "./commands/AddInstanceGroupsCommand";
import { AddJobFlowStepsCommandInput, AddJobFlowStepsCommandOutput } from "./commands/AddJobFlowStepsCommand";
import { AddTagsCommandInput, AddTagsCommandOutput } from "./commands/AddTagsCommand";
import { CancelStepsCommandInput, CancelStepsCommandOutput } from "./commands/CancelStepsCommand";
import { CreateSecurityConfigurationCommandInput, CreateSecurityConfigurationCommandOutput } from "./commands/CreateSecurityConfigurationCommand";
import { CreateStudioCommandInput, CreateStudioCommandOutput } from "./commands/CreateStudioCommand";
import { CreateStudioSessionMappingCommandInput, CreateStudioSessionMappingCommandOutput } from "./commands/CreateStudioSessionMappingCommand";
import { DeleteSecurityConfigurationCommandInput, DeleteSecurityConfigurationCommandOutput } from "./commands/DeleteSecurityConfigurationCommand";
import { DeleteStudioCommandInput, DeleteStudioCommandOutput } from "./commands/DeleteStudioCommand";
import { DeleteStudioSessionMappingCommandInput, DeleteStudioSessionMappingCommandOutput } from "./commands/DeleteStudioSessionMappingCommand";
import { DescribeClusterCommandInput, DescribeClusterCommandOutput } from "./commands/DescribeClusterCommand";
import { DescribeJobFlowsCommandInput, DescribeJobFlowsCommandOutput } from "./commands/DescribeJobFlowsCommand";
import { DescribeNotebookExecutionCommandInput, DescribeNotebookExecutionCommandOutput } from "./commands/DescribeNotebookExecutionCommand";
import { DescribeReleaseLabelCommandInput, DescribeReleaseLabelCommandOutput } from "./commands/DescribeReleaseLabelCommand";
import { DescribeSecurityConfigurationCommandInput, DescribeSecurityConfigurationCommandOutput } from "./commands/DescribeSecurityConfigurationCommand";
import { DescribeStepCommandInput, DescribeStepCommandOutput } from "./commands/DescribeStepCommand";
import { DescribeStudioCommandInput, DescribeStudioCommandOutput } from "./commands/DescribeStudioCommand";
import { GetAutoTerminationPolicyCommandInput, GetAutoTerminationPolicyCommandOutput } from "./commands/GetAutoTerminationPolicyCommand";
import { GetBlockPublicAccessConfigurationCommandInput, GetBlockPublicAccessConfigurationCommandOutput } from "./commands/GetBlockPublicAccessConfigurationCommand";
import { GetClusterSessionCredentialsCommandInput, GetClusterSessionCredentialsCommandOutput } from "./commands/GetClusterSessionCredentialsCommand";
import { GetManagedScalingPolicyCommandInput, GetManagedScalingPolicyCommandOutput } from "./commands/GetManagedScalingPolicyCommand";
import { GetStudioSessionMappingCommandInput, GetStudioSessionMappingCommandOutput } from "./commands/GetStudioSessionMappingCommand";
import { ListBootstrapActionsCommandInput, ListBootstrapActionsCommandOutput } from "./commands/ListBootstrapActionsCommand";
import { ListClustersCommandInput, ListClustersCommandOutput } from "./commands/ListClustersCommand";
import { ListInstanceFleetsCommandInput, ListInstanceFleetsCommandOutput } from "./commands/ListInstanceFleetsCommand";
import { ListInstanceGroupsCommandInput, ListInstanceGroupsCommandOutput } from "./commands/ListInstanceGroupsCommand";
import { ListInstancesCommandInput, ListInstancesCommandOutput } from "./commands/ListInstancesCommand";
import { ListNotebookExecutionsCommandInput, ListNotebookExecutionsCommandOutput } from "./commands/ListNotebookExecutionsCommand";
import { ListReleaseLabelsCommandInput, ListReleaseLabelsCommandOutput } from "./commands/ListReleaseLabelsCommand";
import { ListSecurityConfigurationsCommandInput, ListSecurityConfigurationsCommandOutput } from "./commands/ListSecurityConfigurationsCommand";
import { ListStepsCommandInput, ListStepsCommandOutput } from "./commands/ListStepsCommand";
import { ListStudiosCommandInput, ListStudiosCommandOutput } from "./commands/ListStudiosCommand";
import { ListStudioSessionMappingsCommandInput, ListStudioSessionMappingsCommandOutput } from "./commands/ListStudioSessionMappingsCommand";
import { ListSupportedInstanceTypesCommandInput, ListSupportedInstanceTypesCommandOutput } from "./commands/ListSupportedInstanceTypesCommand";
import { ModifyClusterCommandInput, ModifyClusterCommandOutput } from "./commands/ModifyClusterCommand";
import { ModifyInstanceFleetCommandInput, ModifyInstanceFleetCommandOutput } from "./commands/ModifyInstanceFleetCommand";
import { ModifyInstanceGroupsCommandInput, ModifyInstanceGroupsCommandOutput } from "./commands/ModifyInstanceGroupsCommand";
import { PutAutoScalingPolicyCommandInput, PutAutoScalingPolicyCommandOutput } from "./commands/PutAutoScalingPolicyCommand";
import { PutAutoTerminationPolicyCommandInput, PutAutoTerminationPolicyCommandOutput } from "./commands/PutAutoTerminationPolicyCommand";
import { PutBlockPublicAccessConfigurationCommandInput, PutBlockPublicAccessConfigurationCommandOutput } from "./commands/PutBlockPublicAccessConfigurationCommand";
import { PutManagedScalingPolicyCommandInput, PutManagedScalingPolicyCommandOutput } from "./commands/PutManagedScalingPolicyCommand";
import { RemoveAutoScalingPolicyCommandInput, RemoveAutoScalingPolicyCommandOutput } from "./commands/RemoveAutoScalingPolicyCommand";
import { RemoveAutoTerminationPolicyCommandInput, RemoveAutoTerminationPolicyCommandOutput } from "./commands/RemoveAutoTerminationPolicyCommand";
import { RemoveManagedScalingPolicyCommandInput, RemoveManagedScalingPolicyCommandOutput } from "./commands/RemoveManagedScalingPolicyCommand";
import { RemoveTagsCommandInput, RemoveTagsCommandOutput } from "./commands/RemoveTagsCommand";
import { RunJobFlowCommandInput, RunJobFlowCommandOutput } from "./commands/RunJobFlowCommand";
import { SetKeepJobFlowAliveWhenNoStepsCommandInput, SetKeepJobFlowAliveWhenNoStepsCommandOutput } from "./commands/SetKeepJobFlowAliveWhenNoStepsCommand";
import { SetTerminationProtectionCommandInput, SetTerminationProtectionCommandOutput } from "./commands/SetTerminationProtectionCommand";
import { SetUnhealthyNodeReplacementCommandInput, SetUnhealthyNodeReplacementCommandOutput } from "./commands/SetUnhealthyNodeReplacementCommand";
import { SetVisibleToAllUsersCommandInput, SetVisibleToAllUsersCommandOutput } from "./commands/SetVisibleToAllUsersCommand";
import { StartNotebookExecutionCommandInput, StartNotebookExecutionCommandOutput } from "./commands/StartNotebookExecutionCommand";
import { StopNotebookExecutionCommandInput, StopNotebookExecutionCommandOutput } from "./commands/StopNotebookExecutionCommand";
import { TerminateJobFlowsCommandInput, TerminateJobFlowsCommandOutput } from "./commands/TerminateJobFlowsCommand";
import { UpdateStudioCommandInput, UpdateStudioCommandOutput } from "./commands/UpdateStudioCommand";
import { UpdateStudioSessionMappingCommandInput, UpdateStudioSessionMappingCommandOutput } from "./commands/UpdateStudioSessionMappingCommand";
import { EMRClient } from "./EMRClient";
export interface EMR {
    /**
     * @see {@link AddInstanceFleetCommand}
     */
    addInstanceFleet(args: AddInstanceFleetCommandInput, options?: __HttpHandlerOptions): Promise<AddInstanceFleetCommandOutput>;
    addInstanceFleet(args: AddInstanceFleetCommandInput, cb: (err: any, data?: AddInstanceFleetCommandOutput) => void): void;
    addInstanceFleet(args: AddInstanceFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddInstanceFleetCommandOutput) => void): void;
    /**
     * @see {@link AddInstanceGroupsCommand}
     */
    addInstanceGroups(args: AddInstanceGroupsCommandInput, options?: __HttpHandlerOptions): Promise<AddInstanceGroupsCommandOutput>;
    addInstanceGroups(args: AddInstanceGroupsCommandInput, cb: (err: any, data?: AddInstanceGroupsCommandOutput) => void): void;
    addInstanceGroups(args: AddInstanceGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddInstanceGroupsCommandOutput) => void): void;
    /**
     * @see {@link AddJobFlowStepsCommand}
     */
    addJobFlowSteps(args: AddJobFlowStepsCommandInput, options?: __HttpHandlerOptions): Promise<AddJobFlowStepsCommandOutput>;
    addJobFlowSteps(args: AddJobFlowStepsCommandInput, cb: (err: any, data?: AddJobFlowStepsCommandOutput) => void): void;
    addJobFlowSteps(args: AddJobFlowStepsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddJobFlowStepsCommandOutput) => void): void;
    /**
     * @see {@link AddTagsCommand}
     */
    addTags(args: AddTagsCommandInput, options?: __HttpHandlerOptions): Promise<AddTagsCommandOutput>;
    addTags(args: AddTagsCommandInput, cb: (err: any, data?: AddTagsCommandOutput) => void): void;
    addTags(args: AddTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddTagsCommandOutput) => void): void;
    /**
     * @see {@link CancelStepsCommand}
     */
    cancelSteps(args: CancelStepsCommandInput, options?: __HttpHandlerOptions): Promise<CancelStepsCommandOutput>;
    cancelSteps(args: CancelStepsCommandInput, cb: (err: any, data?: CancelStepsCommandOutput) => void): void;
    cancelSteps(args: CancelStepsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelStepsCommandOutput) => void): void;
    /**
     * @see {@link CreateSecurityConfigurationCommand}
     */
    createSecurityConfiguration(args: CreateSecurityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateSecurityConfigurationCommandOutput>;
    createSecurityConfiguration(args: CreateSecurityConfigurationCommandInput, cb: (err: any, data?: CreateSecurityConfigurationCommandOutput) => void): void;
    createSecurityConfiguration(args: CreateSecurityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateSecurityConfigurationCommandOutput) => void): void;
    /**
     * @see {@link CreateStudioCommand}
     */
    createStudio(args: CreateStudioCommandInput, options?: __HttpHandlerOptions): Promise<CreateStudioCommandOutput>;
    createStudio(args: CreateStudioCommandInput, cb: (err: any, data?: CreateStudioCommandOutput) => void): void;
    createStudio(args: CreateStudioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStudioCommandOutput) => void): void;
    /**
     * @see {@link CreateStudioSessionMappingCommand}
     */
    createStudioSessionMapping(args: CreateStudioSessionMappingCommandInput, options?: __HttpHandlerOptions): Promise<CreateStudioSessionMappingCommandOutput>;
    createStudioSessionMapping(args: CreateStudioSessionMappingCommandInput, cb: (err: any, data?: CreateStudioSessionMappingCommandOutput) => void): void;
    createStudioSessionMapping(args: CreateStudioSessionMappingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStudioSessionMappingCommandOutput) => void): void;
    /**
     * @see {@link DeleteSecurityConfigurationCommand}
     */
    deleteSecurityConfiguration(args: DeleteSecurityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteSecurityConfigurationCommandOutput>;
    deleteSecurityConfiguration(args: DeleteSecurityConfigurationCommandInput, cb: (err: any, data?: DeleteSecurityConfigurationCommandOutput) => void): void;
    deleteSecurityConfiguration(args: DeleteSecurityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteSecurityConfigurationCommandOutput) => void): void;
    /**
     * @see {@link DeleteStudioCommand}
     */
    deleteStudio(args: DeleteStudioCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStudioCommandOutput>;
    deleteStudio(args: DeleteStudioCommandInput, cb: (err: any, data?: DeleteStudioCommandOutput) => void): void;
    deleteStudio(args: DeleteStudioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStudioCommandOutput) => void): void;
    /**
     * @see {@link DeleteStudioSessionMappingCommand}
     */
    deleteStudioSessionMapping(args: DeleteStudioSessionMappingCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStudioSessionMappingCommandOutput>;
    deleteStudioSessionMapping(args: DeleteStudioSessionMappingCommandInput, cb: (err: any, data?: DeleteStudioSessionMappingCommandOutput) => void): void;
    deleteStudioSessionMapping(args: DeleteStudioSessionMappingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStudioSessionMappingCommandOutput) => void): void;
    /**
     * @see {@link DescribeClusterCommand}
     */
    describeCluster(args: DescribeClusterCommandInput, options?: __HttpHandlerOptions): Promise<DescribeClusterCommandOutput>;
    describeCluster(args: DescribeClusterCommandInput, cb: (err: any, data?: DescribeClusterCommandOutput) => void): void;
    describeCluster(args: DescribeClusterCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeClusterCommandOutput) => void): void;
    /**
     * @see {@link DescribeJobFlowsCommand}
     */
    describeJobFlows(args: DescribeJobFlowsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeJobFlowsCommandOutput>;
    describeJobFlows(args: DescribeJobFlowsCommandInput, cb: (err: any, data?: DescribeJobFlowsCommandOutput) => void): void;
    describeJobFlows(args: DescribeJobFlowsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeJobFlowsCommandOutput) => void): void;
    /**
     * @see {@link DescribeNotebookExecutionCommand}
     */
    describeNotebookExecution(args: DescribeNotebookExecutionCommandInput, options?: __HttpHandlerOptions): Promise<DescribeNotebookExecutionCommandOutput>;
    describeNotebookExecution(args: DescribeNotebookExecutionCommandInput, cb: (err: any, data?: DescribeNotebookExecutionCommandOutput) => void): void;
    describeNotebookExecution(args: DescribeNotebookExecutionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeNotebookExecutionCommandOutput) => void): void;
    /**
     * @see {@link DescribeReleaseLabelCommand}
     */
    describeReleaseLabel(args: DescribeReleaseLabelCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReleaseLabelCommandOutput>;
    describeReleaseLabel(args: DescribeReleaseLabelCommandInput, cb: (err: any, data?: DescribeReleaseLabelCommandOutput) => void): void;
    describeReleaseLabel(args: DescribeReleaseLabelCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReleaseLabelCommandOutput) => void): void;
    /**
     * @see {@link DescribeSecurityConfigurationCommand}
     */
    describeSecurityConfiguration(args: DescribeSecurityConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSecurityConfigurationCommandOutput>;
    describeSecurityConfiguration(args: DescribeSecurityConfigurationCommandInput, cb: (err: any, data?: DescribeSecurityConfigurationCommandOutput) => void): void;
    describeSecurityConfiguration(args: DescribeSecurityConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSecurityConfigurationCommandOutput) => void): void;
    /**
     * @see {@link DescribeStepCommand}
     */
    describeStep(args: DescribeStepCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStepCommandOutput>;
    describeStep(args: DescribeStepCommandInput, cb: (err: any, data?: DescribeStepCommandOutput) => void): void;
    describeStep(args: DescribeStepCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStepCommandOutput) => void): void;
    /**
     * @see {@link DescribeStudioCommand}
     */
    describeStudio(args: DescribeStudioCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStudioCommandOutput>;
    describeStudio(args: DescribeStudioCommandInput, cb: (err: any, data?: DescribeStudioCommandOutput) => void): void;
    describeStudio(args: DescribeStudioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStudioCommandOutput) => void): void;
    /**
     * @see {@link GetAutoTerminationPolicyCommand}
     */
    getAutoTerminationPolicy(args: GetAutoTerminationPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetAutoTerminationPolicyCommandOutput>;
    getAutoTerminationPolicy(args: GetAutoTerminationPolicyCommandInput, cb: (err: any, data?: GetAutoTerminationPolicyCommandOutput) => void): void;
    getAutoTerminationPolicy(args: GetAutoTerminationPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAutoTerminationPolicyCommandOutput) => void): void;
    /**
     * @see {@link GetBlockPublicAccessConfigurationCommand}
     */
    getBlockPublicAccessConfiguration(args: GetBlockPublicAccessConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetBlockPublicAccessConfigurationCommandOutput>;
    getBlockPublicAccessConfiguration(args: GetBlockPublicAccessConfigurationCommandInput, cb: (err: any, data?: GetBlockPublicAccessConfigurationCommandOutput) => void): void;
    getBlockPublicAccessConfiguration(args: GetBlockPublicAccessConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetBlockPublicAccessConfigurationCommandOutput) => void): void;
    /**
     * @see {@link GetClusterSessionCredentialsCommand}
     */
    getClusterSessionCredentials(args: GetClusterSessionCredentialsCommandInput, options?: __HttpHandlerOptions): Promise<GetClusterSessionCredentialsCommandOutput>;
    getClusterSessionCredentials(args: GetClusterSessionCredentialsCommandInput, cb: (err: any, data?: GetClusterSessionCredentialsCommandOutput) => void): void;
    getClusterSessionCredentials(args: GetClusterSessionCredentialsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetClusterSessionCredentialsCommandOutput) => void): void;
    /**
     * @see {@link GetManagedScalingPolicyCommand}
     */
    getManagedScalingPolicy(args: GetManagedScalingPolicyCommandInput, options?: __HttpHandlerOptions): Promise<GetManagedScalingPolicyCommandOutput>;
    getManagedScalingPolicy(args: GetManagedScalingPolicyCommandInput, cb: (err: any, data?: GetManagedScalingPolicyCommandOutput) => void): void;
    getManagedScalingPolicy(args: GetManagedScalingPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetManagedScalingPolicyCommandOutput) => void): void;
    /**
     * @see {@link GetStudioSessionMappingCommand}
     */
    getStudioSessionMapping(args: GetStudioSessionMappingCommandInput, options?: __HttpHandlerOptions): Promise<GetStudioSessionMappingCommandOutput>;
    getStudioSessionMapping(args: GetStudioSessionMappingCommandInput, cb: (err: any, data?: GetStudioSessionMappingCommandOutput) => void): void;
    getStudioSessionMapping(args: GetStudioSessionMappingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetStudioSessionMappingCommandOutput) => void): void;
    /**
     * @see {@link ListBootstrapActionsCommand}
     */
    listBootstrapActions(args: ListBootstrapActionsCommandInput, options?: __HttpHandlerOptions): Promise<ListBootstrapActionsCommandOutput>;
    listBootstrapActions(args: ListBootstrapActionsCommandInput, cb: (err: any, data?: ListBootstrapActionsCommandOutput) => void): void;
    listBootstrapActions(args: ListBootstrapActionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListBootstrapActionsCommandOutput) => void): void;
    /**
     * @see {@link ListClustersCommand}
     */
    listClusters(args: ListClustersCommandInput, options?: __HttpHandlerOptions): Promise<ListClustersCommandOutput>;
    listClusters(args: ListClustersCommandInput, cb: (err: any, data?: ListClustersCommandOutput) => void): void;
    listClusters(args: ListClustersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListClustersCommandOutput) => void): void;
    /**
     * @see {@link ListInstanceFleetsCommand}
     */
    listInstanceFleets(args: ListInstanceFleetsCommandInput, options?: __HttpHandlerOptions): Promise<ListInstanceFleetsCommandOutput>;
    listInstanceFleets(args: ListInstanceFleetsCommandInput, cb: (err: any, data?: ListInstanceFleetsCommandOutput) => void): void;
    listInstanceFleets(args: ListInstanceFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstanceFleetsCommandOutput) => void): void;
    /**
     * @see {@link ListInstanceGroupsCommand}
     */
    listInstanceGroups(args: ListInstanceGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ListInstanceGroupsCommandOutput>;
    listInstanceGroups(args: ListInstanceGroupsCommandInput, cb: (err: any, data?: ListInstanceGroupsCommandOutput) => void): void;
    listInstanceGroups(args: ListInstanceGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstanceGroupsCommandOutput) => void): void;
    /**
     * @see {@link ListInstancesCommand}
     */
    listInstances(args: ListInstancesCommandInput, options?: __HttpHandlerOptions): Promise<ListInstancesCommandOutput>;
    listInstances(args: ListInstancesCommandInput, cb: (err: any, data?: ListInstancesCommandOutput) => void): void;
    listInstances(args: ListInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListInstancesCommandOutput) => void): void;
    /**
     * @see {@link ListNotebookExecutionsCommand}
     */
    listNotebookExecutions(args: ListNotebookExecutionsCommandInput, options?: __HttpHandlerOptions): Promise<ListNotebookExecutionsCommandOutput>;
    listNotebookExecutions(args: ListNotebookExecutionsCommandInput, cb: (err: any, data?: ListNotebookExecutionsCommandOutput) => void): void;
    listNotebookExecutions(args: ListNotebookExecutionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListNotebookExecutionsCommandOutput) => void): void;
    /**
     * @see {@link ListReleaseLabelsCommand}
     */
    listReleaseLabels(args: ListReleaseLabelsCommandInput, options?: __HttpHandlerOptions): Promise<ListReleaseLabelsCommandOutput>;
    listReleaseLabels(args: ListReleaseLabelsCommandInput, cb: (err: any, data?: ListReleaseLabelsCommandOutput) => void): void;
    listReleaseLabels(args: ListReleaseLabelsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListReleaseLabelsCommandOutput) => void): void;
    /**
     * @see {@link ListSecurityConfigurationsCommand}
     */
    listSecurityConfigurations(args: ListSecurityConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListSecurityConfigurationsCommandOutput>;
    listSecurityConfigurations(args: ListSecurityConfigurationsCommandInput, cb: (err: any, data?: ListSecurityConfigurationsCommandOutput) => void): void;
    listSecurityConfigurations(args: ListSecurityConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSecurityConfigurationsCommandOutput) => void): void;
    /**
     * @see {@link ListStepsCommand}
     */
    listSteps(args: ListStepsCommandInput, options?: __HttpHandlerOptions): Promise<ListStepsCommandOutput>;
    listSteps(args: ListStepsCommandInput, cb: (err: any, data?: ListStepsCommandOutput) => void): void;
    listSteps(args: ListStepsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStepsCommandOutput) => void): void;
    /**
     * @see {@link ListStudiosCommand}
     */
    listStudios(args: ListStudiosCommandInput, options?: __HttpHandlerOptions): Promise<ListStudiosCommandOutput>;
    listStudios(args: ListStudiosCommandInput, cb: (err: any, data?: ListStudiosCommandOutput) => void): void;
    listStudios(args: ListStudiosCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStudiosCommandOutput) => void): void;
    /**
     * @see {@link ListStudioSessionMappingsCommand}
     */
    listStudioSessionMappings(args: ListStudioSessionMappingsCommandInput, options?: __HttpHandlerOptions): Promise<ListStudioSessionMappingsCommandOutput>;
    listStudioSessionMappings(args: ListStudioSessionMappingsCommandInput, cb: (err: any, data?: ListStudioSessionMappingsCommandOutput) => void): void;
    listStudioSessionMappings(args: ListStudioSessionMappingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListStudioSessionMappingsCommandOutput) => void): void;
    /**
     * @see {@link ListSupportedInstanceTypesCommand}
     */
    listSupportedInstanceTypes(args: ListSupportedInstanceTypesCommandInput, options?: __HttpHandlerOptions): Promise<ListSupportedInstanceTypesCommandOutput>;
    listSupportedInstanceTypes(args: ListSupportedInstanceTypesCommandInput, cb: (err: any, data?: ListSupportedInstanceTypesCommandOutput) => void): void;
    listSupportedInstanceTypes(args: ListSupportedInstanceTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSupportedInstanceTypesCommandOutput) => void): void;
    /**
     * @see {@link ModifyClusterCommand}
     */
    modifyCluster(args: ModifyClusterCommandInput, options?: __HttpHandlerOptions): Promise<ModifyClusterCommandOutput>;
    modifyCluster(args: ModifyClusterCommandInput, cb: (err: any, data?: ModifyClusterCommandOutput) => void): void;
    modifyCluster(args: ModifyClusterCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyClusterCommandOutput) => void): void;
    /**
     * @see {@link ModifyInstanceFleetCommand}
     */
    modifyInstanceFleet(args: ModifyInstanceFleetCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceFleetCommandOutput>;
    modifyInstanceFleet(args: ModifyInstanceFleetCommandInput, cb: (err: any, data?: ModifyInstanceFleetCommandOutput) => void): void;
    modifyInstanceFleet(args: ModifyInstanceFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceFleetCommandOutput) => void): void;
    /**
     * @see {@link ModifyInstanceGroupsCommand}
     */
    modifyInstanceGroups(args: ModifyInstanceGroupsCommandInput, options?: __HttpHandlerOptions): Promise<ModifyInstanceGroupsCommandOutput>;
    modifyInstanceGroups(args: ModifyInstanceGroupsCommandInput, cb: (err: any, data?: ModifyInstanceGroupsCommandOutput) => void): void;
    modifyInstanceGroups(args: ModifyInstanceGroupsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ModifyInstanceGroupsCommandOutput) => void): void;
    /**
     * @see {@link PutAutoScalingPolicyCommand}
     */
    putAutoScalingPolicy(args: PutAutoScalingPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutAutoScalingPolicyCommandOutput>;
    putAutoScalingPolicy(args: PutAutoScalingPolicyCommandInput, cb: (err: any, data?: PutAutoScalingPolicyCommandOutput) => void): void;
    putAutoScalingPolicy(args: PutAutoScalingPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAutoScalingPolicyCommandOutput) => void): void;
    /**
     * @see {@link PutAutoTerminationPolicyCommand}
     */
    putAutoTerminationPolicy(args: PutAutoTerminationPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutAutoTerminationPolicyCommandOutput>;
    putAutoTerminationPolicy(args: PutAutoTerminationPolicyCommandInput, cb: (err: any, data?: PutAutoTerminationPolicyCommandOutput) => void): void;
    putAutoTerminationPolicy(args: PutAutoTerminationPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutAutoTerminationPolicyCommandOutput) => void): void;
    /**
     * @see {@link PutBlockPublicAccessConfigurationCommand}
     */
    putBlockPublicAccessConfiguration(args: PutBlockPublicAccessConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<PutBlockPublicAccessConfigurationCommandOutput>;
    putBlockPublicAccessConfiguration(args: PutBlockPublicAccessConfigurationCommandInput, cb: (err: any, data?: PutBlockPublicAccessConfigurationCommandOutput) => void): void;
    putBlockPublicAccessConfiguration(args: PutBlockPublicAccessConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutBlockPublicAccessConfigurationCommandOutput) => void): void;
    /**
     * @see {@link PutManagedScalingPolicyCommand}
     */
    putManagedScalingPolicy(args: PutManagedScalingPolicyCommandInput, options?: __HttpHandlerOptions): Promise<PutManagedScalingPolicyCommandOutput>;
    putManagedScalingPolicy(args: PutManagedScalingPolicyCommandInput, cb: (err: any, data?: PutManagedScalingPolicyCommandOutput) => void): void;
    putManagedScalingPolicy(args: PutManagedScalingPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PutManagedScalingPolicyCommandOutput) => void): void;
    /**
     * @see {@link RemoveAutoScalingPolicyCommand}
     */
    removeAutoScalingPolicy(args: RemoveAutoScalingPolicyCommandInput, options?: __HttpHandlerOptions): Promise<RemoveAutoScalingPolicyCommandOutput>;
    removeAutoScalingPolicy(args: RemoveAutoScalingPolicyCommandInput, cb: (err: any, data?: RemoveAutoScalingPolicyCommandOutput) => void): void;
    removeAutoScalingPolicy(args: RemoveAutoScalingPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveAutoScalingPolicyCommandOutput) => void): void;
    /**
     * @see {@link RemoveAutoTerminationPolicyCommand}
     */
    removeAutoTerminationPolicy(args: RemoveAutoTerminationPolicyCommandInput, options?: __HttpHandlerOptions): Promise<RemoveAutoTerminationPolicyCommandOutput>;
    removeAutoTerminationPolicy(args: RemoveAutoTerminationPolicyCommandInput, cb: (err: any, data?: RemoveAutoTerminationPolicyCommandOutput) => void): void;
    removeAutoTerminationPolicy(args: RemoveAutoTerminationPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveAutoTerminationPolicyCommandOutput) => void): void;
    /**
     * @see {@link RemoveManagedScalingPolicyCommand}
     */
    removeManagedScalingPolicy(args: RemoveManagedScalingPolicyCommandInput, options?: __HttpHandlerOptions): Promise<RemoveManagedScalingPolicyCommandOutput>;
    removeManagedScalingPolicy(args: RemoveManagedScalingPolicyCommandInput, cb: (err: any, data?: RemoveManagedScalingPolicyCommandOutput) => void): void;
    removeManagedScalingPolicy(args: RemoveManagedScalingPolicyCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveManagedScalingPolicyCommandOutput) => void): void;
    /**
     * @see {@link RemoveTagsCommand}
     */
    removeTags(args: RemoveTagsCommandInput, options?: __HttpHandlerOptions): Promise<RemoveTagsCommandOutput>;
    removeTags(args: RemoveTagsCommandInput, cb: (err: any, data?: RemoveTagsCommandOutput) => void): void;
    removeTags(args: RemoveTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveTagsCommandOutput) => void): void;
    /**
     * @see {@link RunJobFlowCommand}
     */
    runJobFlow(args: RunJobFlowCommandInput, options?: __HttpHandlerOptions): Promise<RunJobFlowCommandOutput>;
    runJobFlow(args: RunJobFlowCommandInput, cb: (err: any, data?: RunJobFlowCommandOutput) => void): void;
    runJobFlow(args: RunJobFlowCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RunJobFlowCommandOutput) => void): void;
    /**
     * @see {@link SetKeepJobFlowAliveWhenNoStepsCommand}
     */
    setKeepJobFlowAliveWhenNoSteps(args: SetKeepJobFlowAliveWhenNoStepsCommandInput, options?: __HttpHandlerOptions): Promise<SetKeepJobFlowAliveWhenNoStepsCommandOutput>;
    setKeepJobFlowAliveWhenNoSteps(args: SetKeepJobFlowAliveWhenNoStepsCommandInput, cb: (err: any, data?: SetKeepJobFlowAliveWhenNoStepsCommandOutput) => void): void;
    setKeepJobFlowAliveWhenNoSteps(args: SetKeepJobFlowAliveWhenNoStepsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetKeepJobFlowAliveWhenNoStepsCommandOutput) => void): void;
    /**
     * @see {@link SetTerminationProtectionCommand}
     */
    setTerminationProtection(args: SetTerminationProtectionCommandInput, options?: __HttpHandlerOptions): Promise<SetTerminationProtectionCommandOutput>;
    setTerminationProtection(args: SetTerminationProtectionCommandInput, cb: (err: any, data?: SetTerminationProtectionCommandOutput) => void): void;
    setTerminationProtection(args: SetTerminationProtectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetTerminationProtectionCommandOutput) => void): void;
    /**
     * @see {@link SetUnhealthyNodeReplacementCommand}
     */
    setUnhealthyNodeReplacement(args: SetUnhealthyNodeReplacementCommandInput, options?: __HttpHandlerOptions): Promise<SetUnhealthyNodeReplacementCommandOutput>;
    setUnhealthyNodeReplacement(args: SetUnhealthyNodeReplacementCommandInput, cb: (err: any, data?: SetUnhealthyNodeReplacementCommandOutput) => void): void;
    setUnhealthyNodeReplacement(args: SetUnhealthyNodeReplacementCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetUnhealthyNodeReplacementCommandOutput) => void): void;
    /**
     * @see {@link SetVisibleToAllUsersCommand}
     */
    setVisibleToAllUsers(args: SetVisibleToAllUsersCommandInput, options?: __HttpHandlerOptions): Promise<SetVisibleToAllUsersCommandOutput>;
    setVisibleToAllUsers(args: SetVisibleToAllUsersCommandInput, cb: (err: any, data?: SetVisibleToAllUsersCommandOutput) => void): void;
    setVisibleToAllUsers(args: SetVisibleToAllUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: SetVisibleToAllUsersCommandOutput) => void): void;
    /**
     * @see {@link StartNotebookExecutionCommand}
     */
    startNotebookExecution(args: StartNotebookExecutionCommandInput, options?: __HttpHandlerOptions): Promise<StartNotebookExecutionCommandOutput>;
    startNotebookExecution(args: StartNotebookExecutionCommandInput, cb: (err: any, data?: StartNotebookExecutionCommandOutput) => void): void;
    startNotebookExecution(args: StartNotebookExecutionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartNotebookExecutionCommandOutput) => void): void;
    /**
     * @see {@link StopNotebookExecutionCommand}
     */
    stopNotebookExecution(args: StopNotebookExecutionCommandInput, options?: __HttpHandlerOptions): Promise<StopNotebookExecutionCommandOutput>;
    stopNotebookExecution(args: StopNotebookExecutionCommandInput, cb: (err: any, data?: StopNotebookExecutionCommandOutput) => void): void;
    stopNotebookExecution(args: StopNotebookExecutionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopNotebookExecutionCommandOutput) => void): void;
    /**
     * @see {@link TerminateJobFlowsCommand}
     */
    terminateJobFlows(args: TerminateJobFlowsCommandInput, options?: __HttpHandlerOptions): Promise<TerminateJobFlowsCommandOutput>;
    terminateJobFlows(args: TerminateJobFlowsCommandInput, cb: (err: any, data?: TerminateJobFlowsCommandOutput) => void): void;
    terminateJobFlows(args: TerminateJobFlowsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TerminateJobFlowsCommandOutput) => void): void;
    /**
     * @see {@link UpdateStudioCommand}
     */
    updateStudio(args: UpdateStudioCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStudioCommandOutput>;
    updateStudio(args: UpdateStudioCommandInput, cb: (err: any, data?: UpdateStudioCommandOutput) => void): void;
    updateStudio(args: UpdateStudioCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStudioCommandOutput) => void): void;
    /**
     * @see {@link UpdateStudioSessionMappingCommand}
     */
    updateStudioSessionMapping(args: UpdateStudioSessionMappingCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStudioSessionMappingCommandOutput>;
    updateStudioSessionMapping(args: UpdateStudioSessionMappingCommandInput, cb: (err: any, data?: UpdateStudioSessionMappingCommandOutput) => void): void;
    updateStudioSessionMapping(args: UpdateStudioSessionMappingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStudioSessionMappingCommandOutput) => void): void;
}
/**
 * @public
 * <p>Amazon EMR is a web service that makes it easier to process large amounts of
 *          data efficiently. Amazon EMR uses Hadoop processing combined with several Amazon Web Services services to do tasks such as web indexing, data mining, log file analysis,
 *          machine learning, scientific simulation, and data warehouse management.</p>
 */
export declare class EMR extends EMRClient implements EMR {
}
