import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { KafkaConnectServiceException as __BaseException } from "./KafkaConnectServiceException";
export const ConnectorState = {
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    RUNNING: "RUNNING",
    UPDATING: "UPDATING",
};
export const KafkaClusterClientAuthenticationType = {
    IAM: "IAM",
    NONE: "NONE",
};
export const KafkaClusterEncryptionInTransitType = {
    PLAINTEXT: "PLAINTEXT",
    TLS: "TLS",
};
export const CustomPluginState = {
    ACTIVE: "ACTIVE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETING: "DELETING",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export const CustomPluginContentType = {
    JAR: "JAR",
    ZIP: "ZIP",
};
export const WorkerConfigurationState = {
    ACTIVE: "ACTIVE",
    DELETING: "DELETING",
};
export class BadRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export class ForbiddenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
    }
}
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
    }
}
export class UnauthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
    }
}
export const CreateConnectorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.connectorConfiguration && { connectorConfiguration: SENSITIVE_STRING }),
});
export const CreateWorkerConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.propertiesFileContent && { propertiesFileContent: SENSITIVE_STRING }),
});
export const DescribeConnectorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.connectorConfiguration && { connectorConfiguration: SENSITIVE_STRING }),
});
export const WorkerConfigurationRevisionDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.propertiesFileContent && { propertiesFileContent: SENSITIVE_STRING }),
});
export const DescribeWorkerConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.latestRevision && {
        latestRevision: WorkerConfigurationRevisionDescriptionFilterSensitiveLog(obj.latestRevision),
    }),
});
