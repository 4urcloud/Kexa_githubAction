import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { BackupServiceException as __BaseException } from "./BackupServiceException";
export interface AdvancedBackupSetting {
  ResourceType?: string;
  BackupOptions?: Record<string, string>;
}
export declare const AggregationPeriod: {
  readonly FOURTEEN_DAYS: "FOURTEEN_DAYS";
  readonly ONE_DAY: "ONE_DAY";
  readonly SEVEN_DAYS: "SEVEN_DAYS";
};
export type AggregationPeriod =
  (typeof AggregationPeriod)[keyof typeof AggregationPeriod];
export declare class AlreadyExistsException extends __BaseException {
  readonly name: "AlreadyExistsException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  CreatorRequestId?: string;
  Arn?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>
  );
}
export interface RecoveryPointCreator {
  BackupPlanId?: string;
  BackupPlanArn?: string;
  BackupPlanVersion?: string;
  BackupRuleId?: string;
}
export declare const BackupJobState: {
  readonly ABORTED: "ABORTED";
  readonly ABORTING: "ABORTING";
  readonly COMPLETED: "COMPLETED";
  readonly CREATED: "CREATED";
  readonly EXPIRED: "EXPIRED";
  readonly FAILED: "FAILED";
  readonly PARTIAL: "PARTIAL";
  readonly PENDING: "PENDING";
  readonly RUNNING: "RUNNING";
};
export type BackupJobState =
  (typeof BackupJobState)[keyof typeof BackupJobState];
export interface BackupJob {
  AccountId?: string;
  BackupJobId?: string;
  BackupVaultName?: string;
  BackupVaultArn?: string;
  RecoveryPointArn?: string;
  ResourceArn?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  State?: BackupJobState;
  StatusMessage?: string;
  PercentDone?: string;
  BackupSizeInBytes?: number;
  IamRoleArn?: string;
  CreatedBy?: RecoveryPointCreator;
  ExpectedCompletionDate?: Date;
  StartBy?: Date;
  ResourceType?: string;
  BytesTransferred?: number;
  BackupOptions?: Record<string, string>;
  BackupType?: string;
  ParentJobId?: string;
  IsParent?: boolean;
  ResourceName?: string;
  InitiationDate?: Date;
  MessageCategory?: string;
}
export declare const BackupJobStatus: {
  readonly ABORTED: "ABORTED";
  readonly ABORTING: "ABORTING";
  readonly AGGREGATE_ALL: "AGGREGATE_ALL";
  readonly ANY: "ANY";
  readonly COMPLETED: "COMPLETED";
  readonly CREATED: "CREATED";
  readonly EXPIRED: "EXPIRED";
  readonly FAILED: "FAILED";
  readonly PARTIAL: "PARTIAL";
  readonly PENDING: "PENDING";
  readonly RUNNING: "RUNNING";
};
export type BackupJobStatus =
  (typeof BackupJobStatus)[keyof typeof BackupJobStatus];
export interface BackupJobSummary {
  Region?: string;
  AccountId?: string;
  State?: BackupJobStatus;
  ResourceType?: string;
  MessageCategory?: string;
  Count?: number;
  StartTime?: Date;
  EndTime?: Date;
}
export interface Lifecycle {
  MoveToColdStorageAfterDays?: number;
  DeleteAfterDays?: number;
  OptInToArchiveForSupportedResources?: boolean;
}
export interface CopyAction {
  Lifecycle?: Lifecycle;
  DestinationBackupVaultArn: string | undefined;
}
export interface BackupRule {
  RuleName: string | undefined;
  TargetBackupVaultName: string | undefined;
  ScheduleExpression?: string;
  StartWindowMinutes?: number;
  CompletionWindowMinutes?: number;
  Lifecycle?: Lifecycle;
  RecoveryPointTags?: Record<string, string>;
  RuleId?: string;
  CopyActions?: CopyAction[];
  EnableContinuousBackup?: boolean;
  ScheduleExpressionTimezone?: string;
}
export interface BackupPlan {
  BackupPlanName: string | undefined;
  Rules: BackupRule[] | undefined;
  AdvancedBackupSettings?: AdvancedBackupSetting[];
}
export interface BackupRuleInput {
  RuleName: string | undefined;
  TargetBackupVaultName: string | undefined;
  ScheduleExpression?: string;
  StartWindowMinutes?: number;
  CompletionWindowMinutes?: number;
  Lifecycle?: Lifecycle;
  RecoveryPointTags?: Record<string, string>;
  CopyActions?: CopyAction[];
  EnableContinuousBackup?: boolean;
  ScheduleExpressionTimezone?: string;
}
export interface BackupPlanInput {
  BackupPlanName: string | undefined;
  Rules: BackupRuleInput[] | undefined;
  AdvancedBackupSettings?: AdvancedBackupSetting[];
}
export interface BackupPlansListMember {
  BackupPlanArn?: string;
  BackupPlanId?: string;
  CreationDate?: Date;
  DeletionDate?: Date;
  VersionId?: string;
  BackupPlanName?: string;
  CreatorRequestId?: string;
  LastExecutionDate?: Date;
  AdvancedBackupSettings?: AdvancedBackupSetting[];
}
export interface BackupPlanTemplatesListMember {
  BackupPlanTemplateId?: string;
  BackupPlanTemplateName?: string;
}
export interface ConditionParameter {
  ConditionKey?: string;
  ConditionValue?: string;
}
export interface Conditions {
  StringEquals?: ConditionParameter[];
  StringNotEquals?: ConditionParameter[];
  StringLike?: ConditionParameter[];
  StringNotLike?: ConditionParameter[];
}
export declare const ConditionType: {
  readonly STRINGEQUALS: "STRINGEQUALS";
};
export type ConditionType = (typeof ConditionType)[keyof typeof ConditionType];
export interface Condition {
  ConditionType: ConditionType | undefined;
  ConditionKey: string | undefined;
  ConditionValue: string | undefined;
}
export interface BackupSelection {
  SelectionName: string | undefined;
  IamRoleArn: string | undefined;
  Resources?: string[];
  ListOfTags?: Condition[];
  NotResources?: string[];
  Conditions?: Conditions;
}
export interface BackupSelectionsListMember {
  SelectionId?: string;
  SelectionName?: string;
  BackupPlanId?: string;
  CreationDate?: Date;
  CreatorRequestId?: string;
  IamRoleArn?: string;
}
export declare const BackupVaultEvent: {
  readonly BACKUP_JOB_COMPLETED: "BACKUP_JOB_COMPLETED";
  readonly BACKUP_JOB_EXPIRED: "BACKUP_JOB_EXPIRED";
  readonly BACKUP_JOB_FAILED: "BACKUP_JOB_FAILED";
  readonly BACKUP_JOB_STARTED: "BACKUP_JOB_STARTED";
  readonly BACKUP_JOB_SUCCESSFUL: "BACKUP_JOB_SUCCESSFUL";
  readonly BACKUP_PLAN_CREATED: "BACKUP_PLAN_CREATED";
  readonly BACKUP_PLAN_MODIFIED: "BACKUP_PLAN_MODIFIED";
  readonly COPY_JOB_FAILED: "COPY_JOB_FAILED";
  readonly COPY_JOB_STARTED: "COPY_JOB_STARTED";
  readonly COPY_JOB_SUCCESSFUL: "COPY_JOB_SUCCESSFUL";
  readonly RECOVERY_POINT_MODIFIED: "RECOVERY_POINT_MODIFIED";
  readonly RESTORE_JOB_COMPLETED: "RESTORE_JOB_COMPLETED";
  readonly RESTORE_JOB_FAILED: "RESTORE_JOB_FAILED";
  readonly RESTORE_JOB_STARTED: "RESTORE_JOB_STARTED";
  readonly RESTORE_JOB_SUCCESSFUL: "RESTORE_JOB_SUCCESSFUL";
  readonly S3_BACKUP_OBJECT_FAILED: "S3_BACKUP_OBJECT_FAILED";
  readonly S3_RESTORE_OBJECT_FAILED: "S3_RESTORE_OBJECT_FAILED";
};
export type BackupVaultEvent =
  (typeof BackupVaultEvent)[keyof typeof BackupVaultEvent];
export interface BackupVaultListMember {
  BackupVaultName?: string;
  BackupVaultArn?: string;
  CreationDate?: Date;
  EncryptionKeyArn?: string;
  CreatorRequestId?: string;
  NumberOfRecoveryPoints?: number;
  Locked?: boolean;
  MinRetentionDays?: number;
  MaxRetentionDays?: number;
  LockDate?: Date;
}
export interface CalculatedLifecycle {
  MoveToColdStorageAt?: Date;
  DeleteAt?: Date;
}
export interface CancelLegalHoldInput {
  LegalHoldId: string | undefined;
  CancelDescription: string | undefined;
  RetainRecordInDays?: number;
}
export interface CancelLegalHoldOutput {}
export declare class InvalidParameterValueException extends __BaseException {
  readonly name: "InvalidParameterValueException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterValueException, __BaseException>
  );
}
export declare class InvalidResourceStateException extends __BaseException {
  readonly name: "InvalidResourceStateException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidResourceStateException, __BaseException>
  );
}
export declare class MissingParameterValueException extends __BaseException {
  readonly name: "MissingParameterValueException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<MissingParameterValueException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface ControlInputParameter {
  ParameterName?: string;
  ParameterValue?: string;
}
export interface ControlScope {
  ComplianceResourceIds?: string[];
  ComplianceResourceTypes?: string[];
  Tags?: Record<string, string>;
}
export declare const CopyJobState: {
  readonly COMPLETED: "COMPLETED";
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly PARTIAL: "PARTIAL";
  readonly RUNNING: "RUNNING";
};
export type CopyJobState = (typeof CopyJobState)[keyof typeof CopyJobState];
export interface CopyJob {
  AccountId?: string;
  CopyJobId?: string;
  SourceBackupVaultArn?: string;
  SourceRecoveryPointArn?: string;
  DestinationBackupVaultArn?: string;
  DestinationRecoveryPointArn?: string;
  ResourceArn?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  State?: CopyJobState;
  StatusMessage?: string;
  BackupSizeInBytes?: number;
  IamRoleArn?: string;
  CreatedBy?: RecoveryPointCreator;
  ResourceType?: string;
  ParentJobId?: string;
  IsParent?: boolean;
  CompositeMemberIdentifier?: string;
  NumberOfChildJobs?: number;
  ChildJobsInState?: Partial<Record<CopyJobState, number>>;
  ResourceName?: string;
  MessageCategory?: string;
}
export declare const CopyJobStatus: {
  readonly ABORTED: "ABORTED";
  readonly ABORTING: "ABORTING";
  readonly AGGREGATE_ALL: "AGGREGATE_ALL";
  readonly ANY: "ANY";
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETING: "COMPLETING";
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly FAILING: "FAILING";
  readonly PARTIAL: "PARTIAL";
  readonly RUNNING: "RUNNING";
};
export type CopyJobStatus = (typeof CopyJobStatus)[keyof typeof CopyJobStatus];
export interface CopyJobSummary {
  Region?: string;
  AccountId?: string;
  State?: CopyJobStatus;
  ResourceType?: string;
  MessageCategory?: string;
  Count?: number;
  StartTime?: Date;
  EndTime?: Date;
}
export interface CreateBackupPlanInput {
  BackupPlan: BackupPlanInput | undefined;
  BackupPlanTags?: Record<string, string>;
  CreatorRequestId?: string;
}
export interface CreateBackupPlanOutput {
  BackupPlanId?: string;
  BackupPlanArn?: string;
  CreationDate?: Date;
  VersionId?: string;
  AdvancedBackupSettings?: AdvancedBackupSetting[];
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface CreateBackupSelectionInput {
  BackupPlanId: string | undefined;
  BackupSelection: BackupSelection | undefined;
  CreatorRequestId?: string;
}
export interface CreateBackupSelectionOutput {
  SelectionId?: string;
  BackupPlanId?: string;
  CreationDate?: Date;
}
export interface CreateBackupVaultInput {
  BackupVaultName: string | undefined;
  BackupVaultTags?: Record<string, string>;
  EncryptionKeyArn?: string;
  CreatorRequestId?: string;
}
export interface CreateBackupVaultOutput {
  BackupVaultName?: string;
  BackupVaultArn?: string;
  CreationDate?: Date;
}
export interface FrameworkControl {
  ControlName: string | undefined;
  ControlInputParameters?: ControlInputParameter[];
  ControlScope?: ControlScope;
}
export interface CreateFrameworkInput {
  FrameworkName: string | undefined;
  FrameworkDescription?: string;
  FrameworkControls: FrameworkControl[] | undefined;
  IdempotencyToken?: string;
  FrameworkTags?: Record<string, string>;
}
export interface CreateFrameworkOutput {
  FrameworkName?: string;
  FrameworkArn?: string;
}
export interface DateRange {
  FromDate: Date | undefined;
  ToDate: Date | undefined;
}
export interface RecoveryPointSelection {
  VaultNames?: string[];
  ResourceIdentifiers?: string[];
  DateRange?: DateRange;
}
export interface CreateLegalHoldInput {
  Title: string | undefined;
  Description: string | undefined;
  IdempotencyToken?: string;
  RecoveryPointSelection?: RecoveryPointSelection;
  Tags?: Record<string, string>;
}
export declare const LegalHoldStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CANCELED: "CANCELED";
  readonly CANCELING: "CANCELING";
  readonly CREATING: "CREATING";
};
export type LegalHoldStatus =
  (typeof LegalHoldStatus)[keyof typeof LegalHoldStatus];
export interface CreateLegalHoldOutput {
  Title?: string;
  Status?: LegalHoldStatus;
  Description?: string;
  LegalHoldId?: string;
  LegalHoldArn?: string;
  CreationDate?: Date;
  RecoveryPointSelection?: RecoveryPointSelection;
}
export interface CreateLogicallyAirGappedBackupVaultInput {
  BackupVaultName: string | undefined;
  BackupVaultTags?: Record<string, string>;
  CreatorRequestId?: string;
  MinRetentionDays: number | undefined;
  MaxRetentionDays: number | undefined;
}
export declare const VaultState: {
  readonly AVAILABLE: "AVAILABLE";
  readonly CREATING: "CREATING";
  readonly FAILED: "FAILED";
};
export type VaultState = (typeof VaultState)[keyof typeof VaultState];
export interface CreateLogicallyAirGappedBackupVaultOutput {
  BackupVaultName?: string;
  BackupVaultArn?: string;
  CreationDate?: Date;
  VaultState?: VaultState;
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface ReportDeliveryChannel {
  S3BucketName: string | undefined;
  S3KeyPrefix?: string;
  Formats?: string[];
}
export interface ReportSetting {
  ReportTemplate: string | undefined;
  FrameworkArns?: string[];
  NumberOfFrameworks?: number;
  Accounts?: string[];
  OrganizationUnits?: string[];
  Regions?: string[];
}
export interface CreateReportPlanInput {
  ReportPlanName: string | undefined;
  ReportPlanDescription?: string;
  ReportDeliveryChannel: ReportDeliveryChannel | undefined;
  ReportSetting: ReportSetting | undefined;
  ReportPlanTags?: Record<string, string>;
  IdempotencyToken?: string;
}
export interface CreateReportPlanOutput {
  ReportPlanName?: string;
  ReportPlanArn?: string;
  CreationTime?: Date;
}
export declare const RestoreTestingRecoveryPointSelectionAlgorithm: {
  readonly LATEST_WITHIN_WINDOW: "LATEST_WITHIN_WINDOW";
  readonly RANDOM_WITHIN_WINDOW: "RANDOM_WITHIN_WINDOW";
};
export type RestoreTestingRecoveryPointSelectionAlgorithm =
  (typeof RestoreTestingRecoveryPointSelectionAlgorithm)[keyof typeof RestoreTestingRecoveryPointSelectionAlgorithm];
export declare const RestoreTestingRecoveryPointType: {
  readonly CONTINUOUS: "CONTINUOUS";
  readonly SNAPSHOT: "SNAPSHOT";
};
export type RestoreTestingRecoveryPointType =
  (typeof RestoreTestingRecoveryPointType)[keyof typeof RestoreTestingRecoveryPointType];
export interface RestoreTestingRecoveryPointSelection {
  Algorithm?: RestoreTestingRecoveryPointSelectionAlgorithm;
  ExcludeVaults?: string[];
  IncludeVaults?: string[];
  RecoveryPointTypes?: RestoreTestingRecoveryPointType[];
  SelectionWindowDays?: number;
}
export interface RestoreTestingPlanForCreate {
  RecoveryPointSelection: RestoreTestingRecoveryPointSelection | undefined;
  RestoreTestingPlanName: string | undefined;
  ScheduleExpression: string | undefined;
  ScheduleExpressionTimezone?: string;
  StartWindowHours?: number;
}
export interface CreateRestoreTestingPlanInput {
  CreatorRequestId?: string;
  RestoreTestingPlan: RestoreTestingPlanForCreate | undefined;
  Tags?: Record<string, string>;
}
export interface CreateRestoreTestingPlanOutput {
  CreationTime: Date | undefined;
  RestoreTestingPlanArn: string | undefined;
  RestoreTestingPlanName: string | undefined;
}
export interface KeyValue {
  Key: string | undefined;
  Value: string | undefined;
}
export interface ProtectedResourceConditions {
  StringEquals?: KeyValue[];
  StringNotEquals?: KeyValue[];
}
export interface RestoreTestingSelectionForCreate {
  IamRoleArn: string | undefined;
  ProtectedResourceArns?: string[];
  ProtectedResourceConditions?: ProtectedResourceConditions;
  ProtectedResourceType: string | undefined;
  RestoreMetadataOverrides?: Record<string, string>;
  RestoreTestingSelectionName: string | undefined;
  ValidationWindowHours?: number;
}
export interface CreateRestoreTestingSelectionInput {
  CreatorRequestId?: string;
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelection: RestoreTestingSelectionForCreate | undefined;
}
export interface CreateRestoreTestingSelectionOutput {
  CreationTime: Date | undefined;
  RestoreTestingPlanArn: string | undefined;
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelectionName: string | undefined;
}
export interface DeleteBackupPlanInput {
  BackupPlanId: string | undefined;
}
export interface DeleteBackupPlanOutput {
  BackupPlanId?: string;
  BackupPlanArn?: string;
  DeletionDate?: Date;
  VersionId?: string;
}
export interface DeleteBackupSelectionInput {
  BackupPlanId: string | undefined;
  SelectionId: string | undefined;
}
export interface DeleteBackupVaultInput {
  BackupVaultName: string | undefined;
}
export interface DeleteBackupVaultAccessPolicyInput {
  BackupVaultName: string | undefined;
}
export interface DeleteBackupVaultLockConfigurationInput {
  BackupVaultName: string | undefined;
}
export interface DeleteBackupVaultNotificationsInput {
  BackupVaultName: string | undefined;
}
export interface DeleteFrameworkInput {
  FrameworkName: string | undefined;
}
export interface DeleteRecoveryPointInput {
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
}
export interface DeleteReportPlanInput {
  ReportPlanName: string | undefined;
}
export interface DeleteRestoreTestingPlanInput {
  RestoreTestingPlanName: string | undefined;
}
export interface DeleteRestoreTestingSelectionInput {
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelectionName: string | undefined;
}
export declare class DependencyFailureException extends __BaseException {
  readonly name: "DependencyFailureException";
  readonly $fault: "server";
  Code?: string;
  Message?: string;
  Type?: string;
  Context?: string;
  constructor(
    opts: __ExceptionOptionType<DependencyFailureException, __BaseException>
  );
}
export interface DescribeBackupJobInput {
  BackupJobId: string | undefined;
}
export interface DescribeBackupJobOutput {
  AccountId?: string;
  BackupJobId?: string;
  BackupVaultName?: string;
  BackupVaultArn?: string;
  RecoveryPointArn?: string;
  ResourceArn?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  State?: BackupJobState;
  StatusMessage?: string;
  PercentDone?: string;
  BackupSizeInBytes?: number;
  IamRoleArn?: string;
  CreatedBy?: RecoveryPointCreator;
  ResourceType?: string;
  BytesTransferred?: number;
  ExpectedCompletionDate?: Date;
  StartBy?: Date;
  BackupOptions?: Record<string, string>;
  BackupType?: string;
  ParentJobId?: string;
  IsParent?: boolean;
  NumberOfChildJobs?: number;
  ChildJobsInState?: Partial<Record<BackupJobState, number>>;
  ResourceName?: string;
  InitiationDate?: Date;
  MessageCategory?: string;
}
export interface DescribeBackupVaultInput {
  BackupVaultName: string | undefined;
  BackupVaultAccountId?: string;
}
export declare const VaultType: {
  readonly BACKUP_VAULT: "BACKUP_VAULT";
  readonly LOGICALLY_AIR_GAPPED_BACKUP_VAULT: "LOGICALLY_AIR_GAPPED_BACKUP_VAULT";
};
export type VaultType = (typeof VaultType)[keyof typeof VaultType];
export interface DescribeBackupVaultOutput {
  BackupVaultName?: string;
  BackupVaultArn?: string;
  VaultType?: VaultType;
  EncryptionKeyArn?: string;
  CreationDate?: Date;
  CreatorRequestId?: string;
  NumberOfRecoveryPoints?: number;
  Locked?: boolean;
  MinRetentionDays?: number;
  MaxRetentionDays?: number;
  LockDate?: Date;
}
export interface DescribeCopyJobInput {
  CopyJobId: string | undefined;
}
export interface DescribeCopyJobOutput {
  CopyJob?: CopyJob;
}
export interface DescribeFrameworkInput {
  FrameworkName: string | undefined;
}
export interface DescribeFrameworkOutput {
  FrameworkName?: string;
  FrameworkArn?: string;
  FrameworkDescription?: string;
  FrameworkControls?: FrameworkControl[];
  CreationTime?: Date;
  DeploymentStatus?: string;
  FrameworkStatus?: string;
  IdempotencyToken?: string;
}
export interface DescribeGlobalSettingsInput {}
export interface DescribeGlobalSettingsOutput {
  GlobalSettings?: Record<string, string>;
  LastUpdateTime?: Date;
}
export interface DescribeProtectedResourceInput {
  ResourceArn: string | undefined;
}
export interface DescribeProtectedResourceOutput {
  ResourceArn?: string;
  ResourceType?: string;
  LastBackupTime?: Date;
  ResourceName?: string;
  LastBackupVaultArn?: string;
  LastRecoveryPointArn?: string;
  LatestRestoreExecutionTimeMinutes?: number;
  LatestRestoreJobCreationDate?: Date;
  LatestRestoreRecoveryPointCreationDate?: Date;
}
export interface DescribeRecoveryPointInput {
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
  BackupVaultAccountId?: string;
}
export declare const RecoveryPointStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly DELETING: "DELETING";
  readonly EXPIRED: "EXPIRED";
  readonly PARTIAL: "PARTIAL";
};
export type RecoveryPointStatus =
  (typeof RecoveryPointStatus)[keyof typeof RecoveryPointStatus];
export declare const StorageClass: {
  readonly COLD: "COLD";
  readonly DELETED: "DELETED";
  readonly WARM: "WARM";
};
export type StorageClass = (typeof StorageClass)[keyof typeof StorageClass];
export interface DescribeRecoveryPointOutput {
  RecoveryPointArn?: string;
  BackupVaultName?: string;
  BackupVaultArn?: string;
  SourceBackupVaultArn?: string;
  ResourceArn?: string;
  ResourceType?: string;
  CreatedBy?: RecoveryPointCreator;
  IamRoleArn?: string;
  Status?: RecoveryPointStatus;
  StatusMessage?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  BackupSizeInBytes?: number;
  CalculatedLifecycle?: CalculatedLifecycle;
  Lifecycle?: Lifecycle;
  EncryptionKeyArn?: string;
  IsEncrypted?: boolean;
  StorageClass?: StorageClass;
  LastRestoreTime?: Date;
  ParentRecoveryPointArn?: string;
  CompositeMemberIdentifier?: string;
  IsParent?: boolean;
  ResourceName?: string;
  VaultType?: VaultType;
}
export interface DescribeRegionSettingsInput {}
export interface DescribeRegionSettingsOutput {
  ResourceTypeOptInPreference?: Record<string, boolean>;
  ResourceTypeManagementPreference?: Record<string, boolean>;
}
export interface DescribeReportJobInput {
  ReportJobId: string | undefined;
}
export interface ReportDestination {
  S3BucketName?: string;
  S3Keys?: string[];
}
export interface ReportJob {
  ReportJobId?: string;
  ReportPlanArn?: string;
  ReportTemplate?: string;
  CreationTime?: Date;
  CompletionTime?: Date;
  Status?: string;
  StatusMessage?: string;
  ReportDestination?: ReportDestination;
}
export interface DescribeReportJobOutput {
  ReportJob?: ReportJob;
}
export interface DescribeReportPlanInput {
  ReportPlanName: string | undefined;
}
export interface ReportPlan {
  ReportPlanArn?: string;
  ReportPlanName?: string;
  ReportPlanDescription?: string;
  ReportSetting?: ReportSetting;
  ReportDeliveryChannel?: ReportDeliveryChannel;
  DeploymentStatus?: string;
  CreationTime?: Date;
  LastAttemptedExecutionTime?: Date;
  LastSuccessfulExecutionTime?: Date;
}
export interface DescribeReportPlanOutput {
  ReportPlan?: ReportPlan;
}
export interface DescribeRestoreJobInput {
  RestoreJobId: string | undefined;
}
export interface RestoreJobCreator {
  RestoreTestingPlanArn?: string;
}
export declare const RestoreDeletionStatus: {
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly SUCCESSFUL: "SUCCESSFUL";
};
export type RestoreDeletionStatus =
  (typeof RestoreDeletionStatus)[keyof typeof RestoreDeletionStatus];
export declare const RestoreJobStatus: {
  readonly ABORTED: "ABORTED";
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly RUNNING: "RUNNING";
};
export type RestoreJobStatus =
  (typeof RestoreJobStatus)[keyof typeof RestoreJobStatus];
export declare const RestoreValidationStatus: {
  readonly FAILED: "FAILED";
  readonly SUCCESSFUL: "SUCCESSFUL";
  readonly TIMED_OUT: "TIMED_OUT";
  readonly VALIDATING: "VALIDATING";
};
export type RestoreValidationStatus =
  (typeof RestoreValidationStatus)[keyof typeof RestoreValidationStatus];
export interface DescribeRestoreJobOutput {
  AccountId?: string;
  RestoreJobId?: string;
  RecoveryPointArn?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  Status?: RestoreJobStatus;
  StatusMessage?: string;
  PercentDone?: string;
  BackupSizeInBytes?: number;
  IamRoleArn?: string;
  ExpectedCompletionTimeMinutes?: number;
  CreatedResourceArn?: string;
  ResourceType?: string;
  RecoveryPointCreationDate?: Date;
  CreatedBy?: RestoreJobCreator;
  ValidationStatus?: RestoreValidationStatus;
  ValidationStatusMessage?: string;
  DeletionStatus?: RestoreDeletionStatus;
  DeletionStatusMessage?: string;
}
export interface DisassociateRecoveryPointInput {
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
}
export interface DisassociateRecoveryPointFromParentInput {
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
}
export interface ExportBackupPlanTemplateInput {
  BackupPlanId: string | undefined;
}
export interface ExportBackupPlanTemplateOutput {
  BackupPlanTemplateJson?: string;
}
export interface GetBackupPlanInput {
  BackupPlanId: string | undefined;
  VersionId?: string;
}
export interface GetBackupPlanOutput {
  BackupPlan?: BackupPlan;
  BackupPlanId?: string;
  BackupPlanArn?: string;
  VersionId?: string;
  CreatorRequestId?: string;
  CreationDate?: Date;
  DeletionDate?: Date;
  LastExecutionDate?: Date;
  AdvancedBackupSettings?: AdvancedBackupSetting[];
}
export interface GetBackupPlanFromJSONInput {
  BackupPlanTemplateJson: string | undefined;
}
export interface GetBackupPlanFromJSONOutput {
  BackupPlan?: BackupPlan;
}
export interface GetBackupPlanFromTemplateInput {
  BackupPlanTemplateId: string | undefined;
}
export interface GetBackupPlanFromTemplateOutput {
  BackupPlanDocument?: BackupPlan;
}
export interface GetBackupSelectionInput {
  BackupPlanId: string | undefined;
  SelectionId: string | undefined;
}
export interface GetBackupSelectionOutput {
  BackupSelection?: BackupSelection;
  SelectionId?: string;
  BackupPlanId?: string;
  CreationDate?: Date;
  CreatorRequestId?: string;
}
export interface GetBackupVaultAccessPolicyInput {
  BackupVaultName: string | undefined;
}
export interface GetBackupVaultAccessPolicyOutput {
  BackupVaultName?: string;
  BackupVaultArn?: string;
  Policy?: string;
}
export interface GetBackupVaultNotificationsInput {
  BackupVaultName: string | undefined;
}
export interface GetBackupVaultNotificationsOutput {
  BackupVaultName?: string;
  BackupVaultArn?: string;
  SNSTopicArn?: string;
  BackupVaultEvents?: BackupVaultEvent[];
}
export interface GetLegalHoldInput {
  LegalHoldId: string | undefined;
}
export interface GetLegalHoldOutput {
  Title?: string;
  Status?: LegalHoldStatus;
  Description?: string;
  CancelDescription?: string;
  LegalHoldId?: string;
  LegalHoldArn?: string;
  CreationDate?: Date;
  CancellationDate?: Date;
  RetainRecordUntil?: Date;
  RecoveryPointSelection?: RecoveryPointSelection;
}
export interface GetRecoveryPointRestoreMetadataInput {
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
  BackupVaultAccountId?: string;
}
export interface GetRecoveryPointRestoreMetadataOutput {
  BackupVaultArn?: string;
  RecoveryPointArn?: string;
  RestoreMetadata?: Record<string, string>;
  ResourceType?: string;
}
export interface GetRestoreJobMetadataInput {
  RestoreJobId: string | undefined;
}
export interface GetRestoreJobMetadataOutput {
  RestoreJobId?: string;
  Metadata?: Record<string, string>;
}
export interface GetRestoreTestingInferredMetadataInput {
  BackupVaultAccountId?: string;
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
}
export interface GetRestoreTestingInferredMetadataOutput {
  InferredMetadata: Record<string, string> | undefined;
}
export interface GetRestoreTestingPlanInput {
  RestoreTestingPlanName: string | undefined;
}
export interface RestoreTestingPlanForGet {
  CreationTime: Date | undefined;
  CreatorRequestId?: string;
  LastExecutionTime?: Date;
  LastUpdateTime?: Date;
  RecoveryPointSelection: RestoreTestingRecoveryPointSelection | undefined;
  RestoreTestingPlanArn: string | undefined;
  RestoreTestingPlanName: string | undefined;
  ScheduleExpression: string | undefined;
  ScheduleExpressionTimezone?: string;
  StartWindowHours?: number;
}
export interface GetRestoreTestingPlanOutput {
  RestoreTestingPlan: RestoreTestingPlanForGet | undefined;
}
export interface GetRestoreTestingSelectionInput {
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelectionName: string | undefined;
}
export interface RestoreTestingSelectionForGet {
  CreationTime: Date | undefined;
  CreatorRequestId?: string;
  IamRoleArn: string | undefined;
  ProtectedResourceArns?: string[];
  ProtectedResourceConditions?: ProtectedResourceConditions;
  ProtectedResourceType: string | undefined;
  RestoreMetadataOverrides?: Record<string, string>;
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelectionName: string | undefined;
  ValidationWindowHours?: number;
}
export interface GetRestoreTestingSelectionOutput {
  RestoreTestingSelection: RestoreTestingSelectionForGet | undefined;
}
export interface GetSupportedResourceTypesOutput {
  ResourceTypes?: string[];
}
export interface ListBackupJobsInput {
  NextToken?: string;
  MaxResults?: number;
  ByResourceArn?: string;
  ByState?: BackupJobState;
  ByBackupVaultName?: string;
  ByCreatedBefore?: Date;
  ByCreatedAfter?: Date;
  ByResourceType?: string;
  ByAccountId?: string;
  ByCompleteAfter?: Date;
  ByCompleteBefore?: Date;
  ByParentJobId?: string;
  ByMessageCategory?: string;
}
export interface ListBackupJobsOutput {
  BackupJobs?: BackupJob[];
  NextToken?: string;
}
export interface ListBackupJobSummariesInput {
  AccountId?: string;
  State?: BackupJobStatus;
  ResourceType?: string;
  MessageCategory?: string;
  AggregationPeriod?: AggregationPeriod;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListBackupJobSummariesOutput {
  BackupJobSummaries?: BackupJobSummary[];
  AggregationPeriod?: string;
  NextToken?: string;
}
export interface ListBackupPlansInput {
  NextToken?: string;
  MaxResults?: number;
  IncludeDeleted?: boolean;
}
export interface ListBackupPlansOutput {
  NextToken?: string;
  BackupPlansList?: BackupPlansListMember[];
}
export interface ListBackupPlanTemplatesInput {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListBackupPlanTemplatesOutput {
  NextToken?: string;
  BackupPlanTemplatesList?: BackupPlanTemplatesListMember[];
}
export interface ListBackupPlanVersionsInput {
  BackupPlanId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListBackupPlanVersionsOutput {
  NextToken?: string;
  BackupPlanVersionsList?: BackupPlansListMember[];
}
export interface ListBackupSelectionsInput {
  BackupPlanId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListBackupSelectionsOutput {
  NextToken?: string;
  BackupSelectionsList?: BackupSelectionsListMember[];
}
export interface ListBackupVaultsInput {
  ByVaultType?: VaultType;
  ByShared?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListBackupVaultsOutput {
  BackupVaultList?: BackupVaultListMember[];
  NextToken?: string;
}
export interface ListCopyJobsInput {
  NextToken?: string;
  MaxResults?: number;
  ByResourceArn?: string;
  ByState?: CopyJobState;
  ByCreatedBefore?: Date;
  ByCreatedAfter?: Date;
  ByResourceType?: string;
  ByDestinationVaultArn?: string;
  ByAccountId?: string;
  ByCompleteBefore?: Date;
  ByCompleteAfter?: Date;
  ByParentJobId?: string;
  ByMessageCategory?: string;
}
export interface ListCopyJobsOutput {
  CopyJobs?: CopyJob[];
  NextToken?: string;
}
export interface ListCopyJobSummariesInput {
  AccountId?: string;
  State?: CopyJobStatus;
  ResourceType?: string;
  MessageCategory?: string;
  AggregationPeriod?: AggregationPeriod;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListCopyJobSummariesOutput {
  CopyJobSummaries?: CopyJobSummary[];
  AggregationPeriod?: string;
  NextToken?: string;
}
export interface ListFrameworksInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface Framework {
  FrameworkName?: string;
  FrameworkArn?: string;
  FrameworkDescription?: string;
  NumberOfControls?: number;
  CreationTime?: Date;
  DeploymentStatus?: string;
}
export interface ListFrameworksOutput {
  Frameworks?: Framework[];
  NextToken?: string;
}
export interface ListLegalHoldsInput {
  NextToken?: string;
  MaxResults?: number;
}
export interface LegalHold {
  Title?: string;
  Status?: LegalHoldStatus;
  Description?: string;
  LegalHoldId?: string;
  LegalHoldArn?: string;
  CreationDate?: Date;
  CancellationDate?: Date;
}
export interface ListLegalHoldsOutput {
  NextToken?: string;
  LegalHolds?: LegalHold[];
}
export interface ListProtectedResourcesInput {
  NextToken?: string;
  MaxResults?: number;
}
export interface ProtectedResource {
  ResourceArn?: string;
  ResourceType?: string;
  LastBackupTime?: Date;
  ResourceName?: string;
  LastBackupVaultArn?: string;
  LastRecoveryPointArn?: string;
}
export interface ListProtectedResourcesOutput {
  Results?: ProtectedResource[];
  NextToken?: string;
}
export interface ListProtectedResourcesByBackupVaultInput {
  BackupVaultName: string | undefined;
  BackupVaultAccountId?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListProtectedResourcesByBackupVaultOutput {
  Results?: ProtectedResource[];
  NextToken?: string;
}
export interface ListRecoveryPointsByBackupVaultInput {
  BackupVaultName: string | undefined;
  BackupVaultAccountId?: string;
  NextToken?: string;
  MaxResults?: number;
  ByResourceArn?: string;
  ByResourceType?: string;
  ByBackupPlanId?: string;
  ByCreatedBefore?: Date;
  ByCreatedAfter?: Date;
  ByParentRecoveryPointArn?: string;
}
export interface RecoveryPointByBackupVault {
  RecoveryPointArn?: string;
  BackupVaultName?: string;
  BackupVaultArn?: string;
  SourceBackupVaultArn?: string;
  ResourceArn?: string;
  ResourceType?: string;
  CreatedBy?: RecoveryPointCreator;
  IamRoleArn?: string;
  Status?: RecoveryPointStatus;
  StatusMessage?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  BackupSizeInBytes?: number;
  CalculatedLifecycle?: CalculatedLifecycle;
  Lifecycle?: Lifecycle;
  EncryptionKeyArn?: string;
  IsEncrypted?: boolean;
  LastRestoreTime?: Date;
  ParentRecoveryPointArn?: string;
  CompositeMemberIdentifier?: string;
  IsParent?: boolean;
  ResourceName?: string;
  VaultType?: VaultType;
}
export interface ListRecoveryPointsByBackupVaultOutput {
  NextToken?: string;
  RecoveryPoints?: RecoveryPointByBackupVault[];
}
export interface ListRecoveryPointsByLegalHoldInput {
  LegalHoldId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface RecoveryPointMember {
  RecoveryPointArn?: string;
  ResourceArn?: string;
  ResourceType?: string;
  BackupVaultName?: string;
}
export interface ListRecoveryPointsByLegalHoldOutput {
  RecoveryPoints?: RecoveryPointMember[];
  NextToken?: string;
}
export interface ListRecoveryPointsByResourceInput {
  ResourceArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  ManagedByAWSBackupOnly?: boolean;
}
export interface RecoveryPointByResource {
  RecoveryPointArn?: string;
  CreationDate?: Date;
  Status?: RecoveryPointStatus;
  StatusMessage?: string;
  EncryptionKeyArn?: string;
  BackupSizeBytes?: number;
  BackupVaultName?: string;
  IsParent?: boolean;
  ParentRecoveryPointArn?: string;
  ResourceName?: string;
  VaultType?: VaultType;
}
export interface ListRecoveryPointsByResourceOutput {
  NextToken?: string;
  RecoveryPoints?: RecoveryPointByResource[];
}
export interface ListReportJobsInput {
  ByReportPlanName?: string;
  ByCreationBefore?: Date;
  ByCreationAfter?: Date;
  ByStatus?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListReportJobsOutput {
  ReportJobs?: ReportJob[];
  NextToken?: string;
}
export interface ListReportPlansInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListReportPlansOutput {
  ReportPlans?: ReportPlan[];
  NextToken?: string;
}
export interface ListRestoreJobsInput {
  NextToken?: string;
  MaxResults?: number;
  ByAccountId?: string;
  ByResourceType?: string;
  ByCreatedBefore?: Date;
  ByCreatedAfter?: Date;
  ByStatus?: RestoreJobStatus;
  ByCompleteBefore?: Date;
  ByCompleteAfter?: Date;
  ByRestoreTestingPlanArn?: string;
}
export interface RestoreJobsListMember {
  AccountId?: string;
  RestoreJobId?: string;
  RecoveryPointArn?: string;
  CreationDate?: Date;
  CompletionDate?: Date;
  Status?: RestoreJobStatus;
  StatusMessage?: string;
  PercentDone?: string;
  BackupSizeInBytes?: number;
  IamRoleArn?: string;
  ExpectedCompletionTimeMinutes?: number;
  CreatedResourceArn?: string;
  ResourceType?: string;
  RecoveryPointCreationDate?: Date;
  CreatedBy?: RestoreJobCreator;
  ValidationStatus?: RestoreValidationStatus;
  ValidationStatusMessage?: string;
  DeletionStatus?: RestoreDeletionStatus;
  DeletionStatusMessage?: string;
}
export interface ListRestoreJobsOutput {
  RestoreJobs?: RestoreJobsListMember[];
  NextToken?: string;
}
export interface ListRestoreJobsByProtectedResourceInput {
  ResourceArn: string | undefined;
  ByStatus?: RestoreJobStatus;
  ByRecoveryPointCreationDateAfter?: Date;
  ByRecoveryPointCreationDateBefore?: Date;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListRestoreJobsByProtectedResourceOutput {
  RestoreJobs?: RestoreJobsListMember[];
  NextToken?: string;
}
export declare const RestoreJobState: {
  readonly ABORTED: "ABORTED";
  readonly AGGREGATE_ALL: "AGGREGATE_ALL";
  readonly ANY: "ANY";
  readonly COMPLETED: "COMPLETED";
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly RUNNING: "RUNNING";
};
export type RestoreJobState =
  (typeof RestoreJobState)[keyof typeof RestoreJobState];
export interface ListRestoreJobSummariesInput {
  AccountId?: string;
  State?: RestoreJobState;
  ResourceType?: string;
  AggregationPeriod?: AggregationPeriod;
  MaxResults?: number;
  NextToken?: string;
}
export interface RestoreJobSummary {
  Region?: string;
  AccountId?: string;
  State?: RestoreJobState;
  ResourceType?: string;
  Count?: number;
  StartTime?: Date;
  EndTime?: Date;
}
export interface ListRestoreJobSummariesOutput {
  RestoreJobSummaries?: RestoreJobSummary[];
  AggregationPeriod?: string;
  NextToken?: string;
}
export interface ListRestoreTestingPlansInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface RestoreTestingPlanForList {
  CreationTime: Date | undefined;
  LastExecutionTime?: Date;
  LastUpdateTime?: Date;
  RestoreTestingPlanArn: string | undefined;
  RestoreTestingPlanName: string | undefined;
  ScheduleExpression: string | undefined;
  ScheduleExpressionTimezone?: string;
  StartWindowHours?: number;
}
export interface ListRestoreTestingPlansOutput {
  NextToken?: string;
  RestoreTestingPlans: RestoreTestingPlanForList[] | undefined;
}
export interface ListRestoreTestingSelectionsInput {
  MaxResults?: number;
  NextToken?: string;
  RestoreTestingPlanName: string | undefined;
}
export interface RestoreTestingSelectionForList {
  CreationTime: Date | undefined;
  IamRoleArn: string | undefined;
  ProtectedResourceType: string | undefined;
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelectionName: string | undefined;
  ValidationWindowHours?: number;
}
export interface ListRestoreTestingSelectionsOutput {
  NextToken?: string;
  RestoreTestingSelections: RestoreTestingSelectionForList[] | undefined;
}
export interface ListTagsInput {
  ResourceArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListTagsOutput {
  NextToken?: string;
  Tags?: Record<string, string>;
}
export interface PutBackupVaultAccessPolicyInput {
  BackupVaultName: string | undefined;
  Policy?: string;
}
export interface PutBackupVaultLockConfigurationInput {
  BackupVaultName: string | undefined;
  MinRetentionDays?: number;
  MaxRetentionDays?: number;
  ChangeableForDays?: number;
}
export interface PutBackupVaultNotificationsInput {
  BackupVaultName: string | undefined;
  SNSTopicArn: string | undefined;
  BackupVaultEvents: BackupVaultEvent[] | undefined;
}
export interface PutRestoreValidationResultInput {
  RestoreJobId: string | undefined;
  ValidationStatus: RestoreValidationStatus | undefined;
  ValidationStatusMessage?: string;
}
export interface StartBackupJobInput {
  BackupVaultName: string | undefined;
  ResourceArn: string | undefined;
  IamRoleArn: string | undefined;
  IdempotencyToken?: string;
  StartWindowMinutes?: number;
  CompleteWindowMinutes?: number;
  Lifecycle?: Lifecycle;
  RecoveryPointTags?: Record<string, string>;
  BackupOptions?: Record<string, string>;
}
export interface StartBackupJobOutput {
  BackupJobId?: string;
  RecoveryPointArn?: string;
  CreationDate?: Date;
  IsParent?: boolean;
}
export interface StartCopyJobInput {
  RecoveryPointArn: string | undefined;
  SourceBackupVaultName: string | undefined;
  DestinationBackupVaultArn: string | undefined;
  IamRoleArn: string | undefined;
  IdempotencyToken?: string;
  Lifecycle?: Lifecycle;
}
export interface StartCopyJobOutput {
  CopyJobId?: string;
  CreationDate?: Date;
  IsParent?: boolean;
}
export interface StartReportJobInput {
  ReportPlanName: string | undefined;
  IdempotencyToken?: string;
}
export interface StartReportJobOutput {
  ReportJobId?: string;
}
export interface StartRestoreJobInput {
  RecoveryPointArn: string | undefined;
  Metadata: Record<string, string> | undefined;
  IamRoleArn?: string;
  IdempotencyToken?: string;
  ResourceType?: string;
  CopySourceTagsToRestoredResource?: boolean;
}
export interface StartRestoreJobOutput {
  RestoreJobId?: string;
}
export interface StopBackupJobInput {
  BackupJobId: string | undefined;
}
export interface TagResourceInput {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface UntagResourceInput {
  ResourceArn: string | undefined;
  TagKeyList: string[] | undefined;
}
export interface UpdateBackupPlanInput {
  BackupPlanId: string | undefined;
  BackupPlan: BackupPlanInput | undefined;
}
export interface UpdateBackupPlanOutput {
  BackupPlanId?: string;
  BackupPlanArn?: string;
  CreationDate?: Date;
  VersionId?: string;
  AdvancedBackupSettings?: AdvancedBackupSetting[];
}
export interface UpdateFrameworkInput {
  FrameworkName: string | undefined;
  FrameworkDescription?: string;
  FrameworkControls?: FrameworkControl[];
  IdempotencyToken?: string;
}
export interface UpdateFrameworkOutput {
  FrameworkName?: string;
  FrameworkArn?: string;
  CreationTime?: Date;
}
export interface UpdateGlobalSettingsInput {
  GlobalSettings?: Record<string, string>;
}
export interface UpdateRecoveryPointLifecycleInput {
  BackupVaultName: string | undefined;
  RecoveryPointArn: string | undefined;
  Lifecycle?: Lifecycle;
}
export interface UpdateRecoveryPointLifecycleOutput {
  BackupVaultArn?: string;
  RecoveryPointArn?: string;
  Lifecycle?: Lifecycle;
  CalculatedLifecycle?: CalculatedLifecycle;
}
export interface UpdateRegionSettingsInput {
  ResourceTypeOptInPreference?: Record<string, boolean>;
  ResourceTypeManagementPreference?: Record<string, boolean>;
}
export interface UpdateReportPlanInput {
  ReportPlanName: string | undefined;
  ReportPlanDescription?: string;
  ReportDeliveryChannel?: ReportDeliveryChannel;
  ReportSetting?: ReportSetting;
  IdempotencyToken?: string;
}
export interface UpdateReportPlanOutput {
  ReportPlanName?: string;
  ReportPlanArn?: string;
  CreationTime?: Date;
}
export interface RestoreTestingPlanForUpdate {
  RecoveryPointSelection?: RestoreTestingRecoveryPointSelection;
  ScheduleExpression?: string;
  ScheduleExpressionTimezone?: string;
  StartWindowHours?: number;
}
export interface UpdateRestoreTestingPlanInput {
  RestoreTestingPlan: RestoreTestingPlanForUpdate | undefined;
  RestoreTestingPlanName: string | undefined;
}
export interface UpdateRestoreTestingPlanOutput {
  CreationTime: Date | undefined;
  RestoreTestingPlanArn: string | undefined;
  RestoreTestingPlanName: string | undefined;
  UpdateTime: Date | undefined;
}
export interface RestoreTestingSelectionForUpdate {
  IamRoleArn?: string;
  ProtectedResourceArns?: string[];
  ProtectedResourceConditions?: ProtectedResourceConditions;
  RestoreMetadataOverrides?: Record<string, string>;
  ValidationWindowHours?: number;
}
export interface UpdateRestoreTestingSelectionInput {
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelection: RestoreTestingSelectionForUpdate | undefined;
  RestoreTestingSelectionName: string | undefined;
}
export interface UpdateRestoreTestingSelectionOutput {
  CreationTime: Date | undefined;
  RestoreTestingPlanArn: string | undefined;
  RestoreTestingPlanName: string | undefined;
  RestoreTestingSelectionName: string | undefined;
  UpdateTime: Date | undefined;
}
export declare const BackupRuleFilterSensitiveLog: (obj: BackupRule) => any;
export declare const BackupPlanFilterSensitiveLog: (obj: BackupPlan) => any;
export declare const BackupRuleInputFilterSensitiveLog: (
  obj: BackupRuleInput
) => any;
export declare const BackupPlanInputFilterSensitiveLog: (
  obj: BackupPlanInput
) => any;
export declare const CreateBackupPlanInputFilterSensitiveLog: (
  obj: CreateBackupPlanInput
) => any;
export declare const CreateBackupVaultInputFilterSensitiveLog: (
  obj: CreateBackupVaultInput
) => any;
export declare const CreateLegalHoldInputFilterSensitiveLog: (
  obj: CreateLegalHoldInput
) => any;
export declare const CreateLogicallyAirGappedBackupVaultInputFilterSensitiveLog: (
  obj: CreateLogicallyAirGappedBackupVaultInput
) => any;
export declare const CreateRestoreTestingPlanInputFilterSensitiveLog: (
  obj: CreateRestoreTestingPlanInput
) => any;
export declare const RestoreTestingSelectionForCreateFilterSensitiveLog: (
  obj: RestoreTestingSelectionForCreate
) => any;
export declare const CreateRestoreTestingSelectionInputFilterSensitiveLog: (
  obj: CreateRestoreTestingSelectionInput
) => any;
export declare const GetBackupPlanOutputFilterSensitiveLog: (
  obj: GetBackupPlanOutput
) => any;
export declare const GetBackupPlanFromJSONOutputFilterSensitiveLog: (
  obj: GetBackupPlanFromJSONOutput
) => any;
export declare const GetBackupPlanFromTemplateOutputFilterSensitiveLog: (
  obj: GetBackupPlanFromTemplateOutput
) => any;
export declare const GetRecoveryPointRestoreMetadataOutputFilterSensitiveLog: (
  obj: GetRecoveryPointRestoreMetadataOutput
) => any;
export declare const GetRestoreJobMetadataOutputFilterSensitiveLog: (
  obj: GetRestoreJobMetadataOutput
) => any;
export declare const RestoreTestingSelectionForGetFilterSensitiveLog: (
  obj: RestoreTestingSelectionForGet
) => any;
export declare const GetRestoreTestingSelectionOutputFilterSensitiveLog: (
  obj: GetRestoreTestingSelectionOutput
) => any;
export declare const ListTagsOutputFilterSensitiveLog: (
  obj: ListTagsOutput
) => any;
export declare const StartBackupJobInputFilterSensitiveLog: (
  obj: StartBackupJobInput
) => any;
export declare const StartRestoreJobInputFilterSensitiveLog: (
  obj: StartRestoreJobInput
) => any;
export declare const TagResourceInputFilterSensitiveLog: (
  obj: TagResourceInput
) => any;
export declare const UntagResourceInputFilterSensitiveLog: (
  obj: UntagResourceInput
) => any;
export declare const UpdateBackupPlanInputFilterSensitiveLog: (
  obj: UpdateBackupPlanInput
) => any;
export declare const RestoreTestingSelectionForUpdateFilterSensitiveLog: (
  obj: RestoreTestingSelectionForUpdate
) => any;
export declare const UpdateRestoreTestingSelectionInputFilterSensitiveLog: (
  obj: UpdateRestoreTestingSelectionInput
) => any;
