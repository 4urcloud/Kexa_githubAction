import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { WorkMailServiceException as __BaseException } from "./WorkMailServiceException";
export const AccessControlRuleEffect = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export const AccessEffect = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export class EntityNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "EntityNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "EntityNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EntityNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class EntityStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "EntityStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "EntityStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EntityStateException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class OrganizationNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "OrganizationNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "OrganizationNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OrganizationNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class OrganizationStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "OrganizationStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "OrganizationStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OrganizationStateException.prototype);
        this.Message = opts.Message;
    }
}
export class UnsupportedOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperationException.prototype);
        this.Message = opts.Message;
    }
}
export class DirectoryServiceAuthenticationFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "DirectoryServiceAuthenticationFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "DirectoryServiceAuthenticationFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DirectoryServiceAuthenticationFailedException.prototype);
        this.Message = opts.Message;
    }
}
export class DirectoryUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "DirectoryUnavailableException",
            $fault: "client",
            ...opts,
        });
        this.name = "DirectoryUnavailableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DirectoryUnavailableException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export const AvailabilityProviderType = {
    EWS: "EWS",
    LAMBDA: "LAMBDA",
};
export class EmailAddressInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "EmailAddressInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "EmailAddressInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EmailAddressInUseException.prototype);
        this.Message = opts.Message;
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class MailDomainNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "MailDomainNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "MailDomainNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MailDomainNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class MailDomainStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "MailDomainStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "MailDomainStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MailDomainStateException.prototype);
        this.Message = opts.Message;
    }
}
export class NameAvailabilityException extends __BaseException {
    constructor(opts) {
        super({
            name: "NameAvailabilityException",
            $fault: "client",
            ...opts,
        });
        this.name = "NameAvailabilityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NameAvailabilityException.prototype);
        this.Message = opts.Message;
    }
}
export class ReservedNameException extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNameException",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNameException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNameException.prototype);
        this.Message = opts.Message;
    }
}
export const ImpersonationRoleType = {
    FULL_ACCESS: "FULL_ACCESS",
    READ_ONLY: "READ_ONLY",
};
export const MobileDeviceAccessRuleEffect = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export class DirectoryInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "DirectoryInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "DirectoryInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DirectoryInUseException.prototype);
        this.Message = opts.Message;
    }
}
export const ResourceType = {
    EQUIPMENT: "EQUIPMENT",
    ROOM: "ROOM",
};
export const UserRole = {
    REMOTE_USER: "REMOTE_USER",
    RESOURCE: "RESOURCE",
    SYSTEM_USER: "SYSTEM_USER",
    USER: "USER",
};
export class InvalidPasswordException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPasswordException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPasswordException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPasswordException.prototype);
        this.Message = opts.Message;
    }
}
export const MemberType = {
    GROUP: "GROUP",
    USER: "USER",
};
export class InvalidCustomSesConfigurationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCustomSesConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCustomSesConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCustomSesConfigurationException.prototype);
        this.Message = opts.Message;
    }
}
export class MailDomainInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "MailDomainInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "MailDomainInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MailDomainInUseException.prototype);
        this.Message = opts.Message;
    }
}
export const EntityType = {
    GROUP: "GROUP",
    RESOURCE: "RESOURCE",
    USER: "USER",
};
export const EntityState = {
    DELETED: "DELETED",
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const MailboxExportJobState = {
    CANCELLED: "CANCELLED",
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    RUNNING: "RUNNING",
};
export const DnsRecordVerificationStatus = {
    FAILED: "FAILED",
    PENDING: "PENDING",
    VERIFIED: "VERIFIED",
};
export class EntityAlreadyRegisteredException extends __BaseException {
    constructor(opts) {
        super({
            name: "EntityAlreadyRegisteredException",
            $fault: "client",
            ...opts,
        });
        this.name = "EntityAlreadyRegisteredException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EntityAlreadyRegisteredException.prototype);
        this.Message = opts.Message;
    }
}
export const RetentionAction = {
    DELETE: "DELETE",
    NONE: "NONE",
    PERMANENTLY_DELETE: "PERMANENTLY_DELETE",
};
export const FolderName = {
    DELETED_ITEMS: "DELETED_ITEMS",
    DRAFTS: "DRAFTS",
    INBOX: "INBOX",
    JUNK_EMAIL: "JUNK_EMAIL",
    SENT_ITEMS: "SENT_ITEMS",
};
export class InvalidConfigurationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidConfigurationException.prototype);
        this.Message = opts.Message;
    }
}
export const PermissionType = {
    FULL_ACCESS: "FULL_ACCESS",
    SEND_AS: "SEND_AS",
    SEND_ON_BEHALF: "SEND_ON_BEHALF",
};
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.Message = opts.Message;
    }
}
export const EwsAvailabilityProviderFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EwsPassword && { EwsPassword: SENSITIVE_STRING }),
});
export const CreateAvailabilityConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EwsProvider && { EwsProvider: EwsAvailabilityProviderFilterSensitiveLog(obj.EwsProvider) }),
});
export const CreateUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DisplayName && { DisplayName: SENSITIVE_STRING }),
    ...(obj.Password && { Password: SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: SENSITIVE_STRING }),
});
export const DescribeUserResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DisplayName && { DisplayName: SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: SENSITIVE_STRING }),
    ...(obj.Initials && { Initials: SENSITIVE_STRING }),
    ...(obj.Telephone && { Telephone: SENSITIVE_STRING }),
    ...(obj.Street && { Street: SENSITIVE_STRING }),
    ...(obj.JobTitle && { JobTitle: SENSITIVE_STRING }),
    ...(obj.City && { City: SENSITIVE_STRING }),
    ...(obj.Company && { Company: SENSITIVE_STRING }),
    ...(obj.ZipCode && { ZipCode: SENSITIVE_STRING }),
    ...(obj.Department && { Department: SENSITIVE_STRING }),
    ...(obj.Country && { Country: SENSITIVE_STRING }),
    ...(obj.Office && { Office: SENSITIVE_STRING }),
});
export const ListUsersFiltersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DisplayNamePrefix && { DisplayNamePrefix: SENSITIVE_STRING }),
});
export const ListUsersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Filters && { Filters: ListUsersFiltersFilterSensitiveLog(obj.Filters) }),
});
export const PutRetentionPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Description && { Description: SENSITIVE_STRING }),
});
export const ResetPasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const TestAvailabilityConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EwsProvider && { EwsProvider: EwsAvailabilityProviderFilterSensitiveLog(obj.EwsProvider) }),
});
export const UpdateAvailabilityConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EwsProvider && { EwsProvider: EwsAvailabilityProviderFilterSensitiveLog(obj.EwsProvider) }),
});
export const UpdateUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DisplayName && { DisplayName: SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: SENSITIVE_STRING }),
    ...(obj.Initials && { Initials: SENSITIVE_STRING }),
    ...(obj.Telephone && { Telephone: SENSITIVE_STRING }),
    ...(obj.Street && { Street: SENSITIVE_STRING }),
    ...(obj.JobTitle && { JobTitle: SENSITIVE_STRING }),
    ...(obj.City && { City: SENSITIVE_STRING }),
    ...(obj.Company && { Company: SENSITIVE_STRING }),
    ...(obj.ZipCode && { ZipCode: SENSITIVE_STRING }),
    ...(obj.Department && { Department: SENSITIVE_STRING }),
    ...(obj.Country && { Country: SENSITIVE_STRING }),
    ...(obj.Office && { Office: SENSITIVE_STRING }),
});
