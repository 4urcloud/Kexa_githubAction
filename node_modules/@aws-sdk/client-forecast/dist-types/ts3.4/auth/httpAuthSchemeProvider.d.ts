import {
  AwsSdkSigV4AuthInputConfig,
  AwsSdkSigV4AuthResolvedConfig,
  AwsSdkSigV4PreviouslyResolved,
} from "@aws-sdk/core";
import {
  HandlerExecutionContext,
  HttpAuthScheme,
  HttpAuthSchemeParameters,
  HttpAuthSchemeParametersProvider,
  HttpAuthSchemeProvider,
} from "@smithy/types";
import { ForecastClientResolvedConfig } from "../ForecastClient";
export interface ForecastHttpAuthSchemeParameters
  extends HttpAuthSchemeParameters {
  region?: string;
}
export interface ForecastHttpAuthSchemeParametersProvider
  extends HttpAuthSchemeParametersProvider<
    ForecastClientResolvedConfig,
    HandlerExecutionContext,
    ForecastHttpAuthSchemeParameters,
    object
  > {}
export declare const defaultForecastHttpAuthSchemeParametersProvider: (
  config: ForecastClientResolvedConfig,
  context: HandlerExecutionContext,
  input: object
) => Promise<ForecastHttpAuthSchemeParameters>;
export interface ForecastHttpAuthSchemeProvider
  extends HttpAuthSchemeProvider<ForecastHttpAuthSchemeParameters> {}
export declare const defaultForecastHttpAuthSchemeProvider: ForecastHttpAuthSchemeProvider;
export interface HttpAuthSchemeInputConfig extends AwsSdkSigV4AuthInputConfig {
  httpAuthSchemes?: HttpAuthScheme[];
  httpAuthSchemeProvider?: ForecastHttpAuthSchemeProvider;
}
export interface HttpAuthSchemeResolvedConfig
  extends AwsSdkSigV4AuthResolvedConfig {
  readonly httpAuthSchemes: HttpAuthScheme[];
  readonly httpAuthSchemeProvider: ForecastHttpAuthSchemeProvider;
}
export declare const resolveHttpAuthSchemeConfig: <T>(
  config: T & HttpAuthSchemeInputConfig & AwsSdkSigV4PreviouslyResolved
) => T & HttpAuthSchemeResolvedConfig;
