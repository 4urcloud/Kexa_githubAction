import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { BillingconductorServiceException as __BaseException } from "./BillingconductorServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AccountAssociationsListElement {
  AccountId?: string;
  BillingGroupArn?: string;
  AccountName?: string;
  AccountEmail?: string;
}
export interface AccountGrouping {
  LinkedAccountIds: string[] | undefined;
  AutoAssociate?: boolean;
}
export interface AssociateAccountsInput {
  Arn: string | undefined;
  AccountIds: string[] | undefined;
}
export interface AssociateAccountsOutput {
  Arn?: string;
}
export declare const ConflictExceptionReason: {
  readonly PRICING_PLAN_ATTACHED_TO_BILLING_GROUP_DELETE_CONFLICT: "PRICING_PLAN_ATTACHED_TO_BILLING_GROUP_DELETE_CONFLICT";
  readonly PRICING_RULE_ATTACHED_TO_PRICING_PLAN_DELETE_CONFLICT: "PRICING_RULE_ATTACHED_TO_PRICING_PLAN_DELETE_CONFLICT";
  readonly PRICING_RULE_IN_PRICING_PLAN_CONFLICT: "PRICING_RULE_IN_PRICING_PLAN_CONFLICT";
  readonly RESOURCE_NAME_CONFLICT: "RESOURCE_NAME_CONFLICT";
  readonly WRITE_CONFLICT_RETRY: "WRITE_CONFLICT_RETRY";
};
export type ConflictExceptionReason =
  (typeof ConflictExceptionReason)[keyof typeof ConflictExceptionReason];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId: string | undefined;
  ResourceType: string | undefined;
  Reason?: ConflictExceptionReason;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  RetryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId: string | undefined;
  ResourceType: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceLimitExceededException extends __BaseException {
  readonly name: "ServiceLimitExceededException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: string;
  LimitCode: string | undefined;
  ServiceCode: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceLimitExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message: string | undefined;
  RetryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  Name: string | undefined;
  Message: string | undefined;
}
export declare const ValidationExceptionReason: {
  readonly ACCOUNTS_ALREADY_ASSOCIATED: "ACCOUNTS_ALREADY_ASSOCIATED";
  readonly ACCOUNTS_NOT_ASSOCIATED: "ACCOUNTS_NOT_ASSOCIATED";
  readonly CANNOT_DELETE_AUTO_ASSOCIATE_BILLING_GROUP: "CANNOT_DELETE_AUTO_ASSOCIATE_BILLING_GROUP";
  readonly CANNOT_PARSE: "CANNOT_PARSE";
  readonly CUSTOM_LINE_ITEM_ASSOCIATION_EXISTS: "CUSTOM_LINE_ITEM_ASSOCIATION_EXISTS";
  readonly DUPLICATE_ACCOUNT: "DUPLICATE_ACCOUNT";
  readonly DUPLICATE_PRICINGRULE_ARNS: "DUPLICATE_PRICINGRULE_ARNS";
  readonly FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED";
  readonly ILLEGAL_ACCOUNTS: "ILLEGAL_ACCOUNTS";
  readonly ILLEGAL_ACCOUNT_ID: "ILLEGAL_ACCOUNT_ID";
  readonly ILLEGAL_BILLING_ENTITY: "ILLEGAL_BILLING_ENTITY";
  readonly ILLEGAL_BILLING_PERIOD: "ILLEGAL_BILLING_PERIOD";
  readonly ILLEGAL_BILLING_PERIOD_RANGE: "ILLEGAL_BILLING_PERIOD_RANGE";
  readonly ILLEGAL_CHARGE_DETAILS: "ILLEGAL_CHARGE_DETAILS";
  readonly ILLEGAL_CHILD_ASSOCIATE_RESOURCE: "ILLEGAL_CHILD_ASSOCIATE_RESOURCE";
  readonly ILLEGAL_CUSTOMLINEITEM: "ILLEGAL_CUSTOMLINEITEM";
  readonly ILLEGAL_CUSTOMLINEITEM_MODIFICATION: "ILLEGAL_CUSTOMLINEITEM_MODIFICATION";
  readonly ILLEGAL_CUSTOMLINEITEM_UPDATE: "ILLEGAL_CUSTOMLINEITEM_UPDATE";
  readonly ILLEGAL_ENDED_BILLINGGROUP: "ILLEGAL_ENDED_BILLINGGROUP";
  readonly ILLEGAL_EXPRESSION: "ILLEGAL_EXPRESSION";
  readonly ILLEGAL_MODIFIER_PERCENTAGE: "ILLEGAL_MODIFIER_PERCENTAGE";
  readonly ILLEGAL_OPERATION: "ILLEGAL_OPERATION";
  readonly ILLEGAL_PRIMARY_ACCOUNT: "ILLEGAL_PRIMARY_ACCOUNT";
  readonly ILLEGAL_RESOURCE_ARNS: "ILLEGAL_RESOURCE_ARNS";
  readonly ILLEGAL_SCOPE: "ILLEGAL_SCOPE";
  readonly ILLEGAL_SERVICE: "ILLEGAL_SERVICE";
  readonly ILLEGAL_TIERING_INPUT: "ILLEGAL_TIERING_INPUT";
  readonly ILLEGAL_TYPE: "ILLEGAL_TYPE";
  readonly ILLEGAL_UPDATE_CHARGE_DETAILS: "ILLEGAL_UPDATE_CHARGE_DETAILS";
  readonly ILLEGAL_USAGE_TYPE: "ILLEGAL_USAGE_TYPE";
  readonly INVALID_ARN: "INVALID_ARN";
  readonly INVALID_BILLINGVIEW_ARN: "INVALID_BILLINGVIEW_ARN";
  readonly INVALID_BILLING_GROUP: "INVALID_BILLING_GROUP";
  readonly INVALID_BILLING_GROUP_STATUS: "INVALID_BILLING_GROUP_STATUS";
  readonly INVALID_BILLING_PERIOD_FOR_OPERATION: "INVALID_BILLING_PERIOD_FOR_OPERATION";
  readonly INVALID_FILTER: "INVALID_FILTER";
  readonly INVALID_SKU_COMBO: "INVALID_SKU_COMBO";
  readonly INVALID_TIME_RANGE: "INVALID_TIME_RANGE";
  readonly MISMATCHED_BILLINGGROUP_ARN: "MISMATCHED_BILLINGGROUP_ARN";
  readonly MISMATCHED_BILLINGVIEW_ARN: "MISMATCHED_BILLINGVIEW_ARN";
  readonly MISMATCHED_CUSTOMLINEITEM_ARN: "MISMATCHED_CUSTOMLINEITEM_ARN";
  readonly MISMATCHED_PRICINGPLAN_ARN: "MISMATCHED_PRICINGPLAN_ARN";
  readonly MISMATCHED_PRICINGRULE_ARN: "MISMATCHED_PRICINGRULE_ARN";
  readonly MISSING_BILLINGGROUP: "MISSING_BILLINGGROUP";
  readonly MISSING_CUSTOMLINEITEM: "MISSING_CUSTOMLINEITEM";
  readonly MISSING_LINKED_ACCOUNT_IDS: "MISSING_LINKED_ACCOUNT_IDS";
  readonly MISSING_PRICINGPLAN: "MISSING_PRICINGPLAN";
  readonly MISSING_PRICING_PLAN_ARN: "MISSING_PRICING_PLAN_ARN";
  readonly MULTIPLE_LINKED_ACCOUNT_IDS: "MULTIPLE_LINKED_ACCOUNT_IDS";
  readonly MULTIPLE_PRICING_PLAN_ARN: "MULTIPLE_PRICING_PLAN_ARN";
  readonly OTHER: "OTHER";
  readonly PRICINGRULES_ALREADY_ASSOCIATED: "PRICINGRULES_ALREADY_ASSOCIATED";
  readonly PRICINGRULES_NOT_ASSOCIATED: "PRICINGRULES_NOT_ASSOCIATED";
  readonly PRICINGRULES_NOT_EXIST: "PRICINGRULES_NOT_EXIST";
  readonly PRIMARY_CANNOT_DISASSOCIATE: "PRIMARY_CANNOT_DISASSOCIATE";
  readonly PRIMARY_NOT_ASSOCIATED: "PRIMARY_NOT_ASSOCIATED";
  readonly TOO_MANY_ACCOUNTS_IN_REQUEST: "TOO_MANY_ACCOUNTS_IN_REQUEST";
  readonly TOO_MANY_AUTO_ASSOCIATE_BILLING_GROUPS: "TOO_MANY_AUTO_ASSOCIATE_BILLING_GROUPS";
  readonly TOO_MANY_CUSTOMLINEITEMS_IN_REQUEST: "TOO_MANY_CUSTOMLINEITEMS_IN_REQUEST";
  readonly UNKNOWN_OPERATION: "UNKNOWN_OPERATION";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason?: ValidationExceptionReason;
  Fields?: ValidationExceptionField[];
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface AssociatePricingRulesInput {
  Arn: string | undefined;
  PricingRuleArns: string[] | undefined;
}
export interface AssociatePricingRulesOutput {
  Arn?: string;
}
export declare const AssociateResourceErrorReason: {
  readonly ILLEGAL_CUSTOMLINEITEM: "ILLEGAL_CUSTOMLINEITEM";
  readonly INTERNAL_SERVER_EXCEPTION: "INTERNAL_SERVER_EXCEPTION";
  readonly INVALID_ARN: "INVALID_ARN";
  readonly INVALID_BILLING_PERIOD_RANGE: "INVALID_BILLING_PERIOD_RANGE";
  readonly SERVICE_LIMIT_EXCEEDED: "SERVICE_LIMIT_EXCEEDED";
};
export type AssociateResourceErrorReason =
  (typeof AssociateResourceErrorReason)[keyof typeof AssociateResourceErrorReason];
export interface AssociateResourceError {
  Message?: string;
  Reason?: AssociateResourceErrorReason;
}
export interface AssociateResourceResponseElement {
  Arn?: string;
  Error?: AssociateResourceError;
}
export interface Attribute {
  Key?: string;
  Value?: string;
}
export interface ComputationPreference {
  PricingPlanArn: string | undefined;
}
export interface CreateBillingGroupInput {
  ClientToken?: string;
  Name: string | undefined;
  AccountGrouping: AccountGrouping | undefined;
  ComputationPreference: ComputationPreference | undefined;
  PrimaryAccountId?: string;
  Description?: string;
  Tags?: Record<string, string>;
}
export interface CreateBillingGroupOutput {
  Arn?: string;
}
export interface DeleteBillingGroupInput {
  Arn: string | undefined;
}
export interface DeleteBillingGroupOutput {
  Arn?: string;
}
export interface DisassociateAccountsInput {
  Arn: string | undefined;
  AccountIds: string[] | undefined;
}
export interface DisassociateAccountsOutput {
  Arn?: string;
}
export declare const BillingGroupStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly PRIMARY_ACCOUNT_MISSING: "PRIMARY_ACCOUNT_MISSING";
};
export type BillingGroupStatus =
  (typeof BillingGroupStatus)[keyof typeof BillingGroupStatus];
export interface ListBillingGroupsFilter {
  Arns?: string[];
  PricingPlan?: string;
  Statuses?: BillingGroupStatus[];
  AutoAssociate?: boolean;
}
export interface ListBillingGroupsInput {
  BillingPeriod?: string;
  MaxResults?: number;
  NextToken?: string;
  Filters?: ListBillingGroupsFilter;
}
export interface ListBillingGroupAccountGrouping {
  AutoAssociate?: boolean;
}
export interface BillingGroupListElement {
  Name?: string;
  Arn?: string;
  Description?: string;
  PrimaryAccountId?: string;
  ComputationPreference?: ComputationPreference;
  Size?: number;
  CreationTime?: number;
  LastModifiedTime?: number;
  Status?: BillingGroupStatus;
  StatusReason?: string;
  AccountGrouping?: ListBillingGroupAccountGrouping;
}
export interface ListBillingGroupsOutput {
  BillingGroups?: BillingGroupListElement[];
  NextToken?: string;
}
export interface UpdateBillingGroupAccountGrouping {
  AutoAssociate?: boolean;
}
export interface UpdateBillingGroupInput {
  Arn: string | undefined;
  Name?: string;
  Status?: BillingGroupStatus;
  ComputationPreference?: ComputationPreference;
  Description?: string;
  AccountGrouping?: UpdateBillingGroupAccountGrouping;
}
export interface UpdateBillingGroupOutput {
  Arn?: string;
  Name?: string;
  Description?: string;
  PrimaryAccountId?: string;
  PricingPlanArn?: string;
  Size?: number;
  LastModifiedTime?: number;
  Status?: BillingGroupStatus;
  StatusReason?: string;
  AccountGrouping?: UpdateBillingGroupAccountGrouping;
}
export interface CustomLineItemBillingPeriodRange {
  InclusiveStartBillingPeriod: string | undefined;
  ExclusiveEndBillingPeriod?: string;
}
export interface BatchAssociateResourcesToCustomLineItemInput {
  TargetArn: string | undefined;
  ResourceArns: string[] | undefined;
  BillingPeriodRange?: CustomLineItemBillingPeriodRange;
}
export interface BatchAssociateResourcesToCustomLineItemOutput {
  SuccessfullyAssociatedResources?: AssociateResourceResponseElement[];
  FailedAssociatedResources?: AssociateResourceResponseElement[];
}
export interface BatchDisassociateResourcesFromCustomLineItemInput {
  TargetArn: string | undefined;
  ResourceArns: string[] | undefined;
  BillingPeriodRange?: CustomLineItemBillingPeriodRange;
}
export interface DisassociateResourceResponseElement {
  Arn?: string;
  Error?: AssociateResourceError;
}
export interface BatchDisassociateResourcesFromCustomLineItemOutput {
  SuccessfullyDisassociatedResources?: DisassociateResourceResponseElement[];
  FailedDisassociatedResources?: DisassociateResourceResponseElement[];
}
export interface CustomLineItemFlatChargeDetails {
  ChargeValue: number | undefined;
}
export declare const LineItemFilterAttributeName: {
  readonly LINE_ITEM_TYPE: "LINE_ITEM_TYPE";
};
export type LineItemFilterAttributeName =
  (typeof LineItemFilterAttributeName)[keyof typeof LineItemFilterAttributeName];
export declare const MatchOption: {
  readonly NOT_EQUAL: "NOT_EQUAL";
};
export type MatchOption = (typeof MatchOption)[keyof typeof MatchOption];
export declare const LineItemFilterValue: {
  readonly SAVINGS_PLAN_NEGATION: "SAVINGS_PLAN_NEGATION";
};
export type LineItemFilterValue =
  (typeof LineItemFilterValue)[keyof typeof LineItemFilterValue];
export interface LineItemFilter {
  Attribute: LineItemFilterAttributeName | undefined;
  MatchOption: MatchOption | undefined;
  Values: LineItemFilterValue[] | undefined;
}
export interface CustomLineItemPercentageChargeDetails {
  PercentageValue: number | undefined;
  AssociatedValues?: string[];
}
export declare const CustomLineItemType: {
  readonly CREDIT: "CREDIT";
  readonly FEE: "FEE";
};
export type CustomLineItemType =
  (typeof CustomLineItemType)[keyof typeof CustomLineItemType];
export interface CustomLineItemChargeDetails {
  Flat?: CustomLineItemFlatChargeDetails;
  Percentage?: CustomLineItemPercentageChargeDetails;
  Type: CustomLineItemType | undefined;
  LineItemFilters?: LineItemFilter[];
}
export interface CreateCustomLineItemInput {
  ClientToken?: string;
  Name: string | undefined;
  Description: string | undefined;
  BillingGroupArn: string | undefined;
  BillingPeriodRange?: CustomLineItemBillingPeriodRange;
  Tags?: Record<string, string>;
  ChargeDetails: CustomLineItemChargeDetails | undefined;
  AccountId?: string;
}
export interface CreateCustomLineItemOutput {
  Arn?: string;
}
export interface DeleteCustomLineItemInput {
  Arn: string | undefined;
  BillingPeriodRange?: CustomLineItemBillingPeriodRange;
}
export interface DeleteCustomLineItemOutput {
  Arn?: string;
}
export interface ListCustomLineItemsFilter {
  Names?: string[];
  BillingGroups?: string[];
  Arns?: string[];
  AccountIds?: string[];
}
export interface ListCustomLineItemsInput {
  BillingPeriod?: string;
  MaxResults?: number;
  NextToken?: string;
  Filters?: ListCustomLineItemsFilter;
}
export interface ListCustomLineItemFlatChargeDetails {
  ChargeValue: number | undefined;
}
export interface ListCustomLineItemPercentageChargeDetails {
  PercentageValue: number | undefined;
}
export interface ListCustomLineItemChargeDetails {
  Flat?: ListCustomLineItemFlatChargeDetails;
  Percentage?: ListCustomLineItemPercentageChargeDetails;
  Type: CustomLineItemType | undefined;
  LineItemFilters?: LineItemFilter[];
}
export declare const CurrencyCode: {
  readonly CNY: "CNY";
  readonly USD: "USD";
};
export type CurrencyCode = (typeof CurrencyCode)[keyof typeof CurrencyCode];
export interface CustomLineItemListElement {
  Arn?: string;
  Name?: string;
  ChargeDetails?: ListCustomLineItemChargeDetails;
  CurrencyCode?: CurrencyCode;
  Description?: string;
  ProductCode?: string;
  BillingGroupArn?: string;
  CreationTime?: number;
  LastModifiedTime?: number;
  AssociationSize?: number;
  AccountId?: string;
}
export interface ListCustomLineItemsOutput {
  CustomLineItems?: CustomLineItemListElement[];
  NextToken?: string;
}
export interface ListCustomLineItemVersionsBillingPeriodRangeFilter {
  StartBillingPeriod?: string;
  EndBillingPeriod?: string;
}
export interface ListCustomLineItemVersionsFilter {
  BillingPeriodRange?: ListCustomLineItemVersionsBillingPeriodRangeFilter;
}
export interface ListCustomLineItemVersionsInput {
  Arn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  Filters?: ListCustomLineItemVersionsFilter;
}
export interface CustomLineItemVersionListElement {
  Name?: string;
  ChargeDetails?: ListCustomLineItemChargeDetails;
  CurrencyCode?: CurrencyCode;
  Description?: string;
  ProductCode?: string;
  BillingGroupArn?: string;
  CreationTime?: number;
  LastModifiedTime?: number;
  AssociationSize?: number;
  StartBillingPeriod?: string;
  EndBillingPeriod?: string;
  Arn?: string;
  StartTime?: number;
  AccountId?: string;
}
export interface ListCustomLineItemVersionsOutput {
  CustomLineItemVersions?: CustomLineItemVersionListElement[];
  NextToken?: string;
}
export declare const CustomLineItemRelationship: {
  readonly CHILD: "CHILD";
  readonly PARENT: "PARENT";
};
export type CustomLineItemRelationship =
  (typeof CustomLineItemRelationship)[keyof typeof CustomLineItemRelationship];
export interface ListResourcesAssociatedToCustomLineItemFilter {
  Relationship?: CustomLineItemRelationship;
}
export interface ListResourcesAssociatedToCustomLineItemInput {
  BillingPeriod?: string;
  Arn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  Filters?: ListResourcesAssociatedToCustomLineItemFilter;
}
export interface ListResourcesAssociatedToCustomLineItemResponseElement {
  Arn?: string;
  Relationship?: CustomLineItemRelationship;
  EndBillingPeriod?: string;
}
export interface ListResourcesAssociatedToCustomLineItemOutput {
  Arn?: string;
  AssociatedResources?: ListResourcesAssociatedToCustomLineItemResponseElement[];
  NextToken?: string;
}
export interface UpdateCustomLineItemFlatChargeDetails {
  ChargeValue: number | undefined;
}
export interface UpdateCustomLineItemPercentageChargeDetails {
  PercentageValue: number | undefined;
}
export interface UpdateCustomLineItemChargeDetails {
  Flat?: UpdateCustomLineItemFlatChargeDetails;
  Percentage?: UpdateCustomLineItemPercentageChargeDetails;
  LineItemFilters?: LineItemFilter[];
}
export interface UpdateCustomLineItemInput {
  Arn: string | undefined;
  Name?: string;
  Description?: string;
  ChargeDetails?: UpdateCustomLineItemChargeDetails;
  BillingPeriodRange?: CustomLineItemBillingPeriodRange;
}
export interface UpdateCustomLineItemOutput {
  Arn?: string;
  BillingGroupArn?: string;
  Name?: string;
  Description?: string;
  ChargeDetails?: ListCustomLineItemChargeDetails;
  LastModifiedTime?: number;
  AssociationSize?: number;
}
export interface BillingPeriodRange {
  InclusiveStartBillingPeriod: string | undefined;
  ExclusiveEndBillingPeriod: string | undefined;
}
export declare const GroupByAttributeName: {
  readonly BILLING_PERIOD: "BILLING_PERIOD";
  readonly PRODUCT_NAME: "PRODUCT_NAME";
};
export type GroupByAttributeName =
  (typeof GroupByAttributeName)[keyof typeof GroupByAttributeName];
export interface GetBillingGroupCostReportInput {
  Arn: string | undefined;
  BillingPeriodRange?: BillingPeriodRange;
  GroupBy?: GroupByAttributeName[];
  MaxResults?: number;
  NextToken?: string;
}
export interface BillingGroupCostReportResultElement {
  Arn?: string;
  AWSCost?: string;
  ProformaCost?: string;
  Margin?: string;
  MarginPercentage?: string;
  Currency?: string;
  Attributes?: Attribute[];
}
export interface GetBillingGroupCostReportOutput {
  BillingGroupCostReportResults?: BillingGroupCostReportResultElement[];
  NextToken?: string;
}
export interface ListAccountAssociationsFilter {
  Association?: string;
  AccountId?: string;
  AccountIds?: string[];
}
export interface ListAccountAssociationsInput {
  BillingPeriod?: string;
  Filters?: ListAccountAssociationsFilter;
  NextToken?: string;
}
export interface ListAccountAssociationsOutput {
  LinkedAccounts?: AccountAssociationsListElement[];
  NextToken?: string;
}
export interface ListBillingGroupCostReportsFilter {
  BillingGroupArns?: string[];
}
export interface ListBillingGroupCostReportsInput {
  BillingPeriod?: string;
  MaxResults?: number;
  NextToken?: string;
  Filters?: ListBillingGroupCostReportsFilter;
}
export interface BillingGroupCostReportElement {
  Arn?: string;
  AWSCost?: string;
  ProformaCost?: string;
  Margin?: string;
  MarginPercentage?: string;
  Currency?: string;
}
export interface ListBillingGroupCostReportsOutput {
  BillingGroupCostReports?: BillingGroupCostReportElement[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface CreatePricingPlanInput {
  ClientToken?: string;
  Name: string | undefined;
  Description?: string;
  PricingRuleArns?: string[];
  Tags?: Record<string, string>;
}
export interface CreatePricingPlanOutput {
  Arn?: string;
}
export interface DeletePricingPlanInput {
  Arn: string | undefined;
}
export interface DeletePricingPlanOutput {
  Arn?: string;
}
export interface DisassociatePricingRulesInput {
  Arn: string | undefined;
  PricingRuleArns: string[] | undefined;
}
export interface DisassociatePricingRulesOutput {
  Arn?: string;
}
export interface ListPricingPlansFilter {
  Arns?: string[];
}
export interface ListPricingPlansInput {
  BillingPeriod?: string;
  Filters?: ListPricingPlansFilter;
  MaxResults?: number;
  NextToken?: string;
}
export interface PricingPlanListElement {
  Name?: string;
  Arn?: string;
  Description?: string;
  Size?: number;
  CreationTime?: number;
  LastModifiedTime?: number;
}
export interface ListPricingPlansOutput {
  BillingPeriod?: string;
  PricingPlans?: PricingPlanListElement[];
  NextToken?: string;
}
export interface ListPricingPlansAssociatedWithPricingRuleInput {
  BillingPeriod?: string;
  PricingRuleArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListPricingPlansAssociatedWithPricingRuleOutput {
  BillingPeriod?: string;
  PricingRuleArn?: string;
  PricingPlanArns?: string[];
  NextToken?: string;
}
export interface UpdatePricingPlanInput {
  Arn: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdatePricingPlanOutput {
  Arn?: string;
  Name?: string;
  Description?: string;
  Size?: number;
  LastModifiedTime?: number;
}
export declare const PricingRuleScope: {
  readonly BILLING_ENTITY: "BILLING_ENTITY";
  readonly GLOBAL: "GLOBAL";
  readonly SERVICE: "SERVICE";
  readonly SKU: "SKU";
};
export type PricingRuleScope =
  (typeof PricingRuleScope)[keyof typeof PricingRuleScope];
export interface CreateFreeTierConfig {
  Activated: boolean | undefined;
}
export interface CreateTieringInput {
  FreeTier: CreateFreeTierConfig | undefined;
}
export declare const PricingRuleType: {
  readonly DISCOUNT: "DISCOUNT";
  readonly MARKUP: "MARKUP";
  readonly TIERING: "TIERING";
};
export type PricingRuleType =
  (typeof PricingRuleType)[keyof typeof PricingRuleType];
export interface CreatePricingRuleInput {
  ClientToken?: string;
  Name: string | undefined;
  Description?: string;
  Scope: PricingRuleScope | undefined;
  Type: PricingRuleType | undefined;
  ModifierPercentage?: number;
  Service?: string;
  Tags?: Record<string, string>;
  BillingEntity?: string;
  Tiering?: CreateTieringInput;
  UsageType?: string;
  Operation?: string;
}
export interface CreatePricingRuleOutput {
  Arn?: string;
}
export interface DeletePricingRuleInput {
  Arn: string | undefined;
}
export interface DeletePricingRuleOutput {
  Arn?: string;
}
export interface ListPricingRulesFilter {
  Arns?: string[];
}
export interface ListPricingRulesInput {
  BillingPeriod?: string;
  Filters?: ListPricingRulesFilter;
  MaxResults?: number;
  NextToken?: string;
}
export interface FreeTierConfig {
  Activated: boolean | undefined;
}
export interface Tiering {
  FreeTier: FreeTierConfig | undefined;
}
export interface PricingRuleListElement {
  Name?: string;
  Arn?: string;
  Description?: string;
  Scope?: PricingRuleScope;
  Type?: PricingRuleType;
  ModifierPercentage?: number;
  Service?: string;
  AssociatedPricingPlanCount?: number;
  CreationTime?: number;
  LastModifiedTime?: number;
  BillingEntity?: string;
  Tiering?: Tiering;
  UsageType?: string;
  Operation?: string;
}
export interface ListPricingRulesOutput {
  BillingPeriod?: string;
  PricingRules?: PricingRuleListElement[];
  NextToken?: string;
}
export interface ListPricingRulesAssociatedToPricingPlanInput {
  BillingPeriod?: string;
  PricingPlanArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListPricingRulesAssociatedToPricingPlanOutput {
  BillingPeriod?: string;
  PricingPlanArn?: string;
  PricingRuleArns?: string[];
  NextToken?: string;
}
export interface UpdateFreeTierConfig {
  Activated: boolean | undefined;
}
export interface UpdateTieringInput {
  FreeTier: UpdateFreeTierConfig | undefined;
}
export interface UpdatePricingRuleInput {
  Arn: string | undefined;
  Name?: string;
  Description?: string;
  Type?: PricingRuleType;
  ModifierPercentage?: number;
  Tiering?: UpdateTieringInput;
}
export interface UpdatePricingRuleOutput {
  Arn?: string;
  Name?: string;
  Description?: string;
  Scope?: PricingRuleScope;
  Type?: PricingRuleType;
  ModifierPercentage?: number;
  Service?: string;
  AssociatedPricingPlanCount?: number;
  LastModifiedTime?: number;
  BillingEntity?: string;
  Tiering?: UpdateTieringInput;
  UsageType?: string;
  Operation?: string;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export declare const AccountAssociationsListElementFilterSensitiveLog: (
  obj: AccountAssociationsListElement
) => any;
export declare const CreateBillingGroupInputFilterSensitiveLog: (
  obj: CreateBillingGroupInput
) => any;
export declare const BillingGroupListElementFilterSensitiveLog: (
  obj: BillingGroupListElement
) => any;
export declare const ListBillingGroupsOutputFilterSensitiveLog: (
  obj: ListBillingGroupsOutput
) => any;
export declare const UpdateBillingGroupInputFilterSensitiveLog: (
  obj: UpdateBillingGroupInput
) => any;
export declare const UpdateBillingGroupOutputFilterSensitiveLog: (
  obj: UpdateBillingGroupOutput
) => any;
export declare const CreateCustomLineItemInputFilterSensitiveLog: (
  obj: CreateCustomLineItemInput
) => any;
export declare const ListCustomLineItemsFilterFilterSensitiveLog: (
  obj: ListCustomLineItemsFilter
) => any;
export declare const ListCustomLineItemsInputFilterSensitiveLog: (
  obj: ListCustomLineItemsInput
) => any;
export declare const CustomLineItemListElementFilterSensitiveLog: (
  obj: CustomLineItemListElement
) => any;
export declare const ListCustomLineItemsOutputFilterSensitiveLog: (
  obj: ListCustomLineItemsOutput
) => any;
export declare const CustomLineItemVersionListElementFilterSensitiveLog: (
  obj: CustomLineItemVersionListElement
) => any;
export declare const ListCustomLineItemVersionsOutputFilterSensitiveLog: (
  obj: ListCustomLineItemVersionsOutput
) => any;
export declare const UpdateCustomLineItemInputFilterSensitiveLog: (
  obj: UpdateCustomLineItemInput
) => any;
export declare const UpdateCustomLineItemOutputFilterSensitiveLog: (
  obj: UpdateCustomLineItemOutput
) => any;
export declare const ListAccountAssociationsOutputFilterSensitiveLog: (
  obj: ListAccountAssociationsOutput
) => any;
export declare const CreatePricingPlanInputFilterSensitiveLog: (
  obj: CreatePricingPlanInput
) => any;
export declare const PricingPlanListElementFilterSensitiveLog: (
  obj: PricingPlanListElement
) => any;
export declare const ListPricingPlansOutputFilterSensitiveLog: (
  obj: ListPricingPlansOutput
) => any;
export declare const UpdatePricingPlanInputFilterSensitiveLog: (
  obj: UpdatePricingPlanInput
) => any;
export declare const UpdatePricingPlanOutputFilterSensitiveLog: (
  obj: UpdatePricingPlanOutput
) => any;
export declare const CreatePricingRuleInputFilterSensitiveLog: (
  obj: CreatePricingRuleInput
) => any;
export declare const PricingRuleListElementFilterSensitiveLog: (
  obj: PricingRuleListElement
) => any;
export declare const ListPricingRulesOutputFilterSensitiveLog: (
  obj: ListPricingRulesOutput
) => any;
export declare const UpdatePricingRuleInputFilterSensitiveLog: (
  obj: UpdatePricingRuleInput
) => any;
export declare const UpdatePricingRuleOutputFilterSensitiveLog: (
  obj: UpdatePricingRuleOutput
) => any;
