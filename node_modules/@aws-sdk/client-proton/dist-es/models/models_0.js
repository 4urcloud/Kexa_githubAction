import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ProtonServiceException as __BaseException } from "./ProtonServiceException";
export const EnvironmentAccountConnectionStatus = {
    CONNECTED: "CONNECTED",
    PENDING: "PENDING",
    REJECTED: "REJECTED",
};
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        this.$retryable = {};
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        this.$retryable = {
            throttling: true,
        };
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const RepositoryProvider = {
    BITBUCKET: "BITBUCKET",
    GITHUB: "GITHUB",
    GITHUB_ENTERPRISE: "GITHUB_ENTERPRISE",
};
export const DeploymentStatus = {
    CANCELLED: "CANCELLED",
    CANCELLING: "CANCELLING",
    DELETE_COMPLETE: "DELETE_COMPLETE",
    DELETE_FAILED: "DELETE_FAILED",
    DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
};
export const Provisioning = {
    CUSTOMER_MANAGED: "CUSTOMER_MANAGED",
};
export const ProvisionedResourceEngine = {
    CLOUDFORMATION: "CLOUDFORMATION",
    TERRAFORM: "TERRAFORM",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
export const ComponentDeploymentUpdateType = {
    CURRENT_VERSION: "CURRENT_VERSION",
    NONE: "NONE",
};
export var DeploymentState;
(function (DeploymentState) {
    DeploymentState.visit = (value, visitor) => {
        if (value.serviceInstance !== undefined)
            return visitor.serviceInstance(value.serviceInstance);
        if (value.environment !== undefined)
            return visitor.environment(value.environment);
        if (value.servicePipeline !== undefined)
            return visitor.servicePipeline(value.servicePipeline);
        if (value.component !== undefined)
            return visitor.component(value.component);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DeploymentState || (DeploymentState = {}));
export const DeploymentTargetResourceType = {
    COMPONENT: "COMPONENT",
    ENVIRONMENT: "ENVIRONMENT",
    SERVICE_INSTANCE: "SERVICE_INSTANCE",
    SERVICE_PIPELINE: "SERVICE_PIPELINE",
};
export const EnvironmentAccountConnectionRequesterAccountType = {
    ENVIRONMENT_ACCOUNT: "ENVIRONMENT_ACCOUNT",
    MANAGEMENT_ACCOUNT: "MANAGEMENT_ACCOUNT",
};
export const DeploymentUpdateType = {
    CURRENT_VERSION: "CURRENT_VERSION",
    MAJOR_VERSION: "MAJOR_VERSION",
    MINOR_VERSION: "MINOR_VERSION",
    NONE: "NONE",
};
export var TemplateVersionSourceInput;
(function (TemplateVersionSourceInput) {
    TemplateVersionSourceInput.visit = (value, visitor) => {
        if (value.s3 !== undefined)
            return visitor.s3(value.s3);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(TemplateVersionSourceInput || (TemplateVersionSourceInput = {}));
export const TemplateVersionStatus = {
    DRAFT: "DRAFT",
    PUBLISHED: "PUBLISHED",
    REGISTRATION_FAILED: "REGISTRATION_FAILED",
    REGISTRATION_IN_PROGRESS: "REGISTRATION_IN_PROGRESS",
};
export const SyncType = {
    SERVICE_SYNC: "SERVICE_SYNC",
    TEMPLATE_SYNC: "TEMPLATE_SYNC",
};
export const RepositorySyncStatus = {
    FAILED: "FAILED",
    INITIATED: "INITIATED",
    IN_PROGRESS: "IN_PROGRESS",
    QUEUED: "QUEUED",
    SUCCEEDED: "SUCCEEDED",
};
export const ResourceSyncStatus = {
    FAILED: "FAILED",
    INITIATED: "INITIATED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
};
export const TemplateType = {
    ENVIRONMENT: "ENVIRONMENT",
    SERVICE: "SERVICE",
};
export const ResourceDeploymentStatus = {
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
};
export const ListServiceInstancesFilterBy = {
    CREATED_AT_AFTER: "createdAtAfter",
    CREATED_AT_BEFORE: "createdAtBefore",
    DEPLOYED_TEMPLATE_VERSION_STATUS: "deployedTemplateVersionStatus",
    DEPLOYMENT_STATUS: "deploymentStatus",
    ENVIRONMENT_NAME: "environmentName",
    LAST_DEPLOYMENT_ATTEMPTED_AT_AFTER: "lastDeploymentAttemptedAtAfter",
    LAST_DEPLOYMENT_ATTEMPTED_AT_BEFORE: "lastDeploymentAttemptedAtBefore",
    NAME: "name",
    SERVICE_NAME: "serviceName",
    TEMPLATE_NAME: "templateName",
};
export const ListServiceInstancesSortBy = {
    CREATED_AT: "createdAt",
    DEPLOYMENT_STATUS: "deploymentStatus",
    ENVIRONMENT_NAME: "environmentName",
    LAST_DEPLOYMENT_ATTEMPTED_AT: "lastDeploymentAttemptedAt",
    NAME: "name",
    SERVICE_NAME: "serviceName",
    TEMPLATE_NAME: "templateName",
};
export const SortOrder = {
    ASCENDING: "ASCENDING",
    DESCENDING: "DESCENDING",
};
export const ServiceStatus = {
    ACTIVE: "ACTIVE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATE_FAILED_CLEANUP_COMPLETE: "CREATE_FAILED_CLEANUP_COMPLETE",
    CREATE_FAILED_CLEANUP_FAILED: "CREATE_FAILED_CLEANUP_FAILED",
    CREATE_FAILED_CLEANUP_IN_PROGRESS: "CREATE_FAILED_CLEANUP_IN_PROGRESS",
    CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS",
    DELETE_FAILED: "DELETE_FAILED",
    DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
    UPDATE_COMPLETE_CLEANUP_FAILED: "UPDATE_COMPLETE_CLEANUP_FAILED",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATE_FAILED_CLEANUP_COMPLETE: "UPDATE_FAILED_CLEANUP_COMPLETE",
    UPDATE_FAILED_CLEANUP_FAILED: "UPDATE_FAILED_CLEANUP_FAILED",
    UPDATE_FAILED_CLEANUP_IN_PROGRESS: "UPDATE_FAILED_CLEANUP_IN_PROGRESS",
    UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS",
};
export const BlockerStatus = {
    ACTIVE: "ACTIVE",
    RESOLVED: "RESOLVED",
};
export const BlockerType = {
    AUTOMATED: "AUTOMATED",
};
export const ServiceTemplateSupportedComponentSourceType = {
    DIRECTLY_DEFINED: "DIRECTLY_DEFINED",
};
export const ComponentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
    ...(obj.serviceSpec && { serviceSpec: SENSITIVE_STRING }),
});
export const CancelComponentDeploymentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.component && { component: ComponentFilterSensitiveLog(obj.component) }),
});
export const EnvironmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const CancelEnvironmentDeploymentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environment && { environment: EnvironmentFilterSensitiveLog(obj.environment) }),
});
export const ServiceInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const CancelServiceInstanceDeploymentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceInstance && { serviceInstance: ServiceInstanceFilterSensitiveLog(obj.serviceInstance) }),
});
export const ServicePipelineFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const CancelServicePipelineDeploymentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.pipeline && { pipeline: ServicePipelineFilterSensitiveLog(obj.pipeline) }),
});
export const OutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListComponentOutputsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.outputs && { outputs: SENSITIVE_STRING }),
});
export const CreateComponentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.templateFile && { templateFile: SENSITIVE_STRING }),
    ...(obj.manifest && { manifest: SENSITIVE_STRING }),
    ...(obj.serviceSpec && { serviceSpec: SENSITIVE_STRING }),
});
export const CreateComponentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.component && { component: ComponentFilterSensitiveLog(obj.component) }),
});
export const DeleteComponentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.component && { component: ComponentFilterSensitiveLog(obj.component) }),
});
export const GetComponentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.component && { component: ComponentFilterSensitiveLog(obj.component) }),
});
export const ComponentSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
});
export const ListComponentsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.components && { components: obj.components.map((item) => ComponentSummaryFilterSensitiveLog(item)) }),
});
export const UpdateComponentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.serviceSpec && { serviceSpec: SENSITIVE_STRING }),
    ...(obj.templateFile && { templateFile: SENSITIVE_STRING }),
});
export const UpdateComponentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.component && { component: ComponentFilterSensitiveLog(obj.component) }),
});
export const ComponentStateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceSpec && { serviceSpec: SENSITIVE_STRING }),
    ...(obj.templateFile && { templateFile: SENSITIVE_STRING }),
});
export const EnvironmentStateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const ServiceInstanceStateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const ServicePipelineStateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const DeploymentStateFilterSensitiveLog = (obj) => {
    if (obj.serviceInstance !== undefined)
        return { serviceInstance: ServiceInstanceStateFilterSensitiveLog(obj.serviceInstance) };
    if (obj.environment !== undefined)
        return { environment: EnvironmentStateFilterSensitiveLog(obj.environment) };
    if (obj.servicePipeline !== undefined)
        return { servicePipeline: ServicePipelineStateFilterSensitiveLog(obj.servicePipeline) };
    if (obj.component !== undefined)
        return { component: ComponentStateFilterSensitiveLog(obj.component) };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const DeploymentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
    ...(obj.initialState && { initialState: DeploymentStateFilterSensitiveLog(obj.initialState) }),
    ...(obj.targetState && { targetState: DeploymentStateFilterSensitiveLog(obj.targetState) }),
});
export const DeleteDeploymentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deployment && { deployment: DeploymentFilterSensitiveLog(obj.deployment) }),
});
export const GetDeploymentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deployment && { deployment: DeploymentFilterSensitiveLog(obj.deployment) }),
});
export const ListEnvironmentOutputsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.outputs && { outputs: SENSITIVE_STRING }),
});
export const CreateEnvironmentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const CreateEnvironmentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environment && { environment: EnvironmentFilterSensitiveLog(obj.environment) }),
});
export const DeleteEnvironmentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environment && { environment: EnvironmentFilterSensitiveLog(obj.environment) }),
});
export const GetEnvironmentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environment && { environment: EnvironmentFilterSensitiveLog(obj.environment) }),
});
export const EnvironmentSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
});
export const ListEnvironmentsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environments && { environments: obj.environments.map((item) => EnvironmentSummaryFilterSensitiveLog(item)) }),
});
export const UpdateEnvironmentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const UpdateEnvironmentOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environment && { environment: EnvironmentFilterSensitiveLog(obj.environment) }),
});
export const CreateEnvironmentTemplateInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const EnvironmentTemplateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const CreateEnvironmentTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplate && {
        environmentTemplate: EnvironmentTemplateFilterSensitiveLog(obj.environmentTemplate),
    }),
});
export const DeleteEnvironmentTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplate && {
        environmentTemplate: EnvironmentTemplateFilterSensitiveLog(obj.environmentTemplate),
    }),
});
export const GetEnvironmentTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplate && {
        environmentTemplate: EnvironmentTemplateFilterSensitiveLog(obj.environmentTemplate),
    }),
});
export const EnvironmentTemplateSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const ListEnvironmentTemplatesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.templates && { templates: obj.templates.map((item) => EnvironmentTemplateSummaryFilterSensitiveLog(item)) }),
});
export const UpdateEnvironmentTemplateInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const UpdateEnvironmentTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplate && {
        environmentTemplate: EnvironmentTemplateFilterSensitiveLog(obj.environmentTemplate),
    }),
});
export const CreateEnvironmentTemplateVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.source && { source: obj.source }),
});
export const EnvironmentTemplateVersionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.schema && { schema: SENSITIVE_STRING }),
});
export const CreateEnvironmentTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplateVersion && {
        environmentTemplateVersion: EnvironmentTemplateVersionFilterSensitiveLog(obj.environmentTemplateVersion),
    }),
});
export const DeleteEnvironmentTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplateVersion && {
        environmentTemplateVersion: EnvironmentTemplateVersionFilterSensitiveLog(obj.environmentTemplateVersion),
    }),
});
export const GetEnvironmentTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplateVersion && {
        environmentTemplateVersion: EnvironmentTemplateVersionFilterSensitiveLog(obj.environmentTemplateVersion),
    }),
});
export const EnvironmentTemplateVersionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const ListEnvironmentTemplateVersionsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.templateVersions && {
        templateVersions: obj.templateVersions.map((item) => EnvironmentTemplateVersionSummaryFilterSensitiveLog(item)),
    }),
});
export const UpdateEnvironmentTemplateVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const UpdateEnvironmentTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environmentTemplateVersion && {
        environmentTemplateVersion: EnvironmentTemplateVersionFilterSensitiveLog(obj.environmentTemplateVersion),
    }),
});
export const NotifyResourceDeploymentStatusChangeInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.outputs && { outputs: SENSITIVE_STRING }),
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
});
export const ListServiceInstanceOutputsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.outputs && { outputs: SENSITIVE_STRING }),
});
export const CreateServiceInstanceInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const CreateServiceInstanceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceInstance && { serviceInstance: ServiceInstanceFilterSensitiveLog(obj.serviceInstance) }),
});
export const GetServiceInstanceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceInstance && { serviceInstance: ServiceInstanceFilterSensitiveLog(obj.serviceInstance) }),
});
export const ServiceInstanceSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.deploymentStatusMessage && { deploymentStatusMessage: SENSITIVE_STRING }),
});
export const ListServiceInstancesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceInstances && {
        serviceInstances: obj.serviceInstances.map((item) => ServiceInstanceSummaryFilterSensitiveLog(item)),
    }),
});
export const UpdateServiceInstanceInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const UpdateServiceInstanceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceInstance && { serviceInstance: ServiceInstanceFilterSensitiveLog(obj.serviceInstance) }),
});
export const ListServicePipelineOutputsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.outputs && { outputs: SENSITIVE_STRING }),
});
export const UpdateServicePipelineInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const UpdateServicePipelineOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.pipeline && { pipeline: ServicePipelineFilterSensitiveLog(obj.pipeline) }),
});
export const CreateServiceInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const ServiceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
    ...(obj.pipeline && { pipeline: ServicePipelineFilterSensitiveLog(obj.pipeline) }),
});
export const CreateServiceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.service && { service: ServiceFilterSensitiveLog(obj.service) }),
});
export const DeleteServiceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.service && { service: ServiceFilterSensitiveLog(obj.service) }),
});
export const GetServiceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.service && { service: ServiceFilterSensitiveLog(obj.service) }),
});
export const ServiceSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
});
export const ListServicesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.services && { services: obj.services.map((item) => ServiceSummaryFilterSensitiveLog(item)) }),
});
export const UpdateServiceInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.spec && { spec: SENSITIVE_STRING }),
});
export const UpdateServiceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.service && { service: ServiceFilterSensitiveLog(obj.service) }),
});
export const CreateServiceTemplateInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const ServiceTemplateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const CreateServiceTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplate && { serviceTemplate: ServiceTemplateFilterSensitiveLog(obj.serviceTemplate) }),
});
export const DeleteServiceTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplate && { serviceTemplate: ServiceTemplateFilterSensitiveLog(obj.serviceTemplate) }),
});
export const GetServiceTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplate && { serviceTemplate: ServiceTemplateFilterSensitiveLog(obj.serviceTemplate) }),
});
export const ServiceTemplateSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const ListServiceTemplatesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.templates && { templates: obj.templates.map((item) => ServiceTemplateSummaryFilterSensitiveLog(item)) }),
});
export const UpdateServiceTemplateInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const UpdateServiceTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplate && { serviceTemplate: ServiceTemplateFilterSensitiveLog(obj.serviceTemplate) }),
});
export const CreateServiceTemplateVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.source && { source: obj.source }),
});
export const ServiceTemplateVersionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.schema && { schema: SENSITIVE_STRING }),
});
export const CreateServiceTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplateVersion && {
        serviceTemplateVersion: ServiceTemplateVersionFilterSensitiveLog(obj.serviceTemplateVersion),
    }),
});
export const DeleteServiceTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplateVersion && {
        serviceTemplateVersion: ServiceTemplateVersionFilterSensitiveLog(obj.serviceTemplateVersion),
    }),
});
export const GetServiceTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplateVersion && {
        serviceTemplateVersion: ServiceTemplateVersionFilterSensitiveLog(obj.serviceTemplateVersion),
    }),
});
export const ServiceTemplateVersionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.statusMessage && { statusMessage: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const ListServiceTemplateVersionsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.templateVersions && {
        templateVersions: obj.templateVersions.map((item) => ServiceTemplateVersionSummaryFilterSensitiveLog(item)),
    }),
});
export const UpdateServiceTemplateVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const UpdateServiceTemplateVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.serviceTemplateVersion && {
        serviceTemplateVersion: ServiceTemplateVersionFilterSensitiveLog(obj.serviceTemplateVersion),
    }),
});
