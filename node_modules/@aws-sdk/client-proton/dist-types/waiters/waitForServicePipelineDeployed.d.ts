import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetServiceCommandInput } from "../commands/GetServiceCommand";
import { ProtonClient } from "../ProtonClient";
/**
 * Wait until an ServicePipeline is deployed. Use this after invoking CreateService or UpdateServicePipeline
 *  @deprecated Use waitUntilServicePipelineDeployed instead. waitForServicePipelineDeployed does not throw error in non-success cases.
 */
export declare const waitForServicePipelineDeployed: (params: WaiterConfiguration<ProtonClient>, input: GetServiceCommandInput) => Promise<WaiterResult>;
/**
 * Wait until an ServicePipeline is deployed. Use this after invoking CreateService or UpdateServicePipeline
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetServiceCommand for polling.
 */
export declare const waitUntilServicePipelineDeployed: (params: WaiterConfiguration<ProtonClient>, input: GetServiceCommandInput) => Promise<WaiterResult>;
