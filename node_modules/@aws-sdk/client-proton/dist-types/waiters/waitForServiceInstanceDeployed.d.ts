import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetServiceInstanceCommandInput } from "../commands/GetServiceInstanceCommand";
import { ProtonClient } from "../ProtonClient";
/**
 * Wait until a ServiceInstance is deployed. Use this after invoking CreateService or UpdateServiceInstance
 *  @deprecated Use waitUntilServiceInstanceDeployed instead. waitForServiceInstanceDeployed does not throw error in non-success cases.
 */
export declare const waitForServiceInstanceDeployed: (params: WaiterConfiguration<ProtonClient>, input: GetServiceInstanceCommandInput) => Promise<WaiterResult>;
/**
 * Wait until a ServiceInstance is deployed. Use this after invoking CreateService or UpdateServiceInstance
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetServiceInstanceCommand for polling.
 */
export declare const waitUntilServiceInstanceDeployed: (params: WaiterConfiguration<ProtonClient>, input: GetServiceInstanceCommandInput) => Promise<WaiterResult>;
