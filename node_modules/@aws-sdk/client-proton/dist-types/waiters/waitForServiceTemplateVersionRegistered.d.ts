import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetServiceTemplateVersionCommandInput } from "../commands/GetServiceTemplateVersionCommand";
import { ProtonClient } from "../ProtonClient";
/**
 * Wait until a ServiceTemplateVersion is registered. Use this after invoking CreateServiceTemplateVersion
 *  @deprecated Use waitUntilServiceTemplateVersionRegistered instead. waitForServiceTemplateVersionRegistered does not throw error in non-success cases.
 */
export declare const waitForServiceTemplateVersionRegistered: (params: WaiterConfiguration<ProtonClient>, input: GetServiceTemplateVersionCommandInput) => Promise<WaiterResult>;
/**
 * Wait until a ServiceTemplateVersion is registered. Use this after invoking CreateServiceTemplateVersion
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetServiceTemplateVersionCommand for polling.
 */
export declare const waitUntilServiceTemplateVersionRegistered: (params: WaiterConfiguration<ProtonClient>, input: GetServiceTemplateVersionCommandInput) => Promise<WaiterResult>;
