import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetServiceCommandInput } from "../commands/GetServiceCommand";
import { ProtonClient } from "../ProtonClient";
/**
 * Wait until a Service, its instances, and possibly pipeline have been deleted after DeleteService is invoked
 *  @deprecated Use waitUntilServiceDeleted instead. waitForServiceDeleted does not throw error in non-success cases.
 */
export declare const waitForServiceDeleted: (params: WaiterConfiguration<ProtonClient>, input: GetServiceCommandInput) => Promise<WaiterResult>;
/**
 * Wait until a Service, its instances, and possibly pipeline have been deleted after DeleteService is invoked
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetServiceCommand for polling.
 */
export declare const waitUntilServiceDeleted: (params: WaiterConfiguration<ProtonClient>, input: GetServiceCommandInput) => Promise<WaiterResult>;
