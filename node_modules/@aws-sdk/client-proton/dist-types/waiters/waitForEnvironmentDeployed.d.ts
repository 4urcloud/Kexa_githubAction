import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetEnvironmentCommandInput } from "../commands/GetEnvironmentCommand";
import { ProtonClient } from "../ProtonClient";
/**
 * Wait until an Environment is deployed. Use this after invoking CreateEnvironment or UpdateEnvironment
 *  @deprecated Use waitUntilEnvironmentDeployed instead. waitForEnvironmentDeployed does not throw error in non-success cases.
 */
export declare const waitForEnvironmentDeployed: (params: WaiterConfiguration<ProtonClient>, input: GetEnvironmentCommandInput) => Promise<WaiterResult>;
/**
 * Wait until an Environment is deployed. Use this after invoking CreateEnvironment or UpdateEnvironment
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetEnvironmentCommand for polling.
 */
export declare const waitUntilEnvironmentDeployed: (params: WaiterConfiguration<ProtonClient>, input: GetEnvironmentCommandInput) => Promise<WaiterResult>;
