import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetEnvironmentTemplateVersionCommandInput } from "../commands/GetEnvironmentTemplateVersionCommand";
import { ProtonClient } from "../ProtonClient";
/**
 * Wait until an EnvironmentTemplateVersion is registered. Use this after invoking CreateEnvironmentTemplateVersion
 *  @deprecated Use waitUntilEnvironmentTemplateVersionRegistered instead. waitForEnvironmentTemplateVersionRegistered does not throw error in non-success cases.
 */
export declare const waitForEnvironmentTemplateVersionRegistered: (params: WaiterConfiguration<ProtonClient>, input: GetEnvironmentTemplateVersionCommandInput) => Promise<WaiterResult>;
/**
 * Wait until an EnvironmentTemplateVersion is registered. Use this after invoking CreateEnvironmentTemplateVersion
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetEnvironmentTemplateVersionCommand for polling.
 */
export declare const waitUntilEnvironmentTemplateVersionRegistered: (params: WaiterConfiguration<ProtonClient>, input: GetEnvironmentTemplateVersionCommandInput) => Promise<WaiterResult>;
