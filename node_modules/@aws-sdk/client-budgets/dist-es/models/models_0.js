import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { BudgetsServiceException as __BaseException } from "./BudgetsServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const ThresholdType = {
    ABSOLUTE_VALUE: "ABSOLUTE_VALUE",
    PERCENTAGE: "PERCENTAGE",
};
export const ActionType = {
    IAM: "APPLY_IAM_POLICY",
    SCP: "APPLY_SCP_POLICY",
    SSM: "RUN_SSM_DOCUMENTS",
};
export const ApprovalModel = {
    AUTO: "AUTOMATIC",
    MANUAL: "MANUAL",
};
export const ActionSubType = {
    STOP_EC2: "STOP_EC2_INSTANCES",
    STOP_RDS: "STOP_RDS_INSTANCES",
};
export const NotificationType = {
    ACTUAL: "ACTUAL",
    FORECASTED: "FORECASTED",
};
export const ActionStatus = {
    Execution_Failure: "EXECUTION_FAILURE",
    Execution_In_Progress: "EXECUTION_IN_PROGRESS",
    Execution_Success: "EXECUTION_SUCCESS",
    Pending: "PENDING",
    Reset_Failure: "RESET_FAILURE",
    Reset_In_Progress: "RESET_IN_PROGRESS",
    Reverse_Failure: "REVERSE_FAILURE",
    Reverse_In_Progress: "REVERSE_IN_PROGRESS",
    Reverse_Success: "REVERSE_SUCCESS",
    Standby: "STANDBY",
};
export const SubscriptionType = {
    EMAIL: "EMAIL",
    SNS: "SNS",
};
export const EventType = {
    CreateAction: "CREATE_ACTION",
    DeleteAction: "DELETE_ACTION",
    ExecuteAction: "EXECUTE_ACTION",
    System: "SYSTEM",
    UpdateAction: "UPDATE_ACTION",
};
export const AutoAdjustType = {
    FORECAST: "FORECAST",
    HISTORICAL: "HISTORICAL",
};
export const BudgetType = {
    Cost: "COST",
    RICoverage: "RI_COVERAGE",
    RIUtilization: "RI_UTILIZATION",
    SPCoverage: "SAVINGS_PLANS_COVERAGE",
    SPUtilization: "SAVINGS_PLANS_UTILIZATION",
    Usage: "USAGE",
};
export const TimeUnit = {
    ANNUALLY: "ANNUALLY",
    DAILY: "DAILY",
    MONTHLY: "MONTHLY",
    QUARTERLY: "QUARTERLY",
};
export const ComparisonOperator = {
    EQUAL_TO: "EQUAL_TO",
    GREATER_THAN: "GREATER_THAN",
    LESS_THAN: "LESS_THAN",
};
export const NotificationState = {
    ALARM: "ALARM",
    OK: "OK",
};
export class CreationLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "CreationLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "CreationLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CreationLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicateRecordException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateRecordException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateRecordException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateRecordException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceLockedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceLockedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceLockedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceLockedException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
export class ExpiredNextTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ExpiredNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
export const ExecutionType = {
    ApproveBudgetAction: "APPROVE_BUDGET_ACTION",
    ResetBudgetAction: "RESET_BUDGET_ACTION",
    RetryBudgetAction: "RETRY_BUDGET_ACTION",
    ReverseBudgetAction: "REVERSE_BUDGET_ACTION",
};
export const SubscriberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Address && { Address: SENSITIVE_STRING }),
});
export const ActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const ActionHistoryDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const ActionHistoryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ActionHistoryDetails && {
        ActionHistoryDetails: ActionHistoryDetailsFilterSensitiveLog(obj.ActionHistoryDetails),
    }),
});
export const NotificationWithSubscribersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const CreateBudgetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateBudgetActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const CreateNotificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const CreateSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscriber && { Subscriber: SubscriberFilterSensitiveLog(obj.Subscriber) }),
});
export const DeleteBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const DeleteSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscriber && { Subscriber: SubscriberFilterSensitiveLog(obj.Subscriber) }),
});
export const DescribeBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const DescribeBudgetActionHistoriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeBudgetActionsForAccountResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeBudgetActionsForBudgetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeSubscribersForNotificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const UpdateBudgetActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Subscribers && { Subscribers: obj.Subscribers.map((item) => SubscriberFilterSensitiveLog(item)) }),
});
export const UpdateBudgetActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OldAction && { OldAction: ActionFilterSensitiveLog(obj.OldAction) }),
    ...(obj.NewAction && { NewAction: ActionFilterSensitiveLog(obj.NewAction) }),
});
export const UpdateSubscriberRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OldSubscriber && { OldSubscriber: SubscriberFilterSensitiveLog(obj.OldSubscriber) }),
    ...(obj.NewSubscriber && { NewSubscriber: SubscriberFilterSensitiveLog(obj.NewSubscriber) }),
});
