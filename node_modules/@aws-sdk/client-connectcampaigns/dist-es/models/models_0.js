import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ConnectCampaignsServiceException as __BaseException } from "./ConnectCampaignsServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export var DialerConfig;
(function (DialerConfig) {
    DialerConfig.visit = (value, visitor) => {
        if (value.progressiveDialerConfig !== undefined)
            return visitor.progressiveDialerConfig(value.progressiveDialerConfig);
        if (value.predictiveDialerConfig !== undefined)
            return visitor.predictiveDialerConfig(value.predictiveDialerConfig);
        if (value.agentlessDialerConfig !== undefined)
            return visitor.agentlessDialerConfig(value.agentlessDialerConfig);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DialerConfig || (DialerConfig = {}));
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        this.$retryable = {};
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        this.$retryable = {};
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export class InvalidStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStateException.prototype);
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export const CampaignState = {
    FAILED: "Failed",
    INITIALIZED: "Initialized",
    PAUSED: "Paused",
    RUNNING: "Running",
    STOPPED: "Stopped",
};
export const GetCampaignStateBatchFailureCode = {
    RESOURCE_NOT_FOUND: "ResourceNotFound",
    UNKNOWN_ERROR: "UnknownError",
};
export const EncryptionType = {
    KMS: "KMS",
};
export const InstanceOnboardingJobFailureCode = {
    EVENT_BRIDGE_ACCESS_DENIED: "EVENT_BRIDGE_ACCESS_DENIED",
    EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED: "EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED",
    IAM_ACCESS_DENIED: "IAM_ACCESS_DENIED",
    INTERNAL_FAILURE: "INTERNAL_FAILURE",
    KMS_ACCESS_DENIED: "KMS_ACCESS_DENIED",
    KMS_KEY_NOT_FOUND: "KMS_KEY_NOT_FOUND",
};
export const InstanceOnboardingJobStatusCode = {
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
};
export const InstanceIdFilterOperator = {
    EQ: "Eq",
};
export class InvalidCampaignStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCampaignStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCampaignStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCampaignStateException.prototype);
        this.state = opts.state;
        this.xAmzErrorType = opts.xAmzErrorType;
    }
}
export const FailureCode = {
    INVALID_INPUT: "InvalidInput",
    REQUEST_THROTTLED: "RequestThrottled",
    UNKNOWN_ERROR: "UnknownError",
};
export const DialRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.phoneNumber && { phoneNumber: SENSITIVE_STRING }),
    ...(obj.attributes && { attributes: SENSITIVE_STRING }),
});
export const PutDialRequestBatchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.dialRequests && { dialRequests: obj.dialRequests.map((item) => DialRequestFilterSensitiveLog(item)) }),
});
