import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ConnectCampaignsServiceException as __BaseException } from "./ConnectCampaignsServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AgentlessDialerConfig {
  dialingCapacity?: number;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  xAmzErrorType?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface PredictiveDialerConfig {
  bandwidthAllocation: number | undefined;
  dialingCapacity?: number;
}
export interface ProgressiveDialerConfig {
  bandwidthAllocation: number | undefined;
  dialingCapacity?: number;
}
export type DialerConfig =
  | DialerConfig.AgentlessDialerConfigMember
  | DialerConfig.PredictiveDialerConfigMember
  | DialerConfig.ProgressiveDialerConfigMember
  | DialerConfig.$UnknownMember;
export declare namespace DialerConfig {
  interface ProgressiveDialerConfigMember {
    progressiveDialerConfig: ProgressiveDialerConfig;
    predictiveDialerConfig?: never;
    agentlessDialerConfig?: never;
    $unknown?: never;
  }
  interface PredictiveDialerConfigMember {
    progressiveDialerConfig?: never;
    predictiveDialerConfig: PredictiveDialerConfig;
    agentlessDialerConfig?: never;
    $unknown?: never;
  }
  interface AgentlessDialerConfigMember {
    progressiveDialerConfig?: never;
    predictiveDialerConfig?: never;
    agentlessDialerConfig: AgentlessDialerConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    progressiveDialerConfig?: never;
    predictiveDialerConfig?: never;
    agentlessDialerConfig?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    progressiveDialerConfig: (value: ProgressiveDialerConfig) => T;
    predictiveDialerConfig: (value: PredictiveDialerConfig) => T;
    agentlessDialerConfig: (value: AgentlessDialerConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: DialerConfig, visitor: Visitor<T>) => T;
}
export interface AnswerMachineDetectionConfig {
  enableAnswerMachineDetection: boolean | undefined;
}
export interface OutboundCallConfig {
  connectContactFlowId: string | undefined;
  connectSourcePhoneNumber?: string;
  connectQueueId?: string;
  answerMachineDetectionConfig?: AnswerMachineDetectionConfig;
}
export interface CreateCampaignRequest {
  name: string | undefined;
  connectInstanceId: string | undefined;
  dialerConfig: DialerConfig | undefined;
  outboundCallConfig: OutboundCallConfig | undefined;
  tags?: Record<string, string>;
}
export interface CreateCampaignResponse {
  id?: string;
  arn?: string;
  tags?: Record<string, string>;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  $retryable: {};
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  $retryable: {};
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DeleteCampaignRequest {
  id: string | undefined;
}
export interface DeleteConnectInstanceConfigRequest {
  connectInstanceId: string | undefined;
}
export declare class InvalidStateException extends __BaseException {
  readonly name: "InvalidStateException";
  readonly $fault: "client";
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidStateException, __BaseException>
  );
}
export interface DeleteInstanceOnboardingJobRequest {
  connectInstanceId: string | undefined;
}
export interface DescribeCampaignRequest {
  id: string | undefined;
}
export interface Campaign {
  id: string | undefined;
  arn: string | undefined;
  name: string | undefined;
  connectInstanceId: string | undefined;
  dialerConfig: DialerConfig | undefined;
  outboundCallConfig: OutboundCallConfig | undefined;
  tags?: Record<string, string>;
}
export interface DescribeCampaignResponse {
  campaign?: Campaign;
}
export interface GetCampaignStateRequest {
  id: string | undefined;
}
export declare const CampaignState: {
  readonly FAILED: "Failed";
  readonly INITIALIZED: "Initialized";
  readonly PAUSED: "Paused";
  readonly RUNNING: "Running";
  readonly STOPPED: "Stopped";
};
export type CampaignState = (typeof CampaignState)[keyof typeof CampaignState];
export interface GetCampaignStateResponse {
  state?: CampaignState;
}
export interface GetCampaignStateBatchRequest {
  campaignIds: string[] | undefined;
}
export declare const GetCampaignStateBatchFailureCode: {
  readonly RESOURCE_NOT_FOUND: "ResourceNotFound";
  readonly UNKNOWN_ERROR: "UnknownError";
};
export type GetCampaignStateBatchFailureCode =
  (typeof GetCampaignStateBatchFailureCode)[keyof typeof GetCampaignStateBatchFailureCode];
export interface FailedCampaignStateResponse {
  campaignId?: string;
  failureCode?: GetCampaignStateBatchFailureCode;
}
export interface SuccessfulCampaignStateResponse {
  campaignId?: string;
  state?: CampaignState;
}
export interface GetCampaignStateBatchResponse {
  successfulRequests?: SuccessfulCampaignStateResponse[];
  failedRequests?: FailedCampaignStateResponse[];
}
export interface GetConnectInstanceConfigRequest {
  connectInstanceId: string | undefined;
}
export declare const EncryptionType: {
  readonly KMS: "KMS";
};
export type EncryptionType =
  (typeof EncryptionType)[keyof typeof EncryptionType];
export interface EncryptionConfig {
  enabled: boolean | undefined;
  encryptionType?: EncryptionType;
  keyArn?: string;
}
export interface InstanceConfig {
  connectInstanceId: string | undefined;
  serviceLinkedRoleArn: string | undefined;
  encryptionConfig: EncryptionConfig | undefined;
}
export interface GetConnectInstanceConfigResponse {
  connectInstanceConfig?: InstanceConfig;
}
export interface GetInstanceOnboardingJobStatusRequest {
  connectInstanceId: string | undefined;
}
export declare const InstanceOnboardingJobFailureCode: {
  readonly EVENT_BRIDGE_ACCESS_DENIED: "EVENT_BRIDGE_ACCESS_DENIED";
  readonly EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED: "EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED";
  readonly IAM_ACCESS_DENIED: "IAM_ACCESS_DENIED";
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
  readonly KMS_ACCESS_DENIED: "KMS_ACCESS_DENIED";
  readonly KMS_KEY_NOT_FOUND: "KMS_KEY_NOT_FOUND";
};
export type InstanceOnboardingJobFailureCode =
  (typeof InstanceOnboardingJobFailureCode)[keyof typeof InstanceOnboardingJobFailureCode];
export declare const InstanceOnboardingJobStatusCode: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type InstanceOnboardingJobStatusCode =
  (typeof InstanceOnboardingJobStatusCode)[keyof typeof InstanceOnboardingJobStatusCode];
export interface InstanceOnboardingJobStatus {
  connectInstanceId: string | undefined;
  status: InstanceOnboardingJobStatusCode | undefined;
  failureCode?: InstanceOnboardingJobFailureCode;
}
export interface GetInstanceOnboardingJobStatusResponse {
  connectInstanceOnboardingJobStatus?: InstanceOnboardingJobStatus;
}
export declare const InstanceIdFilterOperator: {
  readonly EQ: "Eq";
};
export type InstanceIdFilterOperator =
  (typeof InstanceIdFilterOperator)[keyof typeof InstanceIdFilterOperator];
export interface InstanceIdFilter {
  value: string | undefined;
  operator: InstanceIdFilterOperator | undefined;
}
export interface CampaignFilters {
  instanceIdFilter?: InstanceIdFilter;
}
export interface ListCampaignsRequest {
  maxResults?: number;
  nextToken?: string;
  filters?: CampaignFilters;
}
export interface CampaignSummary {
  id: string | undefined;
  arn: string | undefined;
  name: string | undefined;
  connectInstanceId: string | undefined;
}
export interface ListCampaignsResponse {
  nextToken?: string;
  campaignSummaryList?: CampaignSummary[];
}
export interface ListTagsForResourceRequest {
  arn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export declare class InvalidCampaignStateException extends __BaseException {
  readonly name: "InvalidCampaignStateException";
  readonly $fault: "client";
  state: CampaignState | undefined;
  xAmzErrorType?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidCampaignStateException, __BaseException>
  );
}
export interface PauseCampaignRequest {
  id: string | undefined;
}
export interface DialRequest {
  clientToken: string | undefined;
  phoneNumber: string | undefined;
  expirationTime: Date | undefined;
  attributes: Record<string, string> | undefined;
}
export interface PutDialRequestBatchRequest {
  id: string | undefined;
  dialRequests: DialRequest[] | undefined;
}
export declare const FailureCode: {
  readonly INVALID_INPUT: "InvalidInput";
  readonly REQUEST_THROTTLED: "RequestThrottled";
  readonly UNKNOWN_ERROR: "UnknownError";
};
export type FailureCode = (typeof FailureCode)[keyof typeof FailureCode];
export interface FailedRequest {
  clientToken?: string;
  id?: string;
  failureCode?: FailureCode;
}
export interface SuccessfulRequest {
  clientToken?: string;
  id?: string;
}
export interface PutDialRequestBatchResponse {
  successfulRequests?: SuccessfulRequest[];
  failedRequests?: FailedRequest[];
}
export interface ResumeCampaignRequest {
  id: string | undefined;
}
export interface StartCampaignRequest {
  id: string | undefined;
}
export interface StartInstanceOnboardingJobRequest {
  connectInstanceId: string | undefined;
  encryptionConfig: EncryptionConfig | undefined;
}
export interface StartInstanceOnboardingJobResponse {
  connectInstanceOnboardingJobStatus?: InstanceOnboardingJobStatus;
}
export interface StopCampaignRequest {
  id: string | undefined;
}
export interface TagResourceRequest {
  arn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface UntagResourceRequest {
  arn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UpdateCampaignDialerConfigRequest {
  id: string | undefined;
  dialerConfig: DialerConfig | undefined;
}
export interface UpdateCampaignNameRequest {
  id: string | undefined;
  name: string | undefined;
}
export interface UpdateCampaignOutboundCallConfigRequest {
  id: string | undefined;
  connectContactFlowId?: string;
  connectSourcePhoneNumber?: string;
  answerMachineDetectionConfig?: AnswerMachineDetectionConfig;
}
export declare const DialRequestFilterSensitiveLog: (obj: DialRequest) => any;
export declare const PutDialRequestBatchRequestFilterSensitiveLog: (
  obj: PutDialRequestBatchRequest
) => any;
