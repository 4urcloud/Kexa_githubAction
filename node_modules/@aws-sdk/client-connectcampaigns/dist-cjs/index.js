"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  CampaignState: () => CampaignState,
  ConflictException: () => ConflictException,
  ConnectCampaigns: () => ConnectCampaigns,
  ConnectCampaignsClient: () => ConnectCampaignsClient,
  ConnectCampaignsServiceException: () => ConnectCampaignsServiceException,
  CreateCampaignCommand: () => CreateCampaignCommand,
  DeleteCampaignCommand: () => DeleteCampaignCommand,
  DeleteConnectInstanceConfigCommand: () => DeleteConnectInstanceConfigCommand,
  DeleteInstanceOnboardingJobCommand: () => DeleteInstanceOnboardingJobCommand,
  DescribeCampaignCommand: () => DescribeCampaignCommand,
  DialRequestFilterSensitiveLog: () => DialRequestFilterSensitiveLog,
  DialerConfig: () => DialerConfig,
  EncryptionType: () => EncryptionType,
  FailureCode: () => FailureCode,
  GetCampaignStateBatchCommand: () => GetCampaignStateBatchCommand,
  GetCampaignStateBatchFailureCode: () => GetCampaignStateBatchFailureCode,
  GetCampaignStateCommand: () => GetCampaignStateCommand,
  GetConnectInstanceConfigCommand: () => GetConnectInstanceConfigCommand,
  GetInstanceOnboardingJobStatusCommand: () => GetInstanceOnboardingJobStatusCommand,
  InstanceIdFilterOperator: () => InstanceIdFilterOperator,
  InstanceOnboardingJobFailureCode: () => InstanceOnboardingJobFailureCode,
  InstanceOnboardingJobStatusCode: () => InstanceOnboardingJobStatusCode,
  InternalServerException: () => InternalServerException,
  InvalidCampaignStateException: () => InvalidCampaignStateException,
  InvalidStateException: () => InvalidStateException,
  ListCampaignsCommand: () => ListCampaignsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  PauseCampaignCommand: () => PauseCampaignCommand,
  PutDialRequestBatchCommand: () => PutDialRequestBatchCommand,
  PutDialRequestBatchRequestFilterSensitiveLog: () => PutDialRequestBatchRequestFilterSensitiveLog,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResumeCampaignCommand: () => ResumeCampaignCommand,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  StartCampaignCommand: () => StartCampaignCommand,
  StartInstanceOnboardingJobCommand: () => StartInstanceOnboardingJobCommand,
  StopCampaignCommand: () => StopCampaignCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateCampaignDialerConfigCommand: () => UpdateCampaignDialerConfigCommand,
  UpdateCampaignNameCommand: () => UpdateCampaignNameCommand,
  UpdateCampaignOutboundCallConfigCommand: () => UpdateCampaignOutboundCallConfigCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListCampaigns: () => paginateListCampaigns
});
module.exports = __toCommonJS(src_exports);

// src/ConnectCampaignsClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "connect-campaigns"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ConnectCampaignsClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ConnectCampaignsClient.ts
var _ConnectCampaignsClient = class _ConnectCampaignsClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultConnectCampaignsHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ConnectCampaignsClient, "ConnectCampaignsClient");
var ConnectCampaignsClient = _ConnectCampaignsClient;

// src/ConnectCampaigns.ts


// src/commands/CreateCampaignCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/ConnectCampaignsServiceException.ts

var _ConnectCampaignsServiceException = class _ConnectCampaignsServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ConnectCampaignsServiceException.prototype);
  }
};
__name(_ConnectCampaignsServiceException, "ConnectCampaignsServiceException");
var ConnectCampaignsServiceException = _ConnectCampaignsServiceException;

// src/models/models_0.ts

var _AccessDeniedException = class _AccessDeniedException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _ConflictException = class _ConflictException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var DialerConfig;
((DialerConfig2) => {
  DialerConfig2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.progressiveDialerConfig !== void 0)
      return visitor.progressiveDialerConfig(value.progressiveDialerConfig);
    if (value.predictiveDialerConfig !== void 0)
      return visitor.predictiveDialerConfig(value.predictiveDialerConfig);
    if (value.agentlessDialerConfig !== void 0)
      return visitor.agentlessDialerConfig(value.agentlessDialerConfig);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DialerConfig || (DialerConfig = {}));
var _InternalServerException = class _InternalServerException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    this.$retryable = {};
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    this.$retryable = {};
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _InvalidStateException = class _InvalidStateException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidStateException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidStateException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidStateException.prototype);
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_InvalidStateException, "InvalidStateException");
var InvalidStateException = _InvalidStateException;
var CampaignState = {
  /**
   * Campaign is in failed state
   */
  FAILED: "Failed",
  /**
   * Campaign is in initialized state
   */
  INITIALIZED: "Initialized",
  /**
   * Campaign is in paused state
   */
  PAUSED: "Paused",
  /**
   * Campaign is in running state
   */
  RUNNING: "Running",
  /**
   * Campaign is in stopped state
   */
  STOPPED: "Stopped"
};
var GetCampaignStateBatchFailureCode = {
  /**
   * The specified resource was not found
   */
  RESOURCE_NOT_FOUND: "ResourceNotFound",
  /**
   * Unexpected error during processing of request
   */
  UNKNOWN_ERROR: "UnknownError"
};
var EncryptionType = {
  KMS: "KMS"
};
var InstanceOnboardingJobFailureCode = {
  EVENT_BRIDGE_ACCESS_DENIED: "EVENT_BRIDGE_ACCESS_DENIED",
  EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED: "EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED",
  IAM_ACCESS_DENIED: "IAM_ACCESS_DENIED",
  INTERNAL_FAILURE: "INTERNAL_FAILURE",
  KMS_ACCESS_DENIED: "KMS_ACCESS_DENIED",
  KMS_KEY_NOT_FOUND: "KMS_KEY_NOT_FOUND"
};
var InstanceOnboardingJobStatusCode = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCEEDED: "SUCCEEDED"
};
var InstanceIdFilterOperator = {
  /**
   * Equals operator
   */
  EQ: "Eq"
};
var _InvalidCampaignStateException = class _InvalidCampaignStateException extends ConnectCampaignsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidCampaignStateException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidCampaignStateException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidCampaignStateException.prototype);
    this.state = opts.state;
    this.xAmzErrorType = opts.xAmzErrorType;
  }
};
__name(_InvalidCampaignStateException, "InvalidCampaignStateException");
var InvalidCampaignStateException = _InvalidCampaignStateException;
var FailureCode = {
  /**
   * The request failed to satisfy the constraints specified by the service
   */
  INVALID_INPUT: "InvalidInput",
  /**
   * Request throttled due to large number of pending dial requests
   */
  REQUEST_THROTTLED: "RequestThrottled",
  /**
   * Unexpected error during processing of request
   */
  UNKNOWN_ERROR: "UnknownError"
};
var DialRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.phoneNumber && { phoneNumber: import_smithy_client.SENSITIVE_STRING },
  ...obj.attributes && { attributes: import_smithy_client.SENSITIVE_STRING }
}), "DialRequestFilterSensitiveLog");
var PutDialRequestBatchRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dialRequests && { dialRequests: obj.dialRequests.map((item) => DialRequestFilterSensitiveLog(item)) }
}), "PutDialRequestBatchRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CreateCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      connectInstanceId: [],
      dialerConfig: (_) => se_DialerConfig(_, context),
      name: [],
      outboundCallConfig: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateCampaignCommand");
var se_DeleteCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteCampaignCommand");
var se_DeleteConnectInstanceConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/connect-instance/{connectInstanceId}/config");
  b.p("connectInstanceId", () => input.connectInstanceId, "{connectInstanceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteConnectInstanceConfigCommand");
var se_DeleteInstanceOnboardingJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/connect-instance/{connectInstanceId}/onboarding");
  b.p("connectInstanceId", () => input.connectInstanceId, "{connectInstanceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteInstanceOnboardingJobCommand");
var se_DescribeCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeCampaignCommand");
var se_GetCampaignStateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}/state");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetCampaignStateCommand");
var se_GetCampaignStateBatchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns-state");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      campaignIds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetCampaignStateBatchCommand");
var se_GetConnectInstanceConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/connect-instance/{connectInstanceId}/config");
  b.p("connectInstanceId", () => input.connectInstanceId, "{connectInstanceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetConnectInstanceConfigCommand");
var se_GetInstanceOnboardingJobStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/connect-instance/{connectInstanceId}/onboarding");
  b.p("connectInstanceId", () => input.connectInstanceId, "{connectInstanceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetInstanceOnboardingJobStatusCommand");
var se_ListCampaignsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns-summary");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListCampaignsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{arn}");
  b.p("arn", () => input.arn, "{arn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PauseCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}/pause");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PauseCampaignCommand");
var se_PutDialRequestBatchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns/{id}/dial-requests");
  b.p("id", () => input.id, "{id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dialRequests: (_) => se_DialRequestList(_, context)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutDialRequestBatchCommand");
var se_ResumeCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}/resume");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ResumeCampaignCommand");
var se_StartCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}/start");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartCampaignCommand");
var se_StartInstanceOnboardingJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/connect-instance/{connectInstanceId}/onboarding");
  b.p("connectInstanceId", () => input.connectInstanceId, "{connectInstanceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      encryptionConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_StartInstanceOnboardingJobCommand");
var se_StopCampaignCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/campaigns/{id}/stop");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopCampaignCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{arn}");
  b.p("arn", () => input.arn, "{arn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{arn}");
  b.p("arn", () => input.arn, "{arn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateCampaignDialerConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns/{id}/dialer-config");
  b.p("id", () => input.id, "{id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dialerConfig: (_) => se_DialerConfig(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateCampaignDialerConfigCommand");
var se_UpdateCampaignNameCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns/{id}/name");
  b.p("id", () => input.id, "{id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateCampaignNameCommand");
var se_UpdateCampaignOutboundCallConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/campaigns/{id}/outbound-call-config");
  b.p("id", () => input.id, "{id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      answerMachineDetectionConfig: (_) => (0, import_smithy_client._json)(_),
      connectContactFlowId: [],
      connectSourcePhoneNumber: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateCampaignOutboundCallConfigCommand");
var de_CreateCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateCampaignCommand");
var de_DeleteCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteCampaignCommand");
var de_DeleteConnectInstanceConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteConnectInstanceConfigCommand");
var de_DeleteInstanceOnboardingJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteInstanceOnboardingJobCommand");
var de_DescribeCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    campaign: (_) => de_Campaign(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeCampaignCommand");
var de_GetCampaignStateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    state: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCampaignStateCommand");
var de_GetCampaignStateBatchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    failedRequests: import_smithy_client._json,
    successfulRequests: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCampaignStateBatchCommand");
var de_GetConnectInstanceConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectInstanceConfig: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetConnectInstanceConfigCommand");
var de_GetInstanceOnboardingJobStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectInstanceOnboardingJobStatus: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetInstanceOnboardingJobStatusCommand");
var de_ListCampaignsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    campaignSummaryList: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListCampaignsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PauseCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PauseCampaignCommand");
var de_PutDialRequestBatchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    failedRequests: import_smithy_client._json,
    successfulRequests: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutDialRequestBatchCommand");
var de_ResumeCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_ResumeCampaignCommand");
var de_StartCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StartCampaignCommand");
var de_StartInstanceOnboardingJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectInstanceOnboardingJobStatus: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartInstanceOnboardingJobCommand");
var de_StopCampaignCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopCampaignCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateCampaignDialerConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateCampaignDialerConfigCommand");
var de_UpdateCampaignNameCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateCampaignNameCommand");
var de_UpdateCampaignOutboundCallConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateCampaignOutboundCallConfigCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.connectcampaigns#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.connectcampaigns#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.connectcampaigns#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.connectcampaigns#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.connectcampaigns#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.connectcampaigns#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.connectcampaigns#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "InvalidStateException":
    case "com.amazonaws.connectcampaigns#InvalidStateException":
      throw await de_InvalidStateExceptionRes(parsedOutput, context);
    case "InvalidCampaignStateException":
    case "com.amazonaws.connectcampaigns#InvalidCampaignStateException":
      throw await de_InvalidCampaignStateExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ConnectCampaignsServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_InvalidCampaignStateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    state: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidCampaignStateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidCampaignStateExceptionRes");
var de_InvalidStateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidStateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidStateExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_xAET]: [, parsedOutput.headers[_xae]]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_AgentlessDialerConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    dialingCapacity: import_smithy_client.serializeFloat
  });
}, "se_AgentlessDialerConfig");
var se_DialerConfig = /* @__PURE__ */ __name((input, context) => {
  return DialerConfig.visit(input, {
    agentlessDialerConfig: (value) => ({ agentlessDialerConfig: se_AgentlessDialerConfig(value, context) }),
    predictiveDialerConfig: (value) => ({ predictiveDialerConfig: se_PredictiveDialerConfig(value, context) }),
    progressiveDialerConfig: (value) => ({ progressiveDialerConfig: se_ProgressiveDialerConfig(value, context) }),
    _: (name, value) => ({ name: value })
  });
}, "se_DialerConfig");
var se_DialRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    attributes: import_smithy_client._json,
    clientToken: [],
    expirationTime: (_) => _.toISOString().split(".")[0] + "Z",
    phoneNumber: []
  });
}, "se_DialRequest");
var se_DialRequestList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_DialRequest(entry, context);
  });
}, "se_DialRequestList");
var se_PredictiveDialerConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    bandwidthAllocation: import_smithy_client.serializeFloat,
    dialingCapacity: import_smithy_client.serializeFloat
  });
}, "se_PredictiveDialerConfig");
var se_ProgressiveDialerConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    bandwidthAllocation: import_smithy_client.serializeFloat,
    dialingCapacity: import_smithy_client.serializeFloat
  });
}, "se_ProgressiveDialerConfig");
var de_AgentlessDialerConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dialingCapacity: import_smithy_client.limitedParseDouble
  });
}, "de_AgentlessDialerConfig");
var de_Campaign = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    connectInstanceId: import_smithy_client.expectString,
    dialerConfig: (_) => de_DialerConfig((0, import_core2.awsExpectUnion)(_), context),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    outboundCallConfig: import_smithy_client._json,
    tags: import_smithy_client._json
  });
}, "de_Campaign");
var de_DialerConfig = /* @__PURE__ */ __name((output, context) => {
  if (output.agentlessDialerConfig != null) {
    return {
      agentlessDialerConfig: de_AgentlessDialerConfig(output.agentlessDialerConfig, context)
    };
  }
  if (output.predictiveDialerConfig != null) {
    return {
      predictiveDialerConfig: de_PredictiveDialerConfig(output.predictiveDialerConfig, context)
    };
  }
  if (output.progressiveDialerConfig != null) {
    return {
      progressiveDialerConfig: de_ProgressiveDialerConfig(output.progressiveDialerConfig, context)
    };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_DialerConfig");
var de_PredictiveDialerConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bandwidthAllocation: import_smithy_client.limitedParseDouble,
    dialingCapacity: import_smithy_client.limitedParseDouble
  });
}, "de_PredictiveDialerConfig");
var de_ProgressiveDialerConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    bandwidthAllocation: import_smithy_client.limitedParseDouble,
    dialingCapacity: import_smithy_client.limitedParseDouble
  });
}, "de_ProgressiveDialerConfig");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _tK = "tagKeys";
var _xAET = "xAmzErrorType";
var _xae = "x-amzn-errortype";

// src/commands/CreateCampaignCommand.ts
var _CreateCampaignCommand = class _CreateCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "CreateCampaign", {}).n("ConnectCampaignsClient", "CreateCampaignCommand").f(void 0, void 0).ser(se_CreateCampaignCommand).de(de_CreateCampaignCommand).build() {
};
__name(_CreateCampaignCommand, "CreateCampaignCommand");
var CreateCampaignCommand = _CreateCampaignCommand;

// src/commands/DeleteCampaignCommand.ts




var _DeleteCampaignCommand = class _DeleteCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "DeleteCampaign", {}).n("ConnectCampaignsClient", "DeleteCampaignCommand").f(void 0, void 0).ser(se_DeleteCampaignCommand).de(de_DeleteCampaignCommand).build() {
};
__name(_DeleteCampaignCommand, "DeleteCampaignCommand");
var DeleteCampaignCommand = _DeleteCampaignCommand;

// src/commands/DeleteConnectInstanceConfigCommand.ts




var _DeleteConnectInstanceConfigCommand = class _DeleteConnectInstanceConfigCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "DeleteConnectInstanceConfig", {}).n("ConnectCampaignsClient", "DeleteConnectInstanceConfigCommand").f(void 0, void 0).ser(se_DeleteConnectInstanceConfigCommand).de(de_DeleteConnectInstanceConfigCommand).build() {
};
__name(_DeleteConnectInstanceConfigCommand, "DeleteConnectInstanceConfigCommand");
var DeleteConnectInstanceConfigCommand = _DeleteConnectInstanceConfigCommand;

// src/commands/DeleteInstanceOnboardingJobCommand.ts




var _DeleteInstanceOnboardingJobCommand = class _DeleteInstanceOnboardingJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "DeleteInstanceOnboardingJob", {}).n("ConnectCampaignsClient", "DeleteInstanceOnboardingJobCommand").f(void 0, void 0).ser(se_DeleteInstanceOnboardingJobCommand).de(de_DeleteInstanceOnboardingJobCommand).build() {
};
__name(_DeleteInstanceOnboardingJobCommand, "DeleteInstanceOnboardingJobCommand");
var DeleteInstanceOnboardingJobCommand = _DeleteInstanceOnboardingJobCommand;

// src/commands/DescribeCampaignCommand.ts




var _DescribeCampaignCommand = class _DescribeCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "DescribeCampaign", {}).n("ConnectCampaignsClient", "DescribeCampaignCommand").f(void 0, void 0).ser(se_DescribeCampaignCommand).de(de_DescribeCampaignCommand).build() {
};
__name(_DescribeCampaignCommand, "DescribeCampaignCommand");
var DescribeCampaignCommand = _DescribeCampaignCommand;

// src/commands/GetCampaignStateBatchCommand.ts




var _GetCampaignStateBatchCommand = class _GetCampaignStateBatchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "GetCampaignStateBatch", {}).n("ConnectCampaignsClient", "GetCampaignStateBatchCommand").f(void 0, void 0).ser(se_GetCampaignStateBatchCommand).de(de_GetCampaignStateBatchCommand).build() {
};
__name(_GetCampaignStateBatchCommand, "GetCampaignStateBatchCommand");
var GetCampaignStateBatchCommand = _GetCampaignStateBatchCommand;

// src/commands/GetCampaignStateCommand.ts




var _GetCampaignStateCommand = class _GetCampaignStateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "GetCampaignState", {}).n("ConnectCampaignsClient", "GetCampaignStateCommand").f(void 0, void 0).ser(se_GetCampaignStateCommand).de(de_GetCampaignStateCommand).build() {
};
__name(_GetCampaignStateCommand, "GetCampaignStateCommand");
var GetCampaignStateCommand = _GetCampaignStateCommand;

// src/commands/GetConnectInstanceConfigCommand.ts




var _GetConnectInstanceConfigCommand = class _GetConnectInstanceConfigCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "GetConnectInstanceConfig", {}).n("ConnectCampaignsClient", "GetConnectInstanceConfigCommand").f(void 0, void 0).ser(se_GetConnectInstanceConfigCommand).de(de_GetConnectInstanceConfigCommand).build() {
};
__name(_GetConnectInstanceConfigCommand, "GetConnectInstanceConfigCommand");
var GetConnectInstanceConfigCommand = _GetConnectInstanceConfigCommand;

// src/commands/GetInstanceOnboardingJobStatusCommand.ts




var _GetInstanceOnboardingJobStatusCommand = class _GetInstanceOnboardingJobStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "GetInstanceOnboardingJobStatus", {}).n("ConnectCampaignsClient", "GetInstanceOnboardingJobStatusCommand").f(void 0, void 0).ser(se_GetInstanceOnboardingJobStatusCommand).de(de_GetInstanceOnboardingJobStatusCommand).build() {
};
__name(_GetInstanceOnboardingJobStatusCommand, "GetInstanceOnboardingJobStatusCommand");
var GetInstanceOnboardingJobStatusCommand = _GetInstanceOnboardingJobStatusCommand;

// src/commands/ListCampaignsCommand.ts




var _ListCampaignsCommand = class _ListCampaignsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "ListCampaigns", {}).n("ConnectCampaignsClient", "ListCampaignsCommand").f(void 0, void 0).ser(se_ListCampaignsCommand).de(de_ListCampaignsCommand).build() {
};
__name(_ListCampaignsCommand, "ListCampaignsCommand");
var ListCampaignsCommand = _ListCampaignsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "ListTagsForResource", {}).n("ConnectCampaignsClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PauseCampaignCommand.ts




var _PauseCampaignCommand = class _PauseCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "PauseCampaign", {}).n("ConnectCampaignsClient", "PauseCampaignCommand").f(void 0, void 0).ser(se_PauseCampaignCommand).de(de_PauseCampaignCommand).build() {
};
__name(_PauseCampaignCommand, "PauseCampaignCommand");
var PauseCampaignCommand = _PauseCampaignCommand;

// src/commands/PutDialRequestBatchCommand.ts




var _PutDialRequestBatchCommand = class _PutDialRequestBatchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "PutDialRequestBatch", {}).n("ConnectCampaignsClient", "PutDialRequestBatchCommand").f(PutDialRequestBatchRequestFilterSensitiveLog, void 0).ser(se_PutDialRequestBatchCommand).de(de_PutDialRequestBatchCommand).build() {
};
__name(_PutDialRequestBatchCommand, "PutDialRequestBatchCommand");
var PutDialRequestBatchCommand = _PutDialRequestBatchCommand;

// src/commands/ResumeCampaignCommand.ts




var _ResumeCampaignCommand = class _ResumeCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "ResumeCampaign", {}).n("ConnectCampaignsClient", "ResumeCampaignCommand").f(void 0, void 0).ser(se_ResumeCampaignCommand).de(de_ResumeCampaignCommand).build() {
};
__name(_ResumeCampaignCommand, "ResumeCampaignCommand");
var ResumeCampaignCommand = _ResumeCampaignCommand;

// src/commands/StartCampaignCommand.ts




var _StartCampaignCommand = class _StartCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "StartCampaign", {}).n("ConnectCampaignsClient", "StartCampaignCommand").f(void 0, void 0).ser(se_StartCampaignCommand).de(de_StartCampaignCommand).build() {
};
__name(_StartCampaignCommand, "StartCampaignCommand");
var StartCampaignCommand = _StartCampaignCommand;

// src/commands/StartInstanceOnboardingJobCommand.ts




var _StartInstanceOnboardingJobCommand = class _StartInstanceOnboardingJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "StartInstanceOnboardingJob", {}).n("ConnectCampaignsClient", "StartInstanceOnboardingJobCommand").f(void 0, void 0).ser(se_StartInstanceOnboardingJobCommand).de(de_StartInstanceOnboardingJobCommand).build() {
};
__name(_StartInstanceOnboardingJobCommand, "StartInstanceOnboardingJobCommand");
var StartInstanceOnboardingJobCommand = _StartInstanceOnboardingJobCommand;

// src/commands/StopCampaignCommand.ts




var _StopCampaignCommand = class _StopCampaignCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "StopCampaign", {}).n("ConnectCampaignsClient", "StopCampaignCommand").f(void 0, void 0).ser(se_StopCampaignCommand).de(de_StopCampaignCommand).build() {
};
__name(_StopCampaignCommand, "StopCampaignCommand");
var StopCampaignCommand = _StopCampaignCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "TagResource", {}).n("ConnectCampaignsClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "UntagResource", {}).n("ConnectCampaignsClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateCampaignDialerConfigCommand.ts




var _UpdateCampaignDialerConfigCommand = class _UpdateCampaignDialerConfigCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "UpdateCampaignDialerConfig", {}).n("ConnectCampaignsClient", "UpdateCampaignDialerConfigCommand").f(void 0, void 0).ser(se_UpdateCampaignDialerConfigCommand).de(de_UpdateCampaignDialerConfigCommand).build() {
};
__name(_UpdateCampaignDialerConfigCommand, "UpdateCampaignDialerConfigCommand");
var UpdateCampaignDialerConfigCommand = _UpdateCampaignDialerConfigCommand;

// src/commands/UpdateCampaignNameCommand.ts




var _UpdateCampaignNameCommand = class _UpdateCampaignNameCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "UpdateCampaignName", {}).n("ConnectCampaignsClient", "UpdateCampaignNameCommand").f(void 0, void 0).ser(se_UpdateCampaignNameCommand).de(de_UpdateCampaignNameCommand).build() {
};
__name(_UpdateCampaignNameCommand, "UpdateCampaignNameCommand");
var UpdateCampaignNameCommand = _UpdateCampaignNameCommand;

// src/commands/UpdateCampaignOutboundCallConfigCommand.ts




var _UpdateCampaignOutboundCallConfigCommand = class _UpdateCampaignOutboundCallConfigCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectCampaignService", "UpdateCampaignOutboundCallConfig", {}).n("ConnectCampaignsClient", "UpdateCampaignOutboundCallConfigCommand").f(void 0, void 0).ser(se_UpdateCampaignOutboundCallConfigCommand).de(de_UpdateCampaignOutboundCallConfigCommand).build() {
};
__name(_UpdateCampaignOutboundCallConfigCommand, "UpdateCampaignOutboundCallConfigCommand");
var UpdateCampaignOutboundCallConfigCommand = _UpdateCampaignOutboundCallConfigCommand;

// src/ConnectCampaigns.ts
var commands = {
  CreateCampaignCommand,
  DeleteCampaignCommand,
  DeleteConnectInstanceConfigCommand,
  DeleteInstanceOnboardingJobCommand,
  DescribeCampaignCommand,
  GetCampaignStateCommand,
  GetCampaignStateBatchCommand,
  GetConnectInstanceConfigCommand,
  GetInstanceOnboardingJobStatusCommand,
  ListCampaignsCommand,
  ListTagsForResourceCommand,
  PauseCampaignCommand,
  PutDialRequestBatchCommand,
  ResumeCampaignCommand,
  StartCampaignCommand,
  StartInstanceOnboardingJobCommand,
  StopCampaignCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateCampaignDialerConfigCommand,
  UpdateCampaignNameCommand,
  UpdateCampaignOutboundCallConfigCommand
};
var _ConnectCampaigns = class _ConnectCampaigns extends ConnectCampaignsClient {
};
__name(_ConnectCampaigns, "ConnectCampaigns");
var ConnectCampaigns = _ConnectCampaigns;
(0, import_smithy_client.createAggregatedClient)(commands, ConnectCampaigns);

// src/pagination/ListCampaignsPaginator.ts

var paginateListCampaigns = (0, import_core.createPaginator)(ConnectCampaignsClient, ListCampaignsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ConnectCampaignsServiceException,
  __Client,
  ConnectCampaignsClient,
  ConnectCampaigns,
  $Command,
  CreateCampaignCommand,
  DeleteCampaignCommand,
  DeleteConnectInstanceConfigCommand,
  DeleteInstanceOnboardingJobCommand,
  DescribeCampaignCommand,
  GetCampaignStateBatchCommand,
  GetCampaignStateCommand,
  GetConnectInstanceConfigCommand,
  GetInstanceOnboardingJobStatusCommand,
  ListCampaignsCommand,
  ListTagsForResourceCommand,
  PauseCampaignCommand,
  PutDialRequestBatchCommand,
  ResumeCampaignCommand,
  StartCampaignCommand,
  StartInstanceOnboardingJobCommand,
  StopCampaignCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateCampaignDialerConfigCommand,
  UpdateCampaignNameCommand,
  UpdateCampaignOutboundCallConfigCommand,
  paginateListCampaigns,
  AccessDeniedException,
  ConflictException,
  DialerConfig,
  InternalServerException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  InvalidStateException,
  CampaignState,
  GetCampaignStateBatchFailureCode,
  EncryptionType,
  InstanceOnboardingJobFailureCode,
  InstanceOnboardingJobStatusCode,
  InstanceIdFilterOperator,
  InvalidCampaignStateException,
  FailureCode,
  DialRequestFilterSensitiveLog,
  PutDialRequestBatchRequestFilterSensitiveLog
});

