import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { GreengrassServiceException as __BaseException } from "./GreengrassServiceException";
export interface ConnectivityInfo {
  HostAddress?: string;
  Id?: string;
  Metadata?: string;
  PortNumber?: number;
}
export interface Connector {
  ConnectorArn: string | undefined;
  Id: string | undefined;
  Parameters?: Record<string, string>;
}
export interface Core {
  CertificateArn: string | undefined;
  Id: string | undefined;
  SyncShadow?: boolean;
  ThingArn: string | undefined;
}
export interface DefinitionInformation {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface Device {
  CertificateArn: string | undefined;
  Id: string | undefined;
  SyncShadow?: boolean;
  ThingArn: string | undefined;
}
export declare const EncodingType: {
  readonly binary: "binary";
  readonly json: "json";
};
export type EncodingType = (typeof EncodingType)[keyof typeof EncodingType];
export declare const FunctionIsolationMode: {
  readonly GreengrassContainer: "GreengrassContainer";
  readonly NoContainer: "NoContainer";
};
export type FunctionIsolationMode =
  (typeof FunctionIsolationMode)[keyof typeof FunctionIsolationMode];
export interface FunctionRunAsConfig {
  Gid?: number;
  Uid?: number;
}
export interface FunctionExecutionConfig {
  IsolationMode?: FunctionIsolationMode;
  RunAs?: FunctionRunAsConfig;
}
export declare const Permission: {
  readonly ro: "ro";
  readonly rw: "rw";
};
export type Permission = (typeof Permission)[keyof typeof Permission];
export interface ResourceAccessPolicy {
  Permission?: Permission;
  ResourceId: string | undefined;
}
export interface FunctionConfigurationEnvironment {
  AccessSysfs?: boolean;
  Execution?: FunctionExecutionConfig;
  ResourceAccessPolicies?: ResourceAccessPolicy[];
  Variables?: Record<string, string>;
}
export interface FunctionConfiguration {
  EncodingType?: EncodingType;
  Environment?: FunctionConfigurationEnvironment;
  ExecArgs?: string;
  Executable?: string;
  MemorySize?: number;
  Pinned?: boolean;
  Timeout?: number;
  FunctionRuntimeOverride?: string;
}
export interface Function {
  FunctionArn?: string;
  FunctionConfiguration?: FunctionConfiguration;
  Id: string | undefined;
}
export interface GroupCertificateAuthorityProperties {
  GroupCertificateAuthorityArn?: string;
  GroupCertificateAuthorityId?: string;
}
export interface GroupInformation {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export declare const LoggerComponent: {
  readonly GreengrassSystem: "GreengrassSystem";
  readonly Lambda: "Lambda";
};
export type LoggerComponent =
  (typeof LoggerComponent)[keyof typeof LoggerComponent];
export declare const LoggerLevel: {
  readonly DEBUG: "DEBUG";
  readonly ERROR: "ERROR";
  readonly FATAL: "FATAL";
  readonly INFO: "INFO";
  readonly WARN: "WARN";
};
export type LoggerLevel = (typeof LoggerLevel)[keyof typeof LoggerLevel];
export declare const LoggerType: {
  readonly AWSCloudWatch: "AWSCloudWatch";
  readonly FileSystem: "FileSystem";
};
export type LoggerType = (typeof LoggerType)[keyof typeof LoggerType];
export interface Logger {
  Component: LoggerComponent | undefined;
  Id: string | undefined;
  Level: LoggerLevel | undefined;
  Space?: number;
  Type: LoggerType | undefined;
}
export interface GroupOwnerSetting {
  AutoAddGroupOwner?: boolean;
  GroupOwner?: string;
}
export interface LocalDeviceResourceData {
  GroupOwnerSetting?: GroupOwnerSetting;
  SourcePath?: string;
}
export interface LocalVolumeResourceData {
  DestinationPath?: string;
  GroupOwnerSetting?: GroupOwnerSetting;
  SourcePath?: string;
}
export interface ResourceDownloadOwnerSetting {
  GroupOwner: string | undefined;
  GroupPermission: Permission | undefined;
}
export interface S3MachineLearningModelResourceData {
  DestinationPath?: string;
  OwnerSetting?: ResourceDownloadOwnerSetting;
  S3Uri?: string;
}
export interface SageMakerMachineLearningModelResourceData {
  DestinationPath?: string;
  OwnerSetting?: ResourceDownloadOwnerSetting;
  SageMakerJobArn?: string;
}
export interface SecretsManagerSecretResourceData {
  ARN?: string;
  AdditionalStagingLabelsToDownload?: string[];
}
export interface ResourceDataContainer {
  LocalDeviceResourceData?: LocalDeviceResourceData;
  LocalVolumeResourceData?: LocalVolumeResourceData;
  S3MachineLearningModelResourceData?: S3MachineLearningModelResourceData;
  SageMakerMachineLearningModelResourceData?: SageMakerMachineLearningModelResourceData;
  SecretsManagerSecretResourceData?: SecretsManagerSecretResourceData;
}
export interface Resource {
  Id: string | undefined;
  Name: string | undefined;
  ResourceDataContainer: ResourceDataContainer | undefined;
}
export interface Subscription {
  Id: string | undefined;
  Source: string | undefined;
  Subject: string | undefined;
  Target: string | undefined;
}
export interface VersionInformation {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface AssociateRoleToGroupRequest {
  GroupId: string | undefined;
  RoleArn: string | undefined;
}
export interface AssociateRoleToGroupResponse {
  AssociatedAt?: string;
}
export interface ErrorDetail {
  DetailedErrorCode?: string;
  DetailedErrorMessage?: string;
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  ErrorDetails?: ErrorDetail[];
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  ErrorDetails?: ErrorDetail[];
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export interface AssociateServiceRoleToAccountRequest {
  RoleArn: string | undefined;
}
export interface AssociateServiceRoleToAccountResponse {
  AssociatedAt?: string;
}
export interface BulkDeployment {
  BulkDeploymentArn?: string;
  BulkDeploymentId?: string;
  CreatedAt?: string;
}
export interface BulkDeploymentMetrics {
  InvalidInputRecords?: number;
  RecordsProcessed?: number;
  RetryAttempts?: number;
}
export declare const DeploymentType: {
  readonly ForceResetDeployment: "ForceResetDeployment";
  readonly NewDeployment: "NewDeployment";
  readonly Redeployment: "Redeployment";
  readonly ResetDeployment: "ResetDeployment";
};
export type DeploymentType =
  (typeof DeploymentType)[keyof typeof DeploymentType];
export interface BulkDeploymentResult {
  CreatedAt?: string;
  DeploymentArn?: string;
  DeploymentId?: string;
  DeploymentStatus?: string;
  DeploymentType?: DeploymentType;
  ErrorDetails?: ErrorDetail[];
  ErrorMessage?: string;
  GroupArn?: string;
}
export declare const BulkDeploymentStatus: {
  readonly Completed: "Completed";
  readonly Failed: "Failed";
  readonly Initializing: "Initializing";
  readonly Running: "Running";
  readonly Stopped: "Stopped";
  readonly Stopping: "Stopping";
};
export type BulkDeploymentStatus =
  (typeof BulkDeploymentStatus)[keyof typeof BulkDeploymentStatus];
export declare const ConfigurationSyncStatus: {
  readonly InSync: "InSync";
  readonly OutOfSync: "OutOfSync";
};
export type ConfigurationSyncStatus =
  (typeof ConfigurationSyncStatus)[keyof typeof ConfigurationSyncStatus];
export interface ConnectorDefinitionVersion {
  Connectors?: Connector[];
}
export interface CoreDefinitionVersion {
  Cores?: Core[];
}
export interface CreateConnectorDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: ConnectorDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateConnectorDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateConnectorDefinitionVersionRequest {
  AmznClientToken?: string;
  ConnectorDefinitionId: string | undefined;
  Connectors?: Connector[];
}
export interface CreateConnectorDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface CreateCoreDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: CoreDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateCoreDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateCoreDefinitionVersionRequest {
  AmznClientToken?: string;
  CoreDefinitionId: string | undefined;
  Cores?: Core[];
}
export interface CreateCoreDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface CreateDeploymentRequest {
  AmznClientToken?: string;
  DeploymentId?: string;
  DeploymentType: DeploymentType | undefined;
  GroupId: string | undefined;
  GroupVersionId?: string;
}
export interface CreateDeploymentResponse {
  DeploymentArn?: string;
  DeploymentId?: string;
}
export interface DeviceDefinitionVersion {
  Devices?: Device[];
}
export interface CreateDeviceDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: DeviceDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateDeviceDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateDeviceDefinitionVersionRequest {
  AmznClientToken?: string;
  DeviceDefinitionId: string | undefined;
  Devices?: Device[];
}
export interface CreateDeviceDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface FunctionDefaultExecutionConfig {
  IsolationMode?: FunctionIsolationMode;
  RunAs?: FunctionRunAsConfig;
}
export interface FunctionDefaultConfig {
  Execution?: FunctionDefaultExecutionConfig;
}
export interface FunctionDefinitionVersion {
  DefaultConfig?: FunctionDefaultConfig;
  Functions?: Function[];
}
export interface CreateFunctionDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: FunctionDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateFunctionDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateFunctionDefinitionVersionRequest {
  AmznClientToken?: string;
  DefaultConfig?: FunctionDefaultConfig;
  FunctionDefinitionId: string | undefined;
  Functions?: Function[];
}
export interface CreateFunctionDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface GroupVersion {
  ConnectorDefinitionVersionArn?: string;
  CoreDefinitionVersionArn?: string;
  DeviceDefinitionVersionArn?: string;
  FunctionDefinitionVersionArn?: string;
  LoggerDefinitionVersionArn?: string;
  ResourceDefinitionVersionArn?: string;
  SubscriptionDefinitionVersionArn?: string;
}
export interface CreateGroupRequest {
  AmznClientToken?: string;
  InitialVersion?: GroupVersion;
  Name: string | undefined;
  tags?: Record<string, string>;
}
export interface CreateGroupResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateGroupCertificateAuthorityRequest {
  AmznClientToken?: string;
  GroupId: string | undefined;
}
export interface CreateGroupCertificateAuthorityResponse {
  GroupCertificateAuthorityArn?: string;
}
export interface CreateGroupVersionRequest {
  AmznClientToken?: string;
  ConnectorDefinitionVersionArn?: string;
  CoreDefinitionVersionArn?: string;
  DeviceDefinitionVersionArn?: string;
  FunctionDefinitionVersionArn?: string;
  GroupId: string | undefined;
  LoggerDefinitionVersionArn?: string;
  ResourceDefinitionVersionArn?: string;
  SubscriptionDefinitionVersionArn?: string;
}
export interface CreateGroupVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface LoggerDefinitionVersion {
  Loggers?: Logger[];
}
export interface CreateLoggerDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: LoggerDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateLoggerDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateLoggerDefinitionVersionRequest {
  AmznClientToken?: string;
  LoggerDefinitionId: string | undefined;
  Loggers?: Logger[];
}
export interface CreateLoggerDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface ResourceDefinitionVersion {
  Resources?: Resource[];
}
export interface CreateResourceDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: ResourceDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateResourceDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateResourceDefinitionVersionRequest {
  AmznClientToken?: string;
  ResourceDefinitionId: string | undefined;
  Resources?: Resource[];
}
export interface CreateResourceDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export declare const SoftwareToUpdate: {
  readonly core: "core";
  readonly ota_agent: "ota_agent";
};
export type SoftwareToUpdate =
  (typeof SoftwareToUpdate)[keyof typeof SoftwareToUpdate];
export declare const UpdateAgentLogLevel: {
  readonly DEBUG: "DEBUG";
  readonly ERROR: "ERROR";
  readonly FATAL: "FATAL";
  readonly INFO: "INFO";
  readonly NONE: "NONE";
  readonly TRACE: "TRACE";
  readonly VERBOSE: "VERBOSE";
  readonly WARN: "WARN";
};
export type UpdateAgentLogLevel =
  (typeof UpdateAgentLogLevel)[keyof typeof UpdateAgentLogLevel];
export declare const UpdateTargetsArchitecture: {
  readonly aarch64: "aarch64";
  readonly armv6l: "armv6l";
  readonly armv7l: "armv7l";
  readonly x86_64: "x86_64";
};
export type UpdateTargetsArchitecture =
  (typeof UpdateTargetsArchitecture)[keyof typeof UpdateTargetsArchitecture];
export declare const UpdateTargetsOperatingSystem: {
  readonly amazon_linux: "amazon_linux";
  readonly openwrt: "openwrt";
  readonly raspbian: "raspbian";
  readonly ubuntu: "ubuntu";
};
export type UpdateTargetsOperatingSystem =
  (typeof UpdateTargetsOperatingSystem)[keyof typeof UpdateTargetsOperatingSystem];
export interface CreateSoftwareUpdateJobRequest {
  AmznClientToken?: string;
  S3UrlSignerRole: string | undefined;
  SoftwareToUpdate: SoftwareToUpdate | undefined;
  UpdateAgentLogLevel?: UpdateAgentLogLevel;
  UpdateTargets: string[] | undefined;
  UpdateTargetsArchitecture: UpdateTargetsArchitecture | undefined;
  UpdateTargetsOperatingSystem: UpdateTargetsOperatingSystem | undefined;
}
export interface CreateSoftwareUpdateJobResponse {
  IotJobArn?: string;
  IotJobId?: string;
  PlatformSoftwareVersion?: string;
}
export interface SubscriptionDefinitionVersion {
  Subscriptions?: Subscription[];
}
export interface CreateSubscriptionDefinitionRequest {
  AmznClientToken?: string;
  InitialVersion?: SubscriptionDefinitionVersion;
  Name?: string;
  tags?: Record<string, string>;
}
export interface CreateSubscriptionDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
}
export interface CreateSubscriptionDefinitionVersionRequest {
  AmznClientToken?: string;
  SubscriptionDefinitionId: string | undefined;
  Subscriptions?: Subscription[];
}
export interface CreateSubscriptionDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  Version?: string;
}
export interface DeleteConnectorDefinitionRequest {
  ConnectorDefinitionId: string | undefined;
}
export interface DeleteConnectorDefinitionResponse {}
export interface DeleteCoreDefinitionRequest {
  CoreDefinitionId: string | undefined;
}
export interface DeleteCoreDefinitionResponse {}
export interface DeleteDeviceDefinitionRequest {
  DeviceDefinitionId: string | undefined;
}
export interface DeleteDeviceDefinitionResponse {}
export interface DeleteFunctionDefinitionRequest {
  FunctionDefinitionId: string | undefined;
}
export interface DeleteFunctionDefinitionResponse {}
export interface DeleteGroupRequest {
  GroupId: string | undefined;
}
export interface DeleteGroupResponse {}
export interface DeleteLoggerDefinitionRequest {
  LoggerDefinitionId: string | undefined;
}
export interface DeleteLoggerDefinitionResponse {}
export interface DeleteResourceDefinitionRequest {
  ResourceDefinitionId: string | undefined;
}
export interface DeleteResourceDefinitionResponse {}
export interface DeleteSubscriptionDefinitionRequest {
  SubscriptionDefinitionId: string | undefined;
}
export interface DeleteSubscriptionDefinitionResponse {}
export interface Deployment {
  CreatedAt?: string;
  DeploymentArn?: string;
  DeploymentId?: string;
  DeploymentType?: DeploymentType;
  GroupArn?: string;
}
export interface DisassociateRoleFromGroupRequest {
  GroupId: string | undefined;
}
export interface DisassociateRoleFromGroupResponse {
  DisassociatedAt?: string;
}
export interface DisassociateServiceRoleFromAccountRequest {}
export interface DisassociateServiceRoleFromAccountResponse {
  DisassociatedAt?: string;
}
export interface GetAssociatedRoleRequest {
  GroupId: string | undefined;
}
export interface GetAssociatedRoleResponse {
  AssociatedAt?: string;
  RoleArn?: string;
}
export interface GetBulkDeploymentStatusRequest {
  BulkDeploymentId: string | undefined;
}
export interface GetBulkDeploymentStatusResponse {
  BulkDeploymentMetrics?: BulkDeploymentMetrics;
  BulkDeploymentStatus?: BulkDeploymentStatus;
  CreatedAt?: string;
  ErrorDetails?: ErrorDetail[];
  ErrorMessage?: string;
  tags?: Record<string, string>;
}
export interface GetConnectivityInfoRequest {
  ThingName: string | undefined;
}
export interface GetConnectivityInfoResponse {
  ConnectivityInfo?: ConnectivityInfo[];
  Message?: string;
}
export interface GetConnectorDefinitionRequest {
  ConnectorDefinitionId: string | undefined;
}
export interface GetConnectorDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetConnectorDefinitionVersionRequest {
  ConnectorDefinitionId: string | undefined;
  ConnectorDefinitionVersionId: string | undefined;
  NextToken?: string;
}
export interface GetConnectorDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: ConnectorDefinitionVersion;
  Id?: string;
  NextToken?: string;
  Version?: string;
}
export interface GetCoreDefinitionRequest {
  CoreDefinitionId: string | undefined;
}
export interface GetCoreDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetCoreDefinitionVersionRequest {
  CoreDefinitionId: string | undefined;
  CoreDefinitionVersionId: string | undefined;
}
export interface GetCoreDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: CoreDefinitionVersion;
  Id?: string;
  NextToken?: string;
  Version?: string;
}
export interface GetDeploymentStatusRequest {
  DeploymentId: string | undefined;
  GroupId: string | undefined;
}
export interface GetDeploymentStatusResponse {
  DeploymentStatus?: string;
  DeploymentType?: DeploymentType;
  ErrorDetails?: ErrorDetail[];
  ErrorMessage?: string;
  UpdatedAt?: string;
}
export interface GetDeviceDefinitionRequest {
  DeviceDefinitionId: string | undefined;
}
export interface GetDeviceDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetDeviceDefinitionVersionRequest {
  DeviceDefinitionId: string | undefined;
  DeviceDefinitionVersionId: string | undefined;
  NextToken?: string;
}
export interface GetDeviceDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: DeviceDefinitionVersion;
  Id?: string;
  NextToken?: string;
  Version?: string;
}
export interface GetFunctionDefinitionRequest {
  FunctionDefinitionId: string | undefined;
}
export interface GetFunctionDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetFunctionDefinitionVersionRequest {
  FunctionDefinitionId: string | undefined;
  FunctionDefinitionVersionId: string | undefined;
  NextToken?: string;
}
export interface GetFunctionDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: FunctionDefinitionVersion;
  Id?: string;
  NextToken?: string;
  Version?: string;
}
export interface GetGroupRequest {
  GroupId: string | undefined;
}
export interface GetGroupResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetGroupCertificateAuthorityRequest {
  CertificateAuthorityId: string | undefined;
  GroupId: string | undefined;
}
export interface GetGroupCertificateAuthorityResponse {
  GroupCertificateAuthorityArn?: string;
  GroupCertificateAuthorityId?: string;
  PemEncodedCertificate?: string;
}
export interface GetGroupCertificateConfigurationRequest {
  GroupId: string | undefined;
}
export interface GetGroupCertificateConfigurationResponse {
  CertificateAuthorityExpiryInMilliseconds?: string;
  CertificateExpiryInMilliseconds?: string;
  GroupId?: string;
}
export interface GetGroupVersionRequest {
  GroupId: string | undefined;
  GroupVersionId: string | undefined;
}
export interface GetGroupVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: GroupVersion;
  Id?: string;
  Version?: string;
}
export interface GetLoggerDefinitionRequest {
  LoggerDefinitionId: string | undefined;
}
export interface GetLoggerDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetLoggerDefinitionVersionRequest {
  LoggerDefinitionId: string | undefined;
  LoggerDefinitionVersionId: string | undefined;
  NextToken?: string;
}
export interface GetLoggerDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: LoggerDefinitionVersion;
  Id?: string;
  Version?: string;
}
export interface GetResourceDefinitionRequest {
  ResourceDefinitionId: string | undefined;
}
export interface GetResourceDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetResourceDefinitionVersionRequest {
  ResourceDefinitionId: string | undefined;
  ResourceDefinitionVersionId: string | undefined;
}
export interface GetResourceDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: ResourceDefinitionVersion;
  Id?: string;
  Version?: string;
}
export interface GetServiceRoleForAccountRequest {}
export interface GetServiceRoleForAccountResponse {
  AssociatedAt?: string;
  RoleArn?: string;
}
export interface GetSubscriptionDefinitionRequest {
  SubscriptionDefinitionId: string | undefined;
}
export interface GetSubscriptionDefinitionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Id?: string;
  LastUpdatedTimestamp?: string;
  LatestVersion?: string;
  LatestVersionArn?: string;
  Name?: string;
  tags?: Record<string, string>;
}
export interface GetSubscriptionDefinitionVersionRequest {
  NextToken?: string;
  SubscriptionDefinitionId: string | undefined;
  SubscriptionDefinitionVersionId: string | undefined;
}
export interface GetSubscriptionDefinitionVersionResponse {
  Arn?: string;
  CreationTimestamp?: string;
  Definition?: SubscriptionDefinitionVersion;
  Id?: string;
  NextToken?: string;
  Version?: string;
}
export interface GetThingRuntimeConfigurationRequest {
  ThingName: string | undefined;
}
export declare const Telemetry: {
  readonly Off: "Off";
  readonly On: "On";
};
export type Telemetry = (typeof Telemetry)[keyof typeof Telemetry];
export interface TelemetryConfiguration {
  ConfigurationSyncStatus?: ConfigurationSyncStatus;
  Telemetry: Telemetry | undefined;
}
export interface RuntimeConfiguration {
  TelemetryConfiguration?: TelemetryConfiguration;
}
export interface GetThingRuntimeConfigurationResponse {
  RuntimeConfiguration?: RuntimeConfiguration;
}
export interface ListBulkDeploymentDetailedReportsRequest {
  BulkDeploymentId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListBulkDeploymentDetailedReportsResponse {
  Deployments?: BulkDeploymentResult[];
  NextToken?: string;
}
export interface ListBulkDeploymentsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListBulkDeploymentsResponse {
  BulkDeployments?: BulkDeployment[];
  NextToken?: string;
}
export interface ListConnectorDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListConnectorDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListConnectorDefinitionVersionsRequest {
  ConnectorDefinitionId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListConnectorDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListCoreDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListCoreDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListCoreDefinitionVersionsRequest {
  CoreDefinitionId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListCoreDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListDeploymentsRequest {
  GroupId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListDeploymentsResponse {
  Deployments?: Deployment[];
  NextToken?: string;
}
export interface ListDeviceDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListDeviceDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListDeviceDefinitionVersionsRequest {
  DeviceDefinitionId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListDeviceDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListFunctionDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListFunctionDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListFunctionDefinitionVersionsRequest {
  FunctionDefinitionId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListFunctionDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListGroupCertificateAuthoritiesRequest {
  GroupId: string | undefined;
}
export interface ListGroupCertificateAuthoritiesResponse {
  GroupCertificateAuthorities?: GroupCertificateAuthorityProperties[];
}
export interface ListGroupsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListGroupsResponse {
  Groups?: GroupInformation[];
  NextToken?: string;
}
export interface ListGroupVersionsRequest {
  GroupId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListGroupVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListLoggerDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListLoggerDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListLoggerDefinitionVersionsRequest {
  LoggerDefinitionId: string | undefined;
  MaxResults?: string;
  NextToken?: string;
}
export interface ListLoggerDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListResourceDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListResourceDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListResourceDefinitionVersionsRequest {
  MaxResults?: string;
  NextToken?: string;
  ResourceDefinitionId: string | undefined;
}
export interface ListResourceDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListSubscriptionDefinitionsRequest {
  MaxResults?: string;
  NextToken?: string;
}
export interface ListSubscriptionDefinitionsResponse {
  Definitions?: DefinitionInformation[];
  NextToken?: string;
}
export interface ListSubscriptionDefinitionVersionsRequest {
  MaxResults?: string;
  NextToken?: string;
  SubscriptionDefinitionId: string | undefined;
}
export interface ListSubscriptionDefinitionVersionsResponse {
  NextToken?: string;
  Versions?: VersionInformation[];
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export interface ResetDeploymentsRequest {
  AmznClientToken?: string;
  Force?: boolean;
  GroupId: string | undefined;
}
export interface ResetDeploymentsResponse {
  DeploymentArn?: string;
  DeploymentId?: string;
}
export interface StartBulkDeploymentRequest {
  AmznClientToken?: string;
  ExecutionRoleArn: string | undefined;
  InputFileUri: string | undefined;
  tags?: Record<string, string>;
}
export interface StartBulkDeploymentResponse {
  BulkDeploymentArn?: string;
  BulkDeploymentId?: string;
}
export interface StopBulkDeploymentRequest {
  BulkDeploymentId: string | undefined;
}
export interface StopBulkDeploymentResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  tags?: Record<string, string>;
}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UpdateConnectivityInfoRequest {
  ConnectivityInfo?: ConnectivityInfo[];
  ThingName: string | undefined;
}
export interface UpdateConnectivityInfoResponse {
  Message?: string;
  Version?: string;
}
export interface UpdateConnectorDefinitionRequest {
  ConnectorDefinitionId: string | undefined;
  Name?: string;
}
export interface UpdateConnectorDefinitionResponse {}
export interface UpdateCoreDefinitionRequest {
  CoreDefinitionId: string | undefined;
  Name?: string;
}
export interface UpdateCoreDefinitionResponse {}
export interface UpdateDeviceDefinitionRequest {
  DeviceDefinitionId: string | undefined;
  Name?: string;
}
export interface UpdateDeviceDefinitionResponse {}
export interface UpdateFunctionDefinitionRequest {
  FunctionDefinitionId: string | undefined;
  Name?: string;
}
export interface UpdateFunctionDefinitionResponse {}
export interface UpdateGroupRequest {
  GroupId: string | undefined;
  Name?: string;
}
export interface UpdateGroupResponse {}
export interface UpdateGroupCertificateConfigurationRequest {
  CertificateExpiryInMilliseconds?: string;
  GroupId: string | undefined;
}
export interface UpdateGroupCertificateConfigurationResponse {
  CertificateAuthorityExpiryInMilliseconds?: string;
  CertificateExpiryInMilliseconds?: string;
  GroupId?: string;
}
export interface UpdateLoggerDefinitionRequest {
  LoggerDefinitionId: string | undefined;
  Name?: string;
}
export interface UpdateLoggerDefinitionResponse {}
export interface UpdateResourceDefinitionRequest {
  Name?: string;
  ResourceDefinitionId: string | undefined;
}
export interface UpdateResourceDefinitionResponse {}
export interface UpdateSubscriptionDefinitionRequest {
  Name?: string;
  SubscriptionDefinitionId: string | undefined;
}
export interface UpdateSubscriptionDefinitionResponse {}
export interface TelemetryConfigurationUpdate {
  Telemetry: Telemetry | undefined;
}
export interface UpdateThingRuntimeConfigurationRequest {
  TelemetryConfiguration?: TelemetryConfigurationUpdate;
  ThingName: string | undefined;
}
export interface UpdateThingRuntimeConfigurationResponse {}
