import { CodeGuruProfilerServiceException as __BaseException } from "./CodeGuruProfilerServiceException";
export const ActionGroup = {
    AGENT_PERMISSIONS: "agentPermissions",
};
export const EventPublisher = {
    ANOMALY_DETECTION: "AnomalyDetection",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        this.$retryable = {};
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        this.$retryable = {};
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        this.$retryable = {};
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const AgentParameterField = {
    MAX_STACK_DEPTH: "MaxStackDepth",
    MEMORY_USAGE_LIMIT_PERCENT: "MemoryUsageLimitPercent",
    MINIMUM_TIME_FOR_REPORTING_IN_MILLISECONDS: "MinimumTimeForReportingInMilliseconds",
    REPORTING_INTERVAL_IN_MILLISECONDS: "ReportingIntervalInMilliseconds",
    SAMPLING_INTERVAL_IN_MILLISECONDS: "SamplingIntervalInMilliseconds",
};
export const AggregationPeriod = {
    P1D: "P1D",
    PT1H: "PT1H",
    PT5M: "PT5M",
};
export const FeedbackType = {
    Negative: "Negative",
    Positive: "Positive",
};
export const MetricType = {
    AggregatedRelativeTotalTime: "AggregatedRelativeTotalTime",
};
export const MetadataField = {
    AGENT_ID: "AgentId",
    AWS_REQUEST_ID: "AwsRequestId",
    COMPUTE_PLATFORM: "ComputePlatform",
    EXECUTION_ENVIRONMENT: "ExecutionEnvironment",
    LAMBDA_FUNCTION_ARN: "LambdaFunctionArn",
    LAMBDA_MEMORY_LIMIT_IN_MB: "LambdaMemoryLimitInMB",
    LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS: "LambdaPreviousExecutionTimeInMilliseconds",
    LAMBDA_REMAINING_TIME_IN_MILLISECONDS: "LambdaRemainingTimeInMilliseconds",
    LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS: "LambdaTimeGapBetweenInvokesInMilliseconds",
};
export const ComputePlatform = {
    AWSLAMBDA: "AWSLambda",
    DEFAULT: "Default",
};
export const OrderBy = {
    TIMESTAMP_ASCENDING: "TimestampAscending",
    TIMESTAMP_DESCENDING: "TimestampDescending",
};
