"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ActionGroup: () => ActionGroup,
  AddNotificationChannelsCommand: () => AddNotificationChannelsCommand,
  AgentParameterField: () => AgentParameterField,
  AggregationPeriod: () => AggregationPeriod,
  BatchGetFrameMetricDataCommand: () => BatchGetFrameMetricDataCommand,
  CodeGuruProfiler: () => CodeGuruProfiler,
  CodeGuruProfilerClient: () => CodeGuruProfilerClient,
  CodeGuruProfilerServiceException: () => CodeGuruProfilerServiceException,
  ComputePlatform: () => ComputePlatform,
  ConfigureAgentCommand: () => ConfigureAgentCommand,
  ConflictException: () => ConflictException,
  CreateProfilingGroupCommand: () => CreateProfilingGroupCommand,
  DeleteProfilingGroupCommand: () => DeleteProfilingGroupCommand,
  DescribeProfilingGroupCommand: () => DescribeProfilingGroupCommand,
  EventPublisher: () => EventPublisher,
  FeedbackType: () => FeedbackType,
  GetFindingsReportAccountSummaryCommand: () => GetFindingsReportAccountSummaryCommand,
  GetNotificationConfigurationCommand: () => GetNotificationConfigurationCommand,
  GetPolicyCommand: () => GetPolicyCommand,
  GetProfileCommand: () => GetProfileCommand,
  GetRecommendationsCommand: () => GetRecommendationsCommand,
  InternalServerException: () => InternalServerException,
  ListFindingsReportsCommand: () => ListFindingsReportsCommand,
  ListProfileTimesCommand: () => ListProfileTimesCommand,
  ListProfilingGroupsCommand: () => ListProfilingGroupsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  MetadataField: () => MetadataField,
  MetricType: () => MetricType,
  OrderBy: () => OrderBy,
  PostAgentProfileCommand: () => PostAgentProfileCommand,
  PutPermissionCommand: () => PutPermissionCommand,
  RemoveNotificationChannelCommand: () => RemoveNotificationChannelCommand,
  RemovePermissionCommand: () => RemovePermissionCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SubmitFeedbackCommand: () => SubmitFeedbackCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateProfilingGroupCommand: () => UpdateProfilingGroupCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateGetFindingsReportAccountSummary: () => paginateGetFindingsReportAccountSummary,
  paginateListFindingsReports: () => paginateListFindingsReports,
  paginateListProfileTimes: () => paginateListProfileTimes,
  paginateListProfilingGroups: () => paginateListProfilingGroups
});
module.exports = __toCommonJS(src_exports);

// src/CodeGuruProfilerClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "codeguru-profiler"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/CodeGuruProfilerClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/CodeGuruProfilerClient.ts
var _CodeGuruProfilerClient = class _CodeGuruProfilerClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultCodeGuruProfilerHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_CodeGuruProfilerClient, "CodeGuruProfilerClient");
var CodeGuruProfilerClient = _CodeGuruProfilerClient;

// src/CodeGuruProfiler.ts


// src/commands/AddNotificationChannelsCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/CodeGuruProfilerServiceException.ts

var _CodeGuruProfilerServiceException = class _CodeGuruProfilerServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _CodeGuruProfilerServiceException.prototype);
  }
};
__name(_CodeGuruProfilerServiceException, "CodeGuruProfilerServiceException");
var CodeGuruProfilerServiceException = _CodeGuruProfilerServiceException;

// src/models/models_0.ts
var ActionGroup = {
  /**
   * Permission group type for Agent APIs - ConfigureAgent, PostAgentProfile
   */
  AGENT_PERMISSIONS: "agentPermissions"
};
var EventPublisher = {
  /**
   * Notifications for Anomaly Detection
   */
  ANOMALY_DETECTION: "AnomalyDetection"
};
var _ConflictException = class _ConflictException extends CodeGuruProfilerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends CodeGuruProfilerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    this.$retryable = {};
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends CodeGuruProfilerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends CodeGuruProfilerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    this.$retryable = {};
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends CodeGuruProfilerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    this.$retryable = {};
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends CodeGuruProfilerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var AgentParameterField = {
  /**
   * Maximum stack depth to be captured by the CodeGuru Profiler.
   */
  MAX_STACK_DEPTH: "MaxStackDepth",
  /**
   * Percentage of memory to be used by CodeGuru profiler. Minimum of 30MB is required for the agent.
   */
  MEMORY_USAGE_LIMIT_PERCENT: "MemoryUsageLimitPercent",
  /**
   * Minimum time in milliseconds between sending reports.
   */
  MINIMUM_TIME_FOR_REPORTING_IN_MILLISECONDS: "MinimumTimeForReportingInMilliseconds",
  /**
   * Reporting interval in milliseconds used to report profiles.
   */
  REPORTING_INTERVAL_IN_MILLISECONDS: "ReportingIntervalInMilliseconds",
  /**
   * Sampling interval in milliseconds used to sample profiles.
   */
  SAMPLING_INTERVAL_IN_MILLISECONDS: "SamplingIntervalInMilliseconds"
};
var AggregationPeriod = {
  /**
   * Period of one day.
   */
  P1D: "P1D",
  /**
   * Period of one hour.
   */
  PT1H: "PT1H",
  /**
   * Period of five minutes.
   */
  PT5M: "PT5M"
};
var FeedbackType = {
  /**
   * Profiler recommendation flagged as not useful.
   */
  Negative: "Negative",
  /**
   * Profiler recommendation flagged as useful.
   */
  Positive: "Positive"
};
var MetricType = {
  /**
   * Metric value aggregated for all instances of a frame name in a profile relative to the root frame.
   */
  AggregatedRelativeTotalTime: "AggregatedRelativeTotalTime"
};
var MetadataField = {
  /**
   * Unique identifier for the agent instance.
   */
  AGENT_ID: "AgentId",
  /**
   * AWS requestId of the Lambda invocation.
   */
  AWS_REQUEST_ID: "AwsRequestId",
  /**
   * Compute platform on which agent is running.
   */
  COMPUTE_PLATFORM: "ComputePlatform",
  /**
   * Execution environment on which Lambda function is running.
   */
  EXECUTION_ENVIRONMENT: "ExecutionEnvironment",
  /**
   * Function ARN that's used to invoke the Lambda function.
   */
  LAMBDA_FUNCTION_ARN: "LambdaFunctionArn",
  /**
   * Memory allocated for the Lambda function.
   */
  LAMBDA_MEMORY_LIMIT_IN_MB: "LambdaMemoryLimitInMB",
  /**
   * Time in milliseconds for the previous Lambda invocation.
   */
  LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS: "LambdaPreviousExecutionTimeInMilliseconds",
  /**
   * Time in milliseconds left before the execution times out.
   */
  LAMBDA_REMAINING_TIME_IN_MILLISECONDS: "LambdaRemainingTimeInMilliseconds",
  /**
   * Time in milliseconds between two invocations of the Lambda function.
   */
  LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS: "LambdaTimeGapBetweenInvokesInMilliseconds"
};
var ComputePlatform = {
  /**
   * Compute platform meant to used for AWS Lambda.
   */
  AWSLAMBDA: "AWSLambda",
  /**
   * Compute platform meant to used for all usecases (like EC2, Fargate, physical servers etc.) but AWS Lambda.
   */
  DEFAULT: "Default"
};
var OrderBy = {
  /**
   * Order by timestamp in ascending order.
   */
  TIMESTAMP_ASCENDING: "TimestampAscending",
  /**
   * Order by timestamp in descending order.
   */
  TIMESTAMP_DESCENDING: "TimestampDescending"
};

// src/protocols/Aws_restJson1.ts
var se_AddNotificationChannelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/profilingGroups/{profilingGroupName}/notificationConfiguration");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      channels: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddNotificationChannelsCommand");
var se_BatchGetFrameMetricDataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/profilingGroups/{profilingGroupName}/frames/-/metrics");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_sT]: [() => input.startTime !== void 0, () => (input[_sT].toISOString().split(".")[0] + "Z").toString()],
    [_eT]: [() => input.endTime !== void 0, () => (input[_eT].toISOString().split(".")[0] + "Z").toString()],
    [_p]: [, input[_p]],
    [_tR]: [, input[_tR]]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      frameMetrics: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_BatchGetFrameMetricDataCommand");
var se_ConfigureAgentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/profilingGroups/{profilingGroupName}/configureAgent");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      fleetInstanceId: [],
      metadata: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ConfigureAgentCommand");
var se_CreateProfilingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/profilingGroups");
  const query = (0, import_smithy_client.map)({
    [_cT]: [, (0, import_smithy_client.expectNonNull)(input[_cT], `clientToken`)]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentOrchestrationConfig: (_) => (0, import_smithy_client._json)(_),
      computePlatform: [],
      profilingGroupName: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_CreateProfilingGroupCommand");
var se_DeleteProfilingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteProfilingGroupCommand");
var se_DescribeProfilingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeProfilingGroupCommand");
var se_GetFindingsReportAccountSummaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/internal/findingsReports");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_dRO]: [() => input.dailyReportsOnly !== void 0, () => input[_dRO].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetFindingsReportAccountSummaryCommand");
var se_GetNotificationConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}/notificationConfiguration");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetNotificationConfigurationCommand");
var se_GetPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}/policy");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetPolicyCommand");
var se_GetProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    [_a]: input[_a]
  });
  b.bp("/profilingGroups/{profilingGroupName}/profile");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_sT]: [() => input.startTime !== void 0, () => (input[_sT].toISOString().split(".")[0] + "Z").toString()],
    [_p]: [, input[_p]],
    [_eT]: [() => input.endTime !== void 0, () => (input[_eT].toISOString().split(".")[0] + "Z").toString()],
    [_mD]: [() => input.maxDepth !== void 0, () => input[_mD].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetProfileCommand");
var se_GetRecommendationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/internal/profilingGroups/{profilingGroupName}/recommendations");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_sT]: [
      (0, import_smithy_client.expectNonNull)(input.startTime, `startTime`) != null,
      () => (input[_sT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_eT]: [
      (0, import_smithy_client.expectNonNull)(input.endTime, `endTime`) != null,
      () => (input[_eT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_l]: [, input[_l]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetRecommendationsCommand");
var se_ListFindingsReportsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/internal/profilingGroups/{profilingGroupName}/findingsReports");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_sT]: [
      (0, import_smithy_client.expectNonNull)(input.startTime, `startTime`) != null,
      () => (input[_sT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_eT]: [
      (0, import_smithy_client.expectNonNull)(input.endTime, `endTime`) != null,
      () => (input[_eT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_dRO]: [() => input.dailyReportsOnly !== void 0, () => input[_dRO].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListFindingsReportsCommand");
var se_ListProfileTimesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}/profileTimes");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_sT]: [
      (0, import_smithy_client.expectNonNull)(input.startTime, `startTime`) != null,
      () => (input[_sT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_eT]: [
      (0, import_smithy_client.expectNonNull)(input.endTime, `endTime`) != null,
      () => (input[_eT].toISOString().split(".")[0] + "Z").toString()
    ],
    [_p]: [, (0, import_smithy_client.expectNonNull)(input[_p], `period`)],
    [_oB]: [, input[_oB]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListProfileTimesCommand");
var se_ListProfilingGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_iD]: [() => input.includeDescription !== void 0, () => input[_iD].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListProfilingGroupsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PostAgentProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    [_ct]: input[_cTo] || "application/octet-stream"
  });
  b.bp("/profilingGroups/{profilingGroupName}/agentProfile");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  const query = (0, import_smithy_client.map)({
    [_pT]: [, input[_pT] ?? (0, import_uuid.v4)()]
  });
  let body;
  if (input.agentProfile !== void 0) {
    body = input.agentProfile;
  }
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_PostAgentProfileCommand");
var se_PutPermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/profilingGroups/{profilingGroupName}/policy/{actionGroup}");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  b.p("actionGroup", () => input.actionGroup, "{actionGroup}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      principals: (_) => (0, import_smithy_client._json)(_),
      revisionId: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutPermissionCommand");
var se_RemoveNotificationChannelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}/notificationConfiguration/{channelId}");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  b.p("channelId", () => input.channelId, "{channelId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_RemoveNotificationChannelCommand");
var se_RemovePermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/profilingGroups/{profilingGroupName}/policy/{actionGroup}");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  b.p("actionGroup", () => input.actionGroup, "{actionGroup}", false);
  const query = (0, import_smithy_client.map)({
    [_rI]: [, (0, import_smithy_client.expectNonNull)(input[_rI], `revisionId`)]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_RemovePermissionCommand");
var se_SubmitFeedbackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/internal/profilingGroups/{profilingGroupName}/anomalies/{anomalyInstanceId}/feedback");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  b.p("anomalyInstanceId", () => input.anomalyInstanceId, "{anomalyInstanceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      comment: [],
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SubmitFeedbackCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateProfilingGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/profilingGroups/{profilingGroupName}");
  b.p("profilingGroupName", () => input.profilingGroupName, "{profilingGroupName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      agentOrchestrationConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateProfilingGroupCommand");
var de_AddNotificationChannelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    notificationConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AddNotificationChannelsCommand");
var de_BatchGetFrameMetricDataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    endTimes: (_) => de_ListOfTimestamps(_, context),
    frameMetricData: (_) => de_FrameMetricData(_, context),
    resolution: import_smithy_client.expectString,
    startTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    unprocessedEndTimes: (_) => de_UnprocessedEndTimeMap(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchGetFrameMetricDataCommand");
var de_ConfigureAgentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context));
  contents.configuration = (0, import_smithy_client._json)(data);
  return contents;
}, "de_ConfigureAgentCommand");
var de_CreateProfilingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context));
  contents.profilingGroup = de_ProfilingGroupDescription(data, context);
  return contents;
}, "de_CreateProfilingGroupCommand");
var de_DeleteProfilingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteProfilingGroupCommand");
var de_DescribeProfilingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context));
  contents.profilingGroup = de_ProfilingGroupDescription(data, context);
  return contents;
}, "de_DescribeProfilingGroupCommand");
var de_GetFindingsReportAccountSummaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    reportSummaries: (_) => de_FindingsReportSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetFindingsReportAccountSummaryCommand");
var de_GetNotificationConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    notificationConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetNotificationConfigurationCommand");
var de_GetPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    policy: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPolicyCommand");
var de_GetProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output),
    [_cTo]: [, output.headers[_ct]],
    [_cE]: [, output.headers[_ce]]
  });
  const data = await (0, import_smithy_client.collectBody)(output.body, context);
  contents.profile = data;
  return contents;
}, "de_GetProfileCommand");
var de_GetRecommendationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    anomalies: (_) => de_Anomalies(_, context),
    profileEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    profileStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    profilingGroupName: import_smithy_client.expectString,
    recommendations: (_) => de_Recommendations(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRecommendationsCommand");
var de_ListFindingsReportsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    findingsReportSummaries: (_) => de_FindingsReportSummaries(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFindingsReportsCommand");
var de_ListProfileTimesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    profileTimes: (_) => de_ProfileTimes(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListProfileTimesCommand");
var de_ListProfilingGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    profilingGroupNames: import_smithy_client._json,
    profilingGroups: (_) => de_ProfilingGroupDescriptions(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListProfilingGroupsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PostAgentProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PostAgentProfileCommand");
var de_PutPermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    policy: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutPermissionCommand");
var de_RemoveNotificationChannelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    notificationConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RemoveNotificationChannelCommand");
var de_RemovePermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    policy: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RemovePermissionCommand");
var de_SubmitFeedbackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_SubmitFeedbackCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateProfilingGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context));
  contents.profilingGroup = de_ProfilingGroupDescription(data, context);
  return contents;
}, "de_UpdateProfilingGroupCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.codeguruprofiler#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.codeguruprofiler#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.codeguruprofiler#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.codeguruprofiler#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.codeguruprofiler#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.codeguruprofiler#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(CodeGuruProfilerServiceException);
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_AggregatedProfileTime = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    period: import_smithy_client.expectString,
    start: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_AggregatedProfileTime");
var de_Anomalies = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Anomaly(entry, context);
  });
  return retVal;
}, "de_Anomalies");
var de_Anomaly = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    instances: (_) => de_AnomalyInstances(_, context),
    metric: import_smithy_client._json,
    reason: import_smithy_client.expectString
  });
}, "de_Anomaly");
var de_AnomalyInstance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    startTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    userFeedback: import_smithy_client._json
  });
}, "de_AnomalyInstance");
var de_AnomalyInstances = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AnomalyInstance(entry, context);
  });
  return retVal;
}, "de_AnomalyInstances");
var de_FindingsReportSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FindingsReportSummary(entry, context);
  });
  return retVal;
}, "de_FindingsReportSummaries");
var de_FindingsReportSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    id: import_smithy_client.expectString,
    profileEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    profileStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    profilingGroupName: import_smithy_client.expectString,
    totalNumberOfFindings: import_smithy_client.expectInt32
  });
}, "de_FindingsReportSummary");
var de_FrameMetricData = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FrameMetricDatum(entry, context);
  });
  return retVal;
}, "de_FrameMetricData");
var de_FrameMetricDatum = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    frameMetric: import_smithy_client._json,
    values: (_) => de_FrameMetricValues(_, context)
  });
}, "de_FrameMetricDatum");
var de_FrameMetricValues = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.limitedParseDouble)(entry);
  });
  return retVal;
}, "de_FrameMetricValues");
var de_ListOfTimestamps = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_TimestampStructure(entry, context);
  });
  return retVal;
}, "de_ListOfTimestamps");
var de_Match = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    frameAddress: import_smithy_client.expectString,
    targetFramesIndex: import_smithy_client.expectInt32,
    thresholdBreachValue: import_smithy_client.limitedParseDouble
  });
}, "de_Match");
var de_Matches = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Match(entry, context);
  });
  return retVal;
}, "de_Matches");
var de_Pattern = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    countersToAggregate: import_smithy_client._json,
    description: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    resolutionSteps: import_smithy_client.expectString,
    targetFrames: import_smithy_client._json,
    thresholdPercent: import_smithy_client.limitedParseDouble
  });
}, "de_Pattern");
var de_ProfileTime = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    start: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_ProfileTime");
var de_ProfileTimes = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ProfileTime(entry, context);
  });
  return retVal;
}, "de_ProfileTimes");
var de_ProfilingGroupDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    agentOrchestrationConfig: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    computePlatform: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    name: import_smithy_client.expectString,
    profilingStatus: (_) => de_ProfilingStatus(_, context),
    tags: import_smithy_client._json,
    updatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_ProfilingGroupDescription");
var de_ProfilingGroupDescriptions = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ProfilingGroupDescription(entry, context);
  });
  return retVal;
}, "de_ProfilingGroupDescriptions");
var de_ProfilingStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    latestAgentOrchestratedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    latestAgentProfileReportedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    latestAggregatedProfile: (_) => de_AggregatedProfileTime(_, context)
  });
}, "de_ProfilingStatus");
var de_Recommendation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    allMatchesCount: import_smithy_client.expectInt32,
    allMatchesSum: import_smithy_client.limitedParseDouble,
    endTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    pattern: (_) => de_Pattern(_, context),
    startTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    topMatches: (_) => de_Matches(_, context)
  });
}, "de_Recommendation");
var de_Recommendations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Recommendation(entry, context);
  });
  return retVal;
}, "de_Recommendations");
var de_TimestampStructure = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    value: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_TimestampStructure");
var de_UnprocessedEndTimeMap = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_ListOfTimestamps(value, context);
    return acc;
  }, {});
}, "de_UnprocessedEndTimeMap");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var isSerializableHeaderValue = /* @__PURE__ */ __name((value) => value !== void 0 && value !== null && value !== "" && (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0), "isSerializableHeaderValue");
var _a = "accept";
var _cE = "contentEncoding";
var _cT = "clientToken";
var _cTo = "contentType";
var _ce = "content-encoding";
var _ct = "content-type";
var _dRO = "dailyReportsOnly";
var _eT = "endTime";
var _iD = "includeDescription";
var _l = "locale";
var _mD = "maxDepth";
var _mR = "maxResults";
var _nT = "nextToken";
var _oB = "orderBy";
var _p = "period";
var _pT = "profileToken";
var _rI = "revisionId";
var _sT = "startTime";
var _tK = "tagKeys";
var _tR = "targetResolution";

// src/commands/AddNotificationChannelsCommand.ts
var _AddNotificationChannelsCommand = class _AddNotificationChannelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "AddNotificationChannels", {}).n("CodeGuruProfilerClient", "AddNotificationChannelsCommand").f(void 0, void 0).ser(se_AddNotificationChannelsCommand).de(de_AddNotificationChannelsCommand).build() {
};
__name(_AddNotificationChannelsCommand, "AddNotificationChannelsCommand");
var AddNotificationChannelsCommand = _AddNotificationChannelsCommand;

// src/commands/BatchGetFrameMetricDataCommand.ts




var _BatchGetFrameMetricDataCommand = class _BatchGetFrameMetricDataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "BatchGetFrameMetricData", {}).n("CodeGuruProfilerClient", "BatchGetFrameMetricDataCommand").f(void 0, void 0).ser(se_BatchGetFrameMetricDataCommand).de(de_BatchGetFrameMetricDataCommand).build() {
};
__name(_BatchGetFrameMetricDataCommand, "BatchGetFrameMetricDataCommand");
var BatchGetFrameMetricDataCommand = _BatchGetFrameMetricDataCommand;

// src/commands/ConfigureAgentCommand.ts




var _ConfigureAgentCommand = class _ConfigureAgentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "ConfigureAgent", {}).n("CodeGuruProfilerClient", "ConfigureAgentCommand").f(void 0, void 0).ser(se_ConfigureAgentCommand).de(de_ConfigureAgentCommand).build() {
};
__name(_ConfigureAgentCommand, "ConfigureAgentCommand");
var ConfigureAgentCommand = _ConfigureAgentCommand;

// src/commands/CreateProfilingGroupCommand.ts




var _CreateProfilingGroupCommand = class _CreateProfilingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "CreateProfilingGroup", {}).n("CodeGuruProfilerClient", "CreateProfilingGroupCommand").f(void 0, void 0).ser(se_CreateProfilingGroupCommand).de(de_CreateProfilingGroupCommand).build() {
};
__name(_CreateProfilingGroupCommand, "CreateProfilingGroupCommand");
var CreateProfilingGroupCommand = _CreateProfilingGroupCommand;

// src/commands/DeleteProfilingGroupCommand.ts




var _DeleteProfilingGroupCommand = class _DeleteProfilingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "DeleteProfilingGroup", {}).n("CodeGuruProfilerClient", "DeleteProfilingGroupCommand").f(void 0, void 0).ser(se_DeleteProfilingGroupCommand).de(de_DeleteProfilingGroupCommand).build() {
};
__name(_DeleteProfilingGroupCommand, "DeleteProfilingGroupCommand");
var DeleteProfilingGroupCommand = _DeleteProfilingGroupCommand;

// src/commands/DescribeProfilingGroupCommand.ts




var _DescribeProfilingGroupCommand = class _DescribeProfilingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "DescribeProfilingGroup", {}).n("CodeGuruProfilerClient", "DescribeProfilingGroupCommand").f(void 0, void 0).ser(se_DescribeProfilingGroupCommand).de(de_DescribeProfilingGroupCommand).build() {
};
__name(_DescribeProfilingGroupCommand, "DescribeProfilingGroupCommand");
var DescribeProfilingGroupCommand = _DescribeProfilingGroupCommand;

// src/commands/GetFindingsReportAccountSummaryCommand.ts




var _GetFindingsReportAccountSummaryCommand = class _GetFindingsReportAccountSummaryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "GetFindingsReportAccountSummary", {}).n("CodeGuruProfilerClient", "GetFindingsReportAccountSummaryCommand").f(void 0, void 0).ser(se_GetFindingsReportAccountSummaryCommand).de(de_GetFindingsReportAccountSummaryCommand).build() {
};
__name(_GetFindingsReportAccountSummaryCommand, "GetFindingsReportAccountSummaryCommand");
var GetFindingsReportAccountSummaryCommand = _GetFindingsReportAccountSummaryCommand;

// src/commands/GetNotificationConfigurationCommand.ts




var _GetNotificationConfigurationCommand = class _GetNotificationConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "GetNotificationConfiguration", {}).n("CodeGuruProfilerClient", "GetNotificationConfigurationCommand").f(void 0, void 0).ser(se_GetNotificationConfigurationCommand).de(de_GetNotificationConfigurationCommand).build() {
};
__name(_GetNotificationConfigurationCommand, "GetNotificationConfigurationCommand");
var GetNotificationConfigurationCommand = _GetNotificationConfigurationCommand;

// src/commands/GetPolicyCommand.ts




var _GetPolicyCommand = class _GetPolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "GetPolicy", {}).n("CodeGuruProfilerClient", "GetPolicyCommand").f(void 0, void 0).ser(se_GetPolicyCommand).de(de_GetPolicyCommand).build() {
};
__name(_GetPolicyCommand, "GetPolicyCommand");
var GetPolicyCommand = _GetPolicyCommand;

// src/commands/GetProfileCommand.ts




var _GetProfileCommand = class _GetProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "GetProfile", {}).n("CodeGuruProfilerClient", "GetProfileCommand").f(void 0, void 0).ser(se_GetProfileCommand).de(de_GetProfileCommand).build() {
};
__name(_GetProfileCommand, "GetProfileCommand");
var GetProfileCommand = _GetProfileCommand;

// src/commands/GetRecommendationsCommand.ts




var _GetRecommendationsCommand = class _GetRecommendationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "GetRecommendations", {}).n("CodeGuruProfilerClient", "GetRecommendationsCommand").f(void 0, void 0).ser(se_GetRecommendationsCommand).de(de_GetRecommendationsCommand).build() {
};
__name(_GetRecommendationsCommand, "GetRecommendationsCommand");
var GetRecommendationsCommand = _GetRecommendationsCommand;

// src/commands/ListFindingsReportsCommand.ts




var _ListFindingsReportsCommand = class _ListFindingsReportsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "ListFindingsReports", {}).n("CodeGuruProfilerClient", "ListFindingsReportsCommand").f(void 0, void 0).ser(se_ListFindingsReportsCommand).de(de_ListFindingsReportsCommand).build() {
};
__name(_ListFindingsReportsCommand, "ListFindingsReportsCommand");
var ListFindingsReportsCommand = _ListFindingsReportsCommand;

// src/commands/ListProfileTimesCommand.ts




var _ListProfileTimesCommand = class _ListProfileTimesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "ListProfileTimes", {}).n("CodeGuruProfilerClient", "ListProfileTimesCommand").f(void 0, void 0).ser(se_ListProfileTimesCommand).de(de_ListProfileTimesCommand).build() {
};
__name(_ListProfileTimesCommand, "ListProfileTimesCommand");
var ListProfileTimesCommand = _ListProfileTimesCommand;

// src/commands/ListProfilingGroupsCommand.ts




var _ListProfilingGroupsCommand = class _ListProfilingGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "ListProfilingGroups", {}).n("CodeGuruProfilerClient", "ListProfilingGroupsCommand").f(void 0, void 0).ser(se_ListProfilingGroupsCommand).de(de_ListProfilingGroupsCommand).build() {
};
__name(_ListProfilingGroupsCommand, "ListProfilingGroupsCommand");
var ListProfilingGroupsCommand = _ListProfilingGroupsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "ListTagsForResource", {}).n("CodeGuruProfilerClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PostAgentProfileCommand.ts




var _PostAgentProfileCommand = class _PostAgentProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "PostAgentProfile", {}).n("CodeGuruProfilerClient", "PostAgentProfileCommand").f(void 0, void 0).ser(se_PostAgentProfileCommand).de(de_PostAgentProfileCommand).build() {
};
__name(_PostAgentProfileCommand, "PostAgentProfileCommand");
var PostAgentProfileCommand = _PostAgentProfileCommand;

// src/commands/PutPermissionCommand.ts




var _PutPermissionCommand = class _PutPermissionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "PutPermission", {}).n("CodeGuruProfilerClient", "PutPermissionCommand").f(void 0, void 0).ser(se_PutPermissionCommand).de(de_PutPermissionCommand).build() {
};
__name(_PutPermissionCommand, "PutPermissionCommand");
var PutPermissionCommand = _PutPermissionCommand;

// src/commands/RemoveNotificationChannelCommand.ts




var _RemoveNotificationChannelCommand = class _RemoveNotificationChannelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "RemoveNotificationChannel", {}).n("CodeGuruProfilerClient", "RemoveNotificationChannelCommand").f(void 0, void 0).ser(se_RemoveNotificationChannelCommand).de(de_RemoveNotificationChannelCommand).build() {
};
__name(_RemoveNotificationChannelCommand, "RemoveNotificationChannelCommand");
var RemoveNotificationChannelCommand = _RemoveNotificationChannelCommand;

// src/commands/RemovePermissionCommand.ts




var _RemovePermissionCommand = class _RemovePermissionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "RemovePermission", {}).n("CodeGuruProfilerClient", "RemovePermissionCommand").f(void 0, void 0).ser(se_RemovePermissionCommand).de(de_RemovePermissionCommand).build() {
};
__name(_RemovePermissionCommand, "RemovePermissionCommand");
var RemovePermissionCommand = _RemovePermissionCommand;

// src/commands/SubmitFeedbackCommand.ts




var _SubmitFeedbackCommand = class _SubmitFeedbackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "SubmitFeedback", {}).n("CodeGuruProfilerClient", "SubmitFeedbackCommand").f(void 0, void 0).ser(se_SubmitFeedbackCommand).de(de_SubmitFeedbackCommand).build() {
};
__name(_SubmitFeedbackCommand, "SubmitFeedbackCommand");
var SubmitFeedbackCommand = _SubmitFeedbackCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "TagResource", {}).n("CodeGuruProfilerClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "UntagResource", {}).n("CodeGuruProfilerClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateProfilingGroupCommand.ts




var _UpdateProfilingGroupCommand = class _UpdateProfilingGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("CodeGuruProfiler", "UpdateProfilingGroup", {}).n("CodeGuruProfilerClient", "UpdateProfilingGroupCommand").f(void 0, void 0).ser(se_UpdateProfilingGroupCommand).de(de_UpdateProfilingGroupCommand).build() {
};
__name(_UpdateProfilingGroupCommand, "UpdateProfilingGroupCommand");
var UpdateProfilingGroupCommand = _UpdateProfilingGroupCommand;

// src/CodeGuruProfiler.ts
var commands = {
  AddNotificationChannelsCommand,
  BatchGetFrameMetricDataCommand,
  ConfigureAgentCommand,
  CreateProfilingGroupCommand,
  DeleteProfilingGroupCommand,
  DescribeProfilingGroupCommand,
  GetFindingsReportAccountSummaryCommand,
  GetNotificationConfigurationCommand,
  GetPolicyCommand,
  GetProfileCommand,
  GetRecommendationsCommand,
  ListFindingsReportsCommand,
  ListProfileTimesCommand,
  ListProfilingGroupsCommand,
  ListTagsForResourceCommand,
  PostAgentProfileCommand,
  PutPermissionCommand,
  RemoveNotificationChannelCommand,
  RemovePermissionCommand,
  SubmitFeedbackCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateProfilingGroupCommand
};
var _CodeGuruProfiler = class _CodeGuruProfiler extends CodeGuruProfilerClient {
};
__name(_CodeGuruProfiler, "CodeGuruProfiler");
var CodeGuruProfiler = _CodeGuruProfiler;
(0, import_smithy_client.createAggregatedClient)(commands, CodeGuruProfiler);

// src/pagination/GetFindingsReportAccountSummaryPaginator.ts

var paginateGetFindingsReportAccountSummary = (0, import_core.createPaginator)(CodeGuruProfilerClient, GetFindingsReportAccountSummaryCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFindingsReportsPaginator.ts

var paginateListFindingsReports = (0, import_core.createPaginator)(CodeGuruProfilerClient, ListFindingsReportsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListProfileTimesPaginator.ts

var paginateListProfileTimes = (0, import_core.createPaginator)(CodeGuruProfilerClient, ListProfileTimesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListProfilingGroupsPaginator.ts

var paginateListProfilingGroups = (0, import_core.createPaginator)(CodeGuruProfilerClient, ListProfilingGroupsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  CodeGuruProfilerServiceException,
  __Client,
  CodeGuruProfilerClient,
  CodeGuruProfiler,
  $Command,
  AddNotificationChannelsCommand,
  BatchGetFrameMetricDataCommand,
  ConfigureAgentCommand,
  CreateProfilingGroupCommand,
  DeleteProfilingGroupCommand,
  DescribeProfilingGroupCommand,
  GetFindingsReportAccountSummaryCommand,
  GetNotificationConfigurationCommand,
  GetPolicyCommand,
  GetProfileCommand,
  GetRecommendationsCommand,
  ListFindingsReportsCommand,
  ListProfileTimesCommand,
  ListProfilingGroupsCommand,
  ListTagsForResourceCommand,
  PostAgentProfileCommand,
  PutPermissionCommand,
  RemoveNotificationChannelCommand,
  RemovePermissionCommand,
  SubmitFeedbackCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateProfilingGroupCommand,
  paginateGetFindingsReportAccountSummary,
  paginateListFindingsReports,
  paginateListProfileTimes,
  paginateListProfilingGroups,
  ActionGroup,
  EventPublisher,
  ConflictException,
  InternalServerException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  AgentParameterField,
  AggregationPeriod,
  FeedbackType,
  MetricType,
  MetadataField,
  ComputePlatform,
  OrderBy
});

