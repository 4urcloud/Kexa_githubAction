import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { RAMServiceException as __BaseException } from "./RAMServiceException";
export interface AcceptResourceShareInvitationRequest {
  resourceShareInvitationArn: string | undefined;
  clientToken?: string;
}
export declare const ResourceShareAssociationType: {
  readonly PRINCIPAL: "PRINCIPAL";
  readonly RESOURCE: "RESOURCE";
};
export type ResourceShareAssociationType =
  (typeof ResourceShareAssociationType)[keyof typeof ResourceShareAssociationType];
export declare const ResourceShareAssociationStatus: {
  readonly ASSOCIATED: "ASSOCIATED";
  readonly ASSOCIATING: "ASSOCIATING";
  readonly DISASSOCIATED: "DISASSOCIATED";
  readonly DISASSOCIATING: "DISASSOCIATING";
  readonly FAILED: "FAILED";
};
export type ResourceShareAssociationStatus =
  (typeof ResourceShareAssociationStatus)[keyof typeof ResourceShareAssociationStatus];
export interface ResourceShareAssociation {
  resourceShareArn?: string;
  resourceShareName?: string;
  associatedEntity?: string;
  associationType?: ResourceShareAssociationType;
  status?: ResourceShareAssociationStatus;
  statusMessage?: string;
  creationTime?: Date;
  lastUpdatedTime?: Date;
  external?: boolean;
}
export declare const ResourceShareInvitationStatus: {
  readonly ACCEPTED: "ACCEPTED";
  readonly EXPIRED: "EXPIRED";
  readonly PENDING: "PENDING";
  readonly REJECTED: "REJECTED";
};
export type ResourceShareInvitationStatus =
  (typeof ResourceShareInvitationStatus)[keyof typeof ResourceShareInvitationStatus];
export interface ResourceShareInvitation {
  resourceShareInvitationArn?: string;
  resourceShareName?: string;
  resourceShareArn?: string;
  senderAccountId?: string;
  receiverAccountId?: string;
  invitationTimestamp?: Date;
  status?: ResourceShareInvitationStatus;
  resourceShareAssociations?: ResourceShareAssociation[];
  receiverArn?: string;
}
export interface AcceptResourceShareInvitationResponse {
  resourceShareInvitation?: ResourceShareInvitation;
  clientToken?: string;
}
export declare class IdempotentParameterMismatchException extends __BaseException {
  readonly name: "IdempotentParameterMismatchException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      IdempotentParameterMismatchException,
      __BaseException
    >
  );
}
export declare class InvalidClientTokenException extends __BaseException {
  readonly name: "InvalidClientTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidClientTokenException, __BaseException>
  );
}
export declare class MalformedArnException extends __BaseException {
  readonly name: "MalformedArnException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<MalformedArnException, __BaseException>
  );
}
export declare class OperationNotPermittedException extends __BaseException {
  readonly name: "OperationNotPermittedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<OperationNotPermittedException, __BaseException>
  );
}
export declare class ResourceShareInvitationAlreadyAcceptedException extends __BaseException {
  readonly name: "ResourceShareInvitationAlreadyAcceptedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceShareInvitationAlreadyAcceptedException,
      __BaseException
    >
  );
}
export declare class ResourceShareInvitationAlreadyRejectedException extends __BaseException {
  readonly name: "ResourceShareInvitationAlreadyRejectedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceShareInvitationAlreadyRejectedException,
      __BaseException
    >
  );
}
export declare class ResourceShareInvitationArnNotFoundException extends __BaseException {
  readonly name: "ResourceShareInvitationArnNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceShareInvitationArnNotFoundException,
      __BaseException
    >
  );
}
export declare class ResourceShareInvitationExpiredException extends __BaseException {
  readonly name: "ResourceShareInvitationExpiredException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceShareInvitationExpiredException,
      __BaseException
    >
  );
}
export declare class ServerInternalException extends __BaseException {
  readonly name: "ServerInternalException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServerInternalException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export interface AssociateResourceShareRequest {
  resourceShareArn: string | undefined;
  resourceArns?: string[];
  principals?: string[];
  clientToken?: string;
  sources?: string[];
}
export interface AssociateResourceShareResponse {
  resourceShareAssociations?: ResourceShareAssociation[];
  clientToken?: string;
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class InvalidStateTransitionException extends __BaseException {
  readonly name: "InvalidStateTransitionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidStateTransitionException,
      __BaseException
    >
  );
}
export declare class ResourceShareLimitExceededException extends __BaseException {
  readonly name: "ResourceShareLimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ResourceShareLimitExceededException,
      __BaseException
    >
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class UnknownResourceException extends __BaseException {
  readonly name: "UnknownResourceException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnknownResourceException, __BaseException>
  );
}
export interface AssociateResourceSharePermissionRequest {
  resourceShareArn: string | undefined;
  permissionArn: string | undefined;
  replace?: boolean;
  clientToken?: string;
  permissionVersion?: number;
}
export interface AssociateResourceSharePermissionResponse {
  returnValue?: boolean;
  clientToken?: string;
}
export interface Tag {
  key?: string;
  value?: string;
}
export interface CreatePermissionRequest {
  name: string | undefined;
  resourceType: string | undefined;
  policyTemplate: string | undefined;
  clientToken?: string;
  tags?: Tag[];
}
export declare const PermissionFeatureSet: {
  readonly CREATED_FROM_POLICY: "CREATED_FROM_POLICY";
  readonly PROMOTING_TO_STANDARD: "PROMOTING_TO_STANDARD";
  readonly STANDARD: "STANDARD";
};
export type PermissionFeatureSet =
  (typeof PermissionFeatureSet)[keyof typeof PermissionFeatureSet];
export declare const PermissionType: {
  readonly AWS_MANAGED: "AWS_MANAGED";
  readonly CUSTOMER_MANAGED: "CUSTOMER_MANAGED";
};
export type PermissionType =
  (typeof PermissionType)[keyof typeof PermissionType];
export interface ResourceSharePermissionSummary {
  arn?: string;
  version?: string;
  defaultVersion?: boolean;
  name?: string;
  resourceType?: string;
  status?: string;
  creationTime?: Date;
  lastUpdatedTime?: Date;
  isResourceTypeDefault?: boolean;
  permissionType?: PermissionType;
  featureSet?: PermissionFeatureSet;
  tags?: Tag[];
}
export interface CreatePermissionResponse {
  permission?: ResourceSharePermissionSummary;
  clientToken?: string;
}
export declare class InvalidPolicyException extends __BaseException {
  readonly name: "InvalidPolicyException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidPolicyException, __BaseException>
  );
}
export declare class MalformedPolicyTemplateException extends __BaseException {
  readonly name: "MalformedPolicyTemplateException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MalformedPolicyTemplateException,
      __BaseException
    >
  );
}
export declare class PermissionAlreadyExistsException extends __BaseException {
  readonly name: "PermissionAlreadyExistsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      PermissionAlreadyExistsException,
      __BaseException
    >
  );
}
export declare class PermissionLimitExceededException extends __BaseException {
  readonly name: "PermissionLimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      PermissionLimitExceededException,
      __BaseException
    >
  );
}
export interface CreatePermissionVersionRequest {
  permissionArn: string | undefined;
  policyTemplate: string | undefined;
  clientToken?: string;
}
export declare const PermissionStatus: {
  readonly ATTACHABLE: "ATTACHABLE";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly UNATTACHABLE: "UNATTACHABLE";
};
export type PermissionStatus =
  (typeof PermissionStatus)[keyof typeof PermissionStatus];
export interface ResourceSharePermissionDetail {
  arn?: string;
  version?: string;
  defaultVersion?: boolean;
  name?: string;
  resourceType?: string;
  permission?: string;
  creationTime?: Date;
  lastUpdatedTime?: Date;
  isResourceTypeDefault?: boolean;
  permissionType?: PermissionType;
  featureSet?: PermissionFeatureSet;
  status?: PermissionStatus;
  tags?: Tag[];
}
export interface CreatePermissionVersionResponse {
  permission?: ResourceSharePermissionDetail;
  clientToken?: string;
}
export declare class PermissionVersionsLimitExceededException extends __BaseException {
  readonly name: "PermissionVersionsLimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      PermissionVersionsLimitExceededException,
      __BaseException
    >
  );
}
export interface CreateResourceShareRequest {
  name: string | undefined;
  resourceArns?: string[];
  principals?: string[];
  tags?: Tag[];
  allowExternalPrincipals?: boolean;
  clientToken?: string;
  permissionArns?: string[];
  sources?: string[];
}
export declare const ResourceShareFeatureSet: {
  readonly CREATED_FROM_POLICY: "CREATED_FROM_POLICY";
  readonly PROMOTING_TO_STANDARD: "PROMOTING_TO_STANDARD";
  readonly STANDARD: "STANDARD";
};
export type ResourceShareFeatureSet =
  (typeof ResourceShareFeatureSet)[keyof typeof ResourceShareFeatureSet];
export declare const ResourceShareStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
};
export type ResourceShareStatus =
  (typeof ResourceShareStatus)[keyof typeof ResourceShareStatus];
export interface ResourceShare {
  resourceShareArn?: string;
  name?: string;
  owningAccountId?: string;
  allowExternalPrincipals?: boolean;
  status?: ResourceShareStatus;
  statusMessage?: string;
  tags?: Tag[];
  creationTime?: Date;
  lastUpdatedTime?: Date;
  featureSet?: ResourceShareFeatureSet;
}
export interface CreateResourceShareResponse {
  resourceShare?: ResourceShare;
  clientToken?: string;
}
export declare class TagLimitExceededException extends __BaseException {
  readonly name: "TagLimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TagLimitExceededException, __BaseException>
  );
}
export declare class TagPolicyViolationException extends __BaseException {
  readonly name: "TagPolicyViolationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TagPolicyViolationException, __BaseException>
  );
}
export interface DeletePermissionRequest {
  permissionArn: string | undefined;
  clientToken?: string;
}
export interface DeletePermissionResponse {
  returnValue?: boolean;
  clientToken?: string;
  permissionStatus?: PermissionStatus;
}
export interface DeletePermissionVersionRequest {
  permissionArn: string | undefined;
  permissionVersion: number | undefined;
  clientToken?: string;
}
export interface DeletePermissionVersionResponse {
  returnValue?: boolean;
  clientToken?: string;
  permissionStatus?: PermissionStatus;
}
export interface DeleteResourceShareRequest {
  resourceShareArn: string | undefined;
  clientToken?: string;
}
export interface DeleteResourceShareResponse {
  returnValue?: boolean;
  clientToken?: string;
}
export interface DisassociateResourceShareRequest {
  resourceShareArn: string | undefined;
  resourceArns?: string[];
  principals?: string[];
  clientToken?: string;
  sources?: string[];
}
export interface DisassociateResourceShareResponse {
  resourceShareAssociations?: ResourceShareAssociation[];
  clientToken?: string;
}
export interface DisassociateResourceSharePermissionRequest {
  resourceShareArn: string | undefined;
  permissionArn: string | undefined;
  clientToken?: string;
}
export interface DisassociateResourceSharePermissionResponse {
  returnValue?: boolean;
  clientToken?: string;
}
export interface EnableSharingWithAwsOrganizationRequest {}
export interface EnableSharingWithAwsOrganizationResponse {
  returnValue?: boolean;
}
export interface GetPermissionRequest {
  permissionArn: string | undefined;
  permissionVersion?: number;
}
export interface GetPermissionResponse {
  permission?: ResourceSharePermissionDetail;
}
export interface GetResourcePoliciesRequest {
  resourceArns: string[] | undefined;
  principal?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface GetResourcePoliciesResponse {
  policies?: string[];
  nextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export declare class ResourceArnNotFoundException extends __BaseException {
  readonly name: "ResourceArnNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceArnNotFoundException, __BaseException>
  );
}
export interface GetResourceShareAssociationsRequest {
  associationType: ResourceShareAssociationType | undefined;
  resourceShareArns?: string[];
  resourceArn?: string;
  principal?: string;
  associationStatus?: ResourceShareAssociationStatus;
  nextToken?: string;
  maxResults?: number;
}
export interface GetResourceShareAssociationsResponse {
  resourceShareAssociations?: ResourceShareAssociation[];
  nextToken?: string;
}
export interface GetResourceShareInvitationsRequest {
  resourceShareInvitationArns?: string[];
  resourceShareArns?: string[];
  nextToken?: string;
  maxResults?: number;
}
export interface GetResourceShareInvitationsResponse {
  resourceShareInvitations?: ResourceShareInvitation[];
  nextToken?: string;
}
export declare class InvalidMaxResultsException extends __BaseException {
  readonly name: "InvalidMaxResultsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidMaxResultsException, __BaseException>
  );
}
export declare const ResourceOwner: {
  readonly OTHER_ACCOUNTS: "OTHER-ACCOUNTS";
  readonly SELF: "SELF";
};
export type ResourceOwner = (typeof ResourceOwner)[keyof typeof ResourceOwner];
export interface TagFilter {
  tagKey?: string;
  tagValues?: string[];
}
export interface GetResourceSharesRequest {
  resourceShareArns?: string[];
  resourceShareStatus?: ResourceShareStatus;
  resourceOwner: ResourceOwner | undefined;
  name?: string;
  tagFilters?: TagFilter[];
  nextToken?: string;
  maxResults?: number;
  permissionArn?: string;
  permissionVersion?: number;
}
export interface GetResourceSharesResponse {
  resourceShares?: ResourceShare[];
  nextToken?: string;
}
export declare const ResourceRegionScopeFilter: {
  readonly ALL: "ALL";
  readonly GLOBAL: "GLOBAL";
  readonly REGIONAL: "REGIONAL";
};
export type ResourceRegionScopeFilter =
  (typeof ResourceRegionScopeFilter)[keyof typeof ResourceRegionScopeFilter];
export interface ListPendingInvitationResourcesRequest {
  resourceShareInvitationArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
  resourceRegionScope?: ResourceRegionScopeFilter;
}
export declare const ResourceRegionScope: {
  readonly GLOBAL: "GLOBAL";
  readonly REGIONAL: "REGIONAL";
};
export type ResourceRegionScope =
  (typeof ResourceRegionScope)[keyof typeof ResourceRegionScope];
export declare const ResourceStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly LIMIT_EXCEEDED: "LIMIT_EXCEEDED";
  readonly PENDING: "PENDING";
  readonly UNAVAILABLE: "UNAVAILABLE";
  readonly ZONAL_RESOURCE_INACCESSIBLE: "ZONAL_RESOURCE_INACCESSIBLE";
};
export type ResourceStatus =
  (typeof ResourceStatus)[keyof typeof ResourceStatus];
export interface Resource {
  arn?: string;
  type?: string;
  resourceShareArn?: string;
  resourceGroupArn?: string;
  status?: ResourceStatus;
  statusMessage?: string;
  creationTime?: Date;
  lastUpdatedTime?: Date;
  resourceRegionScope?: ResourceRegionScope;
}
export interface ListPendingInvitationResourcesResponse {
  resources?: Resource[];
  nextToken?: string;
}
export declare class MissingRequiredParameterException extends __BaseException {
  readonly name: "MissingRequiredParameterException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      MissingRequiredParameterException,
      __BaseException
    >
  );
}
export interface ListPermissionAssociationsRequest {
  permissionArn?: string;
  permissionVersion?: number;
  associationStatus?: ResourceShareAssociationStatus;
  resourceType?: string;
  featureSet?: PermissionFeatureSet;
  defaultVersion?: boolean;
  nextToken?: string;
  maxResults?: number;
}
export interface AssociatedPermission {
  arn?: string;
  permissionVersion?: string;
  defaultVersion?: boolean;
  resourceType?: string;
  status?: string;
  featureSet?: PermissionFeatureSet;
  lastUpdatedTime?: Date;
  resourceShareArn?: string;
}
export interface ListPermissionAssociationsResponse {
  permissions?: AssociatedPermission[];
  nextToken?: string;
}
export declare const PermissionTypeFilter: {
  readonly ALL: "ALL";
  readonly AWS_MANAGED: "AWS_MANAGED";
  readonly CUSTOMER_MANAGED: "CUSTOMER_MANAGED";
};
export type PermissionTypeFilter =
  (typeof PermissionTypeFilter)[keyof typeof PermissionTypeFilter];
export interface ListPermissionsRequest {
  resourceType?: string;
  nextToken?: string;
  maxResults?: number;
  permissionType?: PermissionTypeFilter;
}
export interface ListPermissionsResponse {
  permissions?: ResourceSharePermissionSummary[];
  nextToken?: string;
}
export interface ListPermissionVersionsRequest {
  permissionArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListPermissionVersionsResponse {
  permissions?: ResourceSharePermissionSummary[];
  nextToken?: string;
}
export interface ListPrincipalsRequest {
  resourceOwner: ResourceOwner | undefined;
  resourceArn?: string;
  principals?: string[];
  resourceType?: string;
  resourceShareArns?: string[];
  nextToken?: string;
  maxResults?: number;
}
export interface Principal {
  id?: string;
  resourceShareArn?: string;
  creationTime?: Date;
  lastUpdatedTime?: Date;
  external?: boolean;
}
export interface ListPrincipalsResponse {
  principals?: Principal[];
  nextToken?: string;
}
export declare const ReplacePermissionAssociationsWorkStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type ReplacePermissionAssociationsWorkStatus =
  (typeof ReplacePermissionAssociationsWorkStatus)[keyof typeof ReplacePermissionAssociationsWorkStatus];
export interface ListReplacePermissionAssociationsWorkRequest {
  workIds?: string[];
  status?: ReplacePermissionAssociationsWorkStatus;
  nextToken?: string;
  maxResults?: number;
}
export interface ReplacePermissionAssociationsWork {
  id?: string;
  fromPermissionArn?: string;
  fromPermissionVersion?: string;
  toPermissionArn?: string;
  toPermissionVersion?: string;
  status?: ReplacePermissionAssociationsWorkStatus;
  statusMessage?: string;
  creationTime?: Date;
  lastUpdatedTime?: Date;
}
export interface ListReplacePermissionAssociationsWorkResponse {
  replacePermissionAssociationsWorks?: ReplacePermissionAssociationsWork[];
  nextToken?: string;
}
export declare class InvalidResourceTypeException extends __BaseException {
  readonly name: "InvalidResourceTypeException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidResourceTypeException, __BaseException>
  );
}
export interface ListResourcesRequest {
  resourceOwner: ResourceOwner | undefined;
  principal?: string;
  resourceType?: string;
  resourceArns?: string[];
  resourceShareArns?: string[];
  nextToken?: string;
  maxResults?: number;
  resourceRegionScope?: ResourceRegionScopeFilter;
}
export interface ListResourcesResponse {
  resources?: Resource[];
  nextToken?: string;
}
export interface ListResourceSharePermissionsRequest {
  resourceShareArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListResourceSharePermissionsResponse {
  permissions?: ResourceSharePermissionSummary[];
  nextToken?: string;
}
export interface ListResourceTypesRequest {
  nextToken?: string;
  maxResults?: number;
  resourceRegionScope?: ResourceRegionScopeFilter;
}
export interface ServiceNameAndResourceType {
  resourceType?: string;
  serviceName?: string;
  resourceRegionScope?: ResourceRegionScope;
}
export interface ListResourceTypesResponse {
  resourceTypes?: ServiceNameAndResourceType[];
  nextToken?: string;
}
export interface PromotePermissionCreatedFromPolicyRequest {
  permissionArn: string | undefined;
  name: string | undefined;
  clientToken?: string;
}
export interface PromotePermissionCreatedFromPolicyResponse {
  permission?: ResourceSharePermissionSummary;
  clientToken?: string;
}
export interface PromoteResourceShareCreatedFromPolicyRequest {
  resourceShareArn: string | undefined;
}
export interface PromoteResourceShareCreatedFromPolicyResponse {
  returnValue?: boolean;
}
export declare class UnmatchedPolicyPermissionException extends __BaseException {
  readonly name: "UnmatchedPolicyPermissionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      UnmatchedPolicyPermissionException,
      __BaseException
    >
  );
}
export interface RejectResourceShareInvitationRequest {
  resourceShareInvitationArn: string | undefined;
  clientToken?: string;
}
export interface RejectResourceShareInvitationResponse {
  resourceShareInvitation?: ResourceShareInvitation;
  clientToken?: string;
}
export interface ReplacePermissionAssociationsRequest {
  fromPermissionArn: string | undefined;
  fromPermissionVersion?: number;
  toPermissionArn: string | undefined;
  clientToken?: string;
}
export interface ReplacePermissionAssociationsResponse {
  replacePermissionAssociationsWork?: ReplacePermissionAssociationsWork;
  clientToken?: string;
}
export interface SetDefaultPermissionVersionRequest {
  permissionArn: string | undefined;
  permissionVersion: number | undefined;
  clientToken?: string;
}
export interface SetDefaultPermissionVersionResponse {
  returnValue?: boolean;
  clientToken?: string;
}
export interface TagResourceRequest {
  resourceShareArn?: string;
  tags: Tag[] | undefined;
  resourceArn?: string;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceShareArn?: string;
  tagKeys: string[] | undefined;
  resourceArn?: string;
}
export interface UntagResourceResponse {}
export interface UpdateResourceShareRequest {
  resourceShareArn: string | undefined;
  name?: string;
  allowExternalPrincipals?: boolean;
  clientToken?: string;
}
export interface UpdateResourceShareResponse {
  resourceShare?: ResourceShare;
  clientToken?: string;
}
