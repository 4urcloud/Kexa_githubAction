"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AssociationType: () => AssociationType,
  Braket: () => Braket,
  BraketClient: () => BraketClient,
  BraketServiceException: () => BraketServiceException,
  CancelJobCommand: () => CancelJobCommand,
  CancelQuantumTaskCommand: () => CancelQuantumTaskCommand,
  CancellationStatus: () => CancellationStatus,
  CompressionType: () => CompressionType,
  ConflictException: () => ConflictException,
  CreateJobCommand: () => CreateJobCommand,
  CreateQuantumTaskCommand: () => CreateQuantumTaskCommand,
  DeviceOfflineException: () => DeviceOfflineException,
  DeviceRetiredException: () => DeviceRetiredException,
  DeviceStatus: () => DeviceStatus,
  DeviceType: () => DeviceType,
  GetDeviceCommand: () => GetDeviceCommand,
  GetJobCommand: () => GetJobCommand,
  GetQuantumTaskCommand: () => GetQuantumTaskCommand,
  HybridJobAdditionalAttributeName: () => HybridJobAdditionalAttributeName,
  InternalServiceException: () => InternalServiceException,
  JobEventType: () => JobEventType,
  JobPrimaryStatus: () => JobPrimaryStatus,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  QuantumTaskAdditionalAttributeName: () => QuantumTaskAdditionalAttributeName,
  QuantumTaskStatus: () => QuantumTaskStatus,
  QueueName: () => QueueName,
  QueuePriority: () => QueuePriority,
  ResourceNotFoundException: () => ResourceNotFoundException,
  SearchDevicesCommand: () => SearchDevicesCommand,
  SearchJobsCommand: () => SearchJobsCommand,
  SearchJobsFilterOperator: () => SearchJobsFilterOperator,
  SearchQuantumTasksCommand: () => SearchQuantumTasksCommand,
  SearchQuantumTasksFilterOperator: () => SearchQuantumTasksFilterOperator,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  ValidationException: () => ValidationException,
  _InstanceType: () => _InstanceType,
  __Client: () => import_smithy_client.Client,
  paginateSearchDevices: () => paginateSearchDevices,
  paginateSearchJobs: () => paginateSearchJobs,
  paginateSearchQuantumTasks: () => paginateSearchQuantumTasks
});
module.exports = __toCommonJS(src_exports);

// src/BraketClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "braket"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/BraketClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/BraketClient.ts
var _BraketClient = class _BraketClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultBraketHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_BraketClient, "BraketClient");
var BraketClient = _BraketClient;

// src/Braket.ts


// src/commands/CancelJobCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/BraketServiceException.ts

var _BraketServiceException = class _BraketServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _BraketServiceException.prototype);
  }
};
__name(_BraketServiceException, "BraketServiceException");
var BraketServiceException = _BraketServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var CompressionType = {
  GZIP: "GZIP",
  NONE: "NONE"
};
var AssociationType = {
  RESERVATION_TIME_WINDOW_ARN: "RESERVATION_TIME_WINDOW_ARN"
};
var QueueName = {
  JOBS_QUEUE: "JOBS_QUEUE",
  QUANTUM_TASKS_QUEUE: "QUANTUM_TASKS_QUEUE"
};
var QueuePriority = {
  NORMAL: "Normal",
  PRIORITY: "Priority"
};
var DeviceStatus = {
  OFFLINE: "OFFLINE",
  ONLINE: "ONLINE",
  RETIRED: "RETIRED"
};
var DeviceType = {
  QPU: "QPU",
  SIMULATOR: "SIMULATOR"
};
var _InternalServiceException = class _InternalServiceException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServiceException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServiceException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServiceException.prototype);
  }
};
__name(_InternalServiceException, "InternalServiceException");
var InternalServiceException = _InternalServiceException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ThrottlingException = class _ThrottlingException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var CancellationStatus = {
  CANCELLED: "CANCELLED",
  CANCELLING: "CANCELLING"
};
var _ConflictException = class _ConflictException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InstanceType = {
  ML_C4_2XLARGE: "ml.c4.2xlarge",
  ML_C4_4XLARGE: "ml.c4.4xlarge",
  ML_C4_8XLARGE: "ml.c4.8xlarge",
  ML_C4_XLARGE: "ml.c4.xlarge",
  ML_C5N_18XLARGE: "ml.c5n.18xlarge",
  ML_C5N_2XLARGE: "ml.c5n.2xlarge",
  ML_C5N_4XLARGE: "ml.c5n.4xlarge",
  ML_C5N_9XLARGE: "ml.c5n.9xlarge",
  ML_C5N_XLARGE: "ml.c5n.xlarge",
  ML_C5_18XLARGE: "ml.c5.18xlarge",
  ML_C5_2XLARGE: "ml.c5.2xlarge",
  ML_C5_4XLARGE: "ml.c5.4xlarge",
  ML_C5_9XLARGE: "ml.c5.9xlarge",
  ML_C5_XLARGE: "ml.c5.xlarge",
  ML_G4DN_12XLARGE: "ml.g4dn.12xlarge",
  ML_G4DN_16XLARGE: "ml.g4dn.16xlarge",
  ML_G4DN_2XLARGE: "ml.g4dn.2xlarge",
  ML_G4DN_4XLARGE: "ml.g4dn.4xlarge",
  ML_G4DN_8XLARGE: "ml.g4dn.8xlarge",
  ML_G4DN_XLARGE: "ml.g4dn.xlarge",
  ML_M4_10XLARGE: "ml.m4.10xlarge",
  ML_M4_16XLARGE: "ml.m4.16xlarge",
  ML_M4_2XLARGE: "ml.m4.2xlarge",
  ML_M4_4XLARGE: "ml.m4.4xlarge",
  ML_M4_XLARGE: "ml.m4.xlarge",
  ML_M5_12XLARGE: "ml.m5.12xlarge",
  ML_M5_24XLARGE: "ml.m5.24xlarge",
  ML_M5_2XLARGE: "ml.m5.2xlarge",
  ML_M5_4XLARGE: "ml.m5.4xlarge",
  ML_M5_LARGE: "ml.m5.large",
  ML_M5_XLARGE: "ml.m5.xlarge",
  ML_P2_16XLARGE: "ml.p2.16xlarge",
  ML_P2_8XLARGE: "ml.p2.8xlarge",
  ML_P2_XLARGE: "ml.p2.xlarge",
  ML_P3DN_24XLARGE: "ml.p3dn.24xlarge",
  ML_P3_16XLARGE: "ml.p3.16xlarge",
  ML_P3_2XLARGE: "ml.p3.2xlarge",
  ML_P3_8XLARGE: "ml.p3.8xlarge",
  ML_P4D_24XLARGE: "ml.p4d.24xlarge"
};
var _DeviceOfflineException = class _DeviceOfflineException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DeviceOfflineException",
      $fault: "client",
      ...opts
    });
    this.name = "DeviceOfflineException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DeviceOfflineException.prototype);
  }
};
__name(_DeviceOfflineException, "DeviceOfflineException");
var DeviceOfflineException = _DeviceOfflineException;
var _DeviceRetiredException = class _DeviceRetiredException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DeviceRetiredException",
      $fault: "client",
      ...opts
    });
    this.name = "DeviceRetiredException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DeviceRetiredException.prototype);
  }
};
__name(_DeviceRetiredException, "DeviceRetiredException");
var DeviceRetiredException = _DeviceRetiredException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends BraketServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var HybridJobAdditionalAttributeName = {
  QUEUE_INFO: "QueueInfo"
};
var JobEventType = {
  CANCELLED: "CANCELLED",
  COMPLETED: "COMPLETED",
  DEPRIORITIZED_DUE_TO_INACTIVITY: "DEPRIORITIZED_DUE_TO_INACTIVITY",
  DOWNLOADING_DATA: "DOWNLOADING_DATA",
  FAILED: "FAILED",
  MAX_RUNTIME_EXCEEDED: "MAX_RUNTIME_EXCEEDED",
  QUEUED_FOR_EXECUTION: "QUEUED_FOR_EXECUTION",
  RUNNING: "RUNNING",
  STARTING_INSTANCE: "STARTING_INSTANCE",
  UPLOADING_RESULTS: "UPLOADING_RESULTS",
  WAITING_FOR_PRIORITY: "WAITING_FOR_PRIORITY"
};
var JobPrimaryStatus = {
  CANCELLED: "CANCELLED",
  CANCELLING: "CANCELLING",
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  QUEUED: "QUEUED",
  RUNNING: "RUNNING"
};
var SearchJobsFilterOperator = {
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  EQUAL: "EQUAL",
  GT: "GT",
  GTE: "GTE",
  LT: "LT",
  LTE: "LTE"
};
var QuantumTaskAdditionalAttributeName = {
  QUEUE_INFO: "QueueInfo"
};
var QuantumTaskStatus = {
  CANCELLED: "CANCELLED",
  CANCELLING: "CANCELLING",
  COMPLETED: "COMPLETED",
  CREATED: "CREATED",
  FAILED: "FAILED",
  QUEUED: "QUEUED",
  RUNNING: "RUNNING"
};
var SearchQuantumTasksFilterOperator = {
  BETWEEN: "BETWEEN",
  EQUAL: "EQUAL",
  GT: "GT",
  GTE: "GTE",
  LT: "LT",
  LTE: "LTE"
};

// src/protocols/Aws_restJson1.ts
var se_CancelJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/job/{jobArn}/cancel");
  b.p("jobArn", () => input.jobArn, "{jobArn}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CancelJobCommand");
var se_CancelQuantumTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/quantum-task/{quantumTaskArn}/cancel");
  b.p("quantumTaskArn", () => input.quantumTaskArn, "{quantumTaskArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CancelQuantumTaskCommand");
var se_CreateJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/job");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      algorithmSpecification: (_) => (0, import_smithy_client._json)(_),
      associations: (_) => (0, import_smithy_client._json)(_),
      checkpointConfig: (_) => (0, import_smithy_client._json)(_),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      deviceConfig: (_) => (0, import_smithy_client._json)(_),
      hyperParameters: (_) => (0, import_smithy_client._json)(_),
      inputDataConfig: (_) => (0, import_smithy_client._json)(_),
      instanceConfig: (_) => (0, import_smithy_client._json)(_),
      jobName: [],
      outputDataConfig: (_) => (0, import_smithy_client._json)(_),
      roleArn: [],
      stoppingCondition: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateJobCommand");
var se_CreateQuantumTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/quantum-task");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      action: (_) => import_smithy_client.LazyJsonString.fromObject(_),
      associations: (_) => (0, import_smithy_client._json)(_),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      deviceArn: [],
      deviceParameters: (_) => import_smithy_client.LazyJsonString.fromObject(_),
      jobToken: [],
      outputS3Bucket: [],
      outputS3KeyPrefix: [],
      shots: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateQuantumTaskCommand");
var se_GetDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/device/{deviceArn}");
  b.p("deviceArn", () => input.deviceArn, "{deviceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDeviceCommand");
var se_GetJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/job/{jobArn}");
  b.p("jobArn", () => input.jobArn, "{jobArn}", false);
  const query = (0, import_smithy_client.map)({
    [_aAN]: [
      () => input.additionalAttributeNames !== void 0,
      () => (input[_aAN] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetJobCommand");
var se_GetQuantumTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/quantum-task/{quantumTaskArn}");
  b.p("quantumTaskArn", () => input.quantumTaskArn, "{quantumTaskArn}", false);
  const query = (0, import_smithy_client.map)({
    [_aAN]: [
      () => input.additionalAttributeNames !== void 0,
      () => (input[_aAN] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetQuantumTaskCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_SearchDevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/devices");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SearchDevicesCommand");
var se_SearchJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/jobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SearchJobsCommand");
var se_SearchQuantumTasksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/quantum-tasks");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SearchQuantumTasksCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var de_CancelJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    cancellationStatus: import_smithy_client.expectString,
    jobArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelJobCommand");
var de_CancelQuantumTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    cancellationStatus: import_smithy_client.expectString,
    quantumTaskArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelQuantumTaskCommand");
var de_CreateJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateJobCommand");
var de_CreateQuantumTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    quantumTaskArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateQuantumTaskCommand");
var de_GetDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    deviceArn: import_smithy_client.expectString,
    deviceCapabilities: (_) => new import_smithy_client.LazyJsonString(_),
    deviceName: import_smithy_client.expectString,
    deviceQueueInfo: import_smithy_client._json,
    deviceStatus: import_smithy_client.expectString,
    deviceType: import_smithy_client.expectString,
    providerName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDeviceCommand");
var de_GetJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    algorithmSpecification: import_smithy_client._json,
    associations: import_smithy_client._json,
    billableDuration: import_smithy_client.expectInt32,
    checkpointConfig: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    deviceConfig: import_smithy_client._json,
    endedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    events: (_) => de_JobEvents(_, context),
    failureReason: import_smithy_client.expectString,
    hyperParameters: import_smithy_client._json,
    inputDataConfig: import_smithy_client._json,
    instanceConfig: import_smithy_client._json,
    jobArn: import_smithy_client.expectString,
    jobName: import_smithy_client.expectString,
    outputDataConfig: import_smithy_client._json,
    queueInfo: import_smithy_client._json,
    roleArn: import_smithy_client.expectString,
    startedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    status: import_smithy_client.expectString,
    stoppingCondition: import_smithy_client._json,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetJobCommand");
var de_GetQuantumTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associations: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    deviceArn: import_smithy_client.expectString,
    deviceParameters: (_) => new import_smithy_client.LazyJsonString(_),
    endedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    failureReason: import_smithy_client.expectString,
    jobArn: import_smithy_client.expectString,
    outputS3Bucket: import_smithy_client.expectString,
    outputS3Directory: import_smithy_client.expectString,
    quantumTaskArn: import_smithy_client.expectString,
    queueInfo: import_smithy_client._json,
    shots: import_smithy_client.expectLong,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetQuantumTaskCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_SearchDevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    devices: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchDevicesCommand");
var de_SearchJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobs: (_) => de_JobSummaryList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchJobsCommand");
var de_SearchQuantumTasksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    quantumTasks: (_) => de_QuantumTaskSummaryList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchQuantumTasksCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.braket#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.braket#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServiceException":
    case "com.amazonaws.braket#InternalServiceException":
      throw await de_InternalServiceExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.braket#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.braket#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.braket#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "DeviceOfflineException":
    case "com.amazonaws.braket#DeviceOfflineException":
      throw await de_DeviceOfflineExceptionRes(parsedOutput, context);
    case "DeviceRetiredException":
    case "com.amazonaws.braket#DeviceRetiredException":
      throw await de_DeviceRetiredExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.braket#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(BraketServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_DeviceOfflineExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DeviceOfflineException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DeviceOfflineExceptionRes");
var de_DeviceRetiredExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DeviceRetiredException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DeviceRetiredExceptionRes");
var de_InternalServiceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServiceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServiceExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_JobEventDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    eventType: import_smithy_client.expectString,
    message: import_smithy_client.expectString,
    timeOfEvent: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_JobEventDetails");
var de_JobEvents = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JobEventDetails(entry, context);
  });
  return retVal;
}, "de_JobEvents");
var de_JobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    device: import_smithy_client.expectString,
    endedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    jobArn: import_smithy_client.expectString,
    jobName: import_smithy_client.expectString,
    startedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_JobSummary");
var de_JobSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JobSummary(entry, context);
  });
  return retVal;
}, "de_JobSummaryList");
var de_QuantumTaskSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    deviceArn: import_smithy_client.expectString,
    endedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    outputS3Bucket: import_smithy_client.expectString,
    outputS3Directory: import_smithy_client.expectString,
    quantumTaskArn: import_smithy_client.expectString,
    shots: import_smithy_client.expectLong,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_QuantumTaskSummary");
var de_QuantumTaskSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_QuantumTaskSummary(entry, context);
  });
  return retVal;
}, "de_QuantumTaskSummaryList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _aAN = "additionalAttributeNames";
var _tK = "tagKeys";

// src/commands/CancelJobCommand.ts
var _CancelJobCommand = class _CancelJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "CancelJob", {}).n("BraketClient", "CancelJobCommand").f(void 0, void 0).ser(se_CancelJobCommand).de(de_CancelJobCommand).build() {
};
__name(_CancelJobCommand, "CancelJobCommand");
var CancelJobCommand = _CancelJobCommand;

// src/commands/CancelQuantumTaskCommand.ts




var _CancelQuantumTaskCommand = class _CancelQuantumTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "CancelQuantumTask", {}).n("BraketClient", "CancelQuantumTaskCommand").f(void 0, void 0).ser(se_CancelQuantumTaskCommand).de(de_CancelQuantumTaskCommand).build() {
};
__name(_CancelQuantumTaskCommand, "CancelQuantumTaskCommand");
var CancelQuantumTaskCommand = _CancelQuantumTaskCommand;

// src/commands/CreateJobCommand.ts




var _CreateJobCommand = class _CreateJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "CreateJob", {}).n("BraketClient", "CreateJobCommand").f(void 0, void 0).ser(se_CreateJobCommand).de(de_CreateJobCommand).build() {
};
__name(_CreateJobCommand, "CreateJobCommand");
var CreateJobCommand = _CreateJobCommand;

// src/commands/CreateQuantumTaskCommand.ts




var _CreateQuantumTaskCommand = class _CreateQuantumTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "CreateQuantumTask", {}).n("BraketClient", "CreateQuantumTaskCommand").f(void 0, void 0).ser(se_CreateQuantumTaskCommand).de(de_CreateQuantumTaskCommand).build() {
};
__name(_CreateQuantumTaskCommand, "CreateQuantumTaskCommand");
var CreateQuantumTaskCommand = _CreateQuantumTaskCommand;

// src/commands/GetDeviceCommand.ts




var _GetDeviceCommand = class _GetDeviceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "GetDevice", {}).n("BraketClient", "GetDeviceCommand").f(void 0, void 0).ser(se_GetDeviceCommand).de(de_GetDeviceCommand).build() {
};
__name(_GetDeviceCommand, "GetDeviceCommand");
var GetDeviceCommand = _GetDeviceCommand;

// src/commands/GetJobCommand.ts




var _GetJobCommand = class _GetJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "GetJob", {}).n("BraketClient", "GetJobCommand").f(void 0, void 0).ser(se_GetJobCommand).de(de_GetJobCommand).build() {
};
__name(_GetJobCommand, "GetJobCommand");
var GetJobCommand = _GetJobCommand;

// src/commands/GetQuantumTaskCommand.ts




var _GetQuantumTaskCommand = class _GetQuantumTaskCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "GetQuantumTask", {}).n("BraketClient", "GetQuantumTaskCommand").f(void 0, void 0).ser(se_GetQuantumTaskCommand).de(de_GetQuantumTaskCommand).build() {
};
__name(_GetQuantumTaskCommand, "GetQuantumTaskCommand");
var GetQuantumTaskCommand = _GetQuantumTaskCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "ListTagsForResource", {}).n("BraketClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/SearchDevicesCommand.ts




var _SearchDevicesCommand = class _SearchDevicesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "SearchDevices", {}).n("BraketClient", "SearchDevicesCommand").f(void 0, void 0).ser(se_SearchDevicesCommand).de(de_SearchDevicesCommand).build() {
};
__name(_SearchDevicesCommand, "SearchDevicesCommand");
var SearchDevicesCommand = _SearchDevicesCommand;

// src/commands/SearchJobsCommand.ts




var _SearchJobsCommand = class _SearchJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "SearchJobs", {}).n("BraketClient", "SearchJobsCommand").f(void 0, void 0).ser(se_SearchJobsCommand).de(de_SearchJobsCommand).build() {
};
__name(_SearchJobsCommand, "SearchJobsCommand");
var SearchJobsCommand = _SearchJobsCommand;

// src/commands/SearchQuantumTasksCommand.ts




var _SearchQuantumTasksCommand = class _SearchQuantumTasksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "SearchQuantumTasks", {}).n("BraketClient", "SearchQuantumTasksCommand").f(void 0, void 0).ser(se_SearchQuantumTasksCommand).de(de_SearchQuantumTasksCommand).build() {
};
__name(_SearchQuantumTasksCommand, "SearchQuantumTasksCommand");
var SearchQuantumTasksCommand = _SearchQuantumTasksCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "TagResource", {}).n("BraketClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Braket", "UntagResource", {}).n("BraketClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/Braket.ts
var commands = {
  CancelJobCommand,
  CancelQuantumTaskCommand,
  CreateJobCommand,
  CreateQuantumTaskCommand,
  GetDeviceCommand,
  GetJobCommand,
  GetQuantumTaskCommand,
  ListTagsForResourceCommand,
  SearchDevicesCommand,
  SearchJobsCommand,
  SearchQuantumTasksCommand,
  TagResourceCommand,
  UntagResourceCommand
};
var _Braket = class _Braket extends BraketClient {
};
__name(_Braket, "Braket");
var Braket = _Braket;
(0, import_smithy_client.createAggregatedClient)(commands, Braket);

// src/pagination/SearchDevicesPaginator.ts

var paginateSearchDevices = (0, import_core.createPaginator)(BraketClient, SearchDevicesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/SearchJobsPaginator.ts

var paginateSearchJobs = (0, import_core.createPaginator)(BraketClient, SearchJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/SearchQuantumTasksPaginator.ts

var paginateSearchQuantumTasks = (0, import_core.createPaginator)(BraketClient, SearchQuantumTasksCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  BraketServiceException,
  __Client,
  BraketClient,
  Braket,
  $Command,
  CancelJobCommand,
  CancelQuantumTaskCommand,
  CreateJobCommand,
  CreateQuantumTaskCommand,
  GetDeviceCommand,
  GetJobCommand,
  GetQuantumTaskCommand,
  ListTagsForResourceCommand,
  SearchDevicesCommand,
  SearchJobsCommand,
  SearchQuantumTasksCommand,
  TagResourceCommand,
  UntagResourceCommand,
  paginateSearchDevices,
  paginateSearchJobs,
  paginateSearchQuantumTasks,
  AccessDeniedException,
  CompressionType,
  AssociationType,
  QueueName,
  QueuePriority,
  DeviceStatus,
  DeviceType,
  InternalServiceException,
  ResourceNotFoundException,
  ThrottlingException,
  ValidationException,
  CancellationStatus,
  ConflictException,
  _InstanceType,
  DeviceOfflineException,
  DeviceRetiredException,
  ServiceQuotaExceededException,
  HybridJobAdditionalAttributeName,
  JobEventType,
  JobPrimaryStatus,
  SearchJobsFilterOperator,
  QuantumTaskAdditionalAttributeName,
  QuantumTaskStatus,
  SearchQuantumTasksFilterOperator
});

