import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ResiliencehubServiceException as __BaseException } from "./ResiliencehubServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const ResourceMappingType = {
    APP_REGISTRY_APP: "AppRegistryApp",
    CFN_STACK: "CfnStack",
    EKS: "EKS",
    RESOURCE: "Resource",
    RESOURCE_GROUP: "ResourceGroup",
    TERRAFORM: "Terraform",
};
export const PhysicalIdentifierType = {
    ARN: "Arn",
    NATIVE: "Native",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.retryAfterSeconds = opts.retryAfterSeconds;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const ExcludeRecommendationReason = {
    ALREADY_IMPLEMENTED: "AlreadyImplemented",
    COMPLEXITY_OF_IMPLEMENTATION: "ComplexityOfImplementation",
    NOT_RELEVANT: "NotRelevant",
};
export const RecommendationStatus = {
    EXCLUDED: "Excluded",
    IMPLEMENTED: "Implemented",
    INACTIVE: "Inactive",
    NOT_IMPLEMENTED: "NotImplemented",
};
export const AlarmType = {
    CANARY: "Canary",
    COMPOSITE: "Composite",
    EVENT: "Event",
    LOGS: "Logs",
    METRIC: "Metric",
};
export const AppAssessmentScheduleType = {
    DAILY: "Daily",
    DISABLED: "Disabled",
};
export const AppComplianceStatusType = {
    CHANGES_DETECTED: "ChangesDetected",
    NOT_ASSESSED: "NotAssessed",
    POLICY_BREACHED: "PolicyBreached",
    POLICY_MET: "PolicyMet",
};
export const AppDriftStatusType = {
    DETECTED: "Detected",
    NOT_CHECKED: "NotChecked",
    NOT_DETECTED: "NotDetected",
};
export const EventType = {
    DRIFT_DETECTED: "DriftDetected",
    SCHEDULED_ASSESSMENT_FAILURE: "ScheduledAssessmentFailure",
};
export const PermissionModelType = {
    LEGACY_IAM_USER: "LegacyIAMUser",
    ROLE_BASED: "RoleBased",
};
export const AppStatusType = {
    ACTIVE: "Active",
    DELETING: "Deleting",
};
export const AssessmentStatus = {
    FAILED: "Failed",
    INPROGRESS: "InProgress",
    PENDING: "Pending",
    SUCCESS: "Success",
};
export const DisruptionType = {
    AZ: "AZ",
    HARDWARE: "Hardware",
    REGION: "Region",
    SOFTWARE: "Software",
};
export const ComplianceStatus = {
    POLICY_BREACHED: "PolicyBreached",
    POLICY_MET: "PolicyMet",
};
export const CostFrequency = {
    DAILY: "Daily",
    HOURLY: "Hourly",
    MONTHLY: "Monthly",
    YEARLY: "Yearly",
};
export const DriftStatus = {
    DETECTED: "Detected",
    NOT_CHECKED: "NotChecked",
    NOT_DETECTED: "NotDetected",
};
export const AssessmentInvoker = {
    SYSTEM: "System",
    USER: "User",
};
export const DataLocationConstraint = {
    ANY_LOCATION: "AnyLocation",
    SAME_CONTINENT: "SameContinent",
    SAME_COUNTRY: "SameCountry",
};
export const EstimatedCostTier = {
    L1: "L1",
    L2: "L2",
    L3: "L3",
    L4: "L4",
};
export const ResiliencyPolicyTier = {
    CORE_SERVICES: "CoreServices",
    CRITICAL: "Critical",
    IMPORTANT: "Important",
    MISSION_CRITICAL: "MissionCritical",
    NON_CRITICAL: "NonCritical",
    NOT_APPLICABLE: "NotApplicable",
};
export const ResiliencyScoreType = {
    ALARM: "Alarm",
    COMPLIANCE: "Compliance",
    SOP: "Sop",
    TEST: "Test",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
export const ResourceSourceType = {
    APP_TEMPLATE: "AppTemplate",
    DISCOVERED: "Discovered",
};
export const TemplateFormat = {
    CFN_JSON: "CfnJson",
    CFN_YAML: "CfnYaml",
};
export const RenderRecommendationType = {
    ALARM: "Alarm",
    SOP: "Sop",
    TEST: "Test",
};
export const RecommendationTemplateStatus = {
    FAILED: "Failed",
    IN_PROGRESS: "InProgress",
    PENDING: "Pending",
    SUCCESS: "Success",
};
export const ResourceResolutionStatusType = {
    FAILED: "Failed",
    IN_PROGRESS: "InProgress",
    PENDING: "Pending",
    SUCCESS: "Success",
};
export const ResourceImportStatusType = {
    FAILED: "Failed",
    IN_PROGRESS: "InProgress",
    PENDING: "Pending",
    SUCCESS: "Success",
};
export const ResourceImportStrategyType = {
    ADD_ONLY: "AddOnly",
    REPLACE_ALL: "ReplaceAll",
};
export const DifferenceType = {
    NOT_EQUAL: "NotEqual",
};
export const DriftType = {
    APPLICATION_COMPLIANCE: "ApplicationCompliance",
};
export const HaArchitecture = {
    BACKUP_AND_RESTORE: "BackupAndRestore",
    MULTI_SITE: "MultiSite",
    NO_RECOVERY_PLAN: "NoRecoveryPlan",
    PILOT_LIGHT: "PilotLight",
    WARM_STANDBY: "WarmStandby",
};
export const ConfigRecommendationOptimizationType = {
    BEST_ATTAINABLE: "BestAttainable",
    BEST_AZ_RECOVERY: "BestAZRecovery",
    BEST_REGION_RECOVERY: "BestRegionRecovery",
    LEAST_CHANGE: "LeastChange",
    LEAST_COST: "LeastCost",
    LEAST_ERRORS: "LeastErrors",
};
export const RecommendationComplianceStatus = {
    BREACHED_CAN_MEET: "BreachedCanMeet",
    BREACHED_UNATTAINABLE: "BreachedUnattainable",
    MET_CAN_IMPROVE: "MetCanImprove",
};
export const SopServiceType = {
    SSM: "SSM",
};
export const TestRisk = {
    HIGH: "High",
    MEDIUM: "Medium",
    SMALL: "Small",
};
export const TestType = {
    AZ: "AZ",
    HARDWARE: "Hardware",
    REGION: "Region",
    SOFTWARE: "Software",
};
export const AppFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const ResiliencyPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const AppAssessmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.policy && { policy: ResiliencyPolicyFilterSensitiveLog(obj.policy) }),
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreateAppRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreateAppResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const CreateRecommendationTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const RecommendationTemplateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreateRecommendationTemplateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.recommendationTemplate && {
        recommendationTemplate: RecommendationTemplateFilterSensitiveLog(obj.recommendationTemplate),
    }),
});
export const CreateResiliencyPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreateResiliencyPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.policy && { policy: ResiliencyPolicyFilterSensitiveLog(obj.policy) }),
});
export const DescribeAppResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const DescribeAppAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessment && { assessment: AppAssessmentFilterSensitiveLog(obj.assessment) }),
});
export const DescribeResiliencyPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.policy && { policy: ResiliencyPolicyFilterSensitiveLog(obj.policy) }),
});
export const ListRecommendationTemplatesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.recommendationTemplates && {
        recommendationTemplates: obj.recommendationTemplates.map((item) => RecommendationTemplateFilterSensitiveLog(item)),
    }),
});
export const ListResiliencyPoliciesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.resiliencyPolicies && {
        resiliencyPolicies: obj.resiliencyPolicies.map((item) => ResiliencyPolicyFilterSensitiveLog(item)),
    }),
});
export const ListSuggestedResiliencyPoliciesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.resiliencyPolicies && {
        resiliencyPolicies: obj.resiliencyPolicies.map((item) => ResiliencyPolicyFilterSensitiveLog(item)),
    }),
});
export const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const StartAppAssessmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const StartAppAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessment && { assessment: AppAssessmentFilterSensitiveLog(obj.assessment) }),
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tagKeys && { tagKeys: SENSITIVE_STRING }),
});
export const UpdateAppResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const UpdateResiliencyPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.policy && { policy: ResiliencyPolicyFilterSensitiveLog(obj.policy) }),
});
