import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ResiliencehubServiceException as __BaseException } from "./ResiliencehubServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const ResourceMappingType: {
  readonly APP_REGISTRY_APP: "AppRegistryApp";
  readonly CFN_STACK: "CfnStack";
  readonly EKS: "EKS";
  readonly RESOURCE: "Resource";
  readonly RESOURCE_GROUP: "ResourceGroup";
  readonly TERRAFORM: "Terraform";
};
export type ResourceMappingType =
  (typeof ResourceMappingType)[keyof typeof ResourceMappingType];
export declare const PhysicalIdentifierType: {
  readonly ARN: "Arn";
  readonly NATIVE: "Native";
};
export type PhysicalIdentifierType =
  (typeof PhysicalIdentifierType)[keyof typeof PhysicalIdentifierType];
export interface PhysicalResourceId {
  identifier: string | undefined;
  type: PhysicalIdentifierType | undefined;
  awsRegion?: string;
  awsAccountId?: string;
}
export interface ResourceMapping {
  resourceName?: string;
  logicalStackName?: string;
  appRegistryAppName?: string;
  resourceGroupName?: string;
  mappingType: ResourceMappingType | undefined;
  physicalResourceId: PhysicalResourceId | undefined;
  terraformSourceName?: string;
  eksSourceName?: string;
}
export interface AddDraftAppVersionResourceMappingsRequest {
  appArn: string | undefined;
  resourceMappings: ResourceMapping[] | undefined;
}
export interface AddDraftAppVersionResourceMappingsResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  resourceMappings: ResourceMapping[] | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  resourceId?: string;
  resourceType?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  resourceId?: string;
  resourceType?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  retryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare const ExcludeRecommendationReason: {
  readonly ALREADY_IMPLEMENTED: "AlreadyImplemented";
  readonly COMPLEXITY_OF_IMPLEMENTATION: "ComplexityOfImplementation";
  readonly NOT_RELEVANT: "NotRelevant";
};
export type ExcludeRecommendationReason =
  (typeof ExcludeRecommendationReason)[keyof typeof ExcludeRecommendationReason];
export interface RecommendationItem {
  resourceId?: string;
  targetAccountId?: string;
  targetRegion?: string;
  alreadyImplemented?: boolean;
  excluded?: boolean;
  excludeReason?: ExcludeRecommendationReason;
}
export declare const RecommendationStatus: {
  readonly EXCLUDED: "Excluded";
  readonly IMPLEMENTED: "Implemented";
  readonly INACTIVE: "Inactive";
  readonly NOT_IMPLEMENTED: "NotImplemented";
};
export type RecommendationStatus =
  (typeof RecommendationStatus)[keyof typeof RecommendationStatus];
export declare const AlarmType: {
  readonly CANARY: "Canary";
  readonly COMPOSITE: "Composite";
  readonly EVENT: "Event";
  readonly LOGS: "Logs";
  readonly METRIC: "Metric";
};
export type AlarmType = (typeof AlarmType)[keyof typeof AlarmType];
export interface AlarmRecommendation {
  recommendationId: string | undefined;
  referenceId: string | undefined;
  name: string | undefined;
  description?: string;
  type: AlarmType | undefined;
  appComponentName?: string;
  items?: RecommendationItem[];
  prerequisite?: string;
  appComponentNames?: string[];
  recommendationStatus?: RecommendationStatus;
}
export declare const AppAssessmentScheduleType: {
  readonly DAILY: "Daily";
  readonly DISABLED: "Disabled";
};
export type AppAssessmentScheduleType =
  (typeof AppAssessmentScheduleType)[keyof typeof AppAssessmentScheduleType];
export declare const AppComplianceStatusType: {
  readonly CHANGES_DETECTED: "ChangesDetected";
  readonly NOT_ASSESSED: "NotAssessed";
  readonly POLICY_BREACHED: "PolicyBreached";
  readonly POLICY_MET: "PolicyMet";
};
export type AppComplianceStatusType =
  (typeof AppComplianceStatusType)[keyof typeof AppComplianceStatusType];
export declare const AppDriftStatusType: {
  readonly DETECTED: "Detected";
  readonly NOT_CHECKED: "NotChecked";
  readonly NOT_DETECTED: "NotDetected";
};
export type AppDriftStatusType =
  (typeof AppDriftStatusType)[keyof typeof AppDriftStatusType];
export declare const EventType: {
  readonly DRIFT_DETECTED: "DriftDetected";
  readonly SCHEDULED_ASSESSMENT_FAILURE: "ScheduledAssessmentFailure";
};
export type EventType = (typeof EventType)[keyof typeof EventType];
export interface EventSubscription {
  name: string | undefined;
  eventType: EventType | undefined;
  snsTopicArn?: string;
}
export declare const PermissionModelType: {
  readonly LEGACY_IAM_USER: "LegacyIAMUser";
  readonly ROLE_BASED: "RoleBased";
};
export type PermissionModelType =
  (typeof PermissionModelType)[keyof typeof PermissionModelType];
export interface PermissionModel {
  type: PermissionModelType | undefined;
  invokerRoleName?: string;
  crossAccountRoleArns?: string[];
}
export declare const AppStatusType: {
  readonly ACTIVE: "Active";
  readonly DELETING: "Deleting";
};
export type AppStatusType = (typeof AppStatusType)[keyof typeof AppStatusType];
export interface App {
  appArn: string | undefined;
  name: string | undefined;
  description?: string;
  policyArn?: string;
  creationTime: Date | undefined;
  status?: AppStatusType;
  complianceStatus?: AppComplianceStatusType;
  lastAppComplianceEvaluationTime?: Date;
  resiliencyScore?: number;
  lastResiliencyScoreEvaluationTime?: Date;
  tags?: Record<string, string>;
  assessmentSchedule?: AppAssessmentScheduleType;
  permissionModel?: PermissionModel;
  eventSubscriptions?: EventSubscription[];
  driftStatus?: AppDriftStatusType;
  lastDriftEvaluationTime?: Date;
  rtoInSecs?: number;
  rpoInSecs?: number;
}
export declare const AssessmentStatus: {
  readonly FAILED: "Failed";
  readonly INPROGRESS: "InProgress";
  readonly PENDING: "Pending";
  readonly SUCCESS: "Success";
};
export type AssessmentStatus =
  (typeof AssessmentStatus)[keyof typeof AssessmentStatus];
export declare const DisruptionType: {
  readonly AZ: "AZ";
  readonly HARDWARE: "Hardware";
  readonly REGION: "Region";
  readonly SOFTWARE: "Software";
};
export type DisruptionType =
  (typeof DisruptionType)[keyof typeof DisruptionType];
export declare const ComplianceStatus: {
  readonly POLICY_BREACHED: "PolicyBreached";
  readonly POLICY_MET: "PolicyMet";
};
export type ComplianceStatus =
  (typeof ComplianceStatus)[keyof typeof ComplianceStatus];
export interface DisruptionCompliance {
  achievableRtoInSecs?: number;
  currentRtoInSecs?: number;
  rtoReferenceId?: string;
  rtoDescription?: string;
  currentRpoInSecs?: number;
  rpoReferenceId?: string;
  rpoDescription?: string;
  complianceStatus: ComplianceStatus | undefined;
  achievableRpoInSecs?: number;
  message?: string;
}
export declare const CostFrequency: {
  readonly DAILY: "Daily";
  readonly HOURLY: "Hourly";
  readonly MONTHLY: "Monthly";
  readonly YEARLY: "Yearly";
};
export type CostFrequency = (typeof CostFrequency)[keyof typeof CostFrequency];
export interface Cost {
  amount: number | undefined;
  currency: string | undefined;
  frequency: CostFrequency | undefined;
}
export declare const DriftStatus: {
  readonly DETECTED: "Detected";
  readonly NOT_CHECKED: "NotChecked";
  readonly NOT_DETECTED: "NotDetected";
};
export type DriftStatus = (typeof DriftStatus)[keyof typeof DriftStatus];
export declare const AssessmentInvoker: {
  readonly SYSTEM: "System";
  readonly USER: "User";
};
export type AssessmentInvoker =
  (typeof AssessmentInvoker)[keyof typeof AssessmentInvoker];
export declare const DataLocationConstraint: {
  readonly ANY_LOCATION: "AnyLocation";
  readonly SAME_CONTINENT: "SameContinent";
  readonly SAME_COUNTRY: "SameCountry";
};
export type DataLocationConstraint =
  (typeof DataLocationConstraint)[keyof typeof DataLocationConstraint];
export declare const EstimatedCostTier: {
  readonly L1: "L1";
  readonly L2: "L2";
  readonly L3: "L3";
  readonly L4: "L4";
};
export type EstimatedCostTier =
  (typeof EstimatedCostTier)[keyof typeof EstimatedCostTier];
export interface FailurePolicy {
  rtoInSecs: number | undefined;
  rpoInSecs: number | undefined;
}
export declare const ResiliencyPolicyTier: {
  readonly CORE_SERVICES: "CoreServices";
  readonly CRITICAL: "Critical";
  readonly IMPORTANT: "Important";
  readonly MISSION_CRITICAL: "MissionCritical";
  readonly NON_CRITICAL: "NonCritical";
  readonly NOT_APPLICABLE: "NotApplicable";
};
export type ResiliencyPolicyTier =
  (typeof ResiliencyPolicyTier)[keyof typeof ResiliencyPolicyTier];
export interface ResiliencyPolicy {
  policyArn?: string;
  policyName?: string;
  policyDescription?: string;
  dataLocationConstraint?: DataLocationConstraint;
  tier?: ResiliencyPolicyTier;
  estimatedCostTier?: EstimatedCostTier;
  policy?: Partial<Record<DisruptionType, FailurePolicy>>;
  creationTime?: Date;
  tags?: Record<string, string>;
}
export declare const ResiliencyScoreType: {
  readonly ALARM: "Alarm";
  readonly COMPLIANCE: "Compliance";
  readonly SOP: "Sop";
  readonly TEST: "Test";
};
export type ResiliencyScoreType =
  (typeof ResiliencyScoreType)[keyof typeof ResiliencyScoreType];
export interface ScoringComponentResiliencyScore {
  score?: number;
  possibleScore?: number;
  outstandingCount?: number;
  excludedCount?: number;
}
export interface ResiliencyScore {
  score: number | undefined;
  disruptionScore: Partial<Record<DisruptionType, number>> | undefined;
  componentScore?: Partial<
    Record<ResiliencyScoreType, ScoringComponentResiliencyScore>
  >;
}
export interface ResourceError {
  logicalResourceId?: string;
  physicalResourceId?: string;
  reason?: string;
}
export interface ResourceErrorsDetails {
  resourceErrors?: ResourceError[];
  hasMoreErrors?: boolean;
}
export interface AppAssessment {
  appArn?: string;
  appVersion?: string;
  invoker: AssessmentInvoker | undefined;
  cost?: Cost;
  resiliencyScore?: ResiliencyScore;
  compliance?: Partial<Record<DisruptionType, DisruptionCompliance>>;
  complianceStatus?: ComplianceStatus;
  assessmentStatus: AssessmentStatus | undefined;
  startTime?: Date;
  endTime?: Date;
  message?: string;
  assessmentName?: string;
  assessmentArn: string | undefined;
  policy?: ResiliencyPolicy;
  tags?: Record<string, string>;
  resourceErrorsDetails?: ResourceErrorsDetails;
  versionName?: string;
  driftStatus?: DriftStatus;
}
export interface AppAssessmentSummary {
  appArn?: string;
  appVersion?: string;
  assessmentStatus: AssessmentStatus | undefined;
  invoker?: AssessmentInvoker;
  startTime?: Date;
  endTime?: Date;
  message?: string;
  assessmentName?: string;
  assessmentArn: string | undefined;
  complianceStatus?: ComplianceStatus;
  cost?: Cost;
  resiliencyScore?: number;
  versionName?: string;
  driftStatus?: DriftStatus;
}
export interface AppComponent {
  name: string | undefined;
  type: string | undefined;
  id?: string;
  additionalInfo?: Record<string, string[]>;
}
export interface AppComponentCompliance {
  cost?: Cost;
  appComponentName?: string;
  compliance?: Partial<Record<DisruptionType, DisruptionCompliance>>;
  message?: string;
  status?: ComplianceStatus;
  resiliencyScore?: ResiliencyScore;
}
export interface EksSourceClusterNamespace {
  eksClusterArn: string | undefined;
  namespace: string | undefined;
}
export interface TerraformSource {
  s3StateFileUrl: string | undefined;
}
export interface AppInputSource {
  sourceName?: string;
  importType: ResourceMappingType | undefined;
  sourceArn?: string;
  terraformSource?: TerraformSource;
  resourceCount?: number;
  eksSourceClusterNamespace?: EksSourceClusterNamespace;
}
export interface AppSummary {
  appArn: string | undefined;
  name: string | undefined;
  description?: string;
  creationTime: Date | undefined;
  complianceStatus?: AppComplianceStatusType;
  resiliencyScore?: number;
  assessmentSchedule?: AppAssessmentScheduleType;
  status?: AppStatusType;
  driftStatus?: AppDriftStatusType;
  lastAppComplianceEvaluationTime?: Date;
  rtoInSecs?: number;
  rpoInSecs?: number;
}
export interface AppVersionSummary {
  appVersion: string | undefined;
  identifier?: number;
  creationTime?: Date;
  versionName?: string;
}
export interface UpdateRecommendationStatusItem {
  resourceId?: string;
  targetAccountId?: string;
  targetRegion?: string;
}
export interface UpdateRecommendationStatusRequestEntry {
  entryId: string | undefined;
  referenceId: string | undefined;
  item: UpdateRecommendationStatusItem | undefined;
  excluded: boolean | undefined;
  excludeReason?: ExcludeRecommendationReason;
}
export interface BatchUpdateRecommendationStatusRequest {
  appArn: string | undefined;
  requestEntries: UpdateRecommendationStatusRequestEntry[] | undefined;
}
export interface BatchUpdateRecommendationStatusFailedEntry {
  entryId: string | undefined;
  errorMessage: string | undefined;
}
export interface BatchUpdateRecommendationStatusSuccessfulEntry {
  entryId: string | undefined;
  referenceId: string | undefined;
  item: UpdateRecommendationStatusItem | undefined;
  excluded: boolean | undefined;
  excludeReason?: ExcludeRecommendationReason;
}
export interface BatchUpdateRecommendationStatusResponse {
  appArn: string | undefined;
  successfulEntries:
    | BatchUpdateRecommendationStatusSuccessfulEntry[]
    | undefined;
  failedEntries: BatchUpdateRecommendationStatusFailedEntry[] | undefined;
}
export interface CreateAppRequest {
  name: string | undefined;
  description?: string;
  policyArn?: string;
  tags?: Record<string, string>;
  clientToken?: string;
  assessmentSchedule?: AppAssessmentScheduleType;
  permissionModel?: PermissionModel;
  eventSubscriptions?: EventSubscription[];
}
export interface CreateAppResponse {
  app: App | undefined;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface CreateAppVersionAppComponentRequest {
  appArn: string | undefined;
  id?: string;
  name: string | undefined;
  type: string | undefined;
  additionalInfo?: Record<string, string[]>;
  clientToken?: string;
}
export interface CreateAppVersionAppComponentResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  appComponent?: AppComponent;
}
export interface LogicalResourceId {
  identifier: string | undefined;
  logicalStackName?: string;
  resourceGroupName?: string;
  terraformSourceName?: string;
  eksSourceName?: string;
}
export interface CreateAppVersionResourceRequest {
  appArn: string | undefined;
  resourceName?: string;
  logicalResourceId: LogicalResourceId | undefined;
  physicalResourceId: string | undefined;
  awsRegion?: string;
  awsAccountId?: string;
  resourceType: string | undefined;
  appComponents: string[] | undefined;
  additionalInfo?: Record<string, string[]>;
  clientToken?: string;
}
export declare const ResourceSourceType: {
  readonly APP_TEMPLATE: "AppTemplate";
  readonly DISCOVERED: "Discovered";
};
export type ResourceSourceType =
  (typeof ResourceSourceType)[keyof typeof ResourceSourceType];
export interface PhysicalResource {
  resourceName?: string;
  logicalResourceId: LogicalResourceId | undefined;
  physicalResourceId: PhysicalResourceId | undefined;
  resourceType: string | undefined;
  appComponents?: AppComponent[];
  additionalInfo?: Record<string, string[]>;
  excluded?: boolean;
  sourceType?: ResourceSourceType;
  parentResourceName?: string;
}
export interface CreateAppVersionResourceResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  physicalResource?: PhysicalResource;
}
export declare const TemplateFormat: {
  readonly CFN_JSON: "CfnJson";
  readonly CFN_YAML: "CfnYaml";
};
export type TemplateFormat =
  (typeof TemplateFormat)[keyof typeof TemplateFormat];
export declare const RenderRecommendationType: {
  readonly ALARM: "Alarm";
  readonly SOP: "Sop";
  readonly TEST: "Test";
};
export type RenderRecommendationType =
  (typeof RenderRecommendationType)[keyof typeof RenderRecommendationType];
export interface CreateRecommendationTemplateRequest {
  recommendationIds?: string[];
  format?: TemplateFormat;
  recommendationTypes?: RenderRecommendationType[];
  assessmentArn: string | undefined;
  name: string | undefined;
  clientToken?: string;
  tags?: Record<string, string>;
  bucketName?: string;
}
export declare const RecommendationTemplateStatus: {
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly PENDING: "Pending";
  readonly SUCCESS: "Success";
};
export type RecommendationTemplateStatus =
  (typeof RecommendationTemplateStatus)[keyof typeof RecommendationTemplateStatus];
export interface S3Location {
  bucket?: string;
  prefix?: string;
}
export interface RecommendationTemplate {
  templatesLocation?: S3Location;
  assessmentArn: string | undefined;
  appArn?: string;
  recommendationIds?: string[];
  recommendationTypes: RenderRecommendationType[] | undefined;
  format: TemplateFormat | undefined;
  recommendationTemplateArn: string | undefined;
  message?: string;
  status: RecommendationTemplateStatus | undefined;
  name: string | undefined;
  startTime?: Date;
  endTime?: Date;
  tags?: Record<string, string>;
  needsReplacements?: boolean;
}
export interface CreateRecommendationTemplateResponse {
  recommendationTemplate?: RecommendationTemplate;
}
export interface CreateResiliencyPolicyRequest {
  policyName: string | undefined;
  policyDescription?: string;
  dataLocationConstraint?: DataLocationConstraint;
  tier: ResiliencyPolicyTier | undefined;
  policy: Partial<Record<DisruptionType, FailurePolicy>> | undefined;
  clientToken?: string;
  tags?: Record<string, string>;
}
export interface CreateResiliencyPolicyResponse {
  policy: ResiliencyPolicy | undefined;
}
export interface DeleteAppRequest {
  appArn: string | undefined;
  forceDelete?: boolean;
  clientToken?: string;
}
export interface DeleteAppResponse {
  appArn: string | undefined;
}
export interface DeleteAppAssessmentRequest {
  assessmentArn: string | undefined;
  clientToken?: string;
}
export interface DeleteAppAssessmentResponse {
  assessmentArn: string | undefined;
  assessmentStatus: AssessmentStatus | undefined;
}
export interface DeleteAppInputSourceRequest {
  appArn: string | undefined;
  sourceArn?: string;
  terraformSource?: TerraformSource;
  clientToken?: string;
  eksSourceClusterNamespace?: EksSourceClusterNamespace;
}
export interface DeleteAppInputSourceResponse {
  appArn?: string;
  appInputSource?: AppInputSource;
}
export interface DeleteAppVersionAppComponentRequest {
  appArn: string | undefined;
  id: string | undefined;
  clientToken?: string;
}
export interface DeleteAppVersionAppComponentResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  appComponent?: AppComponent;
}
export interface DeleteAppVersionResourceRequest {
  appArn: string | undefined;
  resourceName?: string;
  logicalResourceId?: LogicalResourceId;
  physicalResourceId?: string;
  awsRegion?: string;
  awsAccountId?: string;
  clientToken?: string;
}
export interface DeleteAppVersionResourceResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  physicalResource?: PhysicalResource;
}
export interface DeleteRecommendationTemplateRequest {
  recommendationTemplateArn: string | undefined;
  clientToken?: string;
}
export interface DeleteRecommendationTemplateResponse {
  recommendationTemplateArn: string | undefined;
  status: RecommendationTemplateStatus | undefined;
}
export interface DeleteResiliencyPolicyRequest {
  policyArn: string | undefined;
  clientToken?: string;
}
export interface DeleteResiliencyPolicyResponse {
  policyArn: string | undefined;
}
export interface DescribeAppRequest {
  appArn: string | undefined;
}
export interface DescribeAppResponse {
  app: App | undefined;
}
export interface DescribeAppAssessmentRequest {
  assessmentArn: string | undefined;
}
export interface DescribeAppAssessmentResponse {
  assessment: AppAssessment | undefined;
}
export interface DescribeAppVersionRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
}
export interface DescribeAppVersionResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  additionalInfo?: Record<string, string[]>;
}
export interface DescribeAppVersionAppComponentRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  id: string | undefined;
}
export interface DescribeAppVersionAppComponentResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  appComponent?: AppComponent;
}
export interface DescribeAppVersionResourceRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  resourceName?: string;
  logicalResourceId?: LogicalResourceId;
  physicalResourceId?: string;
  awsRegion?: string;
  awsAccountId?: string;
}
export interface DescribeAppVersionResourceResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  physicalResource?: PhysicalResource;
}
export interface DescribeAppVersionResourcesResolutionStatusRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  resolutionId?: string;
}
export declare const ResourceResolutionStatusType: {
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly PENDING: "Pending";
  readonly SUCCESS: "Success";
};
export type ResourceResolutionStatusType =
  (typeof ResourceResolutionStatusType)[keyof typeof ResourceResolutionStatusType];
export interface DescribeAppVersionResourcesResolutionStatusResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  resolutionId: string | undefined;
  status: ResourceResolutionStatusType | undefined;
  errorMessage?: string;
}
export interface DescribeAppVersionTemplateRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
}
export interface DescribeAppVersionTemplateResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  appTemplateBody: string | undefined;
}
export interface DescribeDraftAppVersionResourcesImportStatusRequest {
  appArn: string | undefined;
}
export declare const ResourceImportStatusType: {
  readonly FAILED: "Failed";
  readonly IN_PROGRESS: "InProgress";
  readonly PENDING: "Pending";
  readonly SUCCESS: "Success";
};
export type ResourceImportStatusType =
  (typeof ResourceImportStatusType)[keyof typeof ResourceImportStatusType];
export interface DescribeDraftAppVersionResourcesImportStatusResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  status: ResourceImportStatusType | undefined;
  statusChangeTime: Date | undefined;
  errorMessage?: string;
}
export interface DescribeResiliencyPolicyRequest {
  policyArn: string | undefined;
}
export interface DescribeResiliencyPolicyResponse {
  policy: ResiliencyPolicy | undefined;
}
export interface EksSource {
  eksClusterArn: string | undefined;
  namespaces: string[] | undefined;
}
export declare const ResourceImportStrategyType: {
  readonly ADD_ONLY: "AddOnly";
  readonly REPLACE_ALL: "ReplaceAll";
};
export type ResourceImportStrategyType =
  (typeof ResourceImportStrategyType)[keyof typeof ResourceImportStrategyType];
export interface ImportResourcesToDraftAppVersionRequest {
  appArn: string | undefined;
  sourceArns?: string[];
  terraformSources?: TerraformSource[];
  importStrategy?: ResourceImportStrategyType;
  eksSources?: EksSource[];
}
export interface ImportResourcesToDraftAppVersionResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  sourceArns?: string[];
  status: ResourceImportStatusType | undefined;
  terraformSources?: TerraformSource[];
  eksSources?: EksSource[];
}
export interface ListAlarmRecommendationsRequest {
  assessmentArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAlarmRecommendationsResponse {
  alarmRecommendations: AlarmRecommendation[] | undefined;
  nextToken?: string;
}
export interface ListAppAssessmentComplianceDriftsRequest {
  assessmentArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export declare const DifferenceType: {
  readonly NOT_EQUAL: "NotEqual";
};
export type DifferenceType =
  (typeof DifferenceType)[keyof typeof DifferenceType];
export declare const DriftType: {
  readonly APPLICATION_COMPLIANCE: "ApplicationCompliance";
};
export type DriftType = (typeof DriftType)[keyof typeof DriftType];
export interface ComplianceDrift {
  entityId?: string;
  entityType?: string;
  driftType?: DriftType;
  appId?: string;
  appVersion?: string;
  expectedReferenceId?: string;
  expectedValue?: Partial<Record<DisruptionType, DisruptionCompliance>>;
  actualReferenceId?: string;
  actualValue?: Partial<Record<DisruptionType, DisruptionCompliance>>;
  diffType?: DifferenceType;
}
export interface ListAppAssessmentComplianceDriftsResponse {
  complianceDrifts: ComplianceDrift[] | undefined;
  nextToken?: string;
}
export interface ListAppAssessmentsRequest {
  appArn?: string;
  assessmentName?: string;
  assessmentStatus?: AssessmentStatus[];
  complianceStatus?: ComplianceStatus;
  invoker?: AssessmentInvoker;
  reverseOrder?: boolean;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAppAssessmentsResponse {
  nextToken?: string;
  assessmentSummaries: AppAssessmentSummary[] | undefined;
}
export interface ListAppComponentCompliancesRequest {
  nextToken?: string;
  maxResults?: number;
  assessmentArn: string | undefined;
}
export interface ListAppComponentCompliancesResponse {
  componentCompliances: AppComponentCompliance[] | undefined;
  nextToken?: string;
}
export interface ListAppComponentRecommendationsRequest {
  assessmentArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export declare const HaArchitecture: {
  readonly BACKUP_AND_RESTORE: "BackupAndRestore";
  readonly MULTI_SITE: "MultiSite";
  readonly NO_RECOVERY_PLAN: "NoRecoveryPlan";
  readonly PILOT_LIGHT: "PilotLight";
  readonly WARM_STANDBY: "WarmStandby";
};
export type HaArchitecture =
  (typeof HaArchitecture)[keyof typeof HaArchitecture];
export declare const ConfigRecommendationOptimizationType: {
  readonly BEST_ATTAINABLE: "BestAttainable";
  readonly BEST_AZ_RECOVERY: "BestAZRecovery";
  readonly BEST_REGION_RECOVERY: "BestRegionRecovery";
  readonly LEAST_CHANGE: "LeastChange";
  readonly LEAST_COST: "LeastCost";
  readonly LEAST_ERRORS: "LeastErrors";
};
export type ConfigRecommendationOptimizationType =
  (typeof ConfigRecommendationOptimizationType)[keyof typeof ConfigRecommendationOptimizationType];
export interface RecommendationDisruptionCompliance {
  expectedComplianceStatus: ComplianceStatus | undefined;
  expectedRtoInSecs?: number;
  expectedRtoDescription?: string;
  expectedRpoInSecs?: number;
  expectedRpoDescription?: string;
}
export interface ConfigRecommendation {
  cost?: Cost;
  appComponentName?: string;
  compliance?: Partial<Record<DisruptionType, DisruptionCompliance>>;
  recommendationCompliance?: Partial<
    Record<DisruptionType, RecommendationDisruptionCompliance>
  >;
  optimizationType: ConfigRecommendationOptimizationType | undefined;
  name: string | undefined;
  description?: string;
  suggestedChanges?: string[];
  haArchitecture?: HaArchitecture;
  referenceId: string | undefined;
}
export declare const RecommendationComplianceStatus: {
  readonly BREACHED_CAN_MEET: "BreachedCanMeet";
  readonly BREACHED_UNATTAINABLE: "BreachedUnattainable";
  readonly MET_CAN_IMPROVE: "MetCanImprove";
};
export type RecommendationComplianceStatus =
  (typeof RecommendationComplianceStatus)[keyof typeof RecommendationComplianceStatus];
export interface ComponentRecommendation {
  appComponentName: string | undefined;
  recommendationStatus: RecommendationComplianceStatus | undefined;
  configRecommendations: ConfigRecommendation[] | undefined;
}
export interface ListAppComponentRecommendationsResponse {
  componentRecommendations: ComponentRecommendation[] | undefined;
  nextToken?: string;
}
export interface ListAppInputSourcesRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAppInputSourcesResponse {
  appInputSources: AppInputSource[] | undefined;
  nextToken?: string;
}
export interface ListAppsRequest {
  nextToken?: string;
  maxResults?: number;
  name?: string;
  appArn?: string;
  fromLastAssessmentTime?: Date;
  toLastAssessmentTime?: Date;
  reverseOrder?: boolean;
}
export interface ListAppsResponse {
  appSummaries: AppSummary[] | undefined;
  nextToken?: string;
}
export interface ListAppVersionAppComponentsRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAppVersionAppComponentsResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  appComponents?: AppComponent[];
  nextToken?: string;
}
export interface ListAppVersionResourceMappingsRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAppVersionResourceMappingsResponse {
  resourceMappings: ResourceMapping[] | undefined;
  nextToken?: string;
}
export interface ListAppVersionResourcesRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  resolutionId?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAppVersionResourcesResponse {
  physicalResources: PhysicalResource[] | undefined;
  resolutionId: string | undefined;
  nextToken?: string;
}
export interface ListAppVersionsRequest {
  appArn: string | undefined;
  nextToken?: string;
  maxResults?: number;
  startTime?: Date;
  endTime?: Date;
}
export interface ListAppVersionsResponse {
  appVersions: AppVersionSummary[] | undefined;
  nextToken?: string;
}
export interface ListRecommendationTemplatesRequest {
  assessmentArn: string | undefined;
  reverseOrder?: boolean;
  status?: RecommendationTemplateStatus[];
  recommendationTemplateArn?: string;
  name?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface ListRecommendationTemplatesResponse {
  nextToken?: string;
  recommendationTemplates?: RecommendationTemplate[];
}
export interface ListResiliencyPoliciesRequest {
  policyName?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface ListResiliencyPoliciesResponse {
  resiliencyPolicies: ResiliencyPolicy[] | undefined;
  nextToken?: string;
}
export interface ListSopRecommendationsRequest {
  nextToken?: string;
  maxResults?: number;
  assessmentArn: string | undefined;
}
export declare const SopServiceType: {
  readonly SSM: "SSM";
};
export type SopServiceType =
  (typeof SopServiceType)[keyof typeof SopServiceType];
export interface SopRecommendation {
  serviceType: SopServiceType | undefined;
  appComponentName?: string;
  description?: string;
  recommendationId: string | undefined;
  name?: string;
  items?: RecommendationItem[];
  referenceId: string | undefined;
  prerequisite?: string;
  recommendationStatus?: RecommendationStatus;
}
export interface ListSopRecommendationsResponse {
  nextToken?: string;
  sopRecommendations: SopRecommendation[] | undefined;
}
export interface ListSuggestedResiliencyPoliciesRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ListSuggestedResiliencyPoliciesResponse {
  resiliencyPolicies: ResiliencyPolicy[] | undefined;
  nextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export interface ListTestRecommendationsRequest {
  nextToken?: string;
  maxResults?: number;
  assessmentArn: string | undefined;
}
export declare const TestRisk: {
  readonly HIGH: "High";
  readonly MEDIUM: "Medium";
  readonly SMALL: "Small";
};
export type TestRisk = (typeof TestRisk)[keyof typeof TestRisk];
export declare const TestType: {
  readonly AZ: "AZ";
  readonly HARDWARE: "Hardware";
  readonly REGION: "Region";
  readonly SOFTWARE: "Software";
};
export type TestType = (typeof TestType)[keyof typeof TestType];
export interface TestRecommendation {
  recommendationId?: string;
  referenceId: string | undefined;
  appComponentName?: string;
  name?: string;
  intent?: string;
  risk?: TestRisk;
  type?: TestType;
  description?: string;
  items?: RecommendationItem[];
  prerequisite?: string;
  dependsOnAlarms?: string[];
  recommendationStatus?: RecommendationStatus;
}
export interface ListTestRecommendationsResponse {
  nextToken?: string;
  testRecommendations: TestRecommendation[] | undefined;
}
export interface ListUnsupportedAppVersionResourcesRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  resolutionId?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface UnsupportedResource {
  logicalResourceId: LogicalResourceId | undefined;
  physicalResourceId: PhysicalResourceId | undefined;
  resourceType: string | undefined;
  unsupportedResourceStatus?: string;
}
export interface ListUnsupportedAppVersionResourcesResponse {
  unsupportedResources: UnsupportedResource[] | undefined;
  resolutionId: string | undefined;
  nextToken?: string;
}
export interface PublishAppVersionRequest {
  appArn: string | undefined;
  versionName?: string;
}
export interface PublishAppVersionResponse {
  appArn: string | undefined;
  appVersion?: string;
  identifier?: number;
  versionName?: string;
}
export interface PutDraftAppVersionTemplateRequest {
  appArn: string | undefined;
  appTemplateBody: string | undefined;
}
export interface PutDraftAppVersionTemplateResponse {
  appArn?: string;
  appVersion?: string;
}
export interface RemoveDraftAppVersionResourceMappingsRequest {
  appArn: string | undefined;
  resourceNames?: string[];
  logicalStackNames?: string[];
  appRegistryAppNames?: string[];
  resourceGroupNames?: string[];
  terraformSourceNames?: string[];
  eksSourceNames?: string[];
}
export interface RemoveDraftAppVersionResourceMappingsResponse {
  appArn?: string;
  appVersion?: string;
}
export interface ResolveAppVersionResourcesRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
}
export interface ResolveAppVersionResourcesResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  resolutionId: string | undefined;
  status: ResourceResolutionStatusType | undefined;
}
export interface StartAppAssessmentRequest {
  appArn: string | undefined;
  appVersion: string | undefined;
  assessmentName: string | undefined;
  clientToken?: string;
  tags?: Record<string, string>;
}
export interface StartAppAssessmentResponse {
  assessment: AppAssessment | undefined;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAppRequest {
  appArn: string | undefined;
  description?: string;
  policyArn?: string;
  clearResiliencyPolicyArn?: boolean;
  assessmentSchedule?: AppAssessmentScheduleType;
  permissionModel?: PermissionModel;
  eventSubscriptions?: EventSubscription[];
}
export interface UpdateAppResponse {
  app: App | undefined;
}
export interface UpdateAppVersionRequest {
  appArn: string | undefined;
  additionalInfo?: Record<string, string[]>;
}
export interface UpdateAppVersionResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  additionalInfo?: Record<string, string[]>;
}
export interface UpdateAppVersionAppComponentRequest {
  appArn: string | undefined;
  id: string | undefined;
  name?: string;
  type?: string;
  additionalInfo?: Record<string, string[]>;
}
export interface UpdateAppVersionAppComponentResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  appComponent?: AppComponent;
}
export interface UpdateAppVersionResourceRequest {
  appArn: string | undefined;
  resourceName?: string;
  logicalResourceId?: LogicalResourceId;
  physicalResourceId?: string;
  awsRegion?: string;
  awsAccountId?: string;
  resourceType?: string;
  appComponents?: string[];
  additionalInfo?: Record<string, string[]>;
  excluded?: boolean;
}
export interface UpdateAppVersionResourceResponse {
  appArn: string | undefined;
  appVersion: string | undefined;
  physicalResource?: PhysicalResource;
}
export interface UpdateResiliencyPolicyRequest {
  policyArn: string | undefined;
  policyName?: string;
  policyDescription?: string;
  dataLocationConstraint?: DataLocationConstraint;
  tier?: ResiliencyPolicyTier;
  policy?: Partial<Record<DisruptionType, FailurePolicy>>;
}
export interface UpdateResiliencyPolicyResponse {
  policy: ResiliencyPolicy | undefined;
}
export declare const AppFilterSensitiveLog: (obj: App) => any;
export declare const ResiliencyPolicyFilterSensitiveLog: (
  obj: ResiliencyPolicy
) => any;
export declare const AppAssessmentFilterSensitiveLog: (
  obj: AppAssessment
) => any;
export declare const CreateAppRequestFilterSensitiveLog: (
  obj: CreateAppRequest
) => any;
export declare const CreateAppResponseFilterSensitiveLog: (
  obj: CreateAppResponse
) => any;
export declare const CreateRecommendationTemplateRequestFilterSensitiveLog: (
  obj: CreateRecommendationTemplateRequest
) => any;
export declare const RecommendationTemplateFilterSensitiveLog: (
  obj: RecommendationTemplate
) => any;
export declare const CreateRecommendationTemplateResponseFilterSensitiveLog: (
  obj: CreateRecommendationTemplateResponse
) => any;
export declare const CreateResiliencyPolicyRequestFilterSensitiveLog: (
  obj: CreateResiliencyPolicyRequest
) => any;
export declare const CreateResiliencyPolicyResponseFilterSensitiveLog: (
  obj: CreateResiliencyPolicyResponse
) => any;
export declare const DescribeAppResponseFilterSensitiveLog: (
  obj: DescribeAppResponse
) => any;
export declare const DescribeAppAssessmentResponseFilterSensitiveLog: (
  obj: DescribeAppAssessmentResponse
) => any;
export declare const DescribeResiliencyPolicyResponseFilterSensitiveLog: (
  obj: DescribeResiliencyPolicyResponse
) => any;
export declare const ListRecommendationTemplatesResponseFilterSensitiveLog: (
  obj: ListRecommendationTemplatesResponse
) => any;
export declare const ListResiliencyPoliciesResponseFilterSensitiveLog: (
  obj: ListResiliencyPoliciesResponse
) => any;
export declare const ListSuggestedResiliencyPoliciesResponseFilterSensitiveLog: (
  obj: ListSuggestedResiliencyPoliciesResponse
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const StartAppAssessmentRequestFilterSensitiveLog: (
  obj: StartAppAssessmentRequest
) => any;
export declare const StartAppAssessmentResponseFilterSensitiveLog: (
  obj: StartAppAssessmentResponse
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UpdateAppResponseFilterSensitiveLog: (
  obj: UpdateAppResponse
) => any;
export declare const UpdateResiliencyPolicyResponseFilterSensitiveLog: (
  obj: UpdateResiliencyPolicyResponse
) => any;
