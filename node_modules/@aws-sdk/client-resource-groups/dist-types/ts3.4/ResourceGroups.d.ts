import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateGroupCommandInput,
  CreateGroupCommandOutput,
} from "./commands/CreateGroupCommand";
import {
  DeleteGroupCommandInput,
  DeleteGroupCommandOutput,
} from "./commands/DeleteGroupCommand";
import {
  GetAccountSettingsCommandInput,
  GetAccountSettingsCommandOutput,
} from "./commands/GetAccountSettingsCommand";
import {
  GetGroupCommandInput,
  GetGroupCommandOutput,
} from "./commands/GetGroupCommand";
import {
  GetGroupConfigurationCommandInput,
  GetGroupConfigurationCommandOutput,
} from "./commands/GetGroupConfigurationCommand";
import {
  GetGroupQueryCommandInput,
  GetGroupQueryCommandOutput,
} from "./commands/GetGroupQueryCommand";
import {
  GetTagsCommandInput,
  GetTagsCommandOutput,
} from "./commands/GetTagsCommand";
import {
  GroupResourcesCommandInput,
  GroupResourcesCommandOutput,
} from "./commands/GroupResourcesCommand";
import {
  ListGroupResourcesCommandInput,
  ListGroupResourcesCommandOutput,
} from "./commands/ListGroupResourcesCommand";
import {
  ListGroupsCommandInput,
  ListGroupsCommandOutput,
} from "./commands/ListGroupsCommand";
import {
  PutGroupConfigurationCommandInput,
  PutGroupConfigurationCommandOutput,
} from "./commands/PutGroupConfigurationCommand";
import {
  SearchResourcesCommandInput,
  SearchResourcesCommandOutput,
} from "./commands/SearchResourcesCommand";
import { TagCommandInput, TagCommandOutput } from "./commands/TagCommand";
import {
  UngroupResourcesCommandInput,
  UngroupResourcesCommandOutput,
} from "./commands/UngroupResourcesCommand";
import { UntagCommandInput, UntagCommandOutput } from "./commands/UntagCommand";
import {
  UpdateAccountSettingsCommandInput,
  UpdateAccountSettingsCommandOutput,
} from "./commands/UpdateAccountSettingsCommand";
import {
  UpdateGroupCommandInput,
  UpdateGroupCommandOutput,
} from "./commands/UpdateGroupCommand";
import {
  UpdateGroupQueryCommandInput,
  UpdateGroupQueryCommandOutput,
} from "./commands/UpdateGroupQueryCommand";
import { ResourceGroupsClient } from "./ResourceGroupsClient";
export interface ResourceGroups {
  createGroup(
    args: CreateGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGroupCommandOutput>;
  createGroup(
    args: CreateGroupCommandInput,
    cb: (err: any, data?: CreateGroupCommandOutput) => void
  ): void;
  createGroup(
    args: CreateGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGroupCommandOutput) => void
  ): void;
  deleteGroup(): Promise<DeleteGroupCommandOutput>;
  deleteGroup(
    args: DeleteGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGroupCommandOutput>;
  deleteGroup(
    args: DeleteGroupCommandInput,
    cb: (err: any, data?: DeleteGroupCommandOutput) => void
  ): void;
  deleteGroup(
    args: DeleteGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGroupCommandOutput) => void
  ): void;
  getAccountSettings(): Promise<GetAccountSettingsCommandOutput>;
  getAccountSettings(
    args: GetAccountSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAccountSettingsCommandOutput>;
  getAccountSettings(
    args: GetAccountSettingsCommandInput,
    cb: (err: any, data?: GetAccountSettingsCommandOutput) => void
  ): void;
  getAccountSettings(
    args: GetAccountSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAccountSettingsCommandOutput) => void
  ): void;
  getGroup(): Promise<GetGroupCommandOutput>;
  getGroup(
    args: GetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetGroupCommandOutput>;
  getGroup(
    args: GetGroupCommandInput,
    cb: (err: any, data?: GetGroupCommandOutput) => void
  ): void;
  getGroup(
    args: GetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetGroupCommandOutput) => void
  ): void;
  getGroupConfiguration(): Promise<GetGroupConfigurationCommandOutput>;
  getGroupConfiguration(
    args: GetGroupConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetGroupConfigurationCommandOutput>;
  getGroupConfiguration(
    args: GetGroupConfigurationCommandInput,
    cb: (err: any, data?: GetGroupConfigurationCommandOutput) => void
  ): void;
  getGroupConfiguration(
    args: GetGroupConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetGroupConfigurationCommandOutput) => void
  ): void;
  getGroupQuery(): Promise<GetGroupQueryCommandOutput>;
  getGroupQuery(
    args: GetGroupQueryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetGroupQueryCommandOutput>;
  getGroupQuery(
    args: GetGroupQueryCommandInput,
    cb: (err: any, data?: GetGroupQueryCommandOutput) => void
  ): void;
  getGroupQuery(
    args: GetGroupQueryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetGroupQueryCommandOutput) => void
  ): void;
  getTags(
    args: GetTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetTagsCommandOutput>;
  getTags(
    args: GetTagsCommandInput,
    cb: (err: any, data?: GetTagsCommandOutput) => void
  ): void;
  getTags(
    args: GetTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetTagsCommandOutput) => void
  ): void;
  groupResources(
    args: GroupResourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GroupResourcesCommandOutput>;
  groupResources(
    args: GroupResourcesCommandInput,
    cb: (err: any, data?: GroupResourcesCommandOutput) => void
  ): void;
  groupResources(
    args: GroupResourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GroupResourcesCommandOutput) => void
  ): void;
  listGroupResources(): Promise<ListGroupResourcesCommandOutput>;
  listGroupResources(
    args: ListGroupResourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGroupResourcesCommandOutput>;
  listGroupResources(
    args: ListGroupResourcesCommandInput,
    cb: (err: any, data?: ListGroupResourcesCommandOutput) => void
  ): void;
  listGroupResources(
    args: ListGroupResourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGroupResourcesCommandOutput) => void
  ): void;
  listGroups(): Promise<ListGroupsCommandOutput>;
  listGroups(
    args: ListGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGroupsCommandOutput>;
  listGroups(
    args: ListGroupsCommandInput,
    cb: (err: any, data?: ListGroupsCommandOutput) => void
  ): void;
  listGroups(
    args: ListGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGroupsCommandOutput) => void
  ): void;
  putGroupConfiguration(): Promise<PutGroupConfigurationCommandOutput>;
  putGroupConfiguration(
    args: PutGroupConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutGroupConfigurationCommandOutput>;
  putGroupConfiguration(
    args: PutGroupConfigurationCommandInput,
    cb: (err: any, data?: PutGroupConfigurationCommandOutput) => void
  ): void;
  putGroupConfiguration(
    args: PutGroupConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutGroupConfigurationCommandOutput) => void
  ): void;
  searchResources(
    args: SearchResourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SearchResourcesCommandOutput>;
  searchResources(
    args: SearchResourcesCommandInput,
    cb: (err: any, data?: SearchResourcesCommandOutput) => void
  ): void;
  searchResources(
    args: SearchResourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SearchResourcesCommandOutput) => void
  ): void;
  tag(
    args: TagCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagCommandOutput>;
  tag(
    args: TagCommandInput,
    cb: (err: any, data?: TagCommandOutput) => void
  ): void;
  tag(
    args: TagCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagCommandOutput) => void
  ): void;
  ungroupResources(
    args: UngroupResourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UngroupResourcesCommandOutput>;
  ungroupResources(
    args: UngroupResourcesCommandInput,
    cb: (err: any, data?: UngroupResourcesCommandOutput) => void
  ): void;
  ungroupResources(
    args: UngroupResourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UngroupResourcesCommandOutput) => void
  ): void;
  untag(
    args: UntagCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagCommandOutput>;
  untag(
    args: UntagCommandInput,
    cb: (err: any, data?: UntagCommandOutput) => void
  ): void;
  untag(
    args: UntagCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagCommandOutput) => void
  ): void;
  updateAccountSettings(): Promise<UpdateAccountSettingsCommandOutput>;
  updateAccountSettings(
    args: UpdateAccountSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAccountSettingsCommandOutput>;
  updateAccountSettings(
    args: UpdateAccountSettingsCommandInput,
    cb: (err: any, data?: UpdateAccountSettingsCommandOutput) => void
  ): void;
  updateAccountSettings(
    args: UpdateAccountSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAccountSettingsCommandOutput) => void
  ): void;
  updateGroup(): Promise<UpdateGroupCommandOutput>;
  updateGroup(
    args: UpdateGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGroupCommandOutput>;
  updateGroup(
    args: UpdateGroupCommandInput,
    cb: (err: any, data?: UpdateGroupCommandOutput) => void
  ): void;
  updateGroup(
    args: UpdateGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGroupCommandOutput) => void
  ): void;
  updateGroupQuery(
    args: UpdateGroupQueryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGroupQueryCommandOutput>;
  updateGroupQuery(
    args: UpdateGroupQueryCommandInput,
    cb: (err: any, data?: UpdateGroupQueryCommandOutput) => void
  ): void;
  updateGroupQuery(
    args: UpdateGroupQueryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGroupQueryCommandOutput) => void
  ): void;
}
export declare class ResourceGroups
  extends ResourceGroupsClient
  implements ResourceGroups {}
