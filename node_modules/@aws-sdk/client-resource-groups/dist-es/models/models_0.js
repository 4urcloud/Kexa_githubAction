import { ResourceGroupsServiceException as __BaseException } from "./ResourceGroupsServiceException";
export const GroupLifecycleEventsDesiredStatus = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
export const GroupLifecycleEventsStatus = {
    ACTIVE: "ACTIVE",
    ERROR: "ERROR",
    INACTIVE: "INACTIVE",
    IN_PROGRESS: "IN_PROGRESS",
};
export class BadRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.Message = opts.Message;
    }
}
export const QueryType = {
    CLOUDFORMATION_STACK_1_0: "CLOUDFORMATION_STACK_1_0",
    TAG_FILTERS_1_0: "TAG_FILTERS_1_0",
};
export const GroupConfigurationStatus = {
    UPDATE_COMPLETE: "UPDATE_COMPLETE",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export class ForbiddenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class MethodNotAllowedException extends __BaseException {
    constructor(opts) {
        super({
            name: "MethodNotAllowedException",
            $fault: "client",
            ...opts,
        });
        this.name = "MethodNotAllowedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MethodNotAllowedException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export const ResourceFilterName = {
    ResourceType: "resource-type",
};
export const QueryErrorCode = {
    CLOUDFORMATION_STACK_INACTIVE: "CLOUDFORMATION_STACK_INACTIVE",
    CLOUDFORMATION_STACK_NOT_EXISTING: "CLOUDFORMATION_STACK_NOT_EXISTING",
    CLOUDFORMATION_STACK_UNASSUMABLE_ROLE: "CLOUDFORMATION_STACK_UNASSUMABLE_ROLE",
    RESOURCE_TYPE_NOT_SUPPORTED: "RESOURCE_TYPE_NOT_SUPPORTED",
};
export const ResourceStatusValue = {
    Pending: "PENDING",
};
export class UnauthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
        this.Message = opts.Message;
    }
}
export const GroupFilterName = {
    ConfigurationType: "configuration-type",
    ResourceType: "resource-type",
};
