"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  CancelJournalKinesisStreamCommand: () => CancelJournalKinesisStreamCommand,
  CreateLedgerCommand: () => CreateLedgerCommand,
  DeleteLedgerCommand: () => DeleteLedgerCommand,
  DescribeJournalKinesisStreamCommand: () => DescribeJournalKinesisStreamCommand,
  DescribeJournalS3ExportCommand: () => DescribeJournalS3ExportCommand,
  DescribeLedgerCommand: () => DescribeLedgerCommand,
  EncryptionStatus: () => EncryptionStatus,
  ErrorCause: () => ErrorCause,
  ExportJournalToS3Command: () => ExportJournalToS3Command,
  ExportStatus: () => ExportStatus,
  GetBlockCommand: () => GetBlockCommand,
  GetBlockRequestFilterSensitiveLog: () => GetBlockRequestFilterSensitiveLog,
  GetBlockResponseFilterSensitiveLog: () => GetBlockResponseFilterSensitiveLog,
  GetDigestCommand: () => GetDigestCommand,
  GetDigestResponseFilterSensitiveLog: () => GetDigestResponseFilterSensitiveLog,
  GetRevisionCommand: () => GetRevisionCommand,
  GetRevisionRequestFilterSensitiveLog: () => GetRevisionRequestFilterSensitiveLog,
  GetRevisionResponseFilterSensitiveLog: () => GetRevisionResponseFilterSensitiveLog,
  InvalidParameterException: () => InvalidParameterException,
  LedgerState: () => LedgerState,
  LimitExceededException: () => LimitExceededException,
  ListJournalKinesisStreamsForLedgerCommand: () => ListJournalKinesisStreamsForLedgerCommand,
  ListJournalS3ExportsCommand: () => ListJournalS3ExportsCommand,
  ListJournalS3ExportsForLedgerCommand: () => ListJournalS3ExportsForLedgerCommand,
  ListLedgersCommand: () => ListLedgersCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  OutputFormat: () => OutputFormat,
  PermissionsMode: () => PermissionsMode,
  QLDB: () => QLDB,
  QLDBClient: () => QLDBClient,
  QLDBServiceException: () => QLDBServiceException,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceInUseException: () => ResourceInUseException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResourcePreconditionNotMetException: () => ResourcePreconditionNotMetException,
  S3ObjectEncryptionType: () => S3ObjectEncryptionType,
  StreamJournalToKinesisCommand: () => StreamJournalToKinesisCommand,
  StreamStatus: () => StreamStatus,
  TagResourceCommand: () => TagResourceCommand,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateLedgerCommand: () => UpdateLedgerCommand,
  UpdateLedgerPermissionsModeCommand: () => UpdateLedgerPermissionsModeCommand,
  ValueHolderFilterSensitiveLog: () => ValueHolderFilterSensitiveLog,
  __Client: () => import_smithy_client.Client,
  paginateListJournalKinesisStreamsForLedger: () => paginateListJournalKinesisStreamsForLedger,
  paginateListJournalS3Exports: () => paginateListJournalS3Exports,
  paginateListJournalS3ExportsForLedger: () => paginateListJournalS3ExportsForLedger,
  paginateListLedgers: () => paginateListLedgers
});
module.exports = __toCommonJS(src_exports);

// src/QLDBClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "qldb"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/QLDBClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/QLDBClient.ts
var _QLDBClient = class _QLDBClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultQLDBHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_QLDBClient, "QLDBClient");
var QLDBClient = _QLDBClient;

// src/QLDB.ts


// src/commands/CancelJournalKinesisStreamCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts



// src/models/models_0.ts


// src/models/QLDBServiceException.ts

var _QLDBServiceException = class _QLDBServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _QLDBServiceException.prototype);
  }
};
__name(_QLDBServiceException, "QLDBServiceException");
var QLDBServiceException = _QLDBServiceException;

// src/models/models_0.ts
var _InvalidParameterException = class _InvalidParameterException extends QLDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidParameterException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidParameterException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidParameterException.prototype);
    this.Message = opts.Message;
    this.ParameterName = opts.ParameterName;
  }
};
__name(_InvalidParameterException, "InvalidParameterException");
var InvalidParameterException = _InvalidParameterException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends QLDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
    this.ResourceType = opts.ResourceType;
    this.ResourceName = opts.ResourceName;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ResourcePreconditionNotMetException = class _ResourcePreconditionNotMetException extends QLDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourcePreconditionNotMetException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourcePreconditionNotMetException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourcePreconditionNotMetException.prototype);
    this.Message = opts.Message;
    this.ResourceType = opts.ResourceType;
    this.ResourceName = opts.ResourceName;
  }
};
__name(_ResourcePreconditionNotMetException, "ResourcePreconditionNotMetException");
var ResourcePreconditionNotMetException = _ResourcePreconditionNotMetException;
var PermissionsMode = {
  ALLOW_ALL: "ALLOW_ALL",
  STANDARD: "STANDARD"
};
var LedgerState = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETED: "DELETED",
  DELETING: "DELETING"
};
var _LimitExceededException = class _LimitExceededException extends QLDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
    this.Message = opts.Message;
    this.ResourceType = opts.ResourceType;
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends QLDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
    this.Message = opts.Message;
    this.ResourceType = opts.ResourceType;
    this.ResourceName = opts.ResourceName;
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var _ResourceInUseException = class _ResourceInUseException extends QLDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceInUseException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceInUseException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceInUseException.prototype);
    this.Message = opts.Message;
    this.ResourceType = opts.ResourceType;
    this.ResourceName = opts.ResourceName;
  }
};
__name(_ResourceInUseException, "ResourceInUseException");
var ResourceInUseException = _ResourceInUseException;
var ErrorCause = {
  IAM_PERMISSION_REVOKED: "IAM_PERMISSION_REVOKED",
  KINESIS_STREAM_NOT_FOUND: "KINESIS_STREAM_NOT_FOUND"
};
var StreamStatus = {
  ACTIVE: "ACTIVE",
  CANCELED: "CANCELED",
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IMPAIRED: "IMPAIRED"
};
var OutputFormat = {
  ION_BINARY: "ION_BINARY",
  ION_TEXT: "ION_TEXT",
  JSON: "JSON"
};
var S3ObjectEncryptionType = {
  NO_ENCRYPTION: "NO_ENCRYPTION",
  SSE_KMS: "SSE_KMS",
  SSE_S3: "SSE_S3"
};
var ExportStatus = {
  CANCELLED: "CANCELLED",
  COMPLETED: "COMPLETED",
  IN_PROGRESS: "IN_PROGRESS"
};
var EncryptionStatus = {
  ENABLED: "ENABLED",
  KMS_KEY_INACCESSIBLE: "KMS_KEY_INACCESSIBLE",
  UPDATING: "UPDATING"
};
var ValueHolderFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.IonText && { IonText: import_smithy_client.SENSITIVE_STRING }
}), "ValueHolderFilterSensitiveLog");
var GetBlockRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.BlockAddress && { BlockAddress: import_smithy_client.SENSITIVE_STRING },
  ...obj.DigestTipAddress && { DigestTipAddress: import_smithy_client.SENSITIVE_STRING }
}), "GetBlockRequestFilterSensitiveLog");
var GetBlockResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Block && { Block: import_smithy_client.SENSITIVE_STRING },
  ...obj.Proof && { Proof: import_smithy_client.SENSITIVE_STRING }
}), "GetBlockResponseFilterSensitiveLog");
var GetDigestResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.DigestTipAddress && { DigestTipAddress: import_smithy_client.SENSITIVE_STRING }
}), "GetDigestResponseFilterSensitiveLog");
var GetRevisionRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.BlockAddress && { BlockAddress: import_smithy_client.SENSITIVE_STRING },
  ...obj.DigestTipAddress && { DigestTipAddress: import_smithy_client.SENSITIVE_STRING }
}), "GetRevisionRequestFilterSensitiveLog");
var GetRevisionResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Proof && { Proof: import_smithy_client.SENSITIVE_STRING },
  ...obj.Revision && { Revision: import_smithy_client.SENSITIVE_STRING }
}), "GetRevisionResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CancelJournalKinesisStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{LedgerName}/journal-kinesis-streams/{StreamId}");
  b.p("LedgerName", () => input.LedgerName, "{LedgerName}", false);
  b.p("StreamId", () => input.StreamId, "{StreamId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_CancelJournalKinesisStreamCommand");
var se_CreateLedgerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DeletionProtection: [],
      KmsKey: [],
      Name: [],
      PermissionsMode: [],
      Tags: (_) => se_Tags(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLedgerCommand");
var se_DeleteLedgerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{Name}");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteLedgerCommand");
var se_DescribeJournalKinesisStreamCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{LedgerName}/journal-kinesis-streams/{StreamId}");
  b.p("LedgerName", () => input.LedgerName, "{LedgerName}", false);
  b.p("StreamId", () => input.StreamId, "{StreamId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeJournalKinesisStreamCommand");
var se_DescribeJournalS3ExportCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{Name}/journal-s3-exports/{ExportId}");
  b.p("Name", () => input.Name, "{Name}", false);
  b.p("ExportId", () => input.ExportId, "{ExportId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeJournalS3ExportCommand");
var se_DescribeLedgerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{Name}");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeLedgerCommand");
var se_ExportJournalToS3Command = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers/{Name}/journal-s3-exports");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ExclusiveEndTime: (_) => Math.round(_.getTime() / 1e3),
      InclusiveStartTime: (_) => Math.round(_.getTime() / 1e3),
      OutputFormat: [],
      RoleArn: [],
      S3ExportConfiguration: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ExportJournalToS3Command");
var se_GetBlockCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers/{Name}/block");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      BlockAddress: (_) => (0, import_smithy_client._json)(_),
      DigestTipAddress: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetBlockCommand");
var se_GetDigestCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{Name}/digest");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetDigestCommand");
var se_GetRevisionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers/{Name}/revision");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      BlockAddress: (_) => (0, import_smithy_client._json)(_),
      DigestTipAddress: (_) => (0, import_smithy_client._json)(_),
      DocumentId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetRevisionCommand");
var se_ListJournalKinesisStreamsForLedgerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{LedgerName}/journal-kinesis-streams");
  b.p("LedgerName", () => input.LedgerName, "{LedgerName}", false);
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJournalKinesisStreamsForLedgerCommand");
var se_ListJournalS3ExportsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/journal-s3-exports");
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJournalS3ExportsCommand");
var se_ListJournalS3ExportsForLedgerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers/{Name}/journal-s3-exports");
  b.p("Name", () => input.Name, "{Name}", false);
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJournalS3ExportsForLedgerCommand");
var se_ListLedgersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/ledgers");
  const query = (0, import_smithy_client.map)({
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nt]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListLedgersCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_StreamJournalToKinesisCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers/{LedgerName}/journal-kinesis-streams");
  b.p("LedgerName", () => input.LedgerName, "{LedgerName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ExclusiveEndTime: (_) => Math.round(_.getTime() / 1e3),
      InclusiveStartTime: (_) => Math.round(_.getTime() / 1e3),
      KinesisConfiguration: (_) => (0, import_smithy_client._json)(_),
      RoleArn: [],
      StreamName: [],
      Tags: (_) => se_Tags(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StreamJournalToKinesisCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Tags: (_) => se_Tags(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateLedgerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers/{Name}");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DeletionProtection: [],
      KmsKey: []
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateLedgerCommand");
var se_UpdateLedgerPermissionsModeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ledgers/{Name}/permissions-mode");
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      PermissionsMode: []
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateLedgerPermissionsModeCommand");
var de_CancelJournalKinesisStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StreamId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelJournalKinesisStreamCommand");
var de_CreateLedgerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    CreationDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DeletionProtection: import_smithy_client.expectBoolean,
    KmsKeyArn: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    PermissionsMode: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateLedgerCommand");
var de_DeleteLedgerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLedgerCommand");
var de_DescribeJournalKinesisStreamCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Stream: (_) => de_JournalKinesisStreamDescription(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeJournalKinesisStreamCommand");
var de_DescribeJournalS3ExportCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ExportDescription: (_) => de_JournalS3ExportDescription(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeJournalS3ExportCommand");
var de_DescribeLedgerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    CreationDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DeletionProtection: import_smithy_client.expectBoolean,
    EncryptionDescription: (_) => de_LedgerEncryptionDescription(_, context),
    Name: import_smithy_client.expectString,
    PermissionsMode: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeLedgerCommand");
var de_ExportJournalToS3Command = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ExportId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ExportJournalToS3Command");
var de_GetBlockCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Block: import_smithy_client._json,
    Proof: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetBlockCommand");
var de_GetDigestCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Digest: context.base64Decoder,
    DigestTipAddress: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDigestCommand");
var de_GetRevisionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Proof: import_smithy_client._json,
    Revision: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRevisionCommand");
var de_ListJournalKinesisStreamsForLedgerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Streams: (_) => de_JournalKinesisStreamDescriptionList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJournalKinesisStreamsForLedgerCommand");
var de_ListJournalS3ExportsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    JournalS3Exports: (_) => de_JournalS3ExportList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJournalS3ExportsCommand");
var de_ListJournalS3ExportsForLedgerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    JournalS3Exports: (_) => de_JournalS3ExportList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJournalS3ExportsForLedgerCommand");
var de_ListLedgersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Ledgers: (_) => de_LedgerList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListLedgersCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: (_) => de_Tags(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_StreamJournalToKinesisCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StreamId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StreamJournalToKinesisCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateLedgerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    CreationDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DeletionProtection: import_smithy_client.expectBoolean,
    EncryptionDescription: (_) => de_LedgerEncryptionDescription(_, context),
    Name: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLedgerCommand");
var de_UpdateLedgerPermissionsModeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    PermissionsMode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLedgerPermissionsModeCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InvalidParameterException":
    case "com.amazonaws.qldb#InvalidParameterException":
      throw await de_InvalidParameterExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.qldb#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ResourcePreconditionNotMetException":
    case "com.amazonaws.qldb#ResourcePreconditionNotMetException":
      throw await de_ResourcePreconditionNotMetExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.qldb#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.qldb#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "ResourceInUseException":
    case "com.amazonaws.qldb#ResourceInUseException":
      throw await de_ResourceInUseExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(QLDBServiceException);
var de_InvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ParameterName: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidParameterException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidParameterExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceInUseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceInUseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceInUseExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ResourcePreconditionNotMetExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceName: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourcePreconditionNotMetException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourcePreconditionNotMetExceptionRes");
var se_Tags = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      acc[key] = null;
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
}, "se_Tags");
var de_JournalKinesisStreamDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    CreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ErrorCause: import_smithy_client.expectString,
    ExclusiveEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    InclusiveStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    KinesisConfiguration: import_smithy_client._json,
    LedgerName: import_smithy_client.expectString,
    RoleArn: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StreamId: import_smithy_client.expectString,
    StreamName: import_smithy_client.expectString
  });
}, "de_JournalKinesisStreamDescription");
var de_JournalKinesisStreamDescriptionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JournalKinesisStreamDescription(entry, context);
  });
  return retVal;
}, "de_JournalKinesisStreamDescriptionList");
var de_JournalS3ExportDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ExclusiveEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ExportCreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ExportId: import_smithy_client.expectString,
    InclusiveStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LedgerName: import_smithy_client.expectString,
    OutputFormat: import_smithy_client.expectString,
    RoleArn: import_smithy_client.expectString,
    S3ExportConfiguration: import_smithy_client._json,
    Status: import_smithy_client.expectString
  });
}, "de_JournalS3ExportDescription");
var de_JournalS3ExportList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JournalS3ExportDescription(entry, context);
  });
  return retVal;
}, "de_JournalS3ExportList");
var de_LedgerEncryptionDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    EncryptionStatus: import_smithy_client.expectString,
    InaccessibleKmsKeyDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    KmsKeyArn: import_smithy_client.expectString
  });
}, "de_LedgerEncryptionDescription");
var de_LedgerList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LedgerSummary(entry, context);
  });
  return retVal;
}, "de_LedgerList");
var de_LedgerSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
}, "de_LedgerSummary");
var de_Tags = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      acc[key] = null;
      return acc;
    }
    acc[key] = (0, import_smithy_client.expectString)(value);
    return acc;
  }, {});
}, "de_Tags");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _MR = "MaxResults";
var _NT = "NextToken";
var _TK = "TagKeys";
var _mr = "max_results";
var _nt = "next_token";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CancelJournalKinesisStreamCommand.ts
var _CancelJournalKinesisStreamCommand = class _CancelJournalKinesisStreamCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "CancelJournalKinesisStream", {}).n("QLDBClient", "CancelJournalKinesisStreamCommand").f(void 0, void 0).ser(se_CancelJournalKinesisStreamCommand).de(de_CancelJournalKinesisStreamCommand).build() {
};
__name(_CancelJournalKinesisStreamCommand, "CancelJournalKinesisStreamCommand");
var CancelJournalKinesisStreamCommand = _CancelJournalKinesisStreamCommand;

// src/commands/CreateLedgerCommand.ts




var _CreateLedgerCommand = class _CreateLedgerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "CreateLedger", {}).n("QLDBClient", "CreateLedgerCommand").f(void 0, void 0).ser(se_CreateLedgerCommand).de(de_CreateLedgerCommand).build() {
};
__name(_CreateLedgerCommand, "CreateLedgerCommand");
var CreateLedgerCommand = _CreateLedgerCommand;

// src/commands/DeleteLedgerCommand.ts




var _DeleteLedgerCommand = class _DeleteLedgerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "DeleteLedger", {}).n("QLDBClient", "DeleteLedgerCommand").f(void 0, void 0).ser(se_DeleteLedgerCommand).de(de_DeleteLedgerCommand).build() {
};
__name(_DeleteLedgerCommand, "DeleteLedgerCommand");
var DeleteLedgerCommand = _DeleteLedgerCommand;

// src/commands/DescribeJournalKinesisStreamCommand.ts




var _DescribeJournalKinesisStreamCommand = class _DescribeJournalKinesisStreamCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "DescribeJournalKinesisStream", {}).n("QLDBClient", "DescribeJournalKinesisStreamCommand").f(void 0, void 0).ser(se_DescribeJournalKinesisStreamCommand).de(de_DescribeJournalKinesisStreamCommand).build() {
};
__name(_DescribeJournalKinesisStreamCommand, "DescribeJournalKinesisStreamCommand");
var DescribeJournalKinesisStreamCommand = _DescribeJournalKinesisStreamCommand;

// src/commands/DescribeJournalS3ExportCommand.ts




var _DescribeJournalS3ExportCommand = class _DescribeJournalS3ExportCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "DescribeJournalS3Export", {}).n("QLDBClient", "DescribeJournalS3ExportCommand").f(void 0, void 0).ser(se_DescribeJournalS3ExportCommand).de(de_DescribeJournalS3ExportCommand).build() {
};
__name(_DescribeJournalS3ExportCommand, "DescribeJournalS3ExportCommand");
var DescribeJournalS3ExportCommand = _DescribeJournalS3ExportCommand;

// src/commands/DescribeLedgerCommand.ts




var _DescribeLedgerCommand = class _DescribeLedgerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "DescribeLedger", {}).n("QLDBClient", "DescribeLedgerCommand").f(void 0, void 0).ser(se_DescribeLedgerCommand).de(de_DescribeLedgerCommand).build() {
};
__name(_DescribeLedgerCommand, "DescribeLedgerCommand");
var DescribeLedgerCommand = _DescribeLedgerCommand;

// src/commands/ExportJournalToS3Command.ts




var _ExportJournalToS3Command = class _ExportJournalToS3Command extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "ExportJournalToS3", {}).n("QLDBClient", "ExportJournalToS3Command").f(void 0, void 0).ser(se_ExportJournalToS3Command).de(de_ExportJournalToS3Command).build() {
};
__name(_ExportJournalToS3Command, "ExportJournalToS3Command");
var ExportJournalToS3Command = _ExportJournalToS3Command;

// src/commands/GetBlockCommand.ts




var _GetBlockCommand = class _GetBlockCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "GetBlock", {}).n("QLDBClient", "GetBlockCommand").f(GetBlockRequestFilterSensitiveLog, GetBlockResponseFilterSensitiveLog).ser(se_GetBlockCommand).de(de_GetBlockCommand).build() {
};
__name(_GetBlockCommand, "GetBlockCommand");
var GetBlockCommand = _GetBlockCommand;

// src/commands/GetDigestCommand.ts




var _GetDigestCommand = class _GetDigestCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "GetDigest", {}).n("QLDBClient", "GetDigestCommand").f(void 0, GetDigestResponseFilterSensitiveLog).ser(se_GetDigestCommand).de(de_GetDigestCommand).build() {
};
__name(_GetDigestCommand, "GetDigestCommand");
var GetDigestCommand = _GetDigestCommand;

// src/commands/GetRevisionCommand.ts




var _GetRevisionCommand = class _GetRevisionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "GetRevision", {}).n("QLDBClient", "GetRevisionCommand").f(GetRevisionRequestFilterSensitiveLog, GetRevisionResponseFilterSensitiveLog).ser(se_GetRevisionCommand).de(de_GetRevisionCommand).build() {
};
__name(_GetRevisionCommand, "GetRevisionCommand");
var GetRevisionCommand = _GetRevisionCommand;

// src/commands/ListJournalKinesisStreamsForLedgerCommand.ts




var _ListJournalKinesisStreamsForLedgerCommand = class _ListJournalKinesisStreamsForLedgerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "ListJournalKinesisStreamsForLedger", {}).n("QLDBClient", "ListJournalKinesisStreamsForLedgerCommand").f(void 0, void 0).ser(se_ListJournalKinesisStreamsForLedgerCommand).de(de_ListJournalKinesisStreamsForLedgerCommand).build() {
};
__name(_ListJournalKinesisStreamsForLedgerCommand, "ListJournalKinesisStreamsForLedgerCommand");
var ListJournalKinesisStreamsForLedgerCommand = _ListJournalKinesisStreamsForLedgerCommand;

// src/commands/ListJournalS3ExportsCommand.ts




var _ListJournalS3ExportsCommand = class _ListJournalS3ExportsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "ListJournalS3Exports", {}).n("QLDBClient", "ListJournalS3ExportsCommand").f(void 0, void 0).ser(se_ListJournalS3ExportsCommand).de(de_ListJournalS3ExportsCommand).build() {
};
__name(_ListJournalS3ExportsCommand, "ListJournalS3ExportsCommand");
var ListJournalS3ExportsCommand = _ListJournalS3ExportsCommand;

// src/commands/ListJournalS3ExportsForLedgerCommand.ts




var _ListJournalS3ExportsForLedgerCommand = class _ListJournalS3ExportsForLedgerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "ListJournalS3ExportsForLedger", {}).n("QLDBClient", "ListJournalS3ExportsForLedgerCommand").f(void 0, void 0).ser(se_ListJournalS3ExportsForLedgerCommand).de(de_ListJournalS3ExportsForLedgerCommand).build() {
};
__name(_ListJournalS3ExportsForLedgerCommand, "ListJournalS3ExportsForLedgerCommand");
var ListJournalS3ExportsForLedgerCommand = _ListJournalS3ExportsForLedgerCommand;

// src/commands/ListLedgersCommand.ts




var _ListLedgersCommand = class _ListLedgersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "ListLedgers", {}).n("QLDBClient", "ListLedgersCommand").f(void 0, void 0).ser(se_ListLedgersCommand).de(de_ListLedgersCommand).build() {
};
__name(_ListLedgersCommand, "ListLedgersCommand");
var ListLedgersCommand = _ListLedgersCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "ListTagsForResource", {}).n("QLDBClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/StreamJournalToKinesisCommand.ts




var _StreamJournalToKinesisCommand = class _StreamJournalToKinesisCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "StreamJournalToKinesis", {}).n("QLDBClient", "StreamJournalToKinesisCommand").f(void 0, void 0).ser(se_StreamJournalToKinesisCommand).de(de_StreamJournalToKinesisCommand).build() {
};
__name(_StreamJournalToKinesisCommand, "StreamJournalToKinesisCommand");
var StreamJournalToKinesisCommand = _StreamJournalToKinesisCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "TagResource", {}).n("QLDBClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "UntagResource", {}).n("QLDBClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateLedgerCommand.ts




var _UpdateLedgerCommand = class _UpdateLedgerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "UpdateLedger", {}).n("QLDBClient", "UpdateLedgerCommand").f(void 0, void 0).ser(se_UpdateLedgerCommand).de(de_UpdateLedgerCommand).build() {
};
__name(_UpdateLedgerCommand, "UpdateLedgerCommand");
var UpdateLedgerCommand = _UpdateLedgerCommand;

// src/commands/UpdateLedgerPermissionsModeCommand.ts




var _UpdateLedgerPermissionsModeCommand = class _UpdateLedgerPermissionsModeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonQLDB", "UpdateLedgerPermissionsMode", {}).n("QLDBClient", "UpdateLedgerPermissionsModeCommand").f(void 0, void 0).ser(se_UpdateLedgerPermissionsModeCommand).de(de_UpdateLedgerPermissionsModeCommand).build() {
};
__name(_UpdateLedgerPermissionsModeCommand, "UpdateLedgerPermissionsModeCommand");
var UpdateLedgerPermissionsModeCommand = _UpdateLedgerPermissionsModeCommand;

// src/QLDB.ts
var commands = {
  CancelJournalKinesisStreamCommand,
  CreateLedgerCommand,
  DeleteLedgerCommand,
  DescribeJournalKinesisStreamCommand,
  DescribeJournalS3ExportCommand,
  DescribeLedgerCommand,
  ExportJournalToS3Command,
  GetBlockCommand,
  GetDigestCommand,
  GetRevisionCommand,
  ListJournalKinesisStreamsForLedgerCommand,
  ListJournalS3ExportsCommand,
  ListJournalS3ExportsForLedgerCommand,
  ListLedgersCommand,
  ListTagsForResourceCommand,
  StreamJournalToKinesisCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateLedgerCommand,
  UpdateLedgerPermissionsModeCommand
};
var _QLDB = class _QLDB extends QLDBClient {
};
__name(_QLDB, "QLDB");
var QLDB = _QLDB;
(0, import_smithy_client.createAggregatedClient)(commands, QLDB);

// src/pagination/ListJournalKinesisStreamsForLedgerPaginator.ts

var paginateListJournalKinesisStreamsForLedger = (0, import_core.createPaginator)(QLDBClient, ListJournalKinesisStreamsForLedgerCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListJournalS3ExportsForLedgerPaginator.ts

var paginateListJournalS3ExportsForLedger = (0, import_core.createPaginator)(QLDBClient, ListJournalS3ExportsForLedgerCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListJournalS3ExportsPaginator.ts

var paginateListJournalS3Exports = (0, import_core.createPaginator)(QLDBClient, ListJournalS3ExportsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLedgersPaginator.ts

var paginateListLedgers = (0, import_core.createPaginator)(QLDBClient, ListLedgersCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  QLDBServiceException,
  __Client,
  QLDBClient,
  QLDB,
  $Command,
  CancelJournalKinesisStreamCommand,
  CreateLedgerCommand,
  DeleteLedgerCommand,
  DescribeJournalKinesisStreamCommand,
  DescribeJournalS3ExportCommand,
  DescribeLedgerCommand,
  ExportJournalToS3Command,
  GetBlockCommand,
  GetDigestCommand,
  GetRevisionCommand,
  ListJournalKinesisStreamsForLedgerCommand,
  ListJournalS3ExportsCommand,
  ListJournalS3ExportsForLedgerCommand,
  ListLedgersCommand,
  ListTagsForResourceCommand,
  StreamJournalToKinesisCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateLedgerCommand,
  UpdateLedgerPermissionsModeCommand,
  paginateListJournalKinesisStreamsForLedger,
  paginateListJournalS3ExportsForLedger,
  paginateListJournalS3Exports,
  paginateListLedgers,
  InvalidParameterException,
  ResourceNotFoundException,
  ResourcePreconditionNotMetException,
  PermissionsMode,
  LedgerState,
  LimitExceededException,
  ResourceAlreadyExistsException,
  ResourceInUseException,
  ErrorCause,
  StreamStatus,
  OutputFormat,
  S3ObjectEncryptionType,
  ExportStatus,
  EncryptionStatus,
  ValueHolderFilterSensitiveLog,
  GetBlockRequestFilterSensitiveLog,
  GetBlockResponseFilterSensitiveLog,
  GetDigestResponseFilterSensitiveLog,
  GetRevisionRequestFilterSensitiveLog,
  GetRevisionResponseFilterSensitiveLog
});

