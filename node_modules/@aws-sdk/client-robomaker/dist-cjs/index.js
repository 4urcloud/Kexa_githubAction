"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Architecture: () => Architecture,
  BatchDeleteWorldsCommand: () => BatchDeleteWorldsCommand,
  BatchDescribeSimulationJobCommand: () => BatchDescribeSimulationJobCommand,
  CancelDeploymentJobCommand: () => CancelDeploymentJobCommand,
  CancelSimulationJobBatchCommand: () => CancelSimulationJobBatchCommand,
  CancelSimulationJobCommand: () => CancelSimulationJobCommand,
  CancelWorldExportJobCommand: () => CancelWorldExportJobCommand,
  CancelWorldGenerationJobCommand: () => CancelWorldGenerationJobCommand,
  ComputeType: () => ComputeType,
  ConcurrentDeploymentException: () => ConcurrentDeploymentException,
  CreateDeploymentJobCommand: () => CreateDeploymentJobCommand,
  CreateFleetCommand: () => CreateFleetCommand,
  CreateRobotApplicationCommand: () => CreateRobotApplicationCommand,
  CreateRobotApplicationVersionCommand: () => CreateRobotApplicationVersionCommand,
  CreateRobotCommand: () => CreateRobotCommand,
  CreateSimulationApplicationCommand: () => CreateSimulationApplicationCommand,
  CreateSimulationApplicationVersionCommand: () => CreateSimulationApplicationVersionCommand,
  CreateSimulationJobCommand: () => CreateSimulationJobCommand,
  CreateWorldExportJobCommand: () => CreateWorldExportJobCommand,
  CreateWorldGenerationJobCommand: () => CreateWorldGenerationJobCommand,
  CreateWorldTemplateCommand: () => CreateWorldTemplateCommand,
  DataSourceType: () => DataSourceType,
  DeleteFleetCommand: () => DeleteFleetCommand,
  DeleteRobotApplicationCommand: () => DeleteRobotApplicationCommand,
  DeleteRobotCommand: () => DeleteRobotCommand,
  DeleteSimulationApplicationCommand: () => DeleteSimulationApplicationCommand,
  DeleteWorldTemplateCommand: () => DeleteWorldTemplateCommand,
  DeploymentJobErrorCode: () => DeploymentJobErrorCode,
  DeploymentStatus: () => DeploymentStatus,
  DeregisterRobotCommand: () => DeregisterRobotCommand,
  DescribeDeploymentJobCommand: () => DescribeDeploymentJobCommand,
  DescribeFleetCommand: () => DescribeFleetCommand,
  DescribeRobotApplicationCommand: () => DescribeRobotApplicationCommand,
  DescribeRobotCommand: () => DescribeRobotCommand,
  DescribeSimulationApplicationCommand: () => DescribeSimulationApplicationCommand,
  DescribeSimulationJobBatchCommand: () => DescribeSimulationJobBatchCommand,
  DescribeSimulationJobCommand: () => DescribeSimulationJobCommand,
  DescribeWorldCommand: () => DescribeWorldCommand,
  DescribeWorldExportJobCommand: () => DescribeWorldExportJobCommand,
  DescribeWorldGenerationJobCommand: () => DescribeWorldGenerationJobCommand,
  DescribeWorldTemplateCommand: () => DescribeWorldTemplateCommand,
  ExitBehavior: () => ExitBehavior,
  FailureBehavior: () => FailureBehavior,
  GetWorldTemplateBodyCommand: () => GetWorldTemplateBodyCommand,
  IdempotentParameterMismatchException: () => IdempotentParameterMismatchException,
  InternalServerException: () => InternalServerException,
  InvalidParameterException: () => InvalidParameterException,
  LimitExceededException: () => LimitExceededException,
  ListDeploymentJobsCommand: () => ListDeploymentJobsCommand,
  ListFleetsCommand: () => ListFleetsCommand,
  ListRobotApplicationsCommand: () => ListRobotApplicationsCommand,
  ListRobotsCommand: () => ListRobotsCommand,
  ListSimulationApplicationsCommand: () => ListSimulationApplicationsCommand,
  ListSimulationJobBatchesCommand: () => ListSimulationJobBatchesCommand,
  ListSimulationJobsCommand: () => ListSimulationJobsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListWorldExportJobsCommand: () => ListWorldExportJobsCommand,
  ListWorldGenerationJobsCommand: () => ListWorldGenerationJobsCommand,
  ListWorldTemplatesCommand: () => ListWorldTemplatesCommand,
  ListWorldsCommand: () => ListWorldsCommand,
  RegisterRobotCommand: () => RegisterRobotCommand,
  RenderingEngineType: () => RenderingEngineType,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RestartSimulationJobCommand: () => RestartSimulationJobCommand,
  RoboMaker: () => RoboMaker,
  RoboMakerClient: () => RoboMakerClient,
  RoboMakerServiceException: () => RoboMakerServiceException,
  RobotDeploymentStep: () => RobotDeploymentStep,
  RobotSoftwareSuiteType: () => RobotSoftwareSuiteType,
  RobotSoftwareSuiteVersionType: () => RobotSoftwareSuiteVersionType,
  RobotStatus: () => RobotStatus,
  ServiceUnavailableException: () => ServiceUnavailableException,
  SimulationJobBatchErrorCode: () => SimulationJobBatchErrorCode,
  SimulationJobBatchStatus: () => SimulationJobBatchStatus,
  SimulationJobErrorCode: () => SimulationJobErrorCode,
  SimulationJobStatus: () => SimulationJobStatus,
  SimulationSoftwareSuiteType: () => SimulationSoftwareSuiteType,
  StartSimulationJobBatchCommand: () => StartSimulationJobBatchCommand,
  SyncDeploymentJobCommand: () => SyncDeploymentJobCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateRobotApplicationCommand: () => UpdateRobotApplicationCommand,
  UpdateSimulationApplicationCommand: () => UpdateSimulationApplicationCommand,
  UpdateWorldTemplateCommand: () => UpdateWorldTemplateCommand,
  UploadBehavior: () => UploadBehavior,
  WorldExportJobErrorCode: () => WorldExportJobErrorCode,
  WorldExportJobStatus: () => WorldExportJobStatus,
  WorldGenerationJobErrorCode: () => WorldGenerationJobErrorCode,
  WorldGenerationJobStatus: () => WorldGenerationJobStatus,
  __Client: () => import_smithy_client.Client,
  paginateListDeploymentJobs: () => paginateListDeploymentJobs,
  paginateListFleets: () => paginateListFleets,
  paginateListRobotApplications: () => paginateListRobotApplications,
  paginateListRobots: () => paginateListRobots,
  paginateListSimulationApplications: () => paginateListSimulationApplications,
  paginateListSimulationJobBatches: () => paginateListSimulationJobBatches,
  paginateListSimulationJobs: () => paginateListSimulationJobs,
  paginateListWorldExportJobs: () => paginateListWorldExportJobs,
  paginateListWorldGenerationJobs: () => paginateListWorldGenerationJobs,
  paginateListWorldTemplates: () => paginateListWorldTemplates,
  paginateListWorlds: () => paginateListWorlds
});
module.exports = __toCommonJS(src_exports);

// src/RoboMakerClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "robomaker"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/RoboMakerClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/RoboMakerClient.ts
var _RoboMakerClient = class _RoboMakerClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultRoboMakerHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_RoboMakerClient, "RoboMakerClient");
var RoboMakerClient = _RoboMakerClient;

// src/RoboMaker.ts


// src/commands/BatchDeleteWorldsCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/RoboMakerServiceException.ts

var _RoboMakerServiceException = class _RoboMakerServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _RoboMakerServiceException.prototype);
  }
};
__name(_RoboMakerServiceException, "RoboMakerServiceException");
var RoboMakerServiceException = _RoboMakerServiceException;

// src/models/models_0.ts
var Architecture = {
  ARM64: "ARM64",
  ARMHF: "ARMHF",
  X86_64: "X86_64"
};
var _InternalServerException = class _InternalServerException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _InvalidParameterException = class _InvalidParameterException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidParameterException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidParameterException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidParameterException.prototype);
  }
};
__name(_InvalidParameterException, "InvalidParameterException");
var InvalidParameterException = _InvalidParameterException;
var _ThrottlingException = class _ThrottlingException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var ComputeType = {
  CPU: "CPU",
  GPU_AND_CPU: "GPU_AND_CPU"
};
var DataSourceType = {
  Archive: "Archive",
  File: "File",
  Prefix: "Prefix"
};
var FailureBehavior = {
  Continue: "Continue",
  Fail: "Fail"
};
var SimulationJobErrorCode = {
  BadPermissionsCloudwatchLogs: "BadPermissionsCloudwatchLogs",
  BadPermissionsRobotApplication: "BadPermissionsRobotApplication",
  BadPermissionsS3Object: "BadPermissionsS3Object",
  BadPermissionsS3Output: "BadPermissionsS3Output",
  BadPermissionsSimulationApplication: "BadPermissionsSimulationApplication",
  BadPermissionsUserCredentials: "BadPermissionsUserCredentials",
  BatchCanceled: "BatchCanceled",
  BatchTimedOut: "BatchTimedOut",
  ENILimitExceeded: "ENILimitExceeded",
  InternalServiceError: "InternalServiceError",
  InvalidBundleRobotApplication: "InvalidBundleRobotApplication",
  InvalidBundleSimulationApplication: "InvalidBundleSimulationApplication",
  InvalidInput: "InvalidInput",
  InvalidS3Resource: "InvalidS3Resource",
  LimitExceeded: "LimitExceeded",
  MismatchedEtag: "MismatchedEtag",
  RequestThrottled: "RequestThrottled",
  ResourceNotFound: "ResourceNotFound",
  RobotApplicationCrash: "RobotApplicationCrash",
  RobotApplicationHealthCheckFailure: "RobotApplicationHealthCheckFailure",
  RobotApplicationVersionMismatchedEtag: "RobotApplicationVersionMismatchedEtag",
  SimulationApplicationCrash: "SimulationApplicationCrash",
  SimulationApplicationHealthCheckFailure: "SimulationApplicationHealthCheckFailure",
  SimulationApplicationVersionMismatchedEtag: "SimulationApplicationVersionMismatchedEtag",
  SubnetIpLimitExceeded: "SubnetIpLimitExceeded",
  ThrottlingError: "ThrottlingError",
  UploadContentMismatchError: "UploadContentMismatchError",
  WrongRegionRobotApplication: "WrongRegionRobotApplication",
  WrongRegionS3Bucket: "WrongRegionS3Bucket",
  WrongRegionS3Output: "WrongRegionS3Output",
  WrongRegionSimulationApplication: "WrongRegionSimulationApplication"
};
var ExitBehavior = {
  FAIL: "FAIL",
  RESTART: "RESTART"
};
var UploadBehavior = {
  UPLOAD_ON_TERMINATE: "UPLOAD_ON_TERMINATE",
  UPLOAD_ROLLING_AUTO_REMOVE: "UPLOAD_ROLLING_AUTO_REMOVE"
};
var SimulationJobStatus = {
  Canceled: "Canceled",
  Completed: "Completed",
  Failed: "Failed",
  Pending: "Pending",
  Preparing: "Preparing",
  Restarting: "Restarting",
  Running: "Running",
  RunningFailed: "RunningFailed",
  Terminated: "Terminated",
  Terminating: "Terminating"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ConcurrentDeploymentException = class _ConcurrentDeploymentException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentDeploymentException",
      $fault: "client",
      ...opts
    });
    this.name = "ConcurrentDeploymentException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConcurrentDeploymentException.prototype);
  }
};
__name(_ConcurrentDeploymentException, "ConcurrentDeploymentException");
var ConcurrentDeploymentException = _ConcurrentDeploymentException;
var DeploymentJobErrorCode = {
  BadLambdaAssociated: "BadLambdaAssociated",
  BadPermissionError: "BadPermissionError",
  DeploymentFleetDoesNotExist: "DeploymentFleetDoesNotExist",
  DownloadConditionFailed: "DownloadConditionFailed",
  EnvironmentSetupError: "EnvironmentSetupError",
  EtagMismatch: "EtagMismatch",
  ExtractingBundleFailure: "ExtractingBundleFailure",
  FailureThresholdBreached: "FailureThresholdBreached",
  FleetDeploymentTimeout: "FleetDeploymentTimeout",
  GreengrassDeploymentFailed: "GreengrassDeploymentFailed",
  GreengrassGroupVersionDoesNotExist: "GreengrassGroupVersionDoesNotExist",
  InternalServerError: "InternalServerError",
  InvalidGreengrassGroup: "InvalidGreengrassGroup",
  LambdaDeleted: "LambdaDeleted",
  MissingRobotApplicationArchitecture: "MissingRobotApplicationArchitecture",
  MissingRobotArchitecture: "MissingRobotArchitecture",
  MissingRobotDeploymentResource: "MissingRobotDeploymentResource",
  PostLaunchFileFailure: "PostLaunchFileFailure",
  PreLaunchFileFailure: "PreLaunchFileFailure",
  ResourceNotFound: "ResourceNotFound",
  RobotAgentConnectionTimeout: "RobotAgentConnectionTimeout",
  RobotApplicationDoesNotExist: "RobotApplicationDoesNotExist",
  RobotDeploymentAborted: "RobotDeploymentAborted",
  RobotDeploymentNoResponse: "RobotDeploymentNoResponse"
};
var DeploymentStatus = {
  Canceled: "Canceled",
  Failed: "Failed",
  InProgress: "InProgress",
  Pending: "Pending",
  Preparing: "Preparing",
  Succeeded: "Succeeded"
};
var _IdempotentParameterMismatchException = class _IdempotentParameterMismatchException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "IdempotentParameterMismatchException",
      $fault: "client",
      ...opts
    });
    this.name = "IdempotentParameterMismatchException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _IdempotentParameterMismatchException.prototype);
  }
};
__name(_IdempotentParameterMismatchException, "IdempotentParameterMismatchException");
var IdempotentParameterMismatchException = _IdempotentParameterMismatchException;
var _LimitExceededException = class _LimitExceededException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var RobotSoftwareSuiteType = {
  General: "General",
  ROS: "ROS",
  ROS2: "ROS2"
};
var RobotSoftwareSuiteVersionType = {
  Dashing: "Dashing",
  Foxy: "Foxy",
  Kinetic: "Kinetic",
  Melodic: "Melodic"
};
var RenderingEngineType = {
  OGRE: "OGRE"
};
var SimulationSoftwareSuiteType = {
  Gazebo: "Gazebo",
  RosbagPlay: "RosbagPlay",
  SimulationRuntime: "SimulationRuntime"
};
var _ServiceUnavailableException = class _ServiceUnavailableException extends RoboMakerServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
  }
};
__name(_ServiceUnavailableException, "ServiceUnavailableException");
var ServiceUnavailableException = _ServiceUnavailableException;
var WorldExportJobErrorCode = {
  AccessDenied: "AccessDenied",
  InternalServiceError: "InternalServiceError",
  InvalidInput: "InvalidInput",
  LimitExceeded: "LimitExceeded",
  RequestThrottled: "RequestThrottled",
  ResourceNotFound: "ResourceNotFound"
};
var WorldExportJobStatus = {
  Canceled: "Canceled",
  Canceling: "Canceling",
  Completed: "Completed",
  Failed: "Failed",
  Pending: "Pending",
  Running: "Running"
};
var WorldGenerationJobErrorCode = {
  AllWorldGenerationFailed: "AllWorldGenerationFailed",
  InternalServiceError: "InternalServiceError",
  InvalidInput: "InvalidInput",
  LimitExceeded: "LimitExceeded",
  RequestThrottled: "RequestThrottled",
  ResourceNotFound: "ResourceNotFound"
};
var WorldGenerationJobStatus = {
  Canceled: "Canceled",
  Canceling: "Canceling",
  Completed: "Completed",
  Failed: "Failed",
  PartialFailed: "PartialFailed",
  Pending: "Pending",
  Running: "Running"
};
var RobotDeploymentStep = {
  DownloadingExtractingStep: "DownloadingExtracting",
  ExecutingDownloadCondition: "ExecutingDownloadCondition",
  FinishedStep: "Finished",
  LaunchingStep: "Launching",
  PostLaunchStep: "ExecutingPostLaunch",
  PreLaunchStep: "ExecutingPreLaunch",
  ValidatingStep: "Validating"
};
var RobotStatus = {
  Available: "Available",
  Deploying: "Deploying",
  Failed: "Failed",
  InSync: "InSync",
  NoResponse: "NoResponse",
  PendingNewDeployment: "PendingNewDeployment",
  Registered: "Registered"
};
var SimulationJobBatchErrorCode = {
  InternalServiceError: "InternalServiceError"
};
var SimulationJobBatchStatus = {
  Canceled: "Canceled",
  Canceling: "Canceling",
  Completed: "Completed",
  Completing: "Completing",
  Failed: "Failed",
  InProgress: "InProgress",
  Pending: "Pending",
  TimedOut: "TimedOut",
  TimingOut: "TimingOut"
};

// src/protocols/Aws_restJson1.ts
var se_BatchDeleteWorldsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/batchDeleteWorlds");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      worlds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchDeleteWorldsCommand");
var se_BatchDescribeSimulationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/batchDescribeSimulationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      jobs: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchDescribeSimulationJobCommand");
var se_CancelDeploymentJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/cancelDeploymentJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelDeploymentJobCommand");
var se_CancelSimulationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/cancelSimulationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelSimulationJobCommand");
var se_CancelSimulationJobBatchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/cancelSimulationJobBatch");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      batch: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelSimulationJobBatchCommand");
var se_CancelWorldExportJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/cancelWorldExportJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelWorldExportJobCommand");
var se_CancelWorldGenerationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/cancelWorldGenerationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelWorldGenerationJobCommand");
var se_CreateDeploymentJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createDeploymentJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      deploymentApplicationConfigs: (_) => (0, import_smithy_client._json)(_),
      deploymentConfig: (_) => (0, import_smithy_client._json)(_),
      fleet: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDeploymentJobCommand");
var se_CreateFleetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createFleet");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFleetCommand");
var se_CreateRobotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createRobot");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      architecture: [],
      greengrassGroupId: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRobotCommand");
var se_CreateRobotApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createRobotApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      environment: (_) => (0, import_smithy_client._json)(_),
      name: [],
      robotSoftwareSuite: (_) => (0, import_smithy_client._json)(_),
      sources: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRobotApplicationCommand");
var se_CreateRobotApplicationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createRobotApplicationVersion");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      currentRevisionId: [],
      imageDigest: [],
      s3Etags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRobotApplicationVersionCommand");
var se_CreateSimulationApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createSimulationApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      environment: (_) => (0, import_smithy_client._json)(_),
      name: [],
      renderingEngine: (_) => (0, import_smithy_client._json)(_),
      robotSoftwareSuite: (_) => (0, import_smithy_client._json)(_),
      simulationSoftwareSuite: (_) => (0, import_smithy_client._json)(_),
      sources: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSimulationApplicationCommand");
var se_CreateSimulationApplicationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createSimulationApplicationVersion");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      currentRevisionId: [],
      imageDigest: [],
      s3Etags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSimulationApplicationVersionCommand");
var se_CreateSimulationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createSimulationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      compute: (_) => (0, import_smithy_client._json)(_),
      dataSources: (_) => (0, import_smithy_client._json)(_),
      failureBehavior: [],
      iamRole: [],
      loggingConfig: (_) => (0, import_smithy_client._json)(_),
      maxJobDurationInSeconds: [],
      outputLocation: (_) => (0, import_smithy_client._json)(_),
      robotApplications: (_) => (0, import_smithy_client._json)(_),
      simulationApplications: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      vpcConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSimulationJobCommand");
var se_CreateWorldExportJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createWorldExportJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      iamRole: [],
      outputLocation: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_),
      worlds: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateWorldExportJobCommand");
var se_CreateWorldGenerationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createWorldGenerationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      tags: (_) => (0, import_smithy_client._json)(_),
      template: [],
      worldCount: (_) => (0, import_smithy_client._json)(_),
      worldTags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateWorldGenerationJobCommand");
var se_CreateWorldTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/createWorldTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      templateBody: [],
      templateLocation: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateWorldTemplateCommand");
var se_DeleteFleetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteFleet");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      fleet: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteFleetCommand");
var se_DeleteRobotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteRobot");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      robot: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteRobotCommand");
var se_DeleteRobotApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteRobotApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      applicationVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteRobotApplicationCommand");
var se_DeleteSimulationApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteSimulationApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      applicationVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteSimulationApplicationCommand");
var se_DeleteWorldTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deleteWorldTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      template: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteWorldTemplateCommand");
var se_DeregisterRobotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/deregisterRobot");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      fleet: [],
      robot: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeregisterRobotCommand");
var se_DescribeDeploymentJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeDeploymentJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeDeploymentJobCommand");
var se_DescribeFleetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeFleet");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      fleet: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeFleetCommand");
var se_DescribeRobotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeRobot");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      robot: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeRobotCommand");
var se_DescribeRobotApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeRobotApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      applicationVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeRobotApplicationCommand");
var se_DescribeSimulationApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeSimulationApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      applicationVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeSimulationApplicationCommand");
var se_DescribeSimulationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeSimulationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeSimulationJobCommand");
var se_DescribeSimulationJobBatchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeSimulationJobBatch");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      batch: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeSimulationJobBatchCommand");
var se_DescribeWorldCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeWorld");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      world: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeWorldCommand");
var se_DescribeWorldExportJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeWorldExportJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeWorldExportJobCommand");
var se_DescribeWorldGenerationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeWorldGenerationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeWorldGenerationJobCommand");
var se_DescribeWorldTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/describeWorldTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      template: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeWorldTemplateCommand");
var se_GetWorldTemplateBodyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/getWorldTemplateBody");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      generationJob: [],
      template: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetWorldTemplateBodyCommand");
var se_ListDeploymentJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listDeploymentJobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListDeploymentJobsCommand");
var se_ListFleetsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listFleets");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListFleetsCommand");
var se_ListRobotApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listRobotApplications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: [],
      versionQualifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListRobotApplicationsCommand");
var se_ListRobotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listRobots");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListRobotsCommand");
var se_ListSimulationApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listSimulationApplications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: [],
      versionQualifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListSimulationApplicationsCommand");
var se_ListSimulationJobBatchesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listSimulationJobBatches");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListSimulationJobBatchesCommand");
var se_ListSimulationJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listSimulationJobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListSimulationJobsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListWorldExportJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listWorldExportJobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListWorldExportJobsCommand");
var se_ListWorldGenerationJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listWorldGenerationJobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListWorldGenerationJobsCommand");
var se_ListWorldsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listWorlds");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      filters: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListWorldsCommand");
var se_ListWorldTemplatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/listWorldTemplates");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListWorldTemplatesCommand");
var se_RegisterRobotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/registerRobot");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      fleet: [],
      robot: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RegisterRobotCommand");
var se_RestartSimulationJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/restartSimulationJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      job: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RestartSimulationJobCommand");
var se_StartSimulationJobBatchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/startSimulationJobBatch");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      batchPolicy: (_) => (0, import_smithy_client._json)(_),
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      createSimulationJobRequests: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartSimulationJobBatchCommand");
var se_SyncDeploymentJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/syncDeploymentJob");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      fleet: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SyncDeploymentJobCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateRobotApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateRobotApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      currentRevisionId: [],
      environment: (_) => (0, import_smithy_client._json)(_),
      robotSoftwareSuite: (_) => (0, import_smithy_client._json)(_),
      sources: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateRobotApplicationCommand");
var se_UpdateSimulationApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateSimulationApplication");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      application: [],
      currentRevisionId: [],
      environment: (_) => (0, import_smithy_client._json)(_),
      renderingEngine: (_) => (0, import_smithy_client._json)(_),
      robotSoftwareSuite: (_) => (0, import_smithy_client._json)(_),
      simulationSoftwareSuite: (_) => (0, import_smithy_client._json)(_),
      sources: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateSimulationApplicationCommand");
var se_UpdateWorldTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/updateWorldTemplate");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      name: [],
      template: [],
      templateBody: [],
      templateLocation: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateWorldTemplateCommand");
var de_BatchDeleteWorldsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    unprocessedWorlds: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchDeleteWorldsCommand");
var de_BatchDescribeSimulationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobs: (_) => de_SimulationJobs(_, context),
    unprocessedJobs: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchDescribeSimulationJobCommand");
var de_CancelDeploymentJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelDeploymentJobCommand");
var de_CancelSimulationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelSimulationJobCommand");
var de_CancelSimulationJobBatchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelSimulationJobBatchCommand");
var de_CancelWorldExportJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelWorldExportJobCommand");
var de_CancelWorldGenerationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelWorldGenerationJobCommand");
var de_CreateDeploymentJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentApplicationConfigs: import_smithy_client._json,
    deploymentConfig: import_smithy_client._json,
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    fleet: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDeploymentJobCommand");
var de_CreateFleetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFleetCommand");
var de_CreateRobotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    architecture: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    greengrassGroupId: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRobotCommand");
var de_CreateRobotApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRobotApplicationCommand");
var de_CreateRobotApplicationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRobotApplicationVersionCommand");
var de_CreateSimulationApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    renderingEngine: import_smithy_client._json,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    simulationSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSimulationApplicationCommand");
var de_CreateSimulationApplicationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    renderingEngine: import_smithy_client._json,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    simulationSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSimulationApplicationVersionCommand");
var de_CreateSimulationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    compute: import_smithy_client._json,
    dataSources: import_smithy_client._json,
    failureBehavior: import_smithy_client.expectString,
    failureCode: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    lastStartedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    loggingConfig: import_smithy_client._json,
    maxJobDurationInSeconds: import_smithy_client.expectLong,
    outputLocation: import_smithy_client._json,
    robotApplications: import_smithy_client._json,
    simulationApplications: import_smithy_client._json,
    simulationTimeMillis: import_smithy_client.expectLong,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    vpcConfig: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSimulationJobCommand");
var de_CreateWorldExportJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failureCode: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    outputLocation: import_smithy_client._json,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateWorldExportJobCommand");
var de_CreateWorldGenerationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failureCode: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    template: import_smithy_client.expectString,
    worldCount: import_smithy_client._json,
    worldTags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateWorldGenerationJobCommand");
var de_CreateWorldTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateWorldTemplateCommand");
var de_DeleteFleetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteFleetCommand");
var de_DeleteRobotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRobotCommand");
var de_DeleteRobotApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRobotApplicationCommand");
var de_DeleteSimulationApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteSimulationApplicationCommand");
var de_DeleteWorldTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteWorldTemplateCommand");
var de_DeregisterRobotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    fleet: import_smithy_client.expectString,
    robot: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeregisterRobotCommand");
var de_DescribeDeploymentJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentApplicationConfigs: import_smithy_client._json,
    deploymentConfig: import_smithy_client._json,
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    fleet: import_smithy_client.expectString,
    robotDeploymentSummary: (_) => de_RobotDeploymentSummary(_, context),
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDeploymentJobCommand");
var de_DescribeFleetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastDeploymentJob: import_smithy_client.expectString,
    lastDeploymentStatus: import_smithy_client.expectString,
    lastDeploymentTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    robots: (_) => de_Robots(_, context),
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeFleetCommand");
var de_DescribeRobotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    architecture: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    fleetArn: import_smithy_client.expectString,
    greengrassGroupId: import_smithy_client.expectString,
    lastDeploymentJob: import_smithy_client.expectString,
    lastDeploymentTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeRobotCommand");
var de_DescribeRobotApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    imageDigest: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeRobotApplicationCommand");
var de_DescribeSimulationApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    imageDigest: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    renderingEngine: import_smithy_client._json,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    simulationSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSimulationApplicationCommand");
var de_DescribeSimulationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    compute: import_smithy_client._json,
    dataSources: import_smithy_client._json,
    failureBehavior: import_smithy_client.expectString,
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    lastStartedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    loggingConfig: import_smithy_client._json,
    maxJobDurationInSeconds: import_smithy_client.expectLong,
    name: import_smithy_client.expectString,
    networkInterface: import_smithy_client._json,
    outputLocation: import_smithy_client._json,
    robotApplications: import_smithy_client._json,
    simulationApplications: import_smithy_client._json,
    simulationTimeMillis: import_smithy_client.expectLong,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    vpcConfig: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSimulationJobCommand");
var de_DescribeSimulationJobBatchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    batchPolicy: import_smithy_client._json,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdRequests: (_) => de_SimulationJobSummaries(_, context),
    failedRequests: (_) => de_FailedCreateSimulationJobRequests(_, context),
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    pendingRequests: import_smithy_client._json,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSimulationJobBatchCommand");
var de_DescribeWorldCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    generationJob: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    template: import_smithy_client.expectString,
    worldDescriptionBody: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeWorldCommand");
var de_DescribeWorldExportJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    outputLocation: import_smithy_client._json,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    worlds: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeWorldExportJobCommand");
var de_DescribeWorldGenerationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    finishedWorldsSummary: import_smithy_client._json,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    template: import_smithy_client.expectString,
    worldCount: import_smithy_client._json,
    worldTags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeWorldGenerationJobCommand");
var de_DescribeWorldTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeWorldTemplateCommand");
var de_GetWorldTemplateBodyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    templateBody: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetWorldTemplateBodyCommand");
var de_ListDeploymentJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    deploymentJobs: (_) => de_DeploymentJobs(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDeploymentJobsCommand");
var de_ListFleetsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    fleetDetails: (_) => de_Fleets(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFleetsCommand");
var de_ListRobotApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    robotApplicationSummaries: (_) => de_RobotApplicationSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRobotApplicationsCommand");
var de_ListRobotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    robots: (_) => de_Robots(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRobotsCommand");
var de_ListSimulationApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    simulationApplicationSummaries: (_) => de_SimulationApplicationSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSimulationApplicationsCommand");
var de_ListSimulationJobBatchesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    simulationJobBatchSummaries: (_) => de_SimulationJobBatchSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSimulationJobBatchesCommand");
var de_ListSimulationJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    simulationJobSummaries: (_) => de_SimulationJobSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSimulationJobsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListWorldExportJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    worldExportJobSummaries: (_) => de_WorldExportJobSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWorldExportJobsCommand");
var de_ListWorldGenerationJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    worldGenerationJobSummaries: (_) => de_WorldGenerationJobSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWorldGenerationJobsCommand");
var de_ListWorldsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    worldSummaries: (_) => de_WorldSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWorldsCommand");
var de_ListWorldTemplatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    templateSummaries: (_) => de_TemplateSummaries(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWorldTemplatesCommand");
var de_RegisterRobotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    fleet: import_smithy_client.expectString,
    robot: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RegisterRobotCommand");
var de_RestartSimulationJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RestartSimulationJobCommand");
var de_StartSimulationJobBatchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    batchPolicy: import_smithy_client._json,
    clientRequestToken: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdRequests: (_) => de_SimulationJobSummaries(_, context),
    failedRequests: (_) => de_FailedCreateSimulationJobRequests(_, context),
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    pendingRequests: import_smithy_client._json,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartSimulationJobBatchCommand");
var de_SyncDeploymentJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentApplicationConfigs: import_smithy_client._json,
    deploymentConfig: import_smithy_client._json,
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    fleet: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SyncDeploymentJobCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateRobotApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRobotApplicationCommand");
var de_UpdateSimulationApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    environment: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    renderingEngine: import_smithy_client._json,
    revisionId: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    simulationSoftwareSuite: import_smithy_client._json,
    sources: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateSimulationApplicationCommand");
var de_UpdateWorldTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateWorldTemplateCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServerException":
    case "com.amazonaws.robomaker#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "InvalidParameterException":
    case "com.amazonaws.robomaker#InvalidParameterException":
      throw await de_InvalidParameterExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.robomaker#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.robomaker#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ConcurrentDeploymentException":
    case "com.amazonaws.robomaker#ConcurrentDeploymentException":
      throw await de_ConcurrentDeploymentExceptionRes(parsedOutput, context);
    case "IdempotentParameterMismatchException":
    case "com.amazonaws.robomaker#IdempotentParameterMismatchException":
      throw await de_IdempotentParameterMismatchExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.robomaker#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.robomaker#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.robomaker#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(RoboMakerServiceException);
var de_ConcurrentDeploymentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConcurrentDeploymentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConcurrentDeploymentExceptionRes");
var de_IdempotentParameterMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new IdempotentParameterMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_IdempotentParameterMismatchExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_InvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidParameterException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidParameterExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_DeploymentJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentApplicationConfigs: import_smithy_client._json,
    deploymentConfig: import_smithy_client._json,
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    fleet: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_DeploymentJob");
var de_DeploymentJobs = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DeploymentJob(entry, context);
  });
  return retVal;
}, "de_DeploymentJobs");
var de_FailedCreateSimulationJobRequest = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    failedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    request: import_smithy_client._json
  });
}, "de_FailedCreateSimulationJobRequest");
var de_FailedCreateSimulationJobRequests = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FailedCreateSimulationJobRequest(entry, context);
  });
  return retVal;
}, "de_FailedCreateSimulationJobRequests");
var de_Fleet = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastDeploymentJob: import_smithy_client.expectString,
    lastDeploymentStatus: import_smithy_client.expectString,
    lastDeploymentTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString
  });
}, "de_Fleet");
var de_Fleets = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Fleet(entry, context);
  });
  return retVal;
}, "de_Fleets");
var de_ProgressDetail = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    currentProgress: import_smithy_client.expectString,
    estimatedTimeRemainingSeconds: import_smithy_client.expectInt32,
    percentDone: import_smithy_client.limitedParseFloat32,
    targetResource: import_smithy_client.expectString
  });
}, "de_ProgressDetail");
var de_Robot = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    architecture: import_smithy_client.expectString,
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    fleetArn: import_smithy_client.expectString,
    greenGrassGroupId: import_smithy_client.expectString,
    lastDeploymentJob: import_smithy_client.expectString,
    lastDeploymentTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_Robot");
var de_RobotApplicationSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RobotApplicationSummary(entry, context);
  });
  return retVal;
}, "de_RobotApplicationSummaries");
var de_RobotApplicationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
}, "de_RobotApplicationSummary");
var de_RobotDeployment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    deploymentFinishTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    progressDetail: (_) => de_ProgressDetail(_, context),
    status: import_smithy_client.expectString
  });
}, "de_RobotDeployment");
var de_RobotDeploymentSummary = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RobotDeployment(entry, context);
  });
  return retVal;
}, "de_RobotDeploymentSummary");
var de_Robots = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Robot(entry, context);
  });
  return retVal;
}, "de_Robots");
var de_SimulationApplicationSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SimulationApplicationSummary(entry, context);
  });
  return retVal;
}, "de_SimulationApplicationSummaries");
var de_SimulationApplicationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    robotSoftwareSuite: import_smithy_client._json,
    simulationSoftwareSuite: import_smithy_client._json,
    version: import_smithy_client.expectString
  });
}, "de_SimulationApplicationSummary");
var de_SimulationJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    clientRequestToken: import_smithy_client.expectString,
    compute: import_smithy_client._json,
    dataSources: import_smithy_client._json,
    failureBehavior: import_smithy_client.expectString,
    failureCode: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    iamRole: import_smithy_client.expectString,
    lastStartedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    loggingConfig: import_smithy_client._json,
    maxJobDurationInSeconds: import_smithy_client.expectLong,
    name: import_smithy_client.expectString,
    networkInterface: import_smithy_client._json,
    outputLocation: import_smithy_client._json,
    robotApplications: import_smithy_client._json,
    simulationApplications: import_smithy_client._json,
    simulationTimeMillis: import_smithy_client.expectLong,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    vpcConfig: import_smithy_client._json
  });
}, "de_SimulationJob");
var de_SimulationJobBatchSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SimulationJobBatchSummary(entry, context);
  });
  return retVal;
}, "de_SimulationJobBatchSummaries");
var de_SimulationJobBatchSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    createdRequestCount: import_smithy_client.expectInt32,
    failedRequestCount: import_smithy_client.expectInt32,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    pendingRequestCount: import_smithy_client.expectInt32,
    status: import_smithy_client.expectString
  });
}, "de_SimulationJobBatchSummary");
var de_SimulationJobs = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SimulationJob(entry, context);
  });
  return retVal;
}, "de_SimulationJobs");
var de_SimulationJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SimulationJobSummary(entry, context);
  });
  return retVal;
}, "de_SimulationJobSummaries");
var de_SimulationJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    computeType: import_smithy_client.expectString,
    dataSourceNames: import_smithy_client._json,
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    robotApplicationNames: import_smithy_client._json,
    simulationApplicationNames: import_smithy_client._json,
    status: import_smithy_client.expectString
  });
}, "de_SimulationJobSummary");
var de_TemplateSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_TemplateSummary(entry, context);
  });
  return retVal;
}, "de_TemplateSummaries");
var de_TemplateSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    version: import_smithy_client.expectString
  });
}, "de_TemplateSummary");
var de_WorldExportJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_WorldExportJobSummary(entry, context);
  });
  return retVal;
}, "de_WorldExportJobSummaries");
var de_WorldExportJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    outputLocation: import_smithy_client._json,
    status: import_smithy_client.expectString,
    worlds: import_smithy_client._json
  });
}, "de_WorldExportJobSummary");
var de_WorldGenerationJobSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_WorldGenerationJobSummary(entry, context);
  });
  return retVal;
}, "de_WorldGenerationJobSummaries");
var de_WorldGenerationJobSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    failedWorldCount: import_smithy_client.expectInt32,
    status: import_smithy_client.expectString,
    succeededWorldCount: import_smithy_client.expectInt32,
    template: import_smithy_client.expectString,
    worldCount: import_smithy_client._json
  });
}, "de_WorldGenerationJobSummary");
var de_WorldSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_WorldSummary(entry, context);
  });
  return retVal;
}, "de_WorldSummaries");
var de_WorldSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    generationJob: import_smithy_client.expectString,
    template: import_smithy_client.expectString
  });
}, "de_WorldSummary");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _tK = "tagKeys";

// src/commands/BatchDeleteWorldsCommand.ts
var _BatchDeleteWorldsCommand = class _BatchDeleteWorldsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "BatchDeleteWorlds", {}).n("RoboMakerClient", "BatchDeleteWorldsCommand").f(void 0, void 0).ser(se_BatchDeleteWorldsCommand).de(de_BatchDeleteWorldsCommand).build() {
};
__name(_BatchDeleteWorldsCommand, "BatchDeleteWorldsCommand");
var BatchDeleteWorldsCommand = _BatchDeleteWorldsCommand;

// src/commands/BatchDescribeSimulationJobCommand.ts




var _BatchDescribeSimulationJobCommand = class _BatchDescribeSimulationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "BatchDescribeSimulationJob", {}).n("RoboMakerClient", "BatchDescribeSimulationJobCommand").f(void 0, void 0).ser(se_BatchDescribeSimulationJobCommand).de(de_BatchDescribeSimulationJobCommand).build() {
};
__name(_BatchDescribeSimulationJobCommand, "BatchDescribeSimulationJobCommand");
var BatchDescribeSimulationJobCommand = _BatchDescribeSimulationJobCommand;

// src/commands/CancelDeploymentJobCommand.ts




var _CancelDeploymentJobCommand = class _CancelDeploymentJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CancelDeploymentJob", {}).n("RoboMakerClient", "CancelDeploymentJobCommand").f(void 0, void 0).ser(se_CancelDeploymentJobCommand).de(de_CancelDeploymentJobCommand).build() {
};
__name(_CancelDeploymentJobCommand, "CancelDeploymentJobCommand");
var CancelDeploymentJobCommand = _CancelDeploymentJobCommand;

// src/commands/CancelSimulationJobBatchCommand.ts




var _CancelSimulationJobBatchCommand = class _CancelSimulationJobBatchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CancelSimulationJobBatch", {}).n("RoboMakerClient", "CancelSimulationJobBatchCommand").f(void 0, void 0).ser(se_CancelSimulationJobBatchCommand).de(de_CancelSimulationJobBatchCommand).build() {
};
__name(_CancelSimulationJobBatchCommand, "CancelSimulationJobBatchCommand");
var CancelSimulationJobBatchCommand = _CancelSimulationJobBatchCommand;

// src/commands/CancelSimulationJobCommand.ts




var _CancelSimulationJobCommand = class _CancelSimulationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CancelSimulationJob", {}).n("RoboMakerClient", "CancelSimulationJobCommand").f(void 0, void 0).ser(se_CancelSimulationJobCommand).de(de_CancelSimulationJobCommand).build() {
};
__name(_CancelSimulationJobCommand, "CancelSimulationJobCommand");
var CancelSimulationJobCommand = _CancelSimulationJobCommand;

// src/commands/CancelWorldExportJobCommand.ts




var _CancelWorldExportJobCommand = class _CancelWorldExportJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CancelWorldExportJob", {}).n("RoboMakerClient", "CancelWorldExportJobCommand").f(void 0, void 0).ser(se_CancelWorldExportJobCommand).de(de_CancelWorldExportJobCommand).build() {
};
__name(_CancelWorldExportJobCommand, "CancelWorldExportJobCommand");
var CancelWorldExportJobCommand = _CancelWorldExportJobCommand;

// src/commands/CancelWorldGenerationJobCommand.ts




var _CancelWorldGenerationJobCommand = class _CancelWorldGenerationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CancelWorldGenerationJob", {}).n("RoboMakerClient", "CancelWorldGenerationJobCommand").f(void 0, void 0).ser(se_CancelWorldGenerationJobCommand).de(de_CancelWorldGenerationJobCommand).build() {
};
__name(_CancelWorldGenerationJobCommand, "CancelWorldGenerationJobCommand");
var CancelWorldGenerationJobCommand = _CancelWorldGenerationJobCommand;

// src/commands/CreateDeploymentJobCommand.ts




var _CreateDeploymentJobCommand = class _CreateDeploymentJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateDeploymentJob", {}).n("RoboMakerClient", "CreateDeploymentJobCommand").f(void 0, void 0).ser(se_CreateDeploymentJobCommand).de(de_CreateDeploymentJobCommand).build() {
};
__name(_CreateDeploymentJobCommand, "CreateDeploymentJobCommand");
var CreateDeploymentJobCommand = _CreateDeploymentJobCommand;

// src/commands/CreateFleetCommand.ts




var _CreateFleetCommand = class _CreateFleetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateFleet", {}).n("RoboMakerClient", "CreateFleetCommand").f(void 0, void 0).ser(se_CreateFleetCommand).de(de_CreateFleetCommand).build() {
};
__name(_CreateFleetCommand, "CreateFleetCommand");
var CreateFleetCommand = _CreateFleetCommand;

// src/commands/CreateRobotApplicationCommand.ts




var _CreateRobotApplicationCommand = class _CreateRobotApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateRobotApplication", {}).n("RoboMakerClient", "CreateRobotApplicationCommand").f(void 0, void 0).ser(se_CreateRobotApplicationCommand).de(de_CreateRobotApplicationCommand).build() {
};
__name(_CreateRobotApplicationCommand, "CreateRobotApplicationCommand");
var CreateRobotApplicationCommand = _CreateRobotApplicationCommand;

// src/commands/CreateRobotApplicationVersionCommand.ts




var _CreateRobotApplicationVersionCommand = class _CreateRobotApplicationVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateRobotApplicationVersion", {}).n("RoboMakerClient", "CreateRobotApplicationVersionCommand").f(void 0, void 0).ser(se_CreateRobotApplicationVersionCommand).de(de_CreateRobotApplicationVersionCommand).build() {
};
__name(_CreateRobotApplicationVersionCommand, "CreateRobotApplicationVersionCommand");
var CreateRobotApplicationVersionCommand = _CreateRobotApplicationVersionCommand;

// src/commands/CreateRobotCommand.ts




var _CreateRobotCommand = class _CreateRobotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateRobot", {}).n("RoboMakerClient", "CreateRobotCommand").f(void 0, void 0).ser(se_CreateRobotCommand).de(de_CreateRobotCommand).build() {
};
__name(_CreateRobotCommand, "CreateRobotCommand");
var CreateRobotCommand = _CreateRobotCommand;

// src/commands/CreateSimulationApplicationCommand.ts




var _CreateSimulationApplicationCommand = class _CreateSimulationApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateSimulationApplication", {}).n("RoboMakerClient", "CreateSimulationApplicationCommand").f(void 0, void 0).ser(se_CreateSimulationApplicationCommand).de(de_CreateSimulationApplicationCommand).build() {
};
__name(_CreateSimulationApplicationCommand, "CreateSimulationApplicationCommand");
var CreateSimulationApplicationCommand = _CreateSimulationApplicationCommand;

// src/commands/CreateSimulationApplicationVersionCommand.ts




var _CreateSimulationApplicationVersionCommand = class _CreateSimulationApplicationVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateSimulationApplicationVersion", {}).n("RoboMakerClient", "CreateSimulationApplicationVersionCommand").f(void 0, void 0).ser(se_CreateSimulationApplicationVersionCommand).de(de_CreateSimulationApplicationVersionCommand).build() {
};
__name(_CreateSimulationApplicationVersionCommand, "CreateSimulationApplicationVersionCommand");
var CreateSimulationApplicationVersionCommand = _CreateSimulationApplicationVersionCommand;

// src/commands/CreateSimulationJobCommand.ts




var _CreateSimulationJobCommand = class _CreateSimulationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateSimulationJob", {}).n("RoboMakerClient", "CreateSimulationJobCommand").f(void 0, void 0).ser(se_CreateSimulationJobCommand).de(de_CreateSimulationJobCommand).build() {
};
__name(_CreateSimulationJobCommand, "CreateSimulationJobCommand");
var CreateSimulationJobCommand = _CreateSimulationJobCommand;

// src/commands/CreateWorldExportJobCommand.ts




var _CreateWorldExportJobCommand = class _CreateWorldExportJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateWorldExportJob", {}).n("RoboMakerClient", "CreateWorldExportJobCommand").f(void 0, void 0).ser(se_CreateWorldExportJobCommand).de(de_CreateWorldExportJobCommand).build() {
};
__name(_CreateWorldExportJobCommand, "CreateWorldExportJobCommand");
var CreateWorldExportJobCommand = _CreateWorldExportJobCommand;

// src/commands/CreateWorldGenerationJobCommand.ts




var _CreateWorldGenerationJobCommand = class _CreateWorldGenerationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateWorldGenerationJob", {}).n("RoboMakerClient", "CreateWorldGenerationJobCommand").f(void 0, void 0).ser(se_CreateWorldGenerationJobCommand).de(de_CreateWorldGenerationJobCommand).build() {
};
__name(_CreateWorldGenerationJobCommand, "CreateWorldGenerationJobCommand");
var CreateWorldGenerationJobCommand = _CreateWorldGenerationJobCommand;

// src/commands/CreateWorldTemplateCommand.ts




var _CreateWorldTemplateCommand = class _CreateWorldTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "CreateWorldTemplate", {}).n("RoboMakerClient", "CreateWorldTemplateCommand").f(void 0, void 0).ser(se_CreateWorldTemplateCommand).de(de_CreateWorldTemplateCommand).build() {
};
__name(_CreateWorldTemplateCommand, "CreateWorldTemplateCommand");
var CreateWorldTemplateCommand = _CreateWorldTemplateCommand;

// src/commands/DeleteFleetCommand.ts




var _DeleteFleetCommand = class _DeleteFleetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DeleteFleet", {}).n("RoboMakerClient", "DeleteFleetCommand").f(void 0, void 0).ser(se_DeleteFleetCommand).de(de_DeleteFleetCommand).build() {
};
__name(_DeleteFleetCommand, "DeleteFleetCommand");
var DeleteFleetCommand = _DeleteFleetCommand;

// src/commands/DeleteRobotApplicationCommand.ts




var _DeleteRobotApplicationCommand = class _DeleteRobotApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DeleteRobotApplication", {}).n("RoboMakerClient", "DeleteRobotApplicationCommand").f(void 0, void 0).ser(se_DeleteRobotApplicationCommand).de(de_DeleteRobotApplicationCommand).build() {
};
__name(_DeleteRobotApplicationCommand, "DeleteRobotApplicationCommand");
var DeleteRobotApplicationCommand = _DeleteRobotApplicationCommand;

// src/commands/DeleteRobotCommand.ts




var _DeleteRobotCommand = class _DeleteRobotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DeleteRobot", {}).n("RoboMakerClient", "DeleteRobotCommand").f(void 0, void 0).ser(se_DeleteRobotCommand).de(de_DeleteRobotCommand).build() {
};
__name(_DeleteRobotCommand, "DeleteRobotCommand");
var DeleteRobotCommand = _DeleteRobotCommand;

// src/commands/DeleteSimulationApplicationCommand.ts




var _DeleteSimulationApplicationCommand = class _DeleteSimulationApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DeleteSimulationApplication", {}).n("RoboMakerClient", "DeleteSimulationApplicationCommand").f(void 0, void 0).ser(se_DeleteSimulationApplicationCommand).de(de_DeleteSimulationApplicationCommand).build() {
};
__name(_DeleteSimulationApplicationCommand, "DeleteSimulationApplicationCommand");
var DeleteSimulationApplicationCommand = _DeleteSimulationApplicationCommand;

// src/commands/DeleteWorldTemplateCommand.ts




var _DeleteWorldTemplateCommand = class _DeleteWorldTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DeleteWorldTemplate", {}).n("RoboMakerClient", "DeleteWorldTemplateCommand").f(void 0, void 0).ser(se_DeleteWorldTemplateCommand).de(de_DeleteWorldTemplateCommand).build() {
};
__name(_DeleteWorldTemplateCommand, "DeleteWorldTemplateCommand");
var DeleteWorldTemplateCommand = _DeleteWorldTemplateCommand;

// src/commands/DeregisterRobotCommand.ts




var _DeregisterRobotCommand = class _DeregisterRobotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DeregisterRobot", {}).n("RoboMakerClient", "DeregisterRobotCommand").f(void 0, void 0).ser(se_DeregisterRobotCommand).de(de_DeregisterRobotCommand).build() {
};
__name(_DeregisterRobotCommand, "DeregisterRobotCommand");
var DeregisterRobotCommand = _DeregisterRobotCommand;

// src/commands/DescribeDeploymentJobCommand.ts




var _DescribeDeploymentJobCommand = class _DescribeDeploymentJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeDeploymentJob", {}).n("RoboMakerClient", "DescribeDeploymentJobCommand").f(void 0, void 0).ser(se_DescribeDeploymentJobCommand).de(de_DescribeDeploymentJobCommand).build() {
};
__name(_DescribeDeploymentJobCommand, "DescribeDeploymentJobCommand");
var DescribeDeploymentJobCommand = _DescribeDeploymentJobCommand;

// src/commands/DescribeFleetCommand.ts




var _DescribeFleetCommand = class _DescribeFleetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeFleet", {}).n("RoboMakerClient", "DescribeFleetCommand").f(void 0, void 0).ser(se_DescribeFleetCommand).de(de_DescribeFleetCommand).build() {
};
__name(_DescribeFleetCommand, "DescribeFleetCommand");
var DescribeFleetCommand = _DescribeFleetCommand;

// src/commands/DescribeRobotApplicationCommand.ts




var _DescribeRobotApplicationCommand = class _DescribeRobotApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeRobotApplication", {}).n("RoboMakerClient", "DescribeRobotApplicationCommand").f(void 0, void 0).ser(se_DescribeRobotApplicationCommand).de(de_DescribeRobotApplicationCommand).build() {
};
__name(_DescribeRobotApplicationCommand, "DescribeRobotApplicationCommand");
var DescribeRobotApplicationCommand = _DescribeRobotApplicationCommand;

// src/commands/DescribeRobotCommand.ts




var _DescribeRobotCommand = class _DescribeRobotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeRobot", {}).n("RoboMakerClient", "DescribeRobotCommand").f(void 0, void 0).ser(se_DescribeRobotCommand).de(de_DescribeRobotCommand).build() {
};
__name(_DescribeRobotCommand, "DescribeRobotCommand");
var DescribeRobotCommand = _DescribeRobotCommand;

// src/commands/DescribeSimulationApplicationCommand.ts




var _DescribeSimulationApplicationCommand = class _DescribeSimulationApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeSimulationApplication", {}).n("RoboMakerClient", "DescribeSimulationApplicationCommand").f(void 0, void 0).ser(se_DescribeSimulationApplicationCommand).de(de_DescribeSimulationApplicationCommand).build() {
};
__name(_DescribeSimulationApplicationCommand, "DescribeSimulationApplicationCommand");
var DescribeSimulationApplicationCommand = _DescribeSimulationApplicationCommand;

// src/commands/DescribeSimulationJobBatchCommand.ts




var _DescribeSimulationJobBatchCommand = class _DescribeSimulationJobBatchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeSimulationJobBatch", {}).n("RoboMakerClient", "DescribeSimulationJobBatchCommand").f(void 0, void 0).ser(se_DescribeSimulationJobBatchCommand).de(de_DescribeSimulationJobBatchCommand).build() {
};
__name(_DescribeSimulationJobBatchCommand, "DescribeSimulationJobBatchCommand");
var DescribeSimulationJobBatchCommand = _DescribeSimulationJobBatchCommand;

// src/commands/DescribeSimulationJobCommand.ts




var _DescribeSimulationJobCommand = class _DescribeSimulationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeSimulationJob", {}).n("RoboMakerClient", "DescribeSimulationJobCommand").f(void 0, void 0).ser(se_DescribeSimulationJobCommand).de(de_DescribeSimulationJobCommand).build() {
};
__name(_DescribeSimulationJobCommand, "DescribeSimulationJobCommand");
var DescribeSimulationJobCommand = _DescribeSimulationJobCommand;

// src/commands/DescribeWorldCommand.ts




var _DescribeWorldCommand = class _DescribeWorldCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeWorld", {}).n("RoboMakerClient", "DescribeWorldCommand").f(void 0, void 0).ser(se_DescribeWorldCommand).de(de_DescribeWorldCommand).build() {
};
__name(_DescribeWorldCommand, "DescribeWorldCommand");
var DescribeWorldCommand = _DescribeWorldCommand;

// src/commands/DescribeWorldExportJobCommand.ts




var _DescribeWorldExportJobCommand = class _DescribeWorldExportJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeWorldExportJob", {}).n("RoboMakerClient", "DescribeWorldExportJobCommand").f(void 0, void 0).ser(se_DescribeWorldExportJobCommand).de(de_DescribeWorldExportJobCommand).build() {
};
__name(_DescribeWorldExportJobCommand, "DescribeWorldExportJobCommand");
var DescribeWorldExportJobCommand = _DescribeWorldExportJobCommand;

// src/commands/DescribeWorldGenerationJobCommand.ts




var _DescribeWorldGenerationJobCommand = class _DescribeWorldGenerationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeWorldGenerationJob", {}).n("RoboMakerClient", "DescribeWorldGenerationJobCommand").f(void 0, void 0).ser(se_DescribeWorldGenerationJobCommand).de(de_DescribeWorldGenerationJobCommand).build() {
};
__name(_DescribeWorldGenerationJobCommand, "DescribeWorldGenerationJobCommand");
var DescribeWorldGenerationJobCommand = _DescribeWorldGenerationJobCommand;

// src/commands/DescribeWorldTemplateCommand.ts




var _DescribeWorldTemplateCommand = class _DescribeWorldTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "DescribeWorldTemplate", {}).n("RoboMakerClient", "DescribeWorldTemplateCommand").f(void 0, void 0).ser(se_DescribeWorldTemplateCommand).de(de_DescribeWorldTemplateCommand).build() {
};
__name(_DescribeWorldTemplateCommand, "DescribeWorldTemplateCommand");
var DescribeWorldTemplateCommand = _DescribeWorldTemplateCommand;

// src/commands/GetWorldTemplateBodyCommand.ts




var _GetWorldTemplateBodyCommand = class _GetWorldTemplateBodyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "GetWorldTemplateBody", {}).n("RoboMakerClient", "GetWorldTemplateBodyCommand").f(void 0, void 0).ser(se_GetWorldTemplateBodyCommand).de(de_GetWorldTemplateBodyCommand).build() {
};
__name(_GetWorldTemplateBodyCommand, "GetWorldTemplateBodyCommand");
var GetWorldTemplateBodyCommand = _GetWorldTemplateBodyCommand;

// src/commands/ListDeploymentJobsCommand.ts




var _ListDeploymentJobsCommand = class _ListDeploymentJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListDeploymentJobs", {}).n("RoboMakerClient", "ListDeploymentJobsCommand").f(void 0, void 0).ser(se_ListDeploymentJobsCommand).de(de_ListDeploymentJobsCommand).build() {
};
__name(_ListDeploymentJobsCommand, "ListDeploymentJobsCommand");
var ListDeploymentJobsCommand = _ListDeploymentJobsCommand;

// src/commands/ListFleetsCommand.ts




var _ListFleetsCommand = class _ListFleetsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListFleets", {}).n("RoboMakerClient", "ListFleetsCommand").f(void 0, void 0).ser(se_ListFleetsCommand).de(de_ListFleetsCommand).build() {
};
__name(_ListFleetsCommand, "ListFleetsCommand");
var ListFleetsCommand = _ListFleetsCommand;

// src/commands/ListRobotApplicationsCommand.ts




var _ListRobotApplicationsCommand = class _ListRobotApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListRobotApplications", {}).n("RoboMakerClient", "ListRobotApplicationsCommand").f(void 0, void 0).ser(se_ListRobotApplicationsCommand).de(de_ListRobotApplicationsCommand).build() {
};
__name(_ListRobotApplicationsCommand, "ListRobotApplicationsCommand");
var ListRobotApplicationsCommand = _ListRobotApplicationsCommand;

// src/commands/ListRobotsCommand.ts




var _ListRobotsCommand = class _ListRobotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListRobots", {}).n("RoboMakerClient", "ListRobotsCommand").f(void 0, void 0).ser(se_ListRobotsCommand).de(de_ListRobotsCommand).build() {
};
__name(_ListRobotsCommand, "ListRobotsCommand");
var ListRobotsCommand = _ListRobotsCommand;

// src/commands/ListSimulationApplicationsCommand.ts




var _ListSimulationApplicationsCommand = class _ListSimulationApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListSimulationApplications", {}).n("RoboMakerClient", "ListSimulationApplicationsCommand").f(void 0, void 0).ser(se_ListSimulationApplicationsCommand).de(de_ListSimulationApplicationsCommand).build() {
};
__name(_ListSimulationApplicationsCommand, "ListSimulationApplicationsCommand");
var ListSimulationApplicationsCommand = _ListSimulationApplicationsCommand;

// src/commands/ListSimulationJobBatchesCommand.ts




var _ListSimulationJobBatchesCommand = class _ListSimulationJobBatchesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListSimulationJobBatches", {}).n("RoboMakerClient", "ListSimulationJobBatchesCommand").f(void 0, void 0).ser(se_ListSimulationJobBatchesCommand).de(de_ListSimulationJobBatchesCommand).build() {
};
__name(_ListSimulationJobBatchesCommand, "ListSimulationJobBatchesCommand");
var ListSimulationJobBatchesCommand = _ListSimulationJobBatchesCommand;

// src/commands/ListSimulationJobsCommand.ts




var _ListSimulationJobsCommand = class _ListSimulationJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListSimulationJobs", {}).n("RoboMakerClient", "ListSimulationJobsCommand").f(void 0, void 0).ser(se_ListSimulationJobsCommand).de(de_ListSimulationJobsCommand).build() {
};
__name(_ListSimulationJobsCommand, "ListSimulationJobsCommand");
var ListSimulationJobsCommand = _ListSimulationJobsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListTagsForResource", {}).n("RoboMakerClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListWorldExportJobsCommand.ts




var _ListWorldExportJobsCommand = class _ListWorldExportJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListWorldExportJobs", {}).n("RoboMakerClient", "ListWorldExportJobsCommand").f(void 0, void 0).ser(se_ListWorldExportJobsCommand).de(de_ListWorldExportJobsCommand).build() {
};
__name(_ListWorldExportJobsCommand, "ListWorldExportJobsCommand");
var ListWorldExportJobsCommand = _ListWorldExportJobsCommand;

// src/commands/ListWorldGenerationJobsCommand.ts




var _ListWorldGenerationJobsCommand = class _ListWorldGenerationJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListWorldGenerationJobs", {}).n("RoboMakerClient", "ListWorldGenerationJobsCommand").f(void 0, void 0).ser(se_ListWorldGenerationJobsCommand).de(de_ListWorldGenerationJobsCommand).build() {
};
__name(_ListWorldGenerationJobsCommand, "ListWorldGenerationJobsCommand");
var ListWorldGenerationJobsCommand = _ListWorldGenerationJobsCommand;

// src/commands/ListWorldsCommand.ts




var _ListWorldsCommand = class _ListWorldsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListWorlds", {}).n("RoboMakerClient", "ListWorldsCommand").f(void 0, void 0).ser(se_ListWorldsCommand).de(de_ListWorldsCommand).build() {
};
__name(_ListWorldsCommand, "ListWorldsCommand");
var ListWorldsCommand = _ListWorldsCommand;

// src/commands/ListWorldTemplatesCommand.ts




var _ListWorldTemplatesCommand = class _ListWorldTemplatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "ListWorldTemplates", {}).n("RoboMakerClient", "ListWorldTemplatesCommand").f(void 0, void 0).ser(se_ListWorldTemplatesCommand).de(de_ListWorldTemplatesCommand).build() {
};
__name(_ListWorldTemplatesCommand, "ListWorldTemplatesCommand");
var ListWorldTemplatesCommand = _ListWorldTemplatesCommand;

// src/commands/RegisterRobotCommand.ts




var _RegisterRobotCommand = class _RegisterRobotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "RegisterRobot", {}).n("RoboMakerClient", "RegisterRobotCommand").f(void 0, void 0).ser(se_RegisterRobotCommand).de(de_RegisterRobotCommand).build() {
};
__name(_RegisterRobotCommand, "RegisterRobotCommand");
var RegisterRobotCommand = _RegisterRobotCommand;

// src/commands/RestartSimulationJobCommand.ts




var _RestartSimulationJobCommand = class _RestartSimulationJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "RestartSimulationJob", {}).n("RoboMakerClient", "RestartSimulationJobCommand").f(void 0, void 0).ser(se_RestartSimulationJobCommand).de(de_RestartSimulationJobCommand).build() {
};
__name(_RestartSimulationJobCommand, "RestartSimulationJobCommand");
var RestartSimulationJobCommand = _RestartSimulationJobCommand;

// src/commands/StartSimulationJobBatchCommand.ts




var _StartSimulationJobBatchCommand = class _StartSimulationJobBatchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "StartSimulationJobBatch", {}).n("RoboMakerClient", "StartSimulationJobBatchCommand").f(void 0, void 0).ser(se_StartSimulationJobBatchCommand).de(de_StartSimulationJobBatchCommand).build() {
};
__name(_StartSimulationJobBatchCommand, "StartSimulationJobBatchCommand");
var StartSimulationJobBatchCommand = _StartSimulationJobBatchCommand;

// src/commands/SyncDeploymentJobCommand.ts




var _SyncDeploymentJobCommand = class _SyncDeploymentJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "SyncDeploymentJob", {}).n("RoboMakerClient", "SyncDeploymentJobCommand").f(void 0, void 0).ser(se_SyncDeploymentJobCommand).de(de_SyncDeploymentJobCommand).build() {
};
__name(_SyncDeploymentJobCommand, "SyncDeploymentJobCommand");
var SyncDeploymentJobCommand = _SyncDeploymentJobCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "TagResource", {}).n("RoboMakerClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "UntagResource", {}).n("RoboMakerClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateRobotApplicationCommand.ts




var _UpdateRobotApplicationCommand = class _UpdateRobotApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "UpdateRobotApplication", {}).n("RoboMakerClient", "UpdateRobotApplicationCommand").f(void 0, void 0).ser(se_UpdateRobotApplicationCommand).de(de_UpdateRobotApplicationCommand).build() {
};
__name(_UpdateRobotApplicationCommand, "UpdateRobotApplicationCommand");
var UpdateRobotApplicationCommand = _UpdateRobotApplicationCommand;

// src/commands/UpdateSimulationApplicationCommand.ts




var _UpdateSimulationApplicationCommand = class _UpdateSimulationApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "UpdateSimulationApplication", {}).n("RoboMakerClient", "UpdateSimulationApplicationCommand").f(void 0, void 0).ser(se_UpdateSimulationApplicationCommand).de(de_UpdateSimulationApplicationCommand).build() {
};
__name(_UpdateSimulationApplicationCommand, "UpdateSimulationApplicationCommand");
var UpdateSimulationApplicationCommand = _UpdateSimulationApplicationCommand;

// src/commands/UpdateWorldTemplateCommand.ts




var _UpdateWorldTemplateCommand = class _UpdateWorldTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("robomaker", "UpdateWorldTemplate", {}).n("RoboMakerClient", "UpdateWorldTemplateCommand").f(void 0, void 0).ser(se_UpdateWorldTemplateCommand).de(de_UpdateWorldTemplateCommand).build() {
};
__name(_UpdateWorldTemplateCommand, "UpdateWorldTemplateCommand");
var UpdateWorldTemplateCommand = _UpdateWorldTemplateCommand;

// src/RoboMaker.ts
var commands = {
  BatchDeleteWorldsCommand,
  BatchDescribeSimulationJobCommand,
  CancelDeploymentJobCommand,
  CancelSimulationJobCommand,
  CancelSimulationJobBatchCommand,
  CancelWorldExportJobCommand,
  CancelWorldGenerationJobCommand,
  CreateDeploymentJobCommand,
  CreateFleetCommand,
  CreateRobotCommand,
  CreateRobotApplicationCommand,
  CreateRobotApplicationVersionCommand,
  CreateSimulationApplicationCommand,
  CreateSimulationApplicationVersionCommand,
  CreateSimulationJobCommand,
  CreateWorldExportJobCommand,
  CreateWorldGenerationJobCommand,
  CreateWorldTemplateCommand,
  DeleteFleetCommand,
  DeleteRobotCommand,
  DeleteRobotApplicationCommand,
  DeleteSimulationApplicationCommand,
  DeleteWorldTemplateCommand,
  DeregisterRobotCommand,
  DescribeDeploymentJobCommand,
  DescribeFleetCommand,
  DescribeRobotCommand,
  DescribeRobotApplicationCommand,
  DescribeSimulationApplicationCommand,
  DescribeSimulationJobCommand,
  DescribeSimulationJobBatchCommand,
  DescribeWorldCommand,
  DescribeWorldExportJobCommand,
  DescribeWorldGenerationJobCommand,
  DescribeWorldTemplateCommand,
  GetWorldTemplateBodyCommand,
  ListDeploymentJobsCommand,
  ListFleetsCommand,
  ListRobotApplicationsCommand,
  ListRobotsCommand,
  ListSimulationApplicationsCommand,
  ListSimulationJobBatchesCommand,
  ListSimulationJobsCommand,
  ListTagsForResourceCommand,
  ListWorldExportJobsCommand,
  ListWorldGenerationJobsCommand,
  ListWorldsCommand,
  ListWorldTemplatesCommand,
  RegisterRobotCommand,
  RestartSimulationJobCommand,
  StartSimulationJobBatchCommand,
  SyncDeploymentJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateRobotApplicationCommand,
  UpdateSimulationApplicationCommand,
  UpdateWorldTemplateCommand
};
var _RoboMaker = class _RoboMaker extends RoboMakerClient {
};
__name(_RoboMaker, "RoboMaker");
var RoboMaker = _RoboMaker;
(0, import_smithy_client.createAggregatedClient)(commands, RoboMaker);

// src/pagination/ListDeploymentJobsPaginator.ts

var paginateListDeploymentJobs = (0, import_core.createPaginator)(RoboMakerClient, ListDeploymentJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFleetsPaginator.ts

var paginateListFleets = (0, import_core.createPaginator)(RoboMakerClient, ListFleetsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListRobotApplicationsPaginator.ts

var paginateListRobotApplications = (0, import_core.createPaginator)(RoboMakerClient, ListRobotApplicationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListRobotsPaginator.ts

var paginateListRobots = (0, import_core.createPaginator)(RoboMakerClient, ListRobotsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSimulationApplicationsPaginator.ts

var paginateListSimulationApplications = (0, import_core.createPaginator)(RoboMakerClient, ListSimulationApplicationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSimulationJobBatchesPaginator.ts

var paginateListSimulationJobBatches = (0, import_core.createPaginator)(RoboMakerClient, ListSimulationJobBatchesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSimulationJobsPaginator.ts

var paginateListSimulationJobs = (0, import_core.createPaginator)(RoboMakerClient, ListSimulationJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWorldExportJobsPaginator.ts

var paginateListWorldExportJobs = (0, import_core.createPaginator)(RoboMakerClient, ListWorldExportJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWorldGenerationJobsPaginator.ts

var paginateListWorldGenerationJobs = (0, import_core.createPaginator)(RoboMakerClient, ListWorldGenerationJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWorldTemplatesPaginator.ts

var paginateListWorldTemplates = (0, import_core.createPaginator)(RoboMakerClient, ListWorldTemplatesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWorldsPaginator.ts

var paginateListWorlds = (0, import_core.createPaginator)(RoboMakerClient, ListWorldsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  RoboMakerServiceException,
  __Client,
  RoboMakerClient,
  RoboMaker,
  $Command,
  BatchDeleteWorldsCommand,
  BatchDescribeSimulationJobCommand,
  CancelDeploymentJobCommand,
  CancelSimulationJobBatchCommand,
  CancelSimulationJobCommand,
  CancelWorldExportJobCommand,
  CancelWorldGenerationJobCommand,
  CreateDeploymentJobCommand,
  CreateFleetCommand,
  CreateRobotApplicationCommand,
  CreateRobotApplicationVersionCommand,
  CreateRobotCommand,
  CreateSimulationApplicationCommand,
  CreateSimulationApplicationVersionCommand,
  CreateSimulationJobCommand,
  CreateWorldExportJobCommand,
  CreateWorldGenerationJobCommand,
  CreateWorldTemplateCommand,
  DeleteFleetCommand,
  DeleteRobotApplicationCommand,
  DeleteRobotCommand,
  DeleteSimulationApplicationCommand,
  DeleteWorldTemplateCommand,
  DeregisterRobotCommand,
  DescribeDeploymentJobCommand,
  DescribeFleetCommand,
  DescribeRobotApplicationCommand,
  DescribeRobotCommand,
  DescribeSimulationApplicationCommand,
  DescribeSimulationJobBatchCommand,
  DescribeSimulationJobCommand,
  DescribeWorldCommand,
  DescribeWorldExportJobCommand,
  DescribeWorldGenerationJobCommand,
  DescribeWorldTemplateCommand,
  GetWorldTemplateBodyCommand,
  ListDeploymentJobsCommand,
  ListFleetsCommand,
  ListRobotApplicationsCommand,
  ListRobotsCommand,
  ListSimulationApplicationsCommand,
  ListSimulationJobBatchesCommand,
  ListSimulationJobsCommand,
  ListTagsForResourceCommand,
  ListWorldExportJobsCommand,
  ListWorldGenerationJobsCommand,
  ListWorldTemplatesCommand,
  ListWorldsCommand,
  RegisterRobotCommand,
  RestartSimulationJobCommand,
  StartSimulationJobBatchCommand,
  SyncDeploymentJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateRobotApplicationCommand,
  UpdateSimulationApplicationCommand,
  UpdateWorldTemplateCommand,
  paginateListDeploymentJobs,
  paginateListFleets,
  paginateListRobotApplications,
  paginateListRobots,
  paginateListSimulationApplications,
  paginateListSimulationJobBatches,
  paginateListSimulationJobs,
  paginateListWorldExportJobs,
  paginateListWorldGenerationJobs,
  paginateListWorldTemplates,
  paginateListWorlds,
  Architecture,
  InternalServerException,
  InvalidParameterException,
  ThrottlingException,
  ComputeType,
  DataSourceType,
  FailureBehavior,
  SimulationJobErrorCode,
  ExitBehavior,
  UploadBehavior,
  SimulationJobStatus,
  ResourceNotFoundException,
  ConcurrentDeploymentException,
  DeploymentJobErrorCode,
  DeploymentStatus,
  IdempotentParameterMismatchException,
  LimitExceededException,
  ResourceAlreadyExistsException,
  RobotSoftwareSuiteType,
  RobotSoftwareSuiteVersionType,
  RenderingEngineType,
  SimulationSoftwareSuiteType,
  ServiceUnavailableException,
  WorldExportJobErrorCode,
  WorldExportJobStatus,
  WorldGenerationJobErrorCode,
  WorldGenerationJobStatus,
  RobotDeploymentStep,
  RobotStatus,
  SimulationJobBatchErrorCode,
  SimulationJobBatchStatus
});

