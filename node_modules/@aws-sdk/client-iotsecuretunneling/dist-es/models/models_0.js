import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { IoTSecureTunnelingServiceException as __BaseException } from "./IoTSecureTunnelingServiceException";
export const ClientMode = {
    ALL: "ALL",
    DESTINATION: "DESTINATION",
    SOURCE: "SOURCE",
};
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export const ConnectionStatus = {
    CONNECTED: "CONNECTED",
    DISCONNECTED: "DISCONNECTED",
};
export const TunnelStatus = {
    CLOSED: "CLOSED",
    OPEN: "OPEN",
};
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export const OpenTunnelResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.sourceAccessToken && { sourceAccessToken: SENSITIVE_STRING }),
    ...(obj.destinationAccessToken && { destinationAccessToken: SENSITIVE_STRING }),
});
export const RotateTunnelAccessTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.sourceAccessToken && { sourceAccessToken: SENSITIVE_STRING }),
    ...(obj.destinationAccessToken && { destinationAccessToken: SENSITIVE_STRING }),
});
