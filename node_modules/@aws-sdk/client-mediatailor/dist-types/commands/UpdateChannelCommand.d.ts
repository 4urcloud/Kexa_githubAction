import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { MediaTailorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../MediaTailorClient";
import { UpdateChannelRequest, UpdateChannelResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link UpdateChannelCommand}.
 */
export interface UpdateChannelCommandInput extends UpdateChannelRequest {
}
/**
 * @public
 *
 * The output of {@link UpdateChannelCommand}.
 */
export interface UpdateChannelCommandOutput extends UpdateChannelResponse, __MetadataBearer {
}
declare const UpdateChannelCommand_base: {
    new (input: UpdateChannelCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateChannelCommandInput, UpdateChannelCommandOutput, MediaTailorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: UpdateChannelCommandInput): import("@smithy/smithy-client").CommandImpl<UpdateChannelCommandInput, UpdateChannelCommandOutput, MediaTailorClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Updates a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { MediaTailorClient, UpdateChannelCommand } from "@aws-sdk/client-mediatailor"; // ES Modules import
 * // const { MediaTailorClient, UpdateChannelCommand } = require("@aws-sdk/client-mediatailor"); // CommonJS import
 * const client = new MediaTailorClient(config);
 * const input = { // UpdateChannelRequest
 *   ChannelName: "STRING_VALUE", // required
 *   FillerSlate: { // SlateSource
 *     SourceLocationName: "STRING_VALUE",
 *     VodSourceName: "STRING_VALUE",
 *   },
 *   Outputs: [ // RequestOutputs // required
 *     { // RequestOutputItem
 *       DashPlaylistSettings: { // DashPlaylistSettings
 *         ManifestWindowSeconds: Number("int"),
 *         MinBufferTimeSeconds: Number("int"),
 *         MinUpdatePeriodSeconds: Number("int"),
 *         SuggestedPresentationDelaySeconds: Number("int"),
 *       },
 *       HlsPlaylistSettings: { // HlsPlaylistSettings
 *         ManifestWindowSeconds: Number("int"),
 *         AdMarkupType: [ // adMarkupTypes
 *           "DATERANGE" || "SCTE35_ENHANCED",
 *         ],
 *       },
 *       ManifestName: "STRING_VALUE", // required
 *       SourceGroup: "STRING_VALUE", // required
 *     },
 *   ],
 *   TimeShiftConfiguration: { // TimeShiftConfiguration
 *     MaxTimeDelaySeconds: Number("int"), // required
 *   },
 *   Audiences: [ // Audiences
 *     "STRING_VALUE",
 *   ],
 * };
 * const command = new UpdateChannelCommand(input);
 * const response = await client.send(command);
 * // { // UpdateChannelResponse
 * //   Arn: "STRING_VALUE",
 * //   ChannelName: "STRING_VALUE",
 * //   ChannelState: "RUNNING" || "STOPPED",
 * //   CreationTime: new Date("TIMESTAMP"),
 * //   FillerSlate: { // SlateSource
 * //     SourceLocationName: "STRING_VALUE",
 * //     VodSourceName: "STRING_VALUE",
 * //   },
 * //   LastModifiedTime: new Date("TIMESTAMP"),
 * //   Outputs: [ // ResponseOutputs
 * //     { // ResponseOutputItem
 * //       DashPlaylistSettings: { // DashPlaylistSettings
 * //         ManifestWindowSeconds: Number("int"),
 * //         MinBufferTimeSeconds: Number("int"),
 * //         MinUpdatePeriodSeconds: Number("int"),
 * //         SuggestedPresentationDelaySeconds: Number("int"),
 * //       },
 * //       HlsPlaylistSettings: { // HlsPlaylistSettings
 * //         ManifestWindowSeconds: Number("int"),
 * //         AdMarkupType: [ // adMarkupTypes
 * //           "DATERANGE" || "SCTE35_ENHANCED",
 * //         ],
 * //       },
 * //       ManifestName: "STRING_VALUE", // required
 * //       PlaybackUrl: "STRING_VALUE", // required
 * //       SourceGroup: "STRING_VALUE", // required
 * //     },
 * //   ],
 * //   PlaybackMode: "STRING_VALUE",
 * //   Tags: { // __mapOf__string
 * //     "<keys>": "STRING_VALUE",
 * //   },
 * //   Tier: "STRING_VALUE",
 * //   TimeShiftConfiguration: { // TimeShiftConfiguration
 * //     MaxTimeDelaySeconds: Number("int"), // required
 * //   },
 * //   Audiences: [ // Audiences
 * //     "STRING_VALUE",
 * //   ],
 * // };
 *
 * ```
 *
 * @param UpdateChannelCommandInput - {@link UpdateChannelCommandInput}
 * @returns {@link UpdateChannelCommandOutput}
 * @see {@link UpdateChannelCommandInput} for command's `input` shape.
 * @see {@link UpdateChannelCommandOutput} for command's `response` shape.
 * @see {@link MediaTailorClientResolvedConfig | config} for MediaTailorClient's `config` shape.
 *
 * @throws {@link MediaTailorServiceException}
 * <p>Base exception class for all service exceptions from MediaTailor service.</p>
 *
 * @public
 */
export declare class UpdateChannelCommand extends UpdateChannelCommand_base {
}
