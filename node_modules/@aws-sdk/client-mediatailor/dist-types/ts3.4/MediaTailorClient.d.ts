import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  ConfigureLogsForChannelCommandInput,
  ConfigureLogsForChannelCommandOutput,
} from "./commands/ConfigureLogsForChannelCommand";
import {
  ConfigureLogsForPlaybackConfigurationCommandInput,
  ConfigureLogsForPlaybackConfigurationCommandOutput,
} from "./commands/ConfigureLogsForPlaybackConfigurationCommand";
import {
  CreateChannelCommandInput,
  CreateChannelCommandOutput,
} from "./commands/CreateChannelCommand";
import {
  CreateLiveSourceCommandInput,
  CreateLiveSourceCommandOutput,
} from "./commands/CreateLiveSourceCommand";
import {
  CreatePrefetchScheduleCommandInput,
  CreatePrefetchScheduleCommandOutput,
} from "./commands/CreatePrefetchScheduleCommand";
import {
  CreateProgramCommandInput,
  CreateProgramCommandOutput,
} from "./commands/CreateProgramCommand";
import {
  CreateSourceLocationCommandInput,
  CreateSourceLocationCommandOutput,
} from "./commands/CreateSourceLocationCommand";
import {
  CreateVodSourceCommandInput,
  CreateVodSourceCommandOutput,
} from "./commands/CreateVodSourceCommand";
import {
  DeleteChannelCommandInput,
  DeleteChannelCommandOutput,
} from "./commands/DeleteChannelCommand";
import {
  DeleteChannelPolicyCommandInput,
  DeleteChannelPolicyCommandOutput,
} from "./commands/DeleteChannelPolicyCommand";
import {
  DeleteLiveSourceCommandInput,
  DeleteLiveSourceCommandOutput,
} from "./commands/DeleteLiveSourceCommand";
import {
  DeletePlaybackConfigurationCommandInput,
  DeletePlaybackConfigurationCommandOutput,
} from "./commands/DeletePlaybackConfigurationCommand";
import {
  DeletePrefetchScheduleCommandInput,
  DeletePrefetchScheduleCommandOutput,
} from "./commands/DeletePrefetchScheduleCommand";
import {
  DeleteProgramCommandInput,
  DeleteProgramCommandOutput,
} from "./commands/DeleteProgramCommand";
import {
  DeleteSourceLocationCommandInput,
  DeleteSourceLocationCommandOutput,
} from "./commands/DeleteSourceLocationCommand";
import {
  DeleteVodSourceCommandInput,
  DeleteVodSourceCommandOutput,
} from "./commands/DeleteVodSourceCommand";
import {
  DescribeChannelCommandInput,
  DescribeChannelCommandOutput,
} from "./commands/DescribeChannelCommand";
import {
  DescribeLiveSourceCommandInput,
  DescribeLiveSourceCommandOutput,
} from "./commands/DescribeLiveSourceCommand";
import {
  DescribeProgramCommandInput,
  DescribeProgramCommandOutput,
} from "./commands/DescribeProgramCommand";
import {
  DescribeSourceLocationCommandInput,
  DescribeSourceLocationCommandOutput,
} from "./commands/DescribeSourceLocationCommand";
import {
  DescribeVodSourceCommandInput,
  DescribeVodSourceCommandOutput,
} from "./commands/DescribeVodSourceCommand";
import {
  GetChannelPolicyCommandInput,
  GetChannelPolicyCommandOutput,
} from "./commands/GetChannelPolicyCommand";
import {
  GetChannelScheduleCommandInput,
  GetChannelScheduleCommandOutput,
} from "./commands/GetChannelScheduleCommand";
import {
  GetPlaybackConfigurationCommandInput,
  GetPlaybackConfigurationCommandOutput,
} from "./commands/GetPlaybackConfigurationCommand";
import {
  GetPrefetchScheduleCommandInput,
  GetPrefetchScheduleCommandOutput,
} from "./commands/GetPrefetchScheduleCommand";
import {
  ListAlertsCommandInput,
  ListAlertsCommandOutput,
} from "./commands/ListAlertsCommand";
import {
  ListChannelsCommandInput,
  ListChannelsCommandOutput,
} from "./commands/ListChannelsCommand";
import {
  ListLiveSourcesCommandInput,
  ListLiveSourcesCommandOutput,
} from "./commands/ListLiveSourcesCommand";
import {
  ListPlaybackConfigurationsCommandInput,
  ListPlaybackConfigurationsCommandOutput,
} from "./commands/ListPlaybackConfigurationsCommand";
import {
  ListPrefetchSchedulesCommandInput,
  ListPrefetchSchedulesCommandOutput,
} from "./commands/ListPrefetchSchedulesCommand";
import {
  ListSourceLocationsCommandInput,
  ListSourceLocationsCommandOutput,
} from "./commands/ListSourceLocationsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListVodSourcesCommandInput,
  ListVodSourcesCommandOutput,
} from "./commands/ListVodSourcesCommand";
import {
  PutChannelPolicyCommandInput,
  PutChannelPolicyCommandOutput,
} from "./commands/PutChannelPolicyCommand";
import {
  PutPlaybackConfigurationCommandInput,
  PutPlaybackConfigurationCommandOutput,
} from "./commands/PutPlaybackConfigurationCommand";
import {
  StartChannelCommandInput,
  StartChannelCommandOutput,
} from "./commands/StartChannelCommand";
import {
  StopChannelCommandInput,
  StopChannelCommandOutput,
} from "./commands/StopChannelCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateChannelCommandInput,
  UpdateChannelCommandOutput,
} from "./commands/UpdateChannelCommand";
import {
  UpdateLiveSourceCommandInput,
  UpdateLiveSourceCommandOutput,
} from "./commands/UpdateLiveSourceCommand";
import {
  UpdateProgramCommandInput,
  UpdateProgramCommandOutput,
} from "./commands/UpdateProgramCommand";
import {
  UpdateSourceLocationCommandInput,
  UpdateSourceLocationCommandOutput,
} from "./commands/UpdateSourceLocationCommand";
import {
  UpdateVodSourceCommandInput,
  UpdateVodSourceCommandOutput,
} from "./commands/UpdateVodSourceCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | ConfigureLogsForChannelCommandInput
  | ConfigureLogsForPlaybackConfigurationCommandInput
  | CreateChannelCommandInput
  | CreateLiveSourceCommandInput
  | CreatePrefetchScheduleCommandInput
  | CreateProgramCommandInput
  | CreateSourceLocationCommandInput
  | CreateVodSourceCommandInput
  | DeleteChannelCommandInput
  | DeleteChannelPolicyCommandInput
  | DeleteLiveSourceCommandInput
  | DeletePlaybackConfigurationCommandInput
  | DeletePrefetchScheduleCommandInput
  | DeleteProgramCommandInput
  | DeleteSourceLocationCommandInput
  | DeleteVodSourceCommandInput
  | DescribeChannelCommandInput
  | DescribeLiveSourceCommandInput
  | DescribeProgramCommandInput
  | DescribeSourceLocationCommandInput
  | DescribeVodSourceCommandInput
  | GetChannelPolicyCommandInput
  | GetChannelScheduleCommandInput
  | GetPlaybackConfigurationCommandInput
  | GetPrefetchScheduleCommandInput
  | ListAlertsCommandInput
  | ListChannelsCommandInput
  | ListLiveSourcesCommandInput
  | ListPlaybackConfigurationsCommandInput
  | ListPrefetchSchedulesCommandInput
  | ListSourceLocationsCommandInput
  | ListTagsForResourceCommandInput
  | ListVodSourcesCommandInput
  | PutChannelPolicyCommandInput
  | PutPlaybackConfigurationCommandInput
  | StartChannelCommandInput
  | StopChannelCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput
  | UpdateChannelCommandInput
  | UpdateLiveSourceCommandInput
  | UpdateProgramCommandInput
  | UpdateSourceLocationCommandInput
  | UpdateVodSourceCommandInput;
export type ServiceOutputTypes =
  | ConfigureLogsForChannelCommandOutput
  | ConfigureLogsForPlaybackConfigurationCommandOutput
  | CreateChannelCommandOutput
  | CreateLiveSourceCommandOutput
  | CreatePrefetchScheduleCommandOutput
  | CreateProgramCommandOutput
  | CreateSourceLocationCommandOutput
  | CreateVodSourceCommandOutput
  | DeleteChannelCommandOutput
  | DeleteChannelPolicyCommandOutput
  | DeleteLiveSourceCommandOutput
  | DeletePlaybackConfigurationCommandOutput
  | DeletePrefetchScheduleCommandOutput
  | DeleteProgramCommandOutput
  | DeleteSourceLocationCommandOutput
  | DeleteVodSourceCommandOutput
  | DescribeChannelCommandOutput
  | DescribeLiveSourceCommandOutput
  | DescribeProgramCommandOutput
  | DescribeSourceLocationCommandOutput
  | DescribeVodSourceCommandOutput
  | GetChannelPolicyCommandOutput
  | GetChannelScheduleCommandOutput
  | GetPlaybackConfigurationCommandOutput
  | GetPrefetchScheduleCommandOutput
  | ListAlertsCommandOutput
  | ListChannelsCommandOutput
  | ListLiveSourcesCommandOutput
  | ListPlaybackConfigurationsCommandOutput
  | ListPrefetchSchedulesCommandOutput
  | ListSourceLocationsCommandOutput
  | ListTagsForResourceCommandOutput
  | ListVodSourcesCommandOutput
  | PutChannelPolicyCommandOutput
  | PutPlaybackConfigurationCommandOutput
  | StartChannelCommandOutput
  | StopChannelCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput
  | UpdateChannelCommandOutput
  | UpdateLiveSourceCommandOutput
  | UpdateProgramCommandOutput
  | UpdateSourceLocationCommandOutput
  | UpdateVodSourceCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type MediaTailorClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  UserAgentInputConfig &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface MediaTailorClientConfig extends MediaTailorClientConfigType {}
export type MediaTailorClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    UserAgentResolvedConfig &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface MediaTailorClientResolvedConfig
  extends MediaTailorClientResolvedConfigType {}
export declare class MediaTailorClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  MediaTailorClientResolvedConfig
> {
  readonly config: MediaTailorClientResolvedConfig;
  constructor(
    ...[configuration]: __CheckOptionalClientConfig<MediaTailorClientConfig>
  );
  destroy(): void;
  private getDefaultHttpAuthSchemeParametersProvider;
  private getIdentityProviderConfigProvider;
}
