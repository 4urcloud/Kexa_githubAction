import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateContainerCommandInput,
  CreateContainerCommandOutput,
} from "./commands/CreateContainerCommand";
import {
  DeleteContainerCommandInput,
  DeleteContainerCommandOutput,
} from "./commands/DeleteContainerCommand";
import {
  DeleteContainerPolicyCommandInput,
  DeleteContainerPolicyCommandOutput,
} from "./commands/DeleteContainerPolicyCommand";
import {
  DeleteCorsPolicyCommandInput,
  DeleteCorsPolicyCommandOutput,
} from "./commands/DeleteCorsPolicyCommand";
import {
  DeleteLifecyclePolicyCommandInput,
  DeleteLifecyclePolicyCommandOutput,
} from "./commands/DeleteLifecyclePolicyCommand";
import {
  DeleteMetricPolicyCommandInput,
  DeleteMetricPolicyCommandOutput,
} from "./commands/DeleteMetricPolicyCommand";
import {
  DescribeContainerCommandInput,
  DescribeContainerCommandOutput,
} from "./commands/DescribeContainerCommand";
import {
  GetContainerPolicyCommandInput,
  GetContainerPolicyCommandOutput,
} from "./commands/GetContainerPolicyCommand";
import {
  GetCorsPolicyCommandInput,
  GetCorsPolicyCommandOutput,
} from "./commands/GetCorsPolicyCommand";
import {
  GetLifecyclePolicyCommandInput,
  GetLifecyclePolicyCommandOutput,
} from "./commands/GetLifecyclePolicyCommand";
import {
  GetMetricPolicyCommandInput,
  GetMetricPolicyCommandOutput,
} from "./commands/GetMetricPolicyCommand";
import {
  ListContainersCommandInput,
  ListContainersCommandOutput,
} from "./commands/ListContainersCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PutContainerPolicyCommandInput,
  PutContainerPolicyCommandOutput,
} from "./commands/PutContainerPolicyCommand";
import {
  PutCorsPolicyCommandInput,
  PutCorsPolicyCommandOutput,
} from "./commands/PutCorsPolicyCommand";
import {
  PutLifecyclePolicyCommandInput,
  PutLifecyclePolicyCommandOutput,
} from "./commands/PutLifecyclePolicyCommand";
import {
  PutMetricPolicyCommandInput,
  PutMetricPolicyCommandOutput,
} from "./commands/PutMetricPolicyCommand";
import {
  StartAccessLoggingCommandInput,
  StartAccessLoggingCommandOutput,
} from "./commands/StartAccessLoggingCommand";
import {
  StopAccessLoggingCommandInput,
  StopAccessLoggingCommandOutput,
} from "./commands/StopAccessLoggingCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import { MediaStoreClient } from "./MediaStoreClient";
export interface MediaStore {
  createContainer(
    args: CreateContainerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateContainerCommandOutput>;
  createContainer(
    args: CreateContainerCommandInput,
    cb: (err: any, data?: CreateContainerCommandOutput) => void
  ): void;
  createContainer(
    args: CreateContainerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateContainerCommandOutput) => void
  ): void;
  deleteContainer(
    args: DeleteContainerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteContainerCommandOutput>;
  deleteContainer(
    args: DeleteContainerCommandInput,
    cb: (err: any, data?: DeleteContainerCommandOutput) => void
  ): void;
  deleteContainer(
    args: DeleteContainerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteContainerCommandOutput) => void
  ): void;
  deleteContainerPolicy(
    args: DeleteContainerPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteContainerPolicyCommandOutput>;
  deleteContainerPolicy(
    args: DeleteContainerPolicyCommandInput,
    cb: (err: any, data?: DeleteContainerPolicyCommandOutput) => void
  ): void;
  deleteContainerPolicy(
    args: DeleteContainerPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteContainerPolicyCommandOutput) => void
  ): void;
  deleteCorsPolicy(
    args: DeleteCorsPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteCorsPolicyCommandOutput>;
  deleteCorsPolicy(
    args: DeleteCorsPolicyCommandInput,
    cb: (err: any, data?: DeleteCorsPolicyCommandOutput) => void
  ): void;
  deleteCorsPolicy(
    args: DeleteCorsPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteCorsPolicyCommandOutput) => void
  ): void;
  deleteLifecyclePolicy(
    args: DeleteLifecyclePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLifecyclePolicyCommandOutput>;
  deleteLifecyclePolicy(
    args: DeleteLifecyclePolicyCommandInput,
    cb: (err: any, data?: DeleteLifecyclePolicyCommandOutput) => void
  ): void;
  deleteLifecyclePolicy(
    args: DeleteLifecyclePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLifecyclePolicyCommandOutput) => void
  ): void;
  deleteMetricPolicy(
    args: DeleteMetricPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteMetricPolicyCommandOutput>;
  deleteMetricPolicy(
    args: DeleteMetricPolicyCommandInput,
    cb: (err: any, data?: DeleteMetricPolicyCommandOutput) => void
  ): void;
  deleteMetricPolicy(
    args: DeleteMetricPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteMetricPolicyCommandOutput) => void
  ): void;
  describeContainer(): Promise<DescribeContainerCommandOutput>;
  describeContainer(
    args: DescribeContainerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeContainerCommandOutput>;
  describeContainer(
    args: DescribeContainerCommandInput,
    cb: (err: any, data?: DescribeContainerCommandOutput) => void
  ): void;
  describeContainer(
    args: DescribeContainerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeContainerCommandOutput) => void
  ): void;
  getContainerPolicy(
    args: GetContainerPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerPolicyCommandOutput>;
  getContainerPolicy(
    args: GetContainerPolicyCommandInput,
    cb: (err: any, data?: GetContainerPolicyCommandOutput) => void
  ): void;
  getContainerPolicy(
    args: GetContainerPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerPolicyCommandOutput) => void
  ): void;
  getCorsPolicy(
    args: GetCorsPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCorsPolicyCommandOutput>;
  getCorsPolicy(
    args: GetCorsPolicyCommandInput,
    cb: (err: any, data?: GetCorsPolicyCommandOutput) => void
  ): void;
  getCorsPolicy(
    args: GetCorsPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCorsPolicyCommandOutput) => void
  ): void;
  getLifecyclePolicy(
    args: GetLifecyclePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLifecyclePolicyCommandOutput>;
  getLifecyclePolicy(
    args: GetLifecyclePolicyCommandInput,
    cb: (err: any, data?: GetLifecyclePolicyCommandOutput) => void
  ): void;
  getLifecyclePolicy(
    args: GetLifecyclePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLifecyclePolicyCommandOutput) => void
  ): void;
  getMetricPolicy(
    args: GetMetricPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetMetricPolicyCommandOutput>;
  getMetricPolicy(
    args: GetMetricPolicyCommandInput,
    cb: (err: any, data?: GetMetricPolicyCommandOutput) => void
  ): void;
  getMetricPolicy(
    args: GetMetricPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetMetricPolicyCommandOutput) => void
  ): void;
  listContainers(): Promise<ListContainersCommandOutput>;
  listContainers(
    args: ListContainersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListContainersCommandOutput>;
  listContainers(
    args: ListContainersCommandInput,
    cb: (err: any, data?: ListContainersCommandOutput) => void
  ): void;
  listContainers(
    args: ListContainersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListContainersCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  putContainerPolicy(
    args: PutContainerPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutContainerPolicyCommandOutput>;
  putContainerPolicy(
    args: PutContainerPolicyCommandInput,
    cb: (err: any, data?: PutContainerPolicyCommandOutput) => void
  ): void;
  putContainerPolicy(
    args: PutContainerPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutContainerPolicyCommandOutput) => void
  ): void;
  putCorsPolicy(
    args: PutCorsPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutCorsPolicyCommandOutput>;
  putCorsPolicy(
    args: PutCorsPolicyCommandInput,
    cb: (err: any, data?: PutCorsPolicyCommandOutput) => void
  ): void;
  putCorsPolicy(
    args: PutCorsPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutCorsPolicyCommandOutput) => void
  ): void;
  putLifecyclePolicy(
    args: PutLifecyclePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutLifecyclePolicyCommandOutput>;
  putLifecyclePolicy(
    args: PutLifecyclePolicyCommandInput,
    cb: (err: any, data?: PutLifecyclePolicyCommandOutput) => void
  ): void;
  putLifecyclePolicy(
    args: PutLifecyclePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutLifecyclePolicyCommandOutput) => void
  ): void;
  putMetricPolicy(
    args: PutMetricPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutMetricPolicyCommandOutput>;
  putMetricPolicy(
    args: PutMetricPolicyCommandInput,
    cb: (err: any, data?: PutMetricPolicyCommandOutput) => void
  ): void;
  putMetricPolicy(
    args: PutMetricPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutMetricPolicyCommandOutput) => void
  ): void;
  startAccessLogging(
    args: StartAccessLoggingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartAccessLoggingCommandOutput>;
  startAccessLogging(
    args: StartAccessLoggingCommandInput,
    cb: (err: any, data?: StartAccessLoggingCommandOutput) => void
  ): void;
  startAccessLogging(
    args: StartAccessLoggingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartAccessLoggingCommandOutput) => void
  ): void;
  stopAccessLogging(
    args: StopAccessLoggingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopAccessLoggingCommandOutput>;
  stopAccessLogging(
    args: StopAccessLoggingCommandInput,
    cb: (err: any, data?: StopAccessLoggingCommandOutput) => void
  ): void;
  stopAccessLogging(
    args: StopAccessLoggingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopAccessLoggingCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
}
export declare class MediaStore
  extends MediaStoreClient
  implements MediaStore {}
