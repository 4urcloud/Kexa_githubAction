import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { MediaStoreServiceException as __BaseException } from "./MediaStoreServiceException";
export declare const MethodName: {
  readonly DELETE: "DELETE";
  readonly GET: "GET";
  readonly HEAD: "HEAD";
  readonly PUT: "PUT";
};
export type MethodName = (typeof MethodName)[keyof typeof MethodName];
export declare const ContainerStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
};
export type ContainerStatus =
  (typeof ContainerStatus)[keyof typeof ContainerStatus];
export interface Container {
  Endpoint?: string;
  CreationTime?: Date;
  ARN?: string;
  Name?: string;
  Status?: ContainerStatus;
  AccessLoggingEnabled?: boolean;
}
export declare class ContainerInUseException extends __BaseException {
  readonly name: "ContainerInUseException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ContainerInUseException, __BaseException>
  );
}
export declare const ContainerLevelMetrics: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ContainerLevelMetrics =
  (typeof ContainerLevelMetrics)[keyof typeof ContainerLevelMetrics];
export declare class ContainerNotFoundException extends __BaseException {
  readonly name: "ContainerNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ContainerNotFoundException, __BaseException>
  );
}
export interface CorsRule {
  AllowedOrigins: string[] | undefined;
  AllowedMethods?: MethodName[];
  AllowedHeaders: string[] | undefined;
  MaxAgeSeconds?: number;
  ExposeHeaders?: string[];
}
export declare class CorsPolicyNotFoundException extends __BaseException {
  readonly name: "CorsPolicyNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<CorsPolicyNotFoundException, __BaseException>
  );
}
export interface Tag {
  Key: string | undefined;
  Value?: string;
}
export interface CreateContainerInput {
  ContainerName: string | undefined;
  Tags?: Tag[];
}
export interface CreateContainerOutput {
  Container: Container | undefined;
}
export declare class InternalServerError extends __BaseException {
  readonly name: "InternalServerError";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerError, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface DeleteContainerInput {
  ContainerName: string | undefined;
}
export interface DeleteContainerOutput {}
export interface DeleteContainerPolicyInput {
  ContainerName: string | undefined;
}
export interface DeleteContainerPolicyOutput {}
export declare class PolicyNotFoundException extends __BaseException {
  readonly name: "PolicyNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<PolicyNotFoundException, __BaseException>
  );
}
export interface DeleteCorsPolicyInput {
  ContainerName: string | undefined;
}
export interface DeleteCorsPolicyOutput {}
export interface DeleteLifecyclePolicyInput {
  ContainerName: string | undefined;
}
export interface DeleteLifecyclePolicyOutput {}
export interface DeleteMetricPolicyInput {
  ContainerName: string | undefined;
}
export interface DeleteMetricPolicyOutput {}
export interface DescribeContainerInput {
  ContainerName?: string;
}
export interface DescribeContainerOutput {
  Container?: Container;
}
export interface GetContainerPolicyInput {
  ContainerName: string | undefined;
}
export interface GetContainerPolicyOutput {
  Policy: string | undefined;
}
export interface GetCorsPolicyInput {
  ContainerName: string | undefined;
}
export interface GetCorsPolicyOutput {
  CorsPolicy: CorsRule[] | undefined;
}
export interface GetLifecyclePolicyInput {
  ContainerName: string | undefined;
}
export interface GetLifecyclePolicyOutput {
  LifecyclePolicy: string | undefined;
}
export interface GetMetricPolicyInput {
  ContainerName: string | undefined;
}
export interface MetricPolicyRule {
  ObjectGroup: string | undefined;
  ObjectGroupName: string | undefined;
}
export interface MetricPolicy {
  ContainerLevelMetrics: ContainerLevelMetrics | undefined;
  MetricPolicyRules?: MetricPolicyRule[];
}
export interface GetMetricPolicyOutput {
  MetricPolicy: MetricPolicy | undefined;
}
export interface ListContainersInput {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListContainersOutput {
  Containers: Container[] | undefined;
  NextToken?: string;
}
export interface ListTagsForResourceInput {
  Resource: string | undefined;
}
export interface ListTagsForResourceOutput {
  Tags?: Tag[];
}
export interface PutContainerPolicyInput {
  ContainerName: string | undefined;
  Policy: string | undefined;
}
export interface PutContainerPolicyOutput {}
export interface PutCorsPolicyInput {
  ContainerName: string | undefined;
  CorsPolicy: CorsRule[] | undefined;
}
export interface PutCorsPolicyOutput {}
export interface PutLifecyclePolicyInput {
  ContainerName: string | undefined;
  LifecyclePolicy: string | undefined;
}
export interface PutLifecyclePolicyOutput {}
export interface PutMetricPolicyInput {
  ContainerName: string | undefined;
  MetricPolicy: MetricPolicy | undefined;
}
export interface PutMetricPolicyOutput {}
export interface StartAccessLoggingInput {
  ContainerName: string | undefined;
}
export interface StartAccessLoggingOutput {}
export interface StopAccessLoggingInput {
  ContainerName: string | undefined;
}
export interface StopAccessLoggingOutput {}
export interface TagResourceInput {
  Resource: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceOutput {}
export interface UntagResourceInput {
  Resource: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceOutput {}
