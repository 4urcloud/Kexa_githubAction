import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  CreateContainerCommandInput,
  CreateContainerCommandOutput,
} from "./commands/CreateContainerCommand";
import {
  DeleteContainerCommandInput,
  DeleteContainerCommandOutput,
} from "./commands/DeleteContainerCommand";
import {
  DeleteContainerPolicyCommandInput,
  DeleteContainerPolicyCommandOutput,
} from "./commands/DeleteContainerPolicyCommand";
import {
  DeleteCorsPolicyCommandInput,
  DeleteCorsPolicyCommandOutput,
} from "./commands/DeleteCorsPolicyCommand";
import {
  DeleteLifecyclePolicyCommandInput,
  DeleteLifecyclePolicyCommandOutput,
} from "./commands/DeleteLifecyclePolicyCommand";
import {
  DeleteMetricPolicyCommandInput,
  DeleteMetricPolicyCommandOutput,
} from "./commands/DeleteMetricPolicyCommand";
import {
  DescribeContainerCommandInput,
  DescribeContainerCommandOutput,
} from "./commands/DescribeContainerCommand";
import {
  GetContainerPolicyCommandInput,
  GetContainerPolicyCommandOutput,
} from "./commands/GetContainerPolicyCommand";
import {
  GetCorsPolicyCommandInput,
  GetCorsPolicyCommandOutput,
} from "./commands/GetCorsPolicyCommand";
import {
  GetLifecyclePolicyCommandInput,
  GetLifecyclePolicyCommandOutput,
} from "./commands/GetLifecyclePolicyCommand";
import {
  GetMetricPolicyCommandInput,
  GetMetricPolicyCommandOutput,
} from "./commands/GetMetricPolicyCommand";
import {
  ListContainersCommandInput,
  ListContainersCommandOutput,
} from "./commands/ListContainersCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PutContainerPolicyCommandInput,
  PutContainerPolicyCommandOutput,
} from "./commands/PutContainerPolicyCommand";
import {
  PutCorsPolicyCommandInput,
  PutCorsPolicyCommandOutput,
} from "./commands/PutCorsPolicyCommand";
import {
  PutLifecyclePolicyCommandInput,
  PutLifecyclePolicyCommandOutput,
} from "./commands/PutLifecyclePolicyCommand";
import {
  PutMetricPolicyCommandInput,
  PutMetricPolicyCommandOutput,
} from "./commands/PutMetricPolicyCommand";
import {
  StartAccessLoggingCommandInput,
  StartAccessLoggingCommandOutput,
} from "./commands/StartAccessLoggingCommand";
import {
  StopAccessLoggingCommandInput,
  StopAccessLoggingCommandOutput,
} from "./commands/StopAccessLoggingCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | CreateContainerCommandInput
  | DeleteContainerCommandInput
  | DeleteContainerPolicyCommandInput
  | DeleteCorsPolicyCommandInput
  | DeleteLifecyclePolicyCommandInput
  | DeleteMetricPolicyCommandInput
  | DescribeContainerCommandInput
  | GetContainerPolicyCommandInput
  | GetCorsPolicyCommandInput
  | GetLifecyclePolicyCommandInput
  | GetMetricPolicyCommandInput
  | ListContainersCommandInput
  | ListTagsForResourceCommandInput
  | PutContainerPolicyCommandInput
  | PutCorsPolicyCommandInput
  | PutLifecyclePolicyCommandInput
  | PutMetricPolicyCommandInput
  | StartAccessLoggingCommandInput
  | StopAccessLoggingCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput;
export type ServiceOutputTypes =
  | CreateContainerCommandOutput
  | DeleteContainerCommandOutput
  | DeleteContainerPolicyCommandOutput
  | DeleteCorsPolicyCommandOutput
  | DeleteLifecyclePolicyCommandOutput
  | DeleteMetricPolicyCommandOutput
  | DescribeContainerCommandOutput
  | GetContainerPolicyCommandOutput
  | GetCorsPolicyCommandOutput
  | GetLifecyclePolicyCommandOutput
  | GetMetricPolicyCommandOutput
  | ListContainersCommandOutput
  | ListTagsForResourceCommandOutput
  | PutContainerPolicyCommandOutput
  | PutCorsPolicyCommandOutput
  | PutLifecyclePolicyCommandOutput
  | PutMetricPolicyCommandOutput
  | StartAccessLoggingCommandOutput
  | StopAccessLoggingCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type MediaStoreClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  UserAgentInputConfig &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface MediaStoreClientConfig extends MediaStoreClientConfigType {}
export type MediaStoreClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    UserAgentResolvedConfig &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface MediaStoreClientResolvedConfig
  extends MediaStoreClientResolvedConfigType {}
export declare class MediaStoreClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  MediaStoreClientResolvedConfig
> {
  readonly config: MediaStoreClientResolvedConfig;
  constructor(
    ...[configuration]: __CheckOptionalClientConfig<MediaStoreClientConfig>
  );
  destroy(): void;
  private getDefaultHttpAuthSchemeParametersProvider;
  private getIdentityProviderConfigProvider;
}
