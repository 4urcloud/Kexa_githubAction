import { MediaStoreServiceException as __BaseException } from "./MediaStoreServiceException";
export const MethodName = {
    DELETE: "DELETE",
    GET: "GET",
    HEAD: "HEAD",
    PUT: "PUT",
};
export const ContainerStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
};
export class ContainerInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ContainerInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ContainerInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ContainerInUseException.prototype);
        this.Message = opts.Message;
    }
}
export const ContainerLevelMetrics = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class ContainerNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ContainerNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ContainerNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ContainerNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class CorsPolicyNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "CorsPolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "CorsPolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CorsPolicyNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServerError extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerError",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerError";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerError.prototype);
        this.Message = opts.Message;
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class PolicyNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "PolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PolicyNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
