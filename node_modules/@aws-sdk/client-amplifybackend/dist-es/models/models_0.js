import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { AmplifyBackendServiceException as __BaseException } from "./AmplifyBackendServiceException";
export const AdditionalConstraintsElement = {
    REQUIRE_DIGIT: "REQUIRE_DIGIT",
    REQUIRE_LOWERCASE: "REQUIRE_LOWERCASE",
    REQUIRE_SYMBOL: "REQUIRE_SYMBOL",
    REQUIRE_UPPERCASE: "REQUIRE_UPPERCASE",
};
export class BadRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class GatewayTimeoutException extends __BaseException {
    constructor(opts) {
        super({
            name: "GatewayTimeoutException",
            $fault: "server",
            ...opts,
        });
        this.name = "GatewayTimeoutException";
        this.$fault = "server";
        Object.setPrototypeOf(this, GatewayTimeoutException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
        this.ResourceType = opts.ResourceType;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.LimitType = opts.LimitType;
        this.Message = opts.Message;
    }
}
export const Mode = {
    AMAZON_COGNITO_USER_POOLS: "AMAZON_COGNITO_USER_POOLS",
    API_KEY: "API_KEY",
    AWS_IAM: "AWS_IAM",
    OPENID_CONNECT: "OPENID_CONNECT",
};
export const ResolutionStrategy = {
    AUTOMERGE: "AUTOMERGE",
    LAMBDA: "LAMBDA",
    NONE: "NONE",
    OPTIMISTIC_CONCURRENCY: "OPTIMISTIC_CONCURRENCY",
};
export const AuthResources = {
    IDENTITY_POOL_AND_USER_POOL: "IDENTITY_POOL_AND_USER_POOL",
    USER_POOL_ONLY: "USER_POOL_ONLY",
};
export const Service = {
    COGNITO: "COGNITO",
};
export const DeliveryMethod = {
    EMAIL: "EMAIL",
    SMS: "SMS",
};
export const MFAMode = {
    OFF: "OFF",
    ON: "ON",
    OPTIONAL: "OPTIONAL",
};
export const MfaTypesElement = {
    SMS: "SMS",
    TOTP: "TOTP",
};
export const OAuthGrantType = {
    CODE: "CODE",
    IMPLICIT: "IMPLICIT",
};
export const OAuthScopesElement = {
    AWS_COGNITO_SIGNIN_USER_ADMIN: "AWS_COGNITO_SIGNIN_USER_ADMIN",
    EMAIL: "EMAIL",
    OPENID: "OPENID",
    PHONE: "PHONE",
    PROFILE: "PROFILE",
};
export const RequiredSignUpAttributesElement = {
    ADDRESS: "ADDRESS",
    BIRTHDATE: "BIRTHDATE",
    EMAIL: "EMAIL",
    FAMILY_NAME: "FAMILY_NAME",
    GENDER: "GENDER",
    GIVEN_NAME: "GIVEN_NAME",
    LOCALE: "LOCALE",
    MIDDLE_NAME: "MIDDLE_NAME",
    NAME: "NAME",
    NICKNAME: "NICKNAME",
    PHONE_NUMBER: "PHONE_NUMBER",
    PICTURE: "PICTURE",
    PREFERRED_USERNAME: "PREFERRED_USERNAME",
    PROFILE: "PROFILE",
    UPDATED_AT: "UPDATED_AT",
    WEBSITE: "WEBSITE",
    ZONE_INFO: "ZONE_INFO",
};
export const SignInMethod = {
    EMAIL: "EMAIL",
    EMAIL_AND_PHONE_NUMBER: "EMAIL_AND_PHONE_NUMBER",
    PHONE_NUMBER: "PHONE_NUMBER",
    USERNAME: "USERNAME",
};
export const AuthenticatedElement = {
    CREATE_AND_UPDATE: "CREATE_AND_UPDATE",
    DELETE: "DELETE",
    READ: "READ",
};
export const UnAuthenticatedElement = {
    CREATE_AND_UPDATE: "CREATE_AND_UPDATE",
    DELETE: "DELETE",
    READ: "READ",
};
export const ServiceName = {
    S3: "S3",
};
export const Status = {
    LATEST: "LATEST",
    STALE: "STALE",
};
export const EmailSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SmsSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateBackendAuthForgotPasswordConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EmailSettings && { EmailSettings: SENSITIVE_STRING }),
    ...(obj.SmsSettings && { SmsSettings: SENSITIVE_STRING }),
});
export const BackendAuthSocialProviderConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BackendAuthAppleProviderConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SocialProviderSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Facebook && { Facebook: SENSITIVE_STRING }),
    ...(obj.Google && { Google: SENSITIVE_STRING }),
    ...(obj.LoginWithAmazon && { LoginWithAmazon: SENSITIVE_STRING }),
    ...(obj.SignInWithApple && { SignInWithApple: SENSITIVE_STRING }),
});
export const CreateBackendAuthOAuthConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SocialProviderSettings && {
        SocialProviderSettings: SocialProviderSettingsFilterSensitiveLog(obj.SocialProviderSettings),
    }),
});
export const CreateBackendAuthVerificationMessageConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EmailSettings && { EmailSettings: SENSITIVE_STRING }),
    ...(obj.SmsSettings && { SmsSettings: SENSITIVE_STRING }),
});
export const CreateBackendAuthUserPoolConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ForgotPassword && {
        ForgotPassword: CreateBackendAuthForgotPasswordConfigFilterSensitiveLog(obj.ForgotPassword),
    }),
    ...(obj.OAuth && { OAuth: CreateBackendAuthOAuthConfigFilterSensitiveLog(obj.OAuth) }),
    ...(obj.VerificationMessage && {
        VerificationMessage: CreateBackendAuthVerificationMessageConfigFilterSensitiveLog(obj.VerificationMessage),
    }),
});
export const CreateBackendAuthResourceConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserPoolConfigs && {
        UserPoolConfigs: CreateBackendAuthUserPoolConfigFilterSensitiveLog(obj.UserPoolConfigs),
    }),
});
export const CreateBackendAuthRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceConfig && { ResourceConfig: CreateBackendAuthResourceConfigFilterSensitiveLog(obj.ResourceConfig) }),
});
export const GetBackendAuthResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceConfig && { ResourceConfig: CreateBackendAuthResourceConfigFilterSensitiveLog(obj.ResourceConfig) }),
});
export const UpdateBackendAuthForgotPasswordConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EmailSettings && { EmailSettings: SENSITIVE_STRING }),
    ...(obj.SmsSettings && { SmsSettings: SENSITIVE_STRING }),
});
export const UpdateBackendAuthOAuthConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SocialProviderSettings && {
        SocialProviderSettings: SocialProviderSettingsFilterSensitiveLog(obj.SocialProviderSettings),
    }),
});
export const UpdateBackendAuthVerificationMessageConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EmailSettings && { EmailSettings: SENSITIVE_STRING }),
    ...(obj.SmsSettings && { SmsSettings: SENSITIVE_STRING }),
});
export const UpdateBackendAuthUserPoolConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ForgotPassword && {
        ForgotPassword: UpdateBackendAuthForgotPasswordConfigFilterSensitiveLog(obj.ForgotPassword),
    }),
    ...(obj.OAuth && { OAuth: UpdateBackendAuthOAuthConfigFilterSensitiveLog(obj.OAuth) }),
    ...(obj.VerificationMessage && {
        VerificationMessage: UpdateBackendAuthVerificationMessageConfigFilterSensitiveLog(obj.VerificationMessage),
    }),
});
export const UpdateBackendAuthResourceConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserPoolConfigs && {
        UserPoolConfigs: UpdateBackendAuthUserPoolConfigFilterSensitiveLog(obj.UserPoolConfigs),
    }),
});
export const UpdateBackendAuthRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceConfig && { ResourceConfig: UpdateBackendAuthResourceConfigFilterSensitiveLog(obj.ResourceConfig) }),
});
