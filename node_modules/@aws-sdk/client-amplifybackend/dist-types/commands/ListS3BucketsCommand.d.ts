import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AmplifyBackendClient";
import { ListS3BucketsRequest, ListS3BucketsResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link ListS3BucketsCommand}.
 */
export interface ListS3BucketsCommandInput extends ListS3BucketsRequest {
}
/**
 * @public
 *
 * The output of {@link ListS3BucketsCommand}.
 */
export interface ListS3BucketsCommandOutput extends ListS3BucketsResponse, __MetadataBearer {
}
declare const ListS3BucketsCommand_base: {
    new (input: ListS3BucketsCommandInput): import("@smithy/smithy-client").CommandImpl<ListS3BucketsCommandInput, ListS3BucketsCommandOutput, AmplifyBackendClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>The list of S3 buckets in your account.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AmplifyBackendClient, ListS3BucketsCommand } from "@aws-sdk/client-amplifybackend"; // ES Modules import
 * // const { AmplifyBackendClient, ListS3BucketsCommand } = require("@aws-sdk/client-amplifybackend"); // CommonJS import
 * const client = new AmplifyBackendClient(config);
 * const input = { // ListS3BucketsRequest
 *   NextToken: "STRING_VALUE",
 * };
 * const command = new ListS3BucketsCommand(input);
 * const response = await client.send(command);
 * // { // ListS3BucketsResponse
 * //   Buckets: [ // ListOfS3BucketInfo
 * //     { // S3BucketInfo
 * //       CreationDate: "STRING_VALUE",
 * //       Name: "STRING_VALUE",
 * //     },
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListS3BucketsCommandInput - {@link ListS3BucketsCommandInput}
 * @returns {@link ListS3BucketsCommandOutput}
 * @see {@link ListS3BucketsCommandInput} for command's `input` shape.
 * @see {@link ListS3BucketsCommandOutput} for command's `response` shape.
 * @see {@link AmplifyBackendClientResolvedConfig | config} for AmplifyBackendClient's `config` shape.
 *
 * @throws {@link BadRequestException} (client fault)
 *  <p>An error returned if a request is not formed properly.</p>
 *
 * @throws {@link GatewayTimeoutException} (server fault)
 *  <p>An error returned if there's a temporary issue with the service.</p>
 *
 * @throws {@link NotFoundException} (client fault)
 *  <p>An error returned when a specific resource type is not found.</p>
 *
 * @throws {@link TooManyRequestsException} (client fault)
 *  <p>An error that is returned when a limit of a specific type has been exceeded.</p>
 *
 * @throws {@link AmplifyBackendServiceException}
 * <p>Base exception class for all service exceptions from AmplifyBackend service.</p>
 *
 */
export declare class ListS3BucketsCommand extends ListS3BucketsCommand_base {
}
