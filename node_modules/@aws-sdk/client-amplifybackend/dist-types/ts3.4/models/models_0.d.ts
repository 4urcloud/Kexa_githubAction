import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { AmplifyBackendServiceException as __BaseException } from "./AmplifyBackendServiceException";
export declare const AdditionalConstraintsElement: {
  readonly REQUIRE_DIGIT: "REQUIRE_DIGIT";
  readonly REQUIRE_LOWERCASE: "REQUIRE_LOWERCASE";
  readonly REQUIRE_SYMBOL: "REQUIRE_SYMBOL";
  readonly REQUIRE_UPPERCASE: "REQUIRE_UPPERCASE";
};
export type AdditionalConstraintsElement =
  (typeof AdditionalConstraintsElement)[keyof typeof AdditionalConstraintsElement];
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export interface CloneBackendRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  TargetEnvironmentName: string | undefined;
}
export interface CloneBackendResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export declare class GatewayTimeoutException extends __BaseException {
  readonly name: "GatewayTimeoutException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<GatewayTimeoutException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  Message?: string;
  ResourceType?: string;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  LimitType?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface ResourceConfig {}
export interface CreateBackendRequest {
  AppId: string | undefined;
  AppName: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig?: ResourceConfig;
  ResourceName?: string;
}
export interface CreateBackendResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export declare const Mode: {
  readonly AMAZON_COGNITO_USER_POOLS: "AMAZON_COGNITO_USER_POOLS";
  readonly API_KEY: "API_KEY";
  readonly AWS_IAM: "AWS_IAM";
  readonly OPENID_CONNECT: "OPENID_CONNECT";
};
export type Mode = (typeof Mode)[keyof typeof Mode];
export interface BackendAPIAppSyncAuthSettings {
  CognitoUserPoolId?: string;
  Description?: string;
  ExpirationTime?: number;
  OpenIDAuthTTL?: string;
  OpenIDClientId?: string;
  OpenIDIatTTL?: string;
  OpenIDIssueURL?: string;
  OpenIDProviderName?: string;
}
export interface BackendAPIAuthType {
  Mode?: Mode;
  Settings?: BackendAPIAppSyncAuthSettings;
}
export declare const ResolutionStrategy: {
  readonly AUTOMERGE: "AUTOMERGE";
  readonly LAMBDA: "LAMBDA";
  readonly NONE: "NONE";
  readonly OPTIMISTIC_CONCURRENCY: "OPTIMISTIC_CONCURRENCY";
};
export type ResolutionStrategy =
  (typeof ResolutionStrategy)[keyof typeof ResolutionStrategy];
export interface BackendAPIConflictResolution {
  ResolutionStrategy?: ResolutionStrategy;
}
export interface BackendAPIResourceConfig {
  AdditionalAuthTypes?: BackendAPIAuthType[];
  ApiName?: string;
  ConflictResolution?: BackendAPIConflictResolution;
  DefaultAuthType?: BackendAPIAuthType;
  Service?: string;
  TransformSchema?: string;
}
export interface CreateBackendAPIRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig: BackendAPIResourceConfig | undefined;
  ResourceName: string | undefined;
}
export interface CreateBackendAPIResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export declare const AuthResources: {
  readonly IDENTITY_POOL_AND_USER_POOL: "IDENTITY_POOL_AND_USER_POOL";
  readonly USER_POOL_ONLY: "USER_POOL_ONLY";
};
export type AuthResources = (typeof AuthResources)[keyof typeof AuthResources];
export interface CreateBackendAuthIdentityPoolConfig {
  IdentityPoolName: string | undefined;
  UnauthenticatedLogin: boolean | undefined;
}
export declare const Service: {
  readonly COGNITO: "COGNITO";
};
export type Service = (typeof Service)[keyof typeof Service];
export declare const DeliveryMethod: {
  readonly EMAIL: "EMAIL";
  readonly SMS: "SMS";
};
export type DeliveryMethod =
  (typeof DeliveryMethod)[keyof typeof DeliveryMethod];
export interface EmailSettings {
  EmailMessage?: string;
  EmailSubject?: string;
}
export interface SmsSettings {
  SmsMessage?: string;
}
export interface CreateBackendAuthForgotPasswordConfig {
  DeliveryMethod: DeliveryMethod | undefined;
  EmailSettings?: EmailSettings;
  SmsSettings?: SmsSettings;
}
export declare const MFAMode: {
  readonly OFF: "OFF";
  readonly ON: "ON";
  readonly OPTIONAL: "OPTIONAL";
};
export type MFAMode = (typeof MFAMode)[keyof typeof MFAMode];
export declare const MfaTypesElement: {
  readonly SMS: "SMS";
  readonly TOTP: "TOTP";
};
export type MfaTypesElement =
  (typeof MfaTypesElement)[keyof typeof MfaTypesElement];
export interface Settings {
  MfaTypes?: MfaTypesElement[];
  SmsMessage?: string;
}
export interface CreateBackendAuthMFAConfig {
  MFAMode: MFAMode | undefined;
  Settings?: Settings;
}
export declare const OAuthGrantType: {
  readonly CODE: "CODE";
  readonly IMPLICIT: "IMPLICIT";
};
export type OAuthGrantType =
  (typeof OAuthGrantType)[keyof typeof OAuthGrantType];
export declare const OAuthScopesElement: {
  readonly AWS_COGNITO_SIGNIN_USER_ADMIN: "AWS_COGNITO_SIGNIN_USER_ADMIN";
  readonly EMAIL: "EMAIL";
  readonly OPENID: "OPENID";
  readonly PHONE: "PHONE";
  readonly PROFILE: "PROFILE";
};
export type OAuthScopesElement =
  (typeof OAuthScopesElement)[keyof typeof OAuthScopesElement];
export interface BackendAuthSocialProviderConfig {
  ClientId?: string;
  ClientSecret?: string;
}
export interface BackendAuthAppleProviderConfig {
  ClientId?: string;
  KeyId?: string;
  PrivateKey?: string;
  TeamId?: string;
}
export interface SocialProviderSettings {
  Facebook?: BackendAuthSocialProviderConfig;
  Google?: BackendAuthSocialProviderConfig;
  LoginWithAmazon?: BackendAuthSocialProviderConfig;
  SignInWithApple?: BackendAuthAppleProviderConfig;
}
export interface CreateBackendAuthOAuthConfig {
  DomainPrefix?: string;
  OAuthGrantType: OAuthGrantType | undefined;
  OAuthScopes: OAuthScopesElement[] | undefined;
  RedirectSignInURIs: string[] | undefined;
  RedirectSignOutURIs: string[] | undefined;
  SocialProviderSettings?: SocialProviderSettings;
}
export interface CreateBackendAuthPasswordPolicyConfig {
  AdditionalConstraints?: AdditionalConstraintsElement[];
  MinimumLength: number | undefined;
}
export declare const RequiredSignUpAttributesElement: {
  readonly ADDRESS: "ADDRESS";
  readonly BIRTHDATE: "BIRTHDATE";
  readonly EMAIL: "EMAIL";
  readonly FAMILY_NAME: "FAMILY_NAME";
  readonly GENDER: "GENDER";
  readonly GIVEN_NAME: "GIVEN_NAME";
  readonly LOCALE: "LOCALE";
  readonly MIDDLE_NAME: "MIDDLE_NAME";
  readonly NAME: "NAME";
  readonly NICKNAME: "NICKNAME";
  readonly PHONE_NUMBER: "PHONE_NUMBER";
  readonly PICTURE: "PICTURE";
  readonly PREFERRED_USERNAME: "PREFERRED_USERNAME";
  readonly PROFILE: "PROFILE";
  readonly UPDATED_AT: "UPDATED_AT";
  readonly WEBSITE: "WEBSITE";
  readonly ZONE_INFO: "ZONE_INFO";
};
export type RequiredSignUpAttributesElement =
  (typeof RequiredSignUpAttributesElement)[keyof typeof RequiredSignUpAttributesElement];
export declare const SignInMethod: {
  readonly EMAIL: "EMAIL";
  readonly EMAIL_AND_PHONE_NUMBER: "EMAIL_AND_PHONE_NUMBER";
  readonly PHONE_NUMBER: "PHONE_NUMBER";
  readonly USERNAME: "USERNAME";
};
export type SignInMethod = (typeof SignInMethod)[keyof typeof SignInMethod];
export interface CreateBackendAuthVerificationMessageConfig {
  DeliveryMethod: DeliveryMethod | undefined;
  EmailSettings?: EmailSettings;
  SmsSettings?: SmsSettings;
}
export interface CreateBackendAuthUserPoolConfig {
  ForgotPassword?: CreateBackendAuthForgotPasswordConfig;
  Mfa?: CreateBackendAuthMFAConfig;
  OAuth?: CreateBackendAuthOAuthConfig;
  PasswordPolicy?: CreateBackendAuthPasswordPolicyConfig;
  RequiredSignUpAttributes: RequiredSignUpAttributesElement[] | undefined;
  SignInMethod: SignInMethod | undefined;
  UserPoolName: string | undefined;
  VerificationMessage?: CreateBackendAuthVerificationMessageConfig;
}
export interface CreateBackendAuthResourceConfig {
  AuthResources: AuthResources | undefined;
  IdentityPoolConfigs?: CreateBackendAuthIdentityPoolConfig;
  Service: Service | undefined;
  UserPoolConfigs: CreateBackendAuthUserPoolConfig | undefined;
}
export interface CreateBackendAuthRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig: CreateBackendAuthResourceConfig | undefined;
  ResourceName: string | undefined;
}
export interface CreateBackendAuthResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface CreateBackendConfigRequest {
  AppId: string | undefined;
  BackendManagerAppId?: string;
}
export interface CreateBackendConfigResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  JobId?: string;
  Status?: string;
}
export declare const AuthenticatedElement: {
  readonly CREATE_AND_UPDATE: "CREATE_AND_UPDATE";
  readonly DELETE: "DELETE";
  readonly READ: "READ";
};
export type AuthenticatedElement =
  (typeof AuthenticatedElement)[keyof typeof AuthenticatedElement];
export declare const UnAuthenticatedElement: {
  readonly CREATE_AND_UPDATE: "CREATE_AND_UPDATE";
  readonly DELETE: "DELETE";
  readonly READ: "READ";
};
export type UnAuthenticatedElement =
  (typeof UnAuthenticatedElement)[keyof typeof UnAuthenticatedElement];
export interface BackendStoragePermissions {
  Authenticated: AuthenticatedElement[] | undefined;
  UnAuthenticated?: UnAuthenticatedElement[];
}
export declare const ServiceName: {
  readonly S3: "S3";
};
export type ServiceName = (typeof ServiceName)[keyof typeof ServiceName];
export interface CreateBackendStorageResourceConfig {
  BucketName?: string;
  Permissions: BackendStoragePermissions | undefined;
  ServiceName: ServiceName | undefined;
}
export interface CreateBackendStorageRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig: CreateBackendStorageResourceConfig | undefined;
  ResourceName: string | undefined;
}
export interface CreateBackendStorageResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  JobId?: string;
  Status?: string;
}
export interface CreateTokenRequest {
  AppId: string | undefined;
}
export interface CreateTokenResponse {
  AppId?: string;
  ChallengeCode?: string;
  SessionId?: string;
  Ttl?: string;
}
export interface DeleteBackendRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
}
export interface DeleteBackendResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface DeleteBackendAPIRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig?: BackendAPIResourceConfig;
  ResourceName: string | undefined;
}
export interface DeleteBackendAPIResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface DeleteBackendAuthRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceName: string | undefined;
}
export interface DeleteBackendAuthResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface DeleteBackendStorageRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceName: string | undefined;
  ServiceName: ServiceName | undefined;
}
export interface DeleteBackendStorageResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  JobId?: string;
  Status?: string;
}
export interface DeleteTokenRequest {
  AppId: string | undefined;
  SessionId: string | undefined;
}
export interface DeleteTokenResponse {
  IsSuccess?: boolean;
}
export interface GenerateBackendAPIModelsRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceName: string | undefined;
}
export interface GenerateBackendAPIModelsResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface GetBackendRequest {
  AppId: string | undefined;
  BackendEnvironmentName?: string;
}
export interface GetBackendResponse {
  AmplifyFeatureFlags?: string;
  AmplifyMetaConfig?: string;
  AppId?: string;
  AppName?: string;
  BackendEnvironmentList?: string[];
  BackendEnvironmentName?: string;
  Error?: string;
}
export interface GetBackendAPIRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig?: BackendAPIResourceConfig;
  ResourceName: string | undefined;
}
export interface GetBackendAPIResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  ResourceConfig?: BackendAPIResourceConfig;
  ResourceName?: string;
}
export interface GetBackendAPIModelsRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceName: string | undefined;
}
export declare const Status: {
  readonly LATEST: "LATEST";
  readonly STALE: "STALE";
};
export type Status = (typeof Status)[keyof typeof Status];
export interface GetBackendAPIModelsResponse {
  Models?: string;
  Status?: Status;
  ModelIntrospectionSchema?: string;
}
export interface GetBackendAuthRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceName: string | undefined;
}
export interface GetBackendAuthResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  ResourceConfig?: CreateBackendAuthResourceConfig;
  ResourceName?: string;
}
export interface GetBackendJobRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  JobId: string | undefined;
}
export interface GetBackendJobResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  CreateTime?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
  UpdateTime?: string;
}
export interface GetBackendStorageRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceName: string | undefined;
}
export interface GetBackendStorageResourceConfig {
  BucketName?: string;
  Imported: boolean | undefined;
  Permissions?: BackendStoragePermissions;
  ServiceName: ServiceName | undefined;
}
export interface GetBackendStorageResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  ResourceConfig?: GetBackendStorageResourceConfig;
  ResourceName?: string;
}
export interface GetTokenRequest {
  AppId: string | undefined;
  SessionId: string | undefined;
}
export interface GetTokenResponse {
  AppId?: string;
  ChallengeCode?: string;
  SessionId?: string;
  Ttl?: string;
}
export interface ImportBackendAuthRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  IdentityPoolId?: string;
  NativeClientId: string | undefined;
  UserPoolId: string | undefined;
  WebClientId: string | undefined;
}
export interface ImportBackendAuthResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface ImportBackendStorageRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  BucketName?: string;
  ServiceName: ServiceName | undefined;
}
export interface ImportBackendStorageResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  JobId?: string;
  Status?: string;
}
export interface ListBackendJobsRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  JobId?: string;
  MaxResults?: number;
  NextToken?: string;
  Operation?: string;
  Status?: string;
}
export interface BackendJobRespObj {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  CreateTime?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
  UpdateTime?: string;
}
export interface ListBackendJobsResponse {
  Jobs?: BackendJobRespObj[];
  NextToken?: string;
}
export interface ListS3BucketsRequest {
  NextToken?: string;
}
export interface S3BucketInfo {
  CreationDate?: string;
  Name?: string;
}
export interface ListS3BucketsResponse {
  Buckets?: S3BucketInfo[];
  NextToken?: string;
}
export interface RemoveAllBackendsRequest {
  AppId: string | undefined;
  CleanAmplifyApp?: boolean;
}
export interface RemoveAllBackendsResponse {
  AppId?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface RemoveBackendConfigRequest {
  AppId: string | undefined;
}
export interface RemoveBackendConfigResponse {
  Error?: string;
}
export interface UpdateBackendAPIRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig?: BackendAPIResourceConfig;
  ResourceName: string | undefined;
}
export interface UpdateBackendAPIResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface UpdateBackendAuthIdentityPoolConfig {
  UnauthenticatedLogin?: boolean;
}
export interface UpdateBackendAuthForgotPasswordConfig {
  DeliveryMethod?: DeliveryMethod;
  EmailSettings?: EmailSettings;
  SmsSettings?: SmsSettings;
}
export interface UpdateBackendAuthMFAConfig {
  MFAMode?: MFAMode;
  Settings?: Settings;
}
export interface UpdateBackendAuthOAuthConfig {
  DomainPrefix?: string;
  OAuthGrantType?: OAuthGrantType;
  OAuthScopes?: OAuthScopesElement[];
  RedirectSignInURIs?: string[];
  RedirectSignOutURIs?: string[];
  SocialProviderSettings?: SocialProviderSettings;
}
export interface UpdateBackendAuthPasswordPolicyConfig {
  AdditionalConstraints?: AdditionalConstraintsElement[];
  MinimumLength?: number;
}
export interface UpdateBackendAuthVerificationMessageConfig {
  DeliveryMethod: DeliveryMethod | undefined;
  EmailSettings?: EmailSettings;
  SmsSettings?: SmsSettings;
}
export interface UpdateBackendAuthUserPoolConfig {
  ForgotPassword?: UpdateBackendAuthForgotPasswordConfig;
  Mfa?: UpdateBackendAuthMFAConfig;
  OAuth?: UpdateBackendAuthOAuthConfig;
  PasswordPolicy?: UpdateBackendAuthPasswordPolicyConfig;
  VerificationMessage?: UpdateBackendAuthVerificationMessageConfig;
}
export interface UpdateBackendAuthResourceConfig {
  AuthResources: AuthResources | undefined;
  IdentityPoolConfigs?: UpdateBackendAuthIdentityPoolConfig;
  Service: Service | undefined;
  UserPoolConfigs: UpdateBackendAuthUserPoolConfig | undefined;
}
export interface UpdateBackendAuthRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig: UpdateBackendAuthResourceConfig | undefined;
  ResourceName: string | undefined;
}
export interface UpdateBackendAuthResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
}
export interface LoginAuthConfigReqObj {
  AwsCognitoIdentityPoolId?: string;
  AwsCognitoRegion?: string;
  AwsUserPoolsId?: string;
  AwsUserPoolsWebClientId?: string;
}
export interface UpdateBackendConfigRequest {
  AppId: string | undefined;
  LoginAuthConfig?: LoginAuthConfigReqObj;
}
export interface UpdateBackendConfigResponse {
  AppId?: string;
  BackendManagerAppId?: string;
  Error?: string;
  LoginAuthConfig?: LoginAuthConfigReqObj;
}
export interface UpdateBackendJobRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  JobId: string | undefined;
  Operation?: string;
  Status?: string;
}
export interface UpdateBackendJobResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  CreateTime?: string;
  Error?: string;
  JobId?: string;
  Operation?: string;
  Status?: string;
  UpdateTime?: string;
}
export interface UpdateBackendStorageResourceConfig {
  Permissions: BackendStoragePermissions | undefined;
  ServiceName: ServiceName | undefined;
}
export interface UpdateBackendStorageRequest {
  AppId: string | undefined;
  BackendEnvironmentName: string | undefined;
  ResourceConfig: UpdateBackendStorageResourceConfig | undefined;
  ResourceName: string | undefined;
}
export interface UpdateBackendStorageResponse {
  AppId?: string;
  BackendEnvironmentName?: string;
  JobId?: string;
  Status?: string;
}
export declare const EmailSettingsFilterSensitiveLog: (
  obj: EmailSettings
) => any;
export declare const SmsSettingsFilterSensitiveLog: (obj: SmsSettings) => any;
export declare const CreateBackendAuthForgotPasswordConfigFilterSensitiveLog: (
  obj: CreateBackendAuthForgotPasswordConfig
) => any;
export declare const BackendAuthSocialProviderConfigFilterSensitiveLog: (
  obj: BackendAuthSocialProviderConfig
) => any;
export declare const BackendAuthAppleProviderConfigFilterSensitiveLog: (
  obj: BackendAuthAppleProviderConfig
) => any;
export declare const SocialProviderSettingsFilterSensitiveLog: (
  obj: SocialProviderSettings
) => any;
export declare const CreateBackendAuthOAuthConfigFilterSensitiveLog: (
  obj: CreateBackendAuthOAuthConfig
) => any;
export declare const CreateBackendAuthVerificationMessageConfigFilterSensitiveLog: (
  obj: CreateBackendAuthVerificationMessageConfig
) => any;
export declare const CreateBackendAuthUserPoolConfigFilterSensitiveLog: (
  obj: CreateBackendAuthUserPoolConfig
) => any;
export declare const CreateBackendAuthResourceConfigFilterSensitiveLog: (
  obj: CreateBackendAuthResourceConfig
) => any;
export declare const CreateBackendAuthRequestFilterSensitiveLog: (
  obj: CreateBackendAuthRequest
) => any;
export declare const GetBackendAuthResponseFilterSensitiveLog: (
  obj: GetBackendAuthResponse
) => any;
export declare const UpdateBackendAuthForgotPasswordConfigFilterSensitiveLog: (
  obj: UpdateBackendAuthForgotPasswordConfig
) => any;
export declare const UpdateBackendAuthOAuthConfigFilterSensitiveLog: (
  obj: UpdateBackendAuthOAuthConfig
) => any;
export declare const UpdateBackendAuthVerificationMessageConfigFilterSensitiveLog: (
  obj: UpdateBackendAuthVerificationMessageConfig
) => any;
export declare const UpdateBackendAuthUserPoolConfigFilterSensitiveLog: (
  obj: UpdateBackendAuthUserPoolConfig
) => any;
export declare const UpdateBackendAuthResourceConfigFilterSensitiveLog: (
  obj: UpdateBackendAuthResourceConfig
) => any;
export declare const UpdateBackendAuthRequestFilterSensitiveLog: (
  obj: UpdateBackendAuthRequest
) => any;
