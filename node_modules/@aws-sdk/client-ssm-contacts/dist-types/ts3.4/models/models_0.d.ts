import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { SSMContactsServiceException as __BaseException } from "./SSMContactsServiceException";
export declare const AcceptCodeValidation: {
  readonly ENFORCE: "ENFORCE";
  readonly IGNORE: "IGNORE";
};
export type AcceptCodeValidation =
  (typeof AcceptCodeValidation)[keyof typeof AcceptCodeValidation];
export declare const AcceptType: {
  readonly DELIVERED: "DELIVERED";
  readonly READ: "READ";
};
export type AcceptType = (typeof AcceptType)[keyof typeof AcceptType];
export interface AcceptPageRequest {
  PageId: string | undefined;
  ContactChannelId?: string;
  AcceptType: AcceptType | undefined;
  Note?: string;
  AcceptCode: string | undefined;
  AcceptCodeValidation?: AcceptCodeValidation;
}
export interface AcceptPageResult {}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  RetryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId: string | undefined;
  ResourceType: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message: string | undefined;
  QuotaCode?: string;
  ServiceCode?: string;
  RetryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  Name: string | undefined;
  Message: string | undefined;
}
export declare const ValidationExceptionReason: {
  readonly CANNOT_PARSE: "CANNOT_PARSE";
  readonly FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED";
  readonly OTHER: "OTHER";
  readonly UNKNOWN_OPERATION: "UNKNOWN_OPERATION";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason?: ValidationExceptionReason;
  Fields?: ValidationExceptionField[];
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface ActivateContactChannelRequest {
  ContactChannelId: string | undefined;
  ActivationCode: string | undefined;
}
export interface ActivateContactChannelResult {}
export declare const ActivationStatus: {
  readonly ACTIVATED: "ACTIVATED";
  readonly NOT_ACTIVATED: "NOT_ACTIVATED";
};
export type ActivationStatus =
  (typeof ActivationStatus)[keyof typeof ActivationStatus];
export interface ChannelTargetInfo {
  ContactChannelId: string | undefined;
  RetryIntervalInMinutes?: number;
}
export declare const ChannelType: {
  readonly EMAIL: "EMAIL";
  readonly SMS: "SMS";
  readonly VOICE: "VOICE";
};
export type ChannelType = (typeof ChannelType)[keyof typeof ChannelType];
export interface DependentEntity {
  RelationType: string | undefined;
  DependentResourceIds: string[] | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId: string | undefined;
  ResourceType: string | undefined;
  DependentEntities?: DependentEntity[];
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare const ContactType: {
  readonly ESCALATION: "ESCALATION";
  readonly ONCALL_SCHEDULE: "ONCALL_SCHEDULE";
  readonly PERSONAL: "PERSONAL";
};
export type ContactType = (typeof ContactType)[keyof typeof ContactType];
export interface Contact {
  ContactArn: string | undefined;
  Alias: string | undefined;
  DisplayName?: string;
  Type: ContactType | undefined;
}
export interface ContactChannelAddress {
  SimpleAddress?: string;
}
export interface ContactChannel {
  ContactChannelArn: string | undefined;
  ContactArn: string | undefined;
  Name: string | undefined;
  Type?: ChannelType;
  DeliveryAddress: ContactChannelAddress | undefined;
  ActivationStatus: ActivationStatus | undefined;
}
export interface ContactTargetInfo {
  ContactId?: string;
  IsEssential: boolean | undefined;
}
export interface HandOffTime {
  HourOfDay: number | undefined;
  MinuteOfHour: number | undefined;
}
export interface CoverageTime {
  Start?: HandOffTime;
  End?: HandOffTime;
}
export interface Target {
  ChannelTargetInfo?: ChannelTargetInfo;
  ContactTargetInfo?: ContactTargetInfo;
}
export interface Stage {
  DurationInMinutes: number | undefined;
  Targets: Target[] | undefined;
}
export interface Plan {
  Stages?: Stage[];
  RotationIds?: string[];
}
export interface Tag {
  Key?: string;
  Value?: string;
}
export interface CreateContactRequest {
  Alias: string | undefined;
  DisplayName?: string;
  Type: ContactType | undefined;
  Plan: Plan | undefined;
  Tags?: Tag[];
  IdempotencyToken?: string;
}
export interface CreateContactResult {
  ContactArn: string | undefined;
}
export declare class DataEncryptionException extends __BaseException {
  readonly name: "DataEncryptionException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DataEncryptionException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: string;
  QuotaCode: string | undefined;
  ServiceCode: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface CreateContactChannelRequest {
  ContactId: string | undefined;
  Name: string | undefined;
  Type: ChannelType | undefined;
  DeliveryAddress: ContactChannelAddress | undefined;
  DeferActivation?: boolean;
  IdempotencyToken?: string;
}
export interface CreateContactChannelResult {
  ContactChannelArn: string | undefined;
}
export interface MonthlySetting {
  DayOfMonth: number | undefined;
  HandOffTime: HandOffTime | undefined;
}
export declare const DayOfWeek: {
  readonly FRI: "FRI";
  readonly MON: "MON";
  readonly SAT: "SAT";
  readonly SUN: "SUN";
  readonly THU: "THU";
  readonly TUE: "TUE";
  readonly WED: "WED";
};
export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export interface WeeklySetting {
  DayOfWeek: DayOfWeek | undefined;
  HandOffTime: HandOffTime | undefined;
}
export interface RecurrenceSettings {
  MonthlySettings?: MonthlySetting[];
  WeeklySettings?: WeeklySetting[];
  DailySettings?: HandOffTime[];
  NumberOfOnCalls: number | undefined;
  ShiftCoverages?: Partial<Record<DayOfWeek, CoverageTime[]>>;
  RecurrenceMultiplier: number | undefined;
}
export interface CreateRotationRequest {
  Name: string | undefined;
  ContactIds: string[] | undefined;
  StartTime?: Date;
  TimeZoneId: string | undefined;
  Recurrence: RecurrenceSettings | undefined;
  Tags?: Tag[];
  IdempotencyToken?: string;
}
export interface CreateRotationResult {
  RotationArn: string | undefined;
}
export interface CreateRotationOverrideRequest {
  RotationId: string | undefined;
  NewContactIds: string[] | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
  IdempotencyToken?: string;
}
export interface CreateRotationOverrideResult {
  RotationOverrideId: string | undefined;
}
export interface DeactivateContactChannelRequest {
  ContactChannelId: string | undefined;
}
export interface DeactivateContactChannelResult {}
export interface DeleteContactRequest {
  ContactId: string | undefined;
}
export interface DeleteContactResult {}
export interface DeleteContactChannelRequest {
  ContactChannelId: string | undefined;
}
export interface DeleteContactChannelResult {}
export interface DeleteRotationRequest {
  RotationId: string | undefined;
}
export interface DeleteRotationResult {}
export interface DeleteRotationOverrideRequest {
  RotationId: string | undefined;
  RotationOverrideId: string | undefined;
}
export interface DeleteRotationOverrideResult {}
export interface DescribeEngagementRequest {
  EngagementId: string | undefined;
}
export interface DescribeEngagementResult {
  ContactArn: string | undefined;
  EngagementArn: string | undefined;
  Sender: string | undefined;
  Subject: string | undefined;
  Content: string | undefined;
  PublicSubject?: string;
  PublicContent?: string;
  IncidentId?: string;
  StartTime?: Date;
  StopTime?: Date;
}
export interface DescribePageRequest {
  PageId: string | undefined;
}
export interface DescribePageResult {
  PageArn: string | undefined;
  EngagementArn: string | undefined;
  ContactArn: string | undefined;
  Sender: string | undefined;
  Subject: string | undefined;
  Content: string | undefined;
  PublicSubject?: string;
  PublicContent?: string;
  IncidentId?: string;
  SentTime?: Date;
  ReadTime?: Date;
  DeliveryTime?: Date;
}
export interface Engagement {
  EngagementArn: string | undefined;
  ContactArn: string | undefined;
  Sender: string | undefined;
  IncidentId?: string;
  StartTime?: Date;
  StopTime?: Date;
}
export interface GetContactRequest {
  ContactId: string | undefined;
}
export interface GetContactResult {
  ContactArn: string | undefined;
  Alias: string | undefined;
  DisplayName?: string;
  Type: ContactType | undefined;
  Plan: Plan | undefined;
}
export interface GetContactChannelRequest {
  ContactChannelId: string | undefined;
}
export interface GetContactChannelResult {
  ContactArn: string | undefined;
  ContactChannelArn: string | undefined;
  Name: string | undefined;
  Type: ChannelType | undefined;
  DeliveryAddress: ContactChannelAddress | undefined;
  ActivationStatus?: ActivationStatus;
}
export interface GetContactPolicyRequest {
  ContactArn: string | undefined;
}
export interface GetContactPolicyResult {
  ContactArn?: string;
  Policy?: string;
}
export interface GetRotationRequest {
  RotationId: string | undefined;
}
export interface GetRotationResult {
  RotationArn: string | undefined;
  Name: string | undefined;
  ContactIds: string[] | undefined;
  StartTime: Date | undefined;
  TimeZoneId: string | undefined;
  Recurrence: RecurrenceSettings | undefined;
}
export interface GetRotationOverrideRequest {
  RotationId: string | undefined;
  RotationOverrideId: string | undefined;
}
export interface GetRotationOverrideResult {
  RotationOverrideId?: string;
  RotationArn?: string;
  NewContactIds?: string[];
  StartTime?: Date;
  EndTime?: Date;
  CreateTime?: Date;
}
export interface ListContactChannelsRequest {
  ContactId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListContactChannelsResult {
  NextToken?: string;
  ContactChannels: ContactChannel[] | undefined;
}
export interface ListContactsRequest {
  NextToken?: string;
  MaxResults?: number;
  AliasPrefix?: string;
  Type?: ContactType;
}
export interface ListContactsResult {
  NextToken?: string;
  Contacts?: Contact[];
}
export interface TimeRange {
  StartTime?: Date;
  EndTime?: Date;
}
export interface ListEngagementsRequest {
  NextToken?: string;
  MaxResults?: number;
  IncidentId?: string;
  TimeRangeValue?: TimeRange;
}
export interface ListEngagementsResult {
  NextToken?: string;
  Engagements: Engagement[] | undefined;
}
export interface ListPageReceiptsRequest {
  PageId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export declare const ReceiptType: {
  readonly DELIVERED: "DELIVERED";
  readonly ERROR: "ERROR";
  readonly READ: "READ";
  readonly SENT: "SENT";
  readonly STOP: "STOP";
};
export type ReceiptType = (typeof ReceiptType)[keyof typeof ReceiptType];
export interface Receipt {
  ContactChannelArn?: string;
  ReceiptType: ReceiptType | undefined;
  ReceiptInfo?: string;
  ReceiptTime: Date | undefined;
}
export interface ListPageReceiptsResult {
  NextToken?: string;
  Receipts?: Receipt[];
}
export interface ListPageResolutionsRequest {
  NextToken?: string;
  PageId: string | undefined;
}
export interface ResolutionContact {
  ContactArn: string | undefined;
  Type: ContactType | undefined;
  StageIndex?: number;
}
export interface ListPageResolutionsResult {
  NextToken?: string;
  PageResolutions: ResolutionContact[] | undefined;
}
export interface ListPagesByContactRequest {
  ContactId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface Page {
  PageArn: string | undefined;
  EngagementArn: string | undefined;
  ContactArn: string | undefined;
  Sender: string | undefined;
  IncidentId?: string;
  SentTime?: Date;
  DeliveryTime?: Date;
  ReadTime?: Date;
}
export interface ListPagesByContactResult {
  NextToken?: string;
  Pages: Page[] | undefined;
}
export interface ListPagesByEngagementRequest {
  EngagementId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListPagesByEngagementResult {
  NextToken?: string;
  Pages: Page[] | undefined;
}
export interface PreviewOverride {
  NewMembers?: string[];
  StartTime?: Date;
  EndTime?: Date;
}
export interface ListPreviewRotationShiftsRequest {
  RotationStartTime?: Date;
  StartTime?: Date;
  EndTime: Date | undefined;
  Members: string[] | undefined;
  TimeZoneId: string | undefined;
  Recurrence: RecurrenceSettings | undefined;
  Overrides?: PreviewOverride[];
  NextToken?: string;
  MaxResults?: number;
}
export interface ShiftDetails {
  OverriddenContactIds: string[] | undefined;
}
export declare const ShiftType: {
  readonly OVERRIDDEN: "OVERRIDDEN";
  readonly REGULAR: "REGULAR";
};
export type ShiftType = (typeof ShiftType)[keyof typeof ShiftType];
export interface RotationShift {
  ContactIds?: string[];
  StartTime: Date | undefined;
  EndTime: Date | undefined;
  Type?: ShiftType;
  ShiftDetails?: ShiftDetails;
}
export interface ListPreviewRotationShiftsResult {
  RotationShifts?: RotationShift[];
  NextToken?: string;
}
export interface ListRotationOverridesRequest {
  RotationId: string | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface RotationOverride {
  RotationOverrideId: string | undefined;
  NewContactIds: string[] | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
  CreateTime: Date | undefined;
}
export interface ListRotationOverridesResult {
  RotationOverrides?: RotationOverride[];
  NextToken?: string;
}
export interface ListRotationsRequest {
  RotationNamePrefix?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface Rotation {
  RotationArn: string | undefined;
  Name: string | undefined;
  ContactIds?: string[];
  StartTime?: Date;
  TimeZoneId?: string;
  Recurrence?: RecurrenceSettings;
}
export interface ListRotationsResult {
  NextToken?: string;
  Rotations: Rotation[] | undefined;
}
export interface ListRotationShiftsRequest {
  RotationId: string | undefined;
  StartTime?: Date;
  EndTime: Date | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListRotationShiftsResult {
  RotationShifts?: RotationShift[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResult {
  Tags?: Tag[];
}
export interface PutContactPolicyRequest {
  ContactArn: string | undefined;
  Policy: string | undefined;
}
export interface PutContactPolicyResult {}
export interface SendActivationCodeRequest {
  ContactChannelId: string | undefined;
}
export interface SendActivationCodeResult {}
export interface StartEngagementRequest {
  ContactId: string | undefined;
  Sender: string | undefined;
  Subject: string | undefined;
  Content: string | undefined;
  PublicSubject?: string;
  PublicContent?: string;
  IncidentId?: string;
  IdempotencyToken?: string;
}
export interface StartEngagementResult {
  EngagementArn: string | undefined;
}
export interface StopEngagementRequest {
  EngagementId: string | undefined;
  Reason?: string;
}
export interface StopEngagementResult {}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResult {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResult {}
export interface UpdateContactRequest {
  ContactId: string | undefined;
  DisplayName?: string;
  Plan?: Plan;
}
export interface UpdateContactResult {}
export interface UpdateContactChannelRequest {
  ContactChannelId: string | undefined;
  Name?: string;
  DeliveryAddress?: ContactChannelAddress;
}
export interface UpdateContactChannelResult {}
export interface UpdateRotationRequest {
  RotationId: string | undefined;
  ContactIds?: string[];
  StartTime?: Date;
  TimeZoneId?: string;
  Recurrence: RecurrenceSettings | undefined;
}
export interface UpdateRotationResult {}
