"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AttributeName: () => AttributeName,
  ComprehendMedical: () => ComprehendMedical,
  ComprehendMedicalClient: () => ComprehendMedicalClient,
  ComprehendMedicalServiceException: () => ComprehendMedicalServiceException,
  DescribeEntitiesDetectionV2JobCommand: () => DescribeEntitiesDetectionV2JobCommand,
  DescribeICD10CMInferenceJobCommand: () => DescribeICD10CMInferenceJobCommand,
  DescribePHIDetectionJobCommand: () => DescribePHIDetectionJobCommand,
  DescribeRxNormInferenceJobCommand: () => DescribeRxNormInferenceJobCommand,
  DescribeSNOMEDCTInferenceJobCommand: () => DescribeSNOMEDCTInferenceJobCommand,
  DetectEntitiesCommand: () => DetectEntitiesCommand,
  DetectEntitiesV2Command: () => DetectEntitiesV2Command,
  DetectPHICommand: () => DetectPHICommand,
  EntitySubType: () => EntitySubType,
  EntityType: () => EntityType,
  ICD10CMAttributeType: () => ICD10CMAttributeType,
  ICD10CMEntityCategory: () => ICD10CMEntityCategory,
  ICD10CMEntityType: () => ICD10CMEntityType,
  ICD10CMRelationshipType: () => ICD10CMRelationshipType,
  ICD10CMTraitName: () => ICD10CMTraitName,
  InferICD10CMCommand: () => InferICD10CMCommand,
  InferRxNormCommand: () => InferRxNormCommand,
  InferSNOMEDCTCommand: () => InferSNOMEDCTCommand,
  InternalServerException: () => InternalServerException,
  InvalidEncodingException: () => InvalidEncodingException,
  InvalidRequestException: () => InvalidRequestException,
  JobStatus: () => JobStatus,
  LanguageCode: () => LanguageCode,
  ListEntitiesDetectionV2JobsCommand: () => ListEntitiesDetectionV2JobsCommand,
  ListICD10CMInferenceJobsCommand: () => ListICD10CMInferenceJobsCommand,
  ListPHIDetectionJobsCommand: () => ListPHIDetectionJobsCommand,
  ListRxNormInferenceJobsCommand: () => ListRxNormInferenceJobsCommand,
  ListSNOMEDCTInferenceJobsCommand: () => ListSNOMEDCTInferenceJobsCommand,
  RelationshipType: () => RelationshipType,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RxNormAttributeType: () => RxNormAttributeType,
  RxNormEntityCategory: () => RxNormEntityCategory,
  RxNormEntityType: () => RxNormEntityType,
  RxNormTraitName: () => RxNormTraitName,
  SNOMEDCTAttributeType: () => SNOMEDCTAttributeType,
  SNOMEDCTEntityCategory: () => SNOMEDCTEntityCategory,
  SNOMEDCTEntityType: () => SNOMEDCTEntityType,
  SNOMEDCTRelationshipType: () => SNOMEDCTRelationshipType,
  SNOMEDCTTraitName: () => SNOMEDCTTraitName,
  ServiceUnavailableException: () => ServiceUnavailableException,
  StartEntitiesDetectionV2JobCommand: () => StartEntitiesDetectionV2JobCommand,
  StartICD10CMInferenceJobCommand: () => StartICD10CMInferenceJobCommand,
  StartPHIDetectionJobCommand: () => StartPHIDetectionJobCommand,
  StartRxNormInferenceJobCommand: () => StartRxNormInferenceJobCommand,
  StartSNOMEDCTInferenceJobCommand: () => StartSNOMEDCTInferenceJobCommand,
  StopEntitiesDetectionV2JobCommand: () => StopEntitiesDetectionV2JobCommand,
  StopICD10CMInferenceJobCommand: () => StopICD10CMInferenceJobCommand,
  StopPHIDetectionJobCommand: () => StopPHIDetectionJobCommand,
  StopRxNormInferenceJobCommand: () => StopRxNormInferenceJobCommand,
  StopSNOMEDCTInferenceJobCommand: () => StopSNOMEDCTInferenceJobCommand,
  TextSizeLimitExceededException: () => TextSizeLimitExceededException,
  TooManyRequestsException: () => TooManyRequestsException,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client
});
module.exports = __toCommonJS(src_exports);

// src/ComprehendMedicalClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "comprehendmedical"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ComprehendMedicalClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ComprehendMedicalClient.ts
var _ComprehendMedicalClient = class _ComprehendMedicalClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultComprehendMedicalHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ComprehendMedicalClient, "ComprehendMedicalClient");
var ComprehendMedicalClient = _ComprehendMedicalClient;

// src/ComprehendMedical.ts


// src/commands/DescribeEntitiesDetectionV2JobCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts


var import_uuid = require("uuid");

// src/models/ComprehendMedicalServiceException.ts

var _ComprehendMedicalServiceException = class _ComprehendMedicalServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ComprehendMedicalServiceException.prototype);
  }
};
__name(_ComprehendMedicalServiceException, "ComprehendMedicalServiceException");
var ComprehendMedicalServiceException = _ComprehendMedicalServiceException;

// src/models/models_0.ts
var EntityType = {
  ANATOMY: "ANATOMY",
  BEHAVIORAL_ENVIRONMENTAL_SOCIAL: "BEHAVIORAL_ENVIRONMENTAL_SOCIAL",
  MEDICAL_CONDITION: "MEDICAL_CONDITION",
  MEDICATION: "MEDICATION",
  PROTECTED_HEALTH_INFORMATION: "PROTECTED_HEALTH_INFORMATION",
  TEST_TREATMENT_PROCEDURE: "TEST_TREATMENT_PROCEDURE",
  TIME_EXPRESSION: "TIME_EXPRESSION"
};
var RelationshipType = {
  ACUITY: "ACUITY",
  ADMINISTERED_VIA: "ADMINISTERED_VIA",
  AMOUNT: "AMOUNT",
  DIRECTION: "DIRECTION",
  DOSAGE: "DOSAGE",
  DURATION: "DURATION",
  EVERY: "EVERY",
  FOR: "FOR",
  FORM: "FORM",
  FREQUENCY: "FREQUENCY",
  NEGATIVE: "NEGATIVE",
  OVERLAP: "OVERLAP",
  QUALITY: "QUALITY",
  RATE: "RATE",
  ROUTE_OR_MODE: "ROUTE_OR_MODE",
  STRENGTH: "STRENGTH",
  SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE",
  TEST_UNIT: "TEST_UNIT",
  TEST_UNITS: "TEST_UNITS",
  TEST_VALUE: "TEST_VALUE",
  USAGE: "USAGE",
  WITH_DOSAGE: "WITH_DOSAGE"
};
var AttributeName = {
  DIAGNOSIS: "DIAGNOSIS",
  FUTURE: "FUTURE",
  HYPOTHETICAL: "HYPOTHETICAL",
  LOW_CONFIDENCE: "LOW_CONFIDENCE",
  NEGATION: "NEGATION",
  PAST_HISTORY: "PAST_HISTORY",
  PERTAINS_TO_FAMILY: "PERTAINS_TO_FAMILY",
  SIGN: "SIGN",
  SYMPTOM: "SYMPTOM"
};
var EntitySubType = {
  ACUITY: "ACUITY",
  ADDRESS: "ADDRESS",
  AGE: "AGE",
  ALCOHOL_CONSUMPTION: "ALCOHOL_CONSUMPTION",
  ALLERGIES: "ALLERGIES",
  AMOUNT: "AMOUNT",
  BRAND_NAME: "BRAND_NAME",
  CONTACT_POINT: "CONTACT_POINT",
  DATE: "DATE",
  DIRECTION: "DIRECTION",
  DOSAGE: "DOSAGE",
  DURATION: "DURATION",
  DX_NAME: "DX_NAME",
  EMAIL: "EMAIL",
  FORM: "FORM",
  FREQUENCY: "FREQUENCY",
  GENDER: "GENDER",
  GENERIC_NAME: "GENERIC_NAME",
  ID: "ID",
  IDENTIFIER: "IDENTIFIER",
  NAME: "NAME",
  PHONE_OR_FAX: "PHONE_OR_FAX",
  PROCEDURE_NAME: "PROCEDURE_NAME",
  PROFESSION: "PROFESSION",
  QUALITY: "QUALITY",
  QUANTITY: "QUANTITY",
  RACE_ETHNICITY: "RACE_ETHNICITY",
  RATE: "RATE",
  REC_DRUG_USE: "REC_DRUG_USE",
  ROUTE_OR_MODE: "ROUTE_OR_MODE",
  STRENGTH: "STRENGTH",
  SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE",
  TEST_NAME: "TEST_NAME",
  TEST_UNIT: "TEST_UNIT",
  TEST_UNITS: "TEST_UNITS",
  TEST_VALUE: "TEST_VALUE",
  TIME_EXPRESSION: "TIME_EXPRESSION",
  TIME_TO_DX_NAME: "TIME_TO_DX_NAME",
  TIME_TO_MEDICATION_NAME: "TIME_TO_MEDICATION_NAME",
  TIME_TO_PROCEDURE_NAME: "TIME_TO_PROCEDURE_NAME",
  TIME_TO_TEST_NAME: "TIME_TO_TEST_NAME",
  TIME_TO_TREATMENT_NAME: "TIME_TO_TREATMENT_NAME",
  TOBACCO_USE: "TOBACCO_USE",
  TREATMENT_NAME: "TREATMENT_NAME",
  URL: "URL"
};
var JobStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PARTIAL_SUCCESS: "PARTIAL_SUCCESS",
  STOPPED: "STOPPED",
  STOP_REQUESTED: "STOP_REQUESTED",
  SUBMITTED: "SUBMITTED"
};
var LanguageCode = {
  EN: "en"
};
var _InternalServerException = class _InternalServerException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _InvalidRequestException = class _InvalidRequestException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRequestException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidRequestException, "InvalidRequestException");
var InvalidRequestException = _InvalidRequestException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _TooManyRequestsException = class _TooManyRequestsException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyRequestsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
    this.Message = opts.Message;
  }
};
__name(_TooManyRequestsException, "TooManyRequestsException");
var TooManyRequestsException = _TooManyRequestsException;
var _InvalidEncodingException = class _InvalidEncodingException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidEncodingException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidEncodingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidEncodingException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidEncodingException, "InvalidEncodingException");
var InvalidEncodingException = _InvalidEncodingException;
var _ServiceUnavailableException = class _ServiceUnavailableException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ServiceUnavailableException, "ServiceUnavailableException");
var ServiceUnavailableException = _ServiceUnavailableException;
var _TextSizeLimitExceededException = class _TextSizeLimitExceededException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TextSizeLimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "TextSizeLimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TextSizeLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_TextSizeLimitExceededException, "TextSizeLimitExceededException");
var TextSizeLimitExceededException = _TextSizeLimitExceededException;
var ICD10CMEntityType = {
  DX_NAME: "DX_NAME",
  TIME_EXPRESSION: "TIME_EXPRESSION"
};
var ICD10CMRelationshipType = {
  OVERLAP: "OVERLAP",
  QUALITY: "QUALITY",
  SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE"
};
var ICD10CMTraitName = {
  DIAGNOSIS: "DIAGNOSIS",
  HYPOTHETICAL: "HYPOTHETICAL",
  LOW_CONFIDENCE: "LOW_CONFIDENCE",
  NEGATION: "NEGATION",
  PERTAINS_TO_FAMILY: "PERTAINS_TO_FAMILY",
  SIGN: "SIGN",
  SYMPTOM: "SYMPTOM"
};
var ICD10CMAttributeType = {
  ACUITY: "ACUITY",
  DIRECTION: "DIRECTION",
  QUALITY: "QUALITY",
  QUANTITY: "QUANTITY",
  SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE",
  TIME_EXPRESSION: "TIME_EXPRESSION",
  TIME_TO_DX_NAME: "TIME_TO_DX_NAME"
};
var ICD10CMEntityCategory = {
  MEDICAL_CONDITION: "MEDICAL_CONDITION"
};
var RxNormTraitName = {
  NEGATION: "NEGATION",
  PAST_HISTORY: "PAST_HISTORY"
};
var RxNormAttributeType = {
  DOSAGE: "DOSAGE",
  DURATION: "DURATION",
  FORM: "FORM",
  FREQUENCY: "FREQUENCY",
  RATE: "RATE",
  ROUTE_OR_MODE: "ROUTE_OR_MODE",
  STRENGTH: "STRENGTH"
};
var RxNormEntityCategory = {
  MEDICATION: "MEDICATION"
};
var RxNormEntityType = {
  BRAND_NAME: "BRAND_NAME",
  GENERIC_NAME: "GENERIC_NAME"
};
var SNOMEDCTEntityCategory = {
  ANATOMY: "ANATOMY",
  MEDICAL_CONDITION: "MEDICAL_CONDITION",
  TEST_TREATMENT_PROCEDURE: "TEST_TREATMENT_PROCEDURE"
};
var SNOMEDCTRelationshipType = {
  ACUITY: "ACUITY",
  DIRECTION: "DIRECTION",
  QUALITY: "QUALITY",
  SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE",
  TEST_UNIT: "TEST_UNIT",
  TEST_UNITS: "TEST_UNITS",
  TEST_VALUE: "TEST_VALUE"
};
var SNOMEDCTTraitName = {
  DIAGNOSIS: "DIAGNOSIS",
  FUTURE: "FUTURE",
  HYPOTHETICAL: "HYPOTHETICAL",
  LOW_CONFIDENCE: "LOW_CONFIDENCE",
  NEGATION: "NEGATION",
  PAST_HISTORY: "PAST_HISTORY",
  PERTAINS_TO_FAMILY: "PERTAINS_TO_FAMILY",
  SIGN: "SIGN",
  SYMPTOM: "SYMPTOM"
};
var SNOMEDCTAttributeType = {
  ACUITY: "ACUITY",
  DIRECTION: "DIRECTION",
  QUALITY: "QUALITY",
  SYSTEM_ORGAN_SITE: "SYSTEM_ORGAN_SITE",
  TEST_UNIT: "TEST_UNIT",
  TEST_VALUE: "TEST_VALUE"
};
var SNOMEDCTEntityType = {
  DX_NAME: "DX_NAME",
  PROCEDURE_NAME: "PROCEDURE_NAME",
  TEST_NAME: "TEST_NAME",
  TREATMENT_NAME: "TREATMENT_NAME"
};
var _ValidationException = class _ValidationException extends ComprehendMedicalServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;

// src/protocols/Aws_json1_1.ts
var se_DescribeEntitiesDetectionV2JobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeEntitiesDetectionV2Job");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEntitiesDetectionV2JobCommand");
var se_DescribeICD10CMInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeICD10CMInferenceJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeICD10CMInferenceJobCommand");
var se_DescribePHIDetectionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribePHIDetectionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribePHIDetectionJobCommand");
var se_DescribeRxNormInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeRxNormInferenceJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeRxNormInferenceJobCommand");
var se_DescribeSNOMEDCTInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeSNOMEDCTInferenceJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSNOMEDCTInferenceJobCommand");
var se_DetectEntitiesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetectEntities");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetectEntitiesCommand");
var se_DetectEntitiesV2Command = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetectEntitiesV2");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetectEntitiesV2Command");
var se_DetectPHICommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetectPHI");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetectPHICommand");
var se_InferICD10CMCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("InferICD10CM");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_InferICD10CMCommand");
var se_InferRxNormCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("InferRxNorm");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_InferRxNormCommand");
var se_InferSNOMEDCTCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("InferSNOMEDCT");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_InferSNOMEDCTCommand");
var se_ListEntitiesDetectionV2JobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListEntitiesDetectionV2Jobs");
  let body;
  body = JSON.stringify(se_ListEntitiesDetectionV2JobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListEntitiesDetectionV2JobsCommand");
var se_ListICD10CMInferenceJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListICD10CMInferenceJobs");
  let body;
  body = JSON.stringify(se_ListICD10CMInferenceJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListICD10CMInferenceJobsCommand");
var se_ListPHIDetectionJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListPHIDetectionJobs");
  let body;
  body = JSON.stringify(se_ListPHIDetectionJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListPHIDetectionJobsCommand");
var se_ListRxNormInferenceJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListRxNormInferenceJobs");
  let body;
  body = JSON.stringify(se_ListRxNormInferenceJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListRxNormInferenceJobsCommand");
var se_ListSNOMEDCTInferenceJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListSNOMEDCTInferenceJobs");
  let body;
  body = JSON.stringify(se_ListSNOMEDCTInferenceJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSNOMEDCTInferenceJobsCommand");
var se_StartEntitiesDetectionV2JobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartEntitiesDetectionV2Job");
  let body;
  body = JSON.stringify(se_StartEntitiesDetectionV2JobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartEntitiesDetectionV2JobCommand");
var se_StartICD10CMInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartICD10CMInferenceJob");
  let body;
  body = JSON.stringify(se_StartICD10CMInferenceJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartICD10CMInferenceJobCommand");
var se_StartPHIDetectionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartPHIDetectionJob");
  let body;
  body = JSON.stringify(se_StartPHIDetectionJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartPHIDetectionJobCommand");
var se_StartRxNormInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartRxNormInferenceJob");
  let body;
  body = JSON.stringify(se_StartRxNormInferenceJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartRxNormInferenceJobCommand");
var se_StartSNOMEDCTInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartSNOMEDCTInferenceJob");
  let body;
  body = JSON.stringify(se_StartSNOMEDCTInferenceJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartSNOMEDCTInferenceJobCommand");
var se_StopEntitiesDetectionV2JobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopEntitiesDetectionV2Job");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopEntitiesDetectionV2JobCommand");
var se_StopICD10CMInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopICD10CMInferenceJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopICD10CMInferenceJobCommand");
var se_StopPHIDetectionJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopPHIDetectionJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopPHIDetectionJobCommand");
var se_StopRxNormInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopRxNormInferenceJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopRxNormInferenceJobCommand");
var se_StopSNOMEDCTInferenceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopSNOMEDCTInferenceJob");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopSNOMEDCTInferenceJobCommand");
var de_DescribeEntitiesDetectionV2JobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeEntitiesDetectionV2JobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEntitiesDetectionV2JobCommand");
var de_DescribeICD10CMInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeICD10CMInferenceJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeICD10CMInferenceJobCommand");
var de_DescribePHIDetectionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribePHIDetectionJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribePHIDetectionJobCommand");
var de_DescribeRxNormInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeRxNormInferenceJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeRxNormInferenceJobCommand");
var de_DescribeSNOMEDCTInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeSNOMEDCTInferenceJobResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSNOMEDCTInferenceJobCommand");
var de_DetectEntitiesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetectEntitiesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetectEntitiesCommand");
var de_DetectEntitiesV2Command = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetectEntitiesV2Response(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetectEntitiesV2Command");
var de_DetectPHICommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DetectPHIResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DetectPHICommand");
var de_InferICD10CMCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_InferICD10CMResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_InferICD10CMCommand");
var de_InferRxNormCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_InferRxNormResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_InferRxNormCommand");
var de_InferSNOMEDCTCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_InferSNOMEDCTResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_InferSNOMEDCTCommand");
var de_ListEntitiesDetectionV2JobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListEntitiesDetectionV2JobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListEntitiesDetectionV2JobsCommand");
var de_ListICD10CMInferenceJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListICD10CMInferenceJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListICD10CMInferenceJobsCommand");
var de_ListPHIDetectionJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListPHIDetectionJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListPHIDetectionJobsCommand");
var de_ListRxNormInferenceJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListRxNormInferenceJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListRxNormInferenceJobsCommand");
var de_ListSNOMEDCTInferenceJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_ListSNOMEDCTInferenceJobsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSNOMEDCTInferenceJobsCommand");
var de_StartEntitiesDetectionV2JobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartEntitiesDetectionV2JobCommand");
var de_StartICD10CMInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartICD10CMInferenceJobCommand");
var de_StartPHIDetectionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartPHIDetectionJobCommand");
var de_StartRxNormInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartRxNormInferenceJobCommand");
var de_StartSNOMEDCTInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartSNOMEDCTInferenceJobCommand");
var de_StopEntitiesDetectionV2JobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopEntitiesDetectionV2JobCommand");
var de_StopICD10CMInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopICD10CMInferenceJobCommand");
var de_StopPHIDetectionJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopPHIDetectionJobCommand");
var de_StopRxNormInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopRxNormInferenceJobCommand");
var de_StopSNOMEDCTInferenceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StopSNOMEDCTInferenceJobCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServerException":
    case "com.amazonaws.comprehendmedical#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "InvalidRequestException":
    case "com.amazonaws.comprehendmedical#InvalidRequestException":
      throw await de_InvalidRequestExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.comprehendmedical#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.comprehendmedical#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "InvalidEncodingException":
    case "com.amazonaws.comprehendmedical#InvalidEncodingException":
      throw await de_InvalidEncodingExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.comprehendmedical#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "TextSizeLimitExceededException":
    case "com.amazonaws.comprehendmedical#TextSizeLimitExceededException":
      throw await de_TextSizeLimitExceededExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.comprehendmedical#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_InvalidEncodingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidEncodingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidEncodingExceptionRes");
var de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidRequestExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceUnavailableExceptionRes");
var de_TextSizeLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new TextSizeLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TextSizeLimitExceededExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TooManyRequestsExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_ComprehendMedicalAsyncJobFilter = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    JobName: [],
    JobStatus: [],
    SubmitTimeAfter: (_) => Math.round(_.getTime() / 1e3),
    SubmitTimeBefore: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_ComprehendMedicalAsyncJobFilter");
var se_ListEntitiesDetectionV2JobsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Filter: (_) => se_ComprehendMedicalAsyncJobFilter(_, context),
    MaxResults: [],
    NextToken: []
  });
}, "se_ListEntitiesDetectionV2JobsRequest");
var se_ListICD10CMInferenceJobsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Filter: (_) => se_ComprehendMedicalAsyncJobFilter(_, context),
    MaxResults: [],
    NextToken: []
  });
}, "se_ListICD10CMInferenceJobsRequest");
var se_ListPHIDetectionJobsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Filter: (_) => se_ComprehendMedicalAsyncJobFilter(_, context),
    MaxResults: [],
    NextToken: []
  });
}, "se_ListPHIDetectionJobsRequest");
var se_ListRxNormInferenceJobsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Filter: (_) => se_ComprehendMedicalAsyncJobFilter(_, context),
    MaxResults: [],
    NextToken: []
  });
}, "se_ListRxNormInferenceJobsRequest");
var se_ListSNOMEDCTInferenceJobsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Filter: (_) => se_ComprehendMedicalAsyncJobFilter(_, context),
    MaxResults: [],
    NextToken: []
  });
}, "se_ListSNOMEDCTInferenceJobsRequest");
var se_StartEntitiesDetectionV2JobRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataAccessRoleArn: [],
    InputDataConfig: import_smithy_client._json,
    JobName: [],
    KMSKey: [],
    LanguageCode: [],
    OutputDataConfig: import_smithy_client._json
  });
}, "se_StartEntitiesDetectionV2JobRequest");
var se_StartICD10CMInferenceJobRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataAccessRoleArn: [],
    InputDataConfig: import_smithy_client._json,
    JobName: [],
    KMSKey: [],
    LanguageCode: [],
    OutputDataConfig: import_smithy_client._json
  });
}, "se_StartICD10CMInferenceJobRequest");
var se_StartPHIDetectionJobRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataAccessRoleArn: [],
    InputDataConfig: import_smithy_client._json,
    JobName: [],
    KMSKey: [],
    LanguageCode: [],
    OutputDataConfig: import_smithy_client._json
  });
}, "se_StartPHIDetectionJobRequest");
var se_StartRxNormInferenceJobRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataAccessRoleArn: [],
    InputDataConfig: import_smithy_client._json,
    JobName: [],
    KMSKey: [],
    LanguageCode: [],
    OutputDataConfig: import_smithy_client._json
  });
}, "se_StartRxNormInferenceJobRequest");
var se_StartSNOMEDCTInferenceJobRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    DataAccessRoleArn: [],
    InputDataConfig: import_smithy_client._json,
    JobName: [],
    KMSKey: [],
    LanguageCode: [],
    OutputDataConfig: import_smithy_client._json
  });
}, "se_StartSNOMEDCTInferenceJobRequest");
var de_Attribute = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    RelationshipScore: import_smithy_client.limitedParseFloat32,
    RelationshipType: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_TraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_Attribute");
var de_AttributeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Attribute(entry, context);
  });
  return retVal;
}, "de_AttributeList");
var de_ComprehendMedicalAsyncJobProperties = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataAccessRoleArn: import_smithy_client.expectString,
    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ExpirationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    InputDataConfig: import_smithy_client._json,
    JobId: import_smithy_client.expectString,
    JobName: import_smithy_client.expectString,
    JobStatus: import_smithy_client.expectString,
    KMSKey: import_smithy_client.expectString,
    LanguageCode: import_smithy_client.expectString,
    ManifestFilePath: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    ModelVersion: import_smithy_client.expectString,
    OutputDataConfig: import_smithy_client._json,
    SubmitTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ComprehendMedicalAsyncJobProperties");
var de_ComprehendMedicalAsyncJobPropertiesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ComprehendMedicalAsyncJobProperties(entry, context);
  });
  return retVal;
}, "de_ComprehendMedicalAsyncJobPropertiesList");
var de_DescribeEntitiesDetectionV2JobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobProperties: (_) => de_ComprehendMedicalAsyncJobProperties(_, context)
  });
}, "de_DescribeEntitiesDetectionV2JobResponse");
var de_DescribeICD10CMInferenceJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobProperties: (_) => de_ComprehendMedicalAsyncJobProperties(_, context)
  });
}, "de_DescribeICD10CMInferenceJobResponse");
var de_DescribePHIDetectionJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobProperties: (_) => de_ComprehendMedicalAsyncJobProperties(_, context)
  });
}, "de_DescribePHIDetectionJobResponse");
var de_DescribeRxNormInferenceJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobProperties: (_) => de_ComprehendMedicalAsyncJobProperties(_, context)
  });
}, "de_DescribeRxNormInferenceJobResponse");
var de_DescribeSNOMEDCTInferenceJobResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobProperties: (_) => de_ComprehendMedicalAsyncJobProperties(_, context)
  });
}, "de_DescribeSNOMEDCTInferenceJobResponse");
var de_DetectEntitiesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Entities: (_) => de_EntityList(_, context),
    ModelVersion: import_smithy_client.expectString,
    PaginationToken: import_smithy_client.expectString,
    UnmappedAttributes: (_) => de_UnmappedAttributeList(_, context)
  });
}, "de_DetectEntitiesResponse");
var de_DetectEntitiesV2Response = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Entities: (_) => de_EntityList(_, context),
    ModelVersion: import_smithy_client.expectString,
    PaginationToken: import_smithy_client.expectString,
    UnmappedAttributes: (_) => de_UnmappedAttributeList(_, context)
  });
}, "de_DetectEntitiesV2Response");
var de_DetectPHIResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Entities: (_) => de_EntityList(_, context),
    ModelVersion: import_smithy_client.expectString,
    PaginationToken: import_smithy_client.expectString
  });
}, "de_DetectPHIResponse");
var de_Entity = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Attributes: (_) => de_AttributeList(_, context),
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_TraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_Entity");
var de_EntityList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Entity(entry, context);
  });
  return retVal;
}, "de_EntityList");
var de_ICD10CMAttribute = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    RelationshipScore: import_smithy_client.limitedParseFloat32,
    RelationshipType: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_ICD10CMTraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_ICD10CMAttribute");
var de_ICD10CMAttributeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ICD10CMAttribute(entry, context);
  });
  return retVal;
}, "de_ICD10CMAttributeList");
var de_ICD10CMConcept = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Code: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_ICD10CMConcept");
var de_ICD10CMConceptList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ICD10CMConcept(entry, context);
  });
  return retVal;
}, "de_ICD10CMConceptList");
var de_ICD10CMEntity = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Attributes: (_) => de_ICD10CMAttributeList(_, context),
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    ICD10CMConcepts: (_) => de_ICD10CMConceptList(_, context),
    Id: import_smithy_client.expectInt32,
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_ICD10CMTraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_ICD10CMEntity");
var de_ICD10CMEntityList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ICD10CMEntity(entry, context);
  });
  return retVal;
}, "de_ICD10CMEntityList");
var de_ICD10CMTrait = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_ICD10CMTrait");
var de_ICD10CMTraitList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ICD10CMTrait(entry, context);
  });
  return retVal;
}, "de_ICD10CMTraitList");
var de_InferICD10CMResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Entities: (_) => de_ICD10CMEntityList(_, context),
    ModelVersion: import_smithy_client.expectString,
    PaginationToken: import_smithy_client.expectString
  });
}, "de_InferICD10CMResponse");
var de_InferRxNormResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Entities: (_) => de_RxNormEntityList(_, context),
    ModelVersion: import_smithy_client.expectString,
    PaginationToken: import_smithy_client.expectString
  });
}, "de_InferRxNormResponse");
var de_InferSNOMEDCTResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Characters: import_smithy_client._json,
    Entities: (_) => de_SNOMEDCTEntityList(_, context),
    ModelVersion: import_smithy_client.expectString,
    PaginationToken: import_smithy_client.expectString,
    SNOMEDCTDetails: import_smithy_client._json
  });
}, "de_InferSNOMEDCTResponse");
var de_ListEntitiesDetectionV2JobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobPropertiesList: (_) => de_ComprehendMedicalAsyncJobPropertiesList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListEntitiesDetectionV2JobsResponse");
var de_ListICD10CMInferenceJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobPropertiesList: (_) => de_ComprehendMedicalAsyncJobPropertiesList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListICD10CMInferenceJobsResponse");
var de_ListPHIDetectionJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobPropertiesList: (_) => de_ComprehendMedicalAsyncJobPropertiesList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListPHIDetectionJobsResponse");
var de_ListRxNormInferenceJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobPropertiesList: (_) => de_ComprehendMedicalAsyncJobPropertiesList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListRxNormInferenceJobsResponse");
var de_ListSNOMEDCTInferenceJobsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ComprehendMedicalAsyncJobPropertiesList: (_) => de_ComprehendMedicalAsyncJobPropertiesList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListSNOMEDCTInferenceJobsResponse");
var de_RxNormAttribute = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BeginOffset: import_smithy_client.expectInt32,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    RelationshipScore: import_smithy_client.limitedParseFloat32,
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_RxNormTraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_RxNormAttribute");
var de_RxNormAttributeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RxNormAttribute(entry, context);
  });
  return retVal;
}, "de_RxNormAttributeList");
var de_RxNormConcept = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Code: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_RxNormConcept");
var de_RxNormConceptList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RxNormConcept(entry, context);
  });
  return retVal;
}, "de_RxNormConceptList");
var de_RxNormEntity = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Attributes: (_) => de_RxNormAttributeList(_, context),
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    RxNormConcepts: (_) => de_RxNormConceptList(_, context),
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_RxNormTraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_RxNormEntity");
var de_RxNormEntityList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RxNormEntity(entry, context);
  });
  return retVal;
}, "de_RxNormEntityList");
var de_RxNormTrait = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_RxNormTrait");
var de_RxNormTraitList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RxNormTrait(entry, context);
  });
  return retVal;
}, "de_RxNormTraitList");
var de_SNOMEDCTAttribute = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    RelationshipScore: import_smithy_client.limitedParseFloat32,
    RelationshipType: import_smithy_client.expectString,
    SNOMEDCTConcepts: (_) => de_SNOMEDCTConceptList(_, context),
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_SNOMEDCTTraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_SNOMEDCTAttribute");
var de_SNOMEDCTAttributeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SNOMEDCTAttribute(entry, context);
  });
  return retVal;
}, "de_SNOMEDCTAttributeList");
var de_SNOMEDCTConcept = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Code: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_SNOMEDCTConcept");
var de_SNOMEDCTConceptList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SNOMEDCTConcept(entry, context);
  });
  return retVal;
}, "de_SNOMEDCTConceptList");
var de_SNOMEDCTEntity = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Attributes: (_) => de_SNOMEDCTAttributeList(_, context),
    BeginOffset: import_smithy_client.expectInt32,
    Category: import_smithy_client.expectString,
    EndOffset: import_smithy_client.expectInt32,
    Id: import_smithy_client.expectInt32,
    SNOMEDCTConcepts: (_) => de_SNOMEDCTConceptList(_, context),
    Score: import_smithy_client.limitedParseFloat32,
    Text: import_smithy_client.expectString,
    Traits: (_) => de_SNOMEDCTTraitList(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_SNOMEDCTEntity");
var de_SNOMEDCTEntityList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SNOMEDCTEntity(entry, context);
  });
  return retVal;
}, "de_SNOMEDCTEntityList");
var de_SNOMEDCTTrait = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_SNOMEDCTTrait");
var de_SNOMEDCTTraitList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SNOMEDCTTrait(entry, context);
  });
  return retVal;
}, "de_SNOMEDCTTraitList");
var de_Trait = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: import_smithy_client.expectString,
    Score: import_smithy_client.limitedParseFloat32
  });
}, "de_Trait");
var de_TraitList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Trait(entry, context);
  });
  return retVal;
}, "de_TraitList");
var de_UnmappedAttribute = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Attribute: (_) => de_Attribute(_, context),
    Type: import_smithy_client.expectString
  });
}, "de_UnmappedAttribute");
var de_UnmappedAttributeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UnmappedAttribute(entry, context);
  });
  return retVal;
}, "de_UnmappedAttributeList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ComprehendMedicalServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `ComprehendMedical_20181030.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/DescribeEntitiesDetectionV2JobCommand.ts
var _DescribeEntitiesDetectionV2JobCommand = class _DescribeEntitiesDetectionV2JobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DescribeEntitiesDetectionV2Job", {}).n("ComprehendMedicalClient", "DescribeEntitiesDetectionV2JobCommand").f(void 0, void 0).ser(se_DescribeEntitiesDetectionV2JobCommand).de(de_DescribeEntitiesDetectionV2JobCommand).build() {
};
__name(_DescribeEntitiesDetectionV2JobCommand, "DescribeEntitiesDetectionV2JobCommand");
var DescribeEntitiesDetectionV2JobCommand = _DescribeEntitiesDetectionV2JobCommand;

// src/commands/DescribeICD10CMInferenceJobCommand.ts




var _DescribeICD10CMInferenceJobCommand = class _DescribeICD10CMInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DescribeICD10CMInferenceJob", {}).n("ComprehendMedicalClient", "DescribeICD10CMInferenceJobCommand").f(void 0, void 0).ser(se_DescribeICD10CMInferenceJobCommand).de(de_DescribeICD10CMInferenceJobCommand).build() {
};
__name(_DescribeICD10CMInferenceJobCommand, "DescribeICD10CMInferenceJobCommand");
var DescribeICD10CMInferenceJobCommand = _DescribeICD10CMInferenceJobCommand;

// src/commands/DescribePHIDetectionJobCommand.ts




var _DescribePHIDetectionJobCommand = class _DescribePHIDetectionJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DescribePHIDetectionJob", {}).n("ComprehendMedicalClient", "DescribePHIDetectionJobCommand").f(void 0, void 0).ser(se_DescribePHIDetectionJobCommand).de(de_DescribePHIDetectionJobCommand).build() {
};
__name(_DescribePHIDetectionJobCommand, "DescribePHIDetectionJobCommand");
var DescribePHIDetectionJobCommand = _DescribePHIDetectionJobCommand;

// src/commands/DescribeRxNormInferenceJobCommand.ts




var _DescribeRxNormInferenceJobCommand = class _DescribeRxNormInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DescribeRxNormInferenceJob", {}).n("ComprehendMedicalClient", "DescribeRxNormInferenceJobCommand").f(void 0, void 0).ser(se_DescribeRxNormInferenceJobCommand).de(de_DescribeRxNormInferenceJobCommand).build() {
};
__name(_DescribeRxNormInferenceJobCommand, "DescribeRxNormInferenceJobCommand");
var DescribeRxNormInferenceJobCommand = _DescribeRxNormInferenceJobCommand;

// src/commands/DescribeSNOMEDCTInferenceJobCommand.ts




var _DescribeSNOMEDCTInferenceJobCommand = class _DescribeSNOMEDCTInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DescribeSNOMEDCTInferenceJob", {}).n("ComprehendMedicalClient", "DescribeSNOMEDCTInferenceJobCommand").f(void 0, void 0).ser(se_DescribeSNOMEDCTInferenceJobCommand).de(de_DescribeSNOMEDCTInferenceJobCommand).build() {
};
__name(_DescribeSNOMEDCTInferenceJobCommand, "DescribeSNOMEDCTInferenceJobCommand");
var DescribeSNOMEDCTInferenceJobCommand = _DescribeSNOMEDCTInferenceJobCommand;

// src/commands/DetectEntitiesCommand.ts




var _DetectEntitiesCommand = class _DetectEntitiesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DetectEntities", {}).n("ComprehendMedicalClient", "DetectEntitiesCommand").f(void 0, void 0).ser(se_DetectEntitiesCommand).de(de_DetectEntitiesCommand).build() {
};
__name(_DetectEntitiesCommand, "DetectEntitiesCommand");
var DetectEntitiesCommand = _DetectEntitiesCommand;

// src/commands/DetectEntitiesV2Command.ts




var _DetectEntitiesV2Command = class _DetectEntitiesV2Command extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DetectEntitiesV2", {}).n("ComprehendMedicalClient", "DetectEntitiesV2Command").f(void 0, void 0).ser(se_DetectEntitiesV2Command).de(de_DetectEntitiesV2Command).build() {
};
__name(_DetectEntitiesV2Command, "DetectEntitiesV2Command");
var DetectEntitiesV2Command = _DetectEntitiesV2Command;

// src/commands/DetectPHICommand.ts




var _DetectPHICommand = class _DetectPHICommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "DetectPHI", {}).n("ComprehendMedicalClient", "DetectPHICommand").f(void 0, void 0).ser(se_DetectPHICommand).de(de_DetectPHICommand).build() {
};
__name(_DetectPHICommand, "DetectPHICommand");
var DetectPHICommand = _DetectPHICommand;

// src/commands/InferICD10CMCommand.ts




var _InferICD10CMCommand = class _InferICD10CMCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "InferICD10CM", {}).n("ComprehendMedicalClient", "InferICD10CMCommand").f(void 0, void 0).ser(se_InferICD10CMCommand).de(de_InferICD10CMCommand).build() {
};
__name(_InferICD10CMCommand, "InferICD10CMCommand");
var InferICD10CMCommand = _InferICD10CMCommand;

// src/commands/InferRxNormCommand.ts




var _InferRxNormCommand = class _InferRxNormCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "InferRxNorm", {}).n("ComprehendMedicalClient", "InferRxNormCommand").f(void 0, void 0).ser(se_InferRxNormCommand).de(de_InferRxNormCommand).build() {
};
__name(_InferRxNormCommand, "InferRxNormCommand");
var InferRxNormCommand = _InferRxNormCommand;

// src/commands/InferSNOMEDCTCommand.ts




var _InferSNOMEDCTCommand = class _InferSNOMEDCTCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "InferSNOMEDCT", {}).n("ComprehendMedicalClient", "InferSNOMEDCTCommand").f(void 0, void 0).ser(se_InferSNOMEDCTCommand).de(de_InferSNOMEDCTCommand).build() {
};
__name(_InferSNOMEDCTCommand, "InferSNOMEDCTCommand");
var InferSNOMEDCTCommand = _InferSNOMEDCTCommand;

// src/commands/ListEntitiesDetectionV2JobsCommand.ts




var _ListEntitiesDetectionV2JobsCommand = class _ListEntitiesDetectionV2JobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "ListEntitiesDetectionV2Jobs", {}).n("ComprehendMedicalClient", "ListEntitiesDetectionV2JobsCommand").f(void 0, void 0).ser(se_ListEntitiesDetectionV2JobsCommand).de(de_ListEntitiesDetectionV2JobsCommand).build() {
};
__name(_ListEntitiesDetectionV2JobsCommand, "ListEntitiesDetectionV2JobsCommand");
var ListEntitiesDetectionV2JobsCommand = _ListEntitiesDetectionV2JobsCommand;

// src/commands/ListICD10CMInferenceJobsCommand.ts




var _ListICD10CMInferenceJobsCommand = class _ListICD10CMInferenceJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "ListICD10CMInferenceJobs", {}).n("ComprehendMedicalClient", "ListICD10CMInferenceJobsCommand").f(void 0, void 0).ser(se_ListICD10CMInferenceJobsCommand).de(de_ListICD10CMInferenceJobsCommand).build() {
};
__name(_ListICD10CMInferenceJobsCommand, "ListICD10CMInferenceJobsCommand");
var ListICD10CMInferenceJobsCommand = _ListICD10CMInferenceJobsCommand;

// src/commands/ListPHIDetectionJobsCommand.ts




var _ListPHIDetectionJobsCommand = class _ListPHIDetectionJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "ListPHIDetectionJobs", {}).n("ComprehendMedicalClient", "ListPHIDetectionJobsCommand").f(void 0, void 0).ser(se_ListPHIDetectionJobsCommand).de(de_ListPHIDetectionJobsCommand).build() {
};
__name(_ListPHIDetectionJobsCommand, "ListPHIDetectionJobsCommand");
var ListPHIDetectionJobsCommand = _ListPHIDetectionJobsCommand;

// src/commands/ListRxNormInferenceJobsCommand.ts




var _ListRxNormInferenceJobsCommand = class _ListRxNormInferenceJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "ListRxNormInferenceJobs", {}).n("ComprehendMedicalClient", "ListRxNormInferenceJobsCommand").f(void 0, void 0).ser(se_ListRxNormInferenceJobsCommand).de(de_ListRxNormInferenceJobsCommand).build() {
};
__name(_ListRxNormInferenceJobsCommand, "ListRxNormInferenceJobsCommand");
var ListRxNormInferenceJobsCommand = _ListRxNormInferenceJobsCommand;

// src/commands/ListSNOMEDCTInferenceJobsCommand.ts




var _ListSNOMEDCTInferenceJobsCommand = class _ListSNOMEDCTInferenceJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "ListSNOMEDCTInferenceJobs", {}).n("ComprehendMedicalClient", "ListSNOMEDCTInferenceJobsCommand").f(void 0, void 0).ser(se_ListSNOMEDCTInferenceJobsCommand).de(de_ListSNOMEDCTInferenceJobsCommand).build() {
};
__name(_ListSNOMEDCTInferenceJobsCommand, "ListSNOMEDCTInferenceJobsCommand");
var ListSNOMEDCTInferenceJobsCommand = _ListSNOMEDCTInferenceJobsCommand;

// src/commands/StartEntitiesDetectionV2JobCommand.ts




var _StartEntitiesDetectionV2JobCommand = class _StartEntitiesDetectionV2JobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StartEntitiesDetectionV2Job", {}).n("ComprehendMedicalClient", "StartEntitiesDetectionV2JobCommand").f(void 0, void 0).ser(se_StartEntitiesDetectionV2JobCommand).de(de_StartEntitiesDetectionV2JobCommand).build() {
};
__name(_StartEntitiesDetectionV2JobCommand, "StartEntitiesDetectionV2JobCommand");
var StartEntitiesDetectionV2JobCommand = _StartEntitiesDetectionV2JobCommand;

// src/commands/StartICD10CMInferenceJobCommand.ts




var _StartICD10CMInferenceJobCommand = class _StartICD10CMInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StartICD10CMInferenceJob", {}).n("ComprehendMedicalClient", "StartICD10CMInferenceJobCommand").f(void 0, void 0).ser(se_StartICD10CMInferenceJobCommand).de(de_StartICD10CMInferenceJobCommand).build() {
};
__name(_StartICD10CMInferenceJobCommand, "StartICD10CMInferenceJobCommand");
var StartICD10CMInferenceJobCommand = _StartICD10CMInferenceJobCommand;

// src/commands/StartPHIDetectionJobCommand.ts




var _StartPHIDetectionJobCommand = class _StartPHIDetectionJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StartPHIDetectionJob", {}).n("ComprehendMedicalClient", "StartPHIDetectionJobCommand").f(void 0, void 0).ser(se_StartPHIDetectionJobCommand).de(de_StartPHIDetectionJobCommand).build() {
};
__name(_StartPHIDetectionJobCommand, "StartPHIDetectionJobCommand");
var StartPHIDetectionJobCommand = _StartPHIDetectionJobCommand;

// src/commands/StartRxNormInferenceJobCommand.ts




var _StartRxNormInferenceJobCommand = class _StartRxNormInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StartRxNormInferenceJob", {}).n("ComprehendMedicalClient", "StartRxNormInferenceJobCommand").f(void 0, void 0).ser(se_StartRxNormInferenceJobCommand).de(de_StartRxNormInferenceJobCommand).build() {
};
__name(_StartRxNormInferenceJobCommand, "StartRxNormInferenceJobCommand");
var StartRxNormInferenceJobCommand = _StartRxNormInferenceJobCommand;

// src/commands/StartSNOMEDCTInferenceJobCommand.ts




var _StartSNOMEDCTInferenceJobCommand = class _StartSNOMEDCTInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StartSNOMEDCTInferenceJob", {}).n("ComprehendMedicalClient", "StartSNOMEDCTInferenceJobCommand").f(void 0, void 0).ser(se_StartSNOMEDCTInferenceJobCommand).de(de_StartSNOMEDCTInferenceJobCommand).build() {
};
__name(_StartSNOMEDCTInferenceJobCommand, "StartSNOMEDCTInferenceJobCommand");
var StartSNOMEDCTInferenceJobCommand = _StartSNOMEDCTInferenceJobCommand;

// src/commands/StopEntitiesDetectionV2JobCommand.ts




var _StopEntitiesDetectionV2JobCommand = class _StopEntitiesDetectionV2JobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StopEntitiesDetectionV2Job", {}).n("ComprehendMedicalClient", "StopEntitiesDetectionV2JobCommand").f(void 0, void 0).ser(se_StopEntitiesDetectionV2JobCommand).de(de_StopEntitiesDetectionV2JobCommand).build() {
};
__name(_StopEntitiesDetectionV2JobCommand, "StopEntitiesDetectionV2JobCommand");
var StopEntitiesDetectionV2JobCommand = _StopEntitiesDetectionV2JobCommand;

// src/commands/StopICD10CMInferenceJobCommand.ts




var _StopICD10CMInferenceJobCommand = class _StopICD10CMInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StopICD10CMInferenceJob", {}).n("ComprehendMedicalClient", "StopICD10CMInferenceJobCommand").f(void 0, void 0).ser(se_StopICD10CMInferenceJobCommand).de(de_StopICD10CMInferenceJobCommand).build() {
};
__name(_StopICD10CMInferenceJobCommand, "StopICD10CMInferenceJobCommand");
var StopICD10CMInferenceJobCommand = _StopICD10CMInferenceJobCommand;

// src/commands/StopPHIDetectionJobCommand.ts




var _StopPHIDetectionJobCommand = class _StopPHIDetectionJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StopPHIDetectionJob", {}).n("ComprehendMedicalClient", "StopPHIDetectionJobCommand").f(void 0, void 0).ser(se_StopPHIDetectionJobCommand).de(de_StopPHIDetectionJobCommand).build() {
};
__name(_StopPHIDetectionJobCommand, "StopPHIDetectionJobCommand");
var StopPHIDetectionJobCommand = _StopPHIDetectionJobCommand;

// src/commands/StopRxNormInferenceJobCommand.ts




var _StopRxNormInferenceJobCommand = class _StopRxNormInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StopRxNormInferenceJob", {}).n("ComprehendMedicalClient", "StopRxNormInferenceJobCommand").f(void 0, void 0).ser(se_StopRxNormInferenceJobCommand).de(de_StopRxNormInferenceJobCommand).build() {
};
__name(_StopRxNormInferenceJobCommand, "StopRxNormInferenceJobCommand");
var StopRxNormInferenceJobCommand = _StopRxNormInferenceJobCommand;

// src/commands/StopSNOMEDCTInferenceJobCommand.ts




var _StopSNOMEDCTInferenceJobCommand = class _StopSNOMEDCTInferenceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ComprehendMedical_20181030", "StopSNOMEDCTInferenceJob", {}).n("ComprehendMedicalClient", "StopSNOMEDCTInferenceJobCommand").f(void 0, void 0).ser(se_StopSNOMEDCTInferenceJobCommand).de(de_StopSNOMEDCTInferenceJobCommand).build() {
};
__name(_StopSNOMEDCTInferenceJobCommand, "StopSNOMEDCTInferenceJobCommand");
var StopSNOMEDCTInferenceJobCommand = _StopSNOMEDCTInferenceJobCommand;

// src/ComprehendMedical.ts
var commands = {
  DescribeEntitiesDetectionV2JobCommand,
  DescribeICD10CMInferenceJobCommand,
  DescribePHIDetectionJobCommand,
  DescribeRxNormInferenceJobCommand,
  DescribeSNOMEDCTInferenceJobCommand,
  DetectEntitiesCommand,
  DetectEntitiesV2Command,
  DetectPHICommand,
  InferICD10CMCommand,
  InferRxNormCommand,
  InferSNOMEDCTCommand,
  ListEntitiesDetectionV2JobsCommand,
  ListICD10CMInferenceJobsCommand,
  ListPHIDetectionJobsCommand,
  ListRxNormInferenceJobsCommand,
  ListSNOMEDCTInferenceJobsCommand,
  StartEntitiesDetectionV2JobCommand,
  StartICD10CMInferenceJobCommand,
  StartPHIDetectionJobCommand,
  StartRxNormInferenceJobCommand,
  StartSNOMEDCTInferenceJobCommand,
  StopEntitiesDetectionV2JobCommand,
  StopICD10CMInferenceJobCommand,
  StopPHIDetectionJobCommand,
  StopRxNormInferenceJobCommand,
  StopSNOMEDCTInferenceJobCommand
};
var _ComprehendMedical = class _ComprehendMedical extends ComprehendMedicalClient {
};
__name(_ComprehendMedical, "ComprehendMedical");
var ComprehendMedical = _ComprehendMedical;
(0, import_smithy_client.createAggregatedClient)(commands, ComprehendMedical);

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ComprehendMedicalServiceException,
  __Client,
  ComprehendMedicalClient,
  ComprehendMedical,
  $Command,
  DescribeEntitiesDetectionV2JobCommand,
  DescribeICD10CMInferenceJobCommand,
  DescribePHIDetectionJobCommand,
  DescribeRxNormInferenceJobCommand,
  DescribeSNOMEDCTInferenceJobCommand,
  DetectEntitiesCommand,
  DetectEntitiesV2Command,
  DetectPHICommand,
  InferICD10CMCommand,
  InferRxNormCommand,
  InferSNOMEDCTCommand,
  ListEntitiesDetectionV2JobsCommand,
  ListICD10CMInferenceJobsCommand,
  ListPHIDetectionJobsCommand,
  ListRxNormInferenceJobsCommand,
  ListSNOMEDCTInferenceJobsCommand,
  StartEntitiesDetectionV2JobCommand,
  StartICD10CMInferenceJobCommand,
  StartPHIDetectionJobCommand,
  StartRxNormInferenceJobCommand,
  StartSNOMEDCTInferenceJobCommand,
  StopEntitiesDetectionV2JobCommand,
  StopICD10CMInferenceJobCommand,
  StopPHIDetectionJobCommand,
  StopRxNormInferenceJobCommand,
  StopSNOMEDCTInferenceJobCommand,
  EntityType,
  RelationshipType,
  AttributeName,
  EntitySubType,
  JobStatus,
  LanguageCode,
  InternalServerException,
  InvalidRequestException,
  ResourceNotFoundException,
  TooManyRequestsException,
  InvalidEncodingException,
  ServiceUnavailableException,
  TextSizeLimitExceededException,
  ICD10CMEntityType,
  ICD10CMRelationshipType,
  ICD10CMTraitName,
  ICD10CMAttributeType,
  ICD10CMEntityCategory,
  RxNormTraitName,
  RxNormAttributeType,
  RxNormEntityCategory,
  RxNormEntityType,
  SNOMEDCTEntityCategory,
  SNOMEDCTRelationshipType,
  SNOMEDCTTraitName,
  SNOMEDCTAttributeType,
  SNOMEDCTEntityType,
  ValidationException
});

