name: 'Kexa Action'
description: "It's Kexa version for a GitHub Action wrapped in Docker"
author: '4urcloud | Esteban MATHIA & Adrien EPPLING'
branding:
  icon: 'check-circle'
  color: 'blue'

inputs:
  ENV_VARS:
    description: 'All environment variables to be set in the .env file as a JSON object'
    required: true
    default: '{}'
  KUBECONFIG:
    description: 'Kubeconfig file content'
    required: false
    default: ''
  KUBEPREFIX:
    description: 'Kube var prefix'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create .env file with all environment variables
      run: echo '${{ inputs.ENV_VARS }}' > .env
      shell: bash
    
    - name: If Kubeconfig input exists, create kubeconfig file and set exist
      id: check_kubeconfig
      run: |
        if [ -n "${{ inputs.KUBECONFIG }}" ]; then
          echo "KUBECONFIG found."
          echo "${{ inputs.KUBECONFIG }}" > kubeconfig.yaml
          echo "${{ inputs.KUBEPREFIX }}KUBECONFIG=/app/config/kubernetes.json" >> .env
          echo "${{ inputs.KUBECONFIG }}" | python -c "import yaml, json, sys; yaml_content = sys.stdin.read(); print(json.dumps(yaml.safe_load(yaml_content), indent=2))" > kubernetes.json
          chmod 600 kubernetes.json kubeconfig.yaml
        else
          echo "KUBECONFIG not found."
        fi
      shell: bash

    - name: Pull Docker image
      run: docker pull innovtech/kexaction:debug
      shell: bash

    - name: Run Docker container
      run: |
        docker run -d -p 8000:8000 --name kexadockeractioncontainer --env-file .env innovtech/kexaction:debug sleep infinity
      shell: bash
      if: ${{ success() }}

    - name: Copy kubeconfig into container
      run: |
        docker cp kubeconfig.yaml kexadockeractioncontainer:/app/
      shell: bash
      continue-on-error: true
      if: ${{ success() }}

    - name: Copy kube json into container
      run: |
        docker cp kubernetes.json kexadockeractioncontainer:/app/config/
      shell: bash
      continue-on-error: true
      if: ${{ success() }}

    - name: Copy rules into container
      run: |
        for file in ./rules/*; do
          docker cp "$file" kexadockeractioncontainer:/app/rules/
        done
      shell: bash
      if: ${{ success() }}

    - name: Copy config into container
      run: |
        for file in ./config/*; do
          docker cp "$file" kexadockeractioncontainer:/app/config/
        done
      shell: bash
      if: ${{ success() }}


    - name: Start main application inside container
      run: |
        docker exec kexadockeractioncontainer sh -c '
          pnpm run start:nobuild
          EXIT_CODE=$?
          echo "Exit code: $EXIT_CODE"
          if [ $EXIT_CODE -ne 0 ]; then
            echo "pnpm run start:nobuild failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          fi
        '
      shell: bash


    # delete kube config file if created
    - name: Delete kubeconfig file
      if: steps.check_kubeconfig.outputs.exists == 'true'
      run: rm kubeconfig.yaml
      continue-on-error: true
      shell: bash